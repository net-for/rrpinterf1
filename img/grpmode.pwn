/*
    Genuine Role Play - Gamemode
    Start Date - 10/8/2023 | 16:11
    (C) 2023 | Jax Teller
*/
#pragma dynamic 10000
#pragma tabsize 0
#define SSCANF_NO_NICE_FEATURES
/* =========================== << [ Includes ] >> =========================== */
#include <a_samp>
#undef MAX_PLAYERS
#define MAX_PLAYERS 300
#include <crashdetect>
#include <a_mysql>
#include <a_http>
#include <foreach>
#include <streamer>
#include <sscanf2>
#include <Pawn.CMD>
//#include <Pawn.RakNet>
#include <SKY>
//#include <fixObject>
#include <ini>
#include <j-AT>
#include <nex-ac_en.lang>
#include <interact>
//#include <android>
#include <mSelection>
#include <LauncherAddon>
#include <cef>
#include <anticarpush>

/* ========================== << [ Settings ] >> ============================ */
#define SERVER_FULL_NAME        "- Genuine Role Play™ | OPEN 20 September"
#define SERVER_SHORT_NAME       "Genuine Role Play"
#define SERVER_LANGUAGE         "Georgian"
#define SERVER_MODETEXT         "Genuine-RP"
#define SERVER_WEBURL           "Genuine-rp.ge"
#define SERVER_PASSWORD         "101522"
#define SERVER_PASSWORD_MODE    (true)

/* =========================== << [ MySQL ] >> ============================== */
#define mysql_host              "80.241.246.30"
#define mysql_user              "user27847"
#define mysql_password          "SpSk6PitJm5S"
#define mysql_database          "user27847"

/* =========================== << [ Defines ] >> ============================ */
#define function%0(%1)     	    forward %0(%1); public%0(%1)
#define format:                 %0(%0[0] = EOS,format(%0,sizeof(%0),
#define istext(%0,%1)			(!strcmp(%0,%1,true))
#define stringclear(%0) 	    %0[0] = EOS
//#define senderror(%0,%1)        SendClientMessage(%0,0x903838FF,"[Shecdoma]:{ffffff} "%1)
//#define sendinfo(%0,%1)         SendClientMessage(%0,0x4FB64FAA,"[Information]:{ffffff} " %1)
#define sendusage(%0,%1)        SendClientMessage(%0,0x819FF7FF,"[Daxmareba]:{ffffff} "%1)
#define sendpromo(%0,%1) 		SendClientMessage(%0,0xA76FF0FF,"[PROMO]{ffffff} "%1)
#define senderror2(%0,%1)       SendClientMessage(%0,0xFA5858FF,"[Error]:{BDBDBD} "%1)
#define ADMIN_ERROR_MESSAGE_1   "Tkven Ar Gakvt Am Brdzanebis Gamokenebis Ufleba"
#define ADMIN_ERROR_MESSAGE_2   "Jer Ar Gagivliat Admin Avtorizacia (/alogin)"
#define invalidcmd(%0)           SendClientMessage(%0, 0xEC7063FF, "- [G:RP] {FFFFFF}Mititebuli Command Ar Moidzebna -{369B5A} » Press (Y) - {FFFFFF}HELP ")
#define SendMessagef(%1,%2,%3,%4) do{new sendfstring[128];format(sendfstring,128,(%3),%4);SendClientMessage((%1), (%2) ,sendfstring);}while(false)
#define ShowFakeDialog(%0)      ShowPlayerDialog(%0, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "", "", "", "")
#define GPSMenu 				"[1] Mtavari Adgilebi\n[2] Organizaciis Bazebi\n[3] Samushao Adgilebi\n[4] Gartoba\n[5] Biznesebi"
#define newyear                 false
#define gyear                   "2024"
#define LAUNCHER_VERSION        "genuine"
#define p_family_id             PlayerInfo[playerid][pFamilyMember]
#define p_family_type           FamilyInfo[p_family_id][fType]
#define p_family_color          FamilyInfo[p_family_id][fColor]
#define p_family_color2         FamilyColors[p_family_color]
#define p_family_type2         	FamilyTypes[p_family_type]
#define p_mansion_id            FamilyInfo[p_family_id][fMansion]
#define BYTES_PER_CELL 			(cellbits / 8)
#define pi						(Float:3.14159265)
#define NONE_3D_TEXT            (Text3D:-1)
#define INVALID_DIALOG_ID       (999)
#define FLOAT_INFINITY 			(Float:0x7F800000)
#define HOLDOBJECT              (9)
#define VEHICLE_RESPAWN         (900)
#define EXIT_DIALOG             (933)
#define MIN_IGROKOV             (2)
#define MIN_STAVKA              (5000)
#define NEED_TO_PAYDAY          (900)
#define MAX_SKILL_LEVEL         (1000)

#define CHECKPOINT_NONE         (0)
#define CHECKPOINT_HOME         (1)
#define CHECKPOINT_PRACTICE     (2)
#define CHECKPOINT_GPS          (3)
#define CHECKPOINT_WF           (4)
#define CHECKPOINT_TAXI         (5)
#define CHECKPOINT_SHAFT        (6)
#define CHECKPOINT_FINDHOUSE    (7)
#define CHECKPOINT_FINDBIZZ     (8)
#define CHECKPOINT_FINDMANSION  (9)

#define JOB_NONE                (0)
#define JOB_FARM                (1)
#define JOB_WEAPON_FACTORY      (2)
#define JOB_PLANTATION	      	(3)
#define JOB_SHAFT               (4)

#define LICENSE_PASS            (0)
#define LICENSE_CAR             (1)
#define LICENSE_BIZZ            (2)
#define LICENSE_GUN             (3)

#define SOUND_SELECTING         (1054)
#define SOUND_REPAIR            (32000)
#define SOUND_TUNE              (1052)
#define SOUND_PAINT             (1134)

#define DIALOG_PAY              (932)
#define DIALOG_GUNSHOP 			(210)
#define DIALOG_BULLET_QUANTITY 	(211)
#define DIALOG_SET_PIN          (200)
#define DIALOG_ENTER_PIN        (201)

#define FRACTION_NONE           (0)
#define FRACTION_LSPD           (1)
#define FRACTION_FBI            (2)
#define FRACTION_ARMY           (3)
#define FRACTION_BALLAS         (4)
#define FRACTION_VAGOS          (5)
#define FRACTION_AZTEC          (6)
#define FRACTION_GROVE          (7)
#define FRACTION_RIFA           (8)
#define FRACTION_MEDIC          (9)
#define FRACTION_BIKERS         (10)
#define FRACTION_LSNEWS         (11)
#define FRACTION_CITYHALL		(12)
#define FRACTION_LCN            (13)
#define FRACTION_YAKUZA         (14)
#define FRACTION_RM             (15)

#define REC_RENEWLOOK 			(reconmenu_TD[2])
#define REC_STATISTIC 			(reconmenu_TD[3])
#define REC_MUTEPLAYER 			(reconmenu_TD[4])
#define REC_PRISONPLAYER 		(reconmenu_TD[5])
#define REC_SLAPPLAYER 			(reconmenu_TD[6])
#define REC_GETIP 				(reconmenu_TD[7])
#define REC_RECONOFF            (reconmenu_TD[9])

#define TAZE_WEAPON 			(23)
#define TAZE_TIMER 				(8000)
#define TAZE_DESTROY 			(1250)

#define CARTUNE_NITRO   		(0)
#define CARTUNE_WHEEL   		(1)
#define CARTUNE_COLOR1          (2)
#define CARTUNE_COLOR2          (3)
#define CARTUNE_HYDR            (4)
#define CARTUNE_PJ              (5)
#define CARTUNE_SPOILER         (6)
#define CARTUNE_BUMPERR         (7)
#define CARTUNE_BUMPERF         (8)

#define QUEST_PASS              (0)
#define QUEST_CARLIC            (1)
#define QUEST_FARM              (2)
#define QUEST_SHAFT				(3)
#define QUEST_PHONE             (4)
#define QUEST_WF              	(5)
#define QUEST_PLANT             (6)
#define QUEST_TRAILER           (7)
#define QUEST_CAR            	(8)
#define QUEST_SKIN              (9)
#define QUEST_ACS              	(10)
#define QUEST_FRAC              (11)
#define QUEST_FAM              	(12)
#define QUEST_PROPOSE           (13)

#define INV_MAX_SLOTS 			(25)
#define INV_MAX_PAGES 			(2)
#define INV_ALL_ITEM  			(INV_MAX_SLOTS*INV_MAX_PAGES)
#define INV_MAX_ACCS  			(8)
#define INV_MAX_TDS   			(52)
#define INV_OPTIMIZE_MODE   	(true)

#define MOVE_SPEED              (Float:100.0)
#define ACCEL_RATE              (Float:0.03)
#define CAMERA_MODE_NONE    	(0)
#define CAMERA_MODE_FLY     	(1)
#define MOVE_FORWARD    		(1)
#define MOVE_BACK       		(2)
#define MOVE_LEFT       		(3)
#define MOVE_RIGHT      		(4)
#define MOVE_FORWARD_LEFT       (5)
#define MOVE_FORWARD_RIGHT      (6)
#define MOVE_BACK_LEFT          (7)
#define MOVE_BACK_RIGHT         (8)

#define MAX_LOGIN_ATTEMPTS      (3)
#define MAX_HOUSE               (300)
#define MAX_BIZZ                (100)
#define MAX_ZONE            	(20)
#define MAX_FAMILY 				(100)
#define MAX_PLAYER_HOUSE        (3)
#define MAX_BANKOMATS           (40)
#define MAX_BIZZ_PRODUCT        (1000)
#define MAX_FRACTIONS           (16)
//#define MAX_INTERACT            (20)
#define MAX_ACC_ON_IP           (0)
#define MAX_COSTI               (6)
#define MAX_STAVKA              (500000000)
#define MAX_ARMYTICKET_TIME     (5)
#define MAX_AFK_TIME            (600)
#define MAX_QUEST               (14)
#define MAX_DONATES             (9)
#define MAX_REPORT              (10)
#define MAX_BOOMBOX         	(16)
#define MAX_DROP_TIME   		(600)
#define MAX_CALLBACK_LENGTH     (5)
#define MAX_FIGHT_SKILL         (500)
#define MAX_QUESTIONS 			(10)
#define MAX_ANSWERS             (3)
#define MAX_ELECTIONS 			(3)
#define MAX_VIDEO_CARDS         (3)
#define MAX_MANSION             (50)
#define MAX_MANSION_CAR         (6)
#define MAX_CARS        		(35)
#define MAX_RADAR           	(100)

#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define PRESSING(%0,%1) \
	(%0 & (%1))
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define PRESS_key(%0) \
    ((oldkeys & %0) && !(newkeys & %0))
#define CANCELKEYS(%0) \
	((%0 & 4 || %0 & 8 || %0 & 16 || %0 & 32 || %0 & 128 || %0 & -128))
#if !defined isnull
    #define isnull(%1) 				((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#endif
#define is_player_nabozari(%0) !strcmp(%0, "212.58.102.46")

#define GEO_IP_INFO_DETECT_URL          "ip-api.com/csv/"
#define GEO_IP_INFO_DETECT_URL_FIELDS   "?fields=131793"

#define GEO_MAX_IP_LENGTH               16
#define GEO_MAX_COUNTRY_NAME_LENGTH     32
#define GEO_MAX_CITY_NAME_LENGTH        32
#define GEO_MAX_LAT_LON_LENGTH          12
#define GEO_MAX_PROVIDER_NAME_LENGTH    32
#define GEO_MAX_PROXY_LENGTH            6

/* ============================= << [ Colors ] >> =========================== */
#define COLOR_BLUE 					0x33AAFFFF
#define COLOR_DUTY 					0xF68F67FF
#define COLOR_BLACK 				0x000000AA
#define COLOR_GREY 					0xAFAFAFAA
#define COLOR_GREEN 				0x4FB64FAA
#define COLOR_ORANGE 				0xFF9900AA
#define COLOR_RED 					0xAA3333AA
#define COLOR_LIGHTRED 				0xFF6347AA
#define COLOR_LIGHTBLUE 			0x33CCFFAA
#define COLOR_YELLOW 				0xFFFF00AA
#define COLOR_WHITE 				0xFFFFFFAA
#define COLOR_REDD 					0xFF0000AA
#define COLOR_PURPLE 				0xC2A2DAAA
#define COLOR_BROWN 				0xEC8C13FF
#define COLOR_INDIGO                0x4B00B0AA
#define COLOR_FIRST                 0xEF545DFF
#define COLOR_ADMIN                 0xEA5151FF
#define COLOR_HOUSE                 0x819FF7FF
#define COLOR_INFO                  0xF06347AA
#define COLOR_PAYDAY                0xFA5858FF
#define COLOR_BIZZ                  0x3cb371FF
//#define COLOR_LOGOTD                0xEC7063FF
#define COLOR_LOGOTD                0x5DADE2FF
#define COLOR_NONE                  0xFFFFFF00
#define C_black                     0x5D6D7EFF
#define C_blue                      0x5DADE2FF
#define color_admin                 "{EA5151}"
#define color_house                 "{819FF7}"
#define color_bizz                  "{3cb371}"
#define color_pretty_blue           "{0080C0}"
#define color_mm                    "{F080BF}"
#define color_promo                 "{A76FF0}"
#define color_payday                "{50C1DD}"
#define c_ac                    	"{5D6D7E}"
#define c_blue                      "{5DADE2}"
#define COLOR_WARNING 		0xEA4335FF
#if !defined IsValidVehicle
	native IsValidVehicle(vehicleid);
#endif

const UNOCCUPIED_SYNC = 209;
const PLAYER_SYNC = 207;

/* ======================== << [ Voice System ] >> ========================== */
#include <sampvoice>
new SV_UINT:LStream[MAX_PLAYERS] = { SV_NULL, ... };
new SV_GSTREAM:FractionWalkie[MAX_FRACTIONS] = { SV_NULL, ... };
new WalkieTalkieFractionStatus[MAX_PLAYERS];
new	SV_GSTREAM:AStream = SV_NULL;

new stringformessages[250];
enum VEHICLES
{
	carspeedx,
	cardoorx,
	carenginex,
	carfuelx,
}
new veh[MAX_PLAYERS][VEHICLES];
/* ========================================================================== */
enum pInfo
{
    Name[MAX_PLAYER_NAME],
    Password[32],
    pSex,
    pLevel,
    pExp,
    pSkin,
    pCash,
    pGiftTime,
    pAdmin,
    pAlogin[32],
    pBank,
    pText,
    pMute,
    pMuteTime,
	pPrison,
	pPrisonTime,
    pRegIP[32],
	pLastIP[32],
    pHouse[MAX_PLAYER_HOUSE],
    pBizz,
    //pPhone,
    //pSIM,
    pMobile,
    pNumber,
    pWatch,
    pMask,
    pCases[3],
    pMember,
    pRank,
    pForm,
	pModel,
	pLicense[4],
    Float: pLastPos[3],
    pLastInterior,
    pLastVirtualWorld,
    pPayment,
    pArmyTicket,
    pArmySkill,
    pPromouse,
    pProtection,
	pIPKey[32],
	pGcoin,
	pQuest[MAX_QUEST],
	pWanted,
	pDrug,
	pAddict,
	pJob,
	pWarn,
	pWarnTime,
	pRope,
	pFamilyMember,
	pFamilyRank,
	pPayday,
	pDonateRank,
	pVipTime,
	pKills,
	pDeaths,
	pDirectory,
	pFightSkill[3],
	pCashAmount,
	pPIN,
	pElections,
	pMarry[MAX_PLAYER_NAME],
	pVideoCardType[MAX_VIDEO_CARDS],
	pVideoCardStatus[MAX_VIDEO_CARDS],
	pVideoCardWorked[MAX_VIDEO_CARDS],
 	pBitcoin,
 	pAdmin_PlayedTime,
 	pAdmin_Mute,
 	pAdmin_Prison,
 	pAdmin_Warn,
 	pAdmin_Ban,
 	pAdmin_ReportAnswer,
 	pAdmin_Kick,
 	pAdminWarning,
 	pTrailerJob,
 	pCasinoBlock,
 	pAlreadyRobbed,
 	pMaterial
}
new PlayerInfo[MAX_PLAYERS][pInfo];
#define Name(%0) PlayerInfo[%0][Name]

/* ========================================================================== */
function KickEx(playerid)
{
    return Kick(playerid);
}
#define Kick(%0) SetTimerEx("KickEx", 80, false, "i", %0)
new gstr[256], log[300], other_string[128];
new YCMDstr[256];
/* =========================== << [ Booleans ] >> =========================== */
new bool: isLogged[MAX_PLAYERS];
new bool: isAlogged[MAX_PLAYERS];
new bool: ChatAnim[MAX_PLAYERS];
new bool: AdminDuty[MAX_PLAYERS];
new bool: maskOn[MAX_PLAYERS];
new bool: CasinoDuty[MAX_PLAYERS];
new bool: colorOff[MAX_PLAYERS];
new bool: speedometerChange[MAX_PLAYERS];
new bool: Animation[MAX_PLAYERS];
new bool: hospitalSpawn[MAX_PLAYERS];
new bool: isProceted[MAX_PLAYERS];
new bool: antidouble[MAX_PLAYERS];
//new bool: AutoSalon[MAX_PLAYERS];
new bool: PlayerEvent[MAX_PLAYERS];
/* ========================= << [ Maffia System ] >> ======================== */
new MfCheckTimer;
new Text3D: MaffiaText[3];
new mafiakv[4];
new capturesm = 0;
new PlayerText:MaffiaTXT[MAX_PLAYERS][11];
new moklaWarze[MAX_PLAYERS];
new MKillCounter[MAX_PLAYERS];
new CountOnMFZone[40];
new MfCheckOn = 0;
new FrakMF[20];
new ZoneOnMBattle[60];
new MSafeTime[60];
new MFCaptOn[MAX_PLAYERS];
new startmcapture = 0;
new mafiaon = 0;
enum MZCInfo
{
	ID,
	Float:Coords[4],
	FrakVlad,
	Napad
}
new McInfo[30][MZCInfo];

/* ========================= << [ Roulet System ] >> ======================== */
new Text:Roulette_TD[13];
new bool:RouletON[MAX_PLAYERS];
new PlayerText:Roulette_PTD[MAX_PLAYERS][11];
new bool:RollStatus[MAX_PLAYERS];
new bool:BronzeRL[MAX_PLAYERS];
new bool:SilverRL[MAX_PLAYERS];
new bool:GoldRL[MAX_PLAYERS];
new Roll_Count[MAX_PLAYERS];
new Roll_Cell[MAX_PLAYERS][10];
new Roll_Timer[MAX_PLAYERS];
new Roll_Time[MAX_PLAYERS];
new Roll_Random[MAX_PLAYERS];
new bool:GetAcces[MAX_PLAYERS];

/* ======================== << [ Spawn System ] >> ========================== */
new static Float: SpawnCoords[][] =
{
    {1154.1750, -1769.1215, 16.5938, 0.0},
    {1157.4529, -1769.4949, 16.5938, 0.0},
    {1150.6949, -1769.3717, 16.5938, 0.0}
};
new static Float: HospitalCoords[][] =
{
	{-10.1847, 154.3285, 999.0519, 180.0},
	{-17.6864, 153.9617, 999.0519, 270.0}
};
new Text:SpawnMenu_TD[14];
new SpawnHouseID[MAX_PLAYERS];
new bool: SpawnStatus[MAX_PLAYERS], SpawnType[MAX_PLAYERS], SpawnNames[][] =
{
    "Server Spawn", "House Spawn", "Fraction Spawn", "Mansion Spawn"
};

/* ======================== << [ House System ] >> ========================== */
enum hInfo
{
    hID,
    Float: hPosition[3],
    Float: hExitPosition[3],
    Float: hCarPosition[4],
    Float: hFacingAngle,
    hClass,
    hPrice,
    hOwner[MAX_PLAYER_NAME],
    hOwned,
    hBalance,
    hTax,
    hPickup,
    hInterior,
    hLock,
    Text3D:hText,
	hGarage,
	hGaragePickup,
	hInsidePickup
}
new HouseInfo[MAX_HOUSE][hInfo];
new TextHouse[MAX_PLAYERS];
new TotalHouse;

/* ====================== << [ Bussiness System ] >> ========================= */
enum bInfo
{
    bID,
    Float: bEnterPos[3],
    Float: bExitPos[3],
    Float: bEnteredPos[3],
    Float: bExitedPos[3],
    Float: bBar[3],
    Float: bEnteredAngle,
    Float: bExitedAngle,
    bType,
    bPrice,
    bName[32],
    bOwner[MAX_PLAYER_NAME],
    bOwned,
    bSafe,
    bTax,
    bPickup,
    bExitPickup,
    bLock,
    bProducts,
    bProductPrice,
    bEnterPrice,
    bPickupid,
    bInterior,
    Text3D: bText,
    bBarPickup
}
new BizzInfo[MAX_BIZZ][bInfo];
new TotalBizz;

new EnterBizz[MAX_PLAYERS];
new TextBizz[MAX_PLAYERS];
new static MarketItems[][] =
{
    {"Mobiluri Telefoni"},
    {"SIM Barati"},
    {"Saati"},
    {"Maska"},
	{"Medikamenti"},
	{"Toki"},
	{"Directory"},
	{"Sigareti"},
	{"BoomBox"},
	{"Xelsawyoebi"}
};
new static RestourantItems[][] =
{
    {"Burger"},
    {"Hot Dog"},
    {"Khachapuri"},
    {"Lobiani"}
};

/* ============================ << [ Skins ] >> ============================= */
new SelectChar[MAX_PLAYERS], bool: SkinShopStatus[MAX_PLAYERS], skinshopEx;
new PlayerText:select_PTD[MAX_PLAYERS][12], SelectSystemID[MAX_PLAYERS];
new static HomelessSkins[][] =
{
    {239, 77},
    {79, 129},
    {137, 130}
};
new TheSkins[][] = // Male Skin ID // Female Skin ID // Price
{
	{1, 13, 10000},
    {2, 12, 10000},
    {7, 11, 14000},
    {18, 41, 15000},
    {19, 40, 15000},
    {21, 56, 16000},
    {22, 91, 16000}
};

/* ======================= << [ RentCar System ] >> ========================= */
new CurrentRentCar[MAX_PLAYERS], RentCarID[MAX_PLAYERS], bool: RentCarStatus[MAX_PLAYERS];
new Text: RentTD_G[8], PlayerText:RentTD_P[MAX_PLAYERS][5];
new static gRentCars[][] =
{
    {462, 500},
    {422, 900},
    {439, 1000},
    {535, 1200},
    {466, 1300}
}, rentcarEx;

/* ======================= << [ Bankomats System ] >> ======================= */
enum BZONE {
	BankomatID,
	Float:BankomatPosX,
	Float:BankomatPosY,
	Float:BankomatPosZ,
	Float:BankomatPosC,
	Text3D:BankomatText,
	BankomatObject,
	BankomatMoney,
	bool:BankomatRobbed
};
new BankomatInfo[MAX_BANKOMATS][BZONE];
new TotalBankomat = 0;
new bh_string[500];
new b_string[512], s_string[25];
new bool:RobbingStarted[MAX_PLAYERS], bool:RobbingTools[MAX_PLAYERS];

/* ======================= << [ Casino System ] >> ========================== */
new TimeStavka[MAX_COSTI] = 0;
new
   Text:KostiBox[MAX_COSTI],
   Text:TableName[MAX_COSTI],
   Text:KostiInfo[MAX_COSTI],
   Text:KostiGameInfo[MAX_COSTI],
   Text:KostiKeyExit,
   Text:KostiKeyDone,
   Text:KostiKeyStavka;

new Float:StolCoor[MAX_COSTI][4] =
{
    {1121.55334, 8.17120, 1001.56238},
    {1128.1165, -1.9726, 1000.1687},
    {1132.2003, -1.9393, 1000.1687},
    {1126.95337, 6.69120, 1001.56238},
    {1132.87341, 6.69120, 1001.56238},
    {346.3385, 308.4312, 998.6578}
};
enum Stol
{
    Gamer[5],
    Stavka,
    Bank,
    Crupe,
    Igrokov,
    GameStart
}
new StolInfo[MAX_COSTI][Stol];
new KazinoDuty[MAX_PLAYERS];
new clothes4dr;

/* ======================== << [ Cases System ] >> ========================== */
#define CASE_TYPE_SILVER 	0
#define CASE_TYPE_MAGIC 	1
#define CASE_TYPE_TITANY 	2
#define CASE_TYPE_ALL       3
enum e_Case_Items
{
	c_ItemID,
	c_ItemModel,
	c_ItemType,
	c_ItemName[32],
	Float:c_ItemPreview[4],
	bool:c_ItemFromLauncher
}
new CaseData[][e_Case_Items] =
{
	{0,     19382,      CASE_TYPE_ALL,  	"Nothing",  		{0.0, 0.0, 0.0, 1.0}},
	{1,     1274,       CASE_TYPE_ALL,  	"Money",     		{0.0, 0.0, 180.0, 1.0}},
	{2,     18631,      CASE_TYPE_ALL,  	"Random",  			{0.0, 0.0, 180.0, 1.0}},
	{3,   	562,      	CASE_TYPE_MAGIC, 	"Elegy",  			{-10.0, 0.0, 40.0, 0.8}},
	{4,     18968,      CASE_TYPE_SILVER,   "Light Hat",    	{0.0, 0.0, 0.0, 1.0}},
	{5,     1277,       CASE_TYPE_ALL,      "VIP",          	{0.0, 0.0, 180.0, 1.0}},
	{6,     1239,       CASE_TYPE_ALL,      "Level",        	{0.0, 0.0, 180.0, 1.0}},
	{7,     106,        CASE_TYPE_SILVER,   "Skin: 106",    	{0.0, 0.0, 0.0, 1.0}},
	{8,     107,        CASE_TYPE_SILVER,   "Skin: 107",    	{0.0, 0.0, 0.0, 1.0}},
	{9,     115,        CASE_TYPE_SILVER,   "Skin: 115",    	{0.0, 0.0, 0.0, 1.0}},
	{10,    108,        CASE_TYPE_MAGIC,   	"Skin: 108",    	{0.0, 0.0, 0.0, 1.0}},
	{11,    19332,      CASE_TYPE_ALL,      "Air Balloon", 	 	{0.0, 0.0, 0.0, 1.0}},
	{12,    1550,       CASE_TYPE_ALL,      "Money Bag",    	{-30.0, 0.0, 0.0, 1.0}},
	{13,    3026,       CASE_TYPE_ALL,      "Backpack",     	{0.0, 0.0, 0.0, 1.0}},
	{14,   	411,      	CASE_TYPE_MAGIC, 	"Inferus",  		{-10.0, 0.0, 40.0, 0.8}},
	{15,    12300,      CASE_TYPE_TITANY,   "Nissan GTR R35",   {-10.0, 0.0, 40.0, 0.8}}, // Launcher
	{16,    12314,      CASE_TYPE_MAGIC,    "Mercedes-Benz w210",{-10.0, 0.0, 40.0, 0.8}}, // Launcher
	{17,    12316,      CASE_TYPE_TITANY,   "BMW M5 E60", 		{-10.0, 0.0, 40.0, 0.8}}, // Launcher
	{18,    19336,      CASE_TYPE_ALL,      "Air Balloon",      {0.0, 0.0, 0.0, 1.0}},
	{19,    19528,      CASE_TYPE_ALL,      "Wizard Hat",       {0.0, 0.0, 0.0, 0.8}}
};
new Text:caseselect_TD[17];
new bool:SelectingCase[MAX_PLAYERS], SelectedCase[MAX_PLAYERS], bool:CaseRolling[MAX_PLAYERS];
new CaseRoll[MAX_PLAYERS], CaseRandomRoll[MAX_PLAYERS];
new CaseItems[MAX_PLAYERS][5];

new PlayerText:cases_PTD[MAX_PLAYERS][10];
new Text:cases_TD[18];

/* ======================== << [ Jet-X System ] >> ========================== */
#define JETX_ICON_JET       "LD_NONE:shpnorm"
#define JETX_ICON_JET_FLY   "LD_NONE:shpwarp"
new Text:Jetx_TD[18];
new PlayerText:Jetx_PTD[MAX_PLAYERS][4];
enum E_JetX
{
    bool:x_Start,
    Float:x_Mutli,
    x_Time,
    x_StartTimer,
    x_PlayTimer,
    Float:x_DestroyScore,
    x_ParticleTimer,
    x_ParticleID,
    bool:x_Exploded,
    Float:x_LastHighScore,
    Float:x_FastExplode
}
new JetData[E_JetX];
new bool:JetXStatus[MAX_PLAYERS], JetXBet[MAX_PLAYERS], bool:JetXPlaying[MAX_PLAYERS];
new Float:JetMachineCoord[][] =
{
	{1117.71716, -3.91579, 999.67230, 90.00000},
	{1117.71716, -2.41580, 999.67230, 90.00000},
	{1117.71716, -0.91580, 999.67230, 90.00000},
	{1117.71716, 0.58420, 999.67230, 90.00000}
};

/* ======================== << [ Job's System ] >> ========================== */
new jobID[MAX_PLAYERS],jobStatus[MAX_PLAYERS],jobAmount[MAX_PLAYERS],jobCash[MAX_PLAYERS];
new farmEx;
/* ========================= << [ Radars System ] >> ======================== */
enum RZONE
{
	RadarID,
	Float:RadarPosX,
	Float:RadarPosY,
	Float:RadarPosZ,
	Float:RadarPosC,
	RadarObject,
	Text3D:RadarText,
	RadarSpeed,
	RadarArea
};
new RadarInfo[MAX_RADAR][RZONE];
new TotalRadar = 0, RadarMoney = 0;
new RadarPrice = 8;

/* ========================= << [ Farm System ] >> ========================== */
new bool:FermaStarted[MAX_PLAYERS], FarmTimer[MAX_PLAYERS], FARM_INSTRUMENT[MAX_PLAYERS];
const MAX_FARM_OBJECT = 11;
enum cInfo
{
    cStatus,
    Float:cPosX,
    Float:cPosY,
    Float:cPosZ,
    cObject,
    Text3D:cTextLabel,
    cQulebi,
    cWamebi,
    cTimer,
    cStatusTimer
}
new FarmObjectInfo[MAX_FARM_OBJECT][cInfo] =
{
    {true, -264.8821,-1393.6427,11.4850},
    {true, -288.1983,-1396.1859,12.2953},
    {true, -310.4437,-1416.4810,15.0943},
    {true, -290.1641,-1416.4885,13.1366},
    {true, -265.3173,-1415.6331,10.4779},
    {true, -239.7378,-1413.1207,8.4944},
    {true, -214.3640,-1411.2096,6.3158},
    {true, -189.4012,-1408.9705,4.3835},
    {true, -189.3507,-1388.5031,5.8134},
    {true, -213.2893,-1389.5488,7.4410},
    {true, -240.2519,-1391.7345,10.5762}
};
new qFarm[MAX_PLAYERS];

/* ====================== << [ Plantation System ] >> ======================= */
new bool:PlantationWork[MAX_PLAYERS], PlantationTimer[MAX_PLAYERS],
	PlantationForm, qPlantation[MAX_PLAYERS];

/* ======================== << [ Weapon Factory ] >> ======================== */
new WFPickupEx[2], WFTake[6], WFTables[10], WFStart;
new Float:WFTablePosition[10][3] = {
	{2558.5569,-1291.0055,1044.1250},
	{2556.0522,-1291.0057,1044.1250},
	{2553.8250,-1291.0057,1044.1250},
	{2544.2773,-1291.0049,1044.1250},
	{2541.9536,-1291.0028,1044.1250},
	{2558.4758,-1295.8502,1044.1250},
	{2556.1917,-1295.8497,1044.1250},
	{2553.8650,-1295.8501,1044.1250},
	{2544.4407,-1295.8497,1044.1250},
	{2541.9155,-1295.8497,1044.1250}
};
new qFactory[MAX_PLAYERS];

/* ========================= << [ Shaft System ] >> ========================= */
new ShaftPickup, ShaftArea[3], qShaft[MAX_PLAYERS];

/* ======================== << [ Invite System ] >> ========================= */
new bool:InviteStatus[MAX_PLAYERS], InviterID[MAX_PLAYERS];
new InviteID[MAX_PLAYERS];

/* ======================== << [ Tazer System ] >> ========================== */
new bool:Tazer[MAX_PLAYERS], bool:Tazed[MAX_PLAYERS];

/* ======================== << [ Phone System ] >> ========================== */
new bool: phoneOpen[MAX_PLAYERS], TakingPicture[MAX_PLAYERS];
new Text:telephoneSamsung[72], Text:PnumberSamsung[34];
new PlayerText:Ppnumber[MAX_PLAYERS], Callstr[MAX_PLAYERS][16];
new myNumber[MAX_PLAYERS][16], bool: isCalling[MAX_PLAYERS];
new bool:IphoneON[MAX_PLAYERS];
/* ====================== << [ Roadblock System ] >> ======================== */
enum barier
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new Roadblocks[60][barier];

/* ======================== << [ Drugs System ] >> ========================== */
new marixuana[MAX_PLAYERS], DrugObj[6];

/* ========================= << [ GPS System ] >> =========================== */
new PlayerText:gps_PTD[MAX_PLAYERS][1];
new bool: GPS[MAX_PLAYERS], Float:gpsPos[MAX_PLAYERS][3], gpsTimer[MAX_PLAYERS];

/* ======================== << [ Gift System ] >> =========================== */
#define GIFT_HOURS 5
#define UPDATE_INTERVAL 60000
new bool:isPlayerActive[MAX_PLAYERS];
new Text:gift_TD[20];
new PlayerText:gift_PTD[MAX_PLAYERS][1];

/* ========================= << [ Fight System ] >> ========================= */
new Learn_Fighting, LearningFight[MAX_PLAYERS], GYMPickup[2];
new Float:Fighter_Checkpoint[][] =
{
	{768.3571, -3.1937, 1000.7209, 0.5}, // Box
	{760.6504, 11.3359, 1001.1639, 0.5}, // Kick-Box
	{769.8837, 14.3625, 1000.6979, 0.5} // Kung Fu
};
new Fighter_Skins[] = { 81, 80, 203 };

enum e_Fight
{
	bool: fight_Busy,
	bool: fight_Started,
	fight_Player1,
	fight_Player2,
	fight_StartTime,
	fight_Time,
	fight_Timer
}
new FightData[e_Fight];
new FightOpponent[MAX_PLAYERS], FightOffer[MAX_PLAYERS];

/* ======================== << [ Garage System ] >> ========================= */
new Float:VehiclePositionsInsideGarage[2][4] =
{
	{2357.7346, 793.4819, 1009.1552, 145.3026},
	{2357.4797, 786.0981, 1009.1552, 41.0899}
};

/* ======================== << [ Bank System ] >> =========================== */
enum eBank
{
	bool: isRobbed,
	bool: doorDestroyed,
	doorObject,
	Text3D:bankText,
	bombTime,
	bombObject,
	bombTimer
}
new BankInfo[eBank];
new sacavi[2], BankSafePic;
new BagTimer[MAX_PLAYERS], IsBag[MAX_PLAYERS];

/* ======================== << [ Quest System ] >> ========================== */
enum eQuest
{
	q_Name[64],
	q_Cash,
	q_Exp,
	q_Desc[216]
}
new gQuest[MAX_QUEST][eQuest] =
{
	{"Piradopis Mowmoba",	15000,		2,		"\n{ffffff}Piradobis Mowmobis Asagebad Sachiroa Mixvidet Meriashi\n\n/gps >> Mtavari Agilebi >> CityHall\n\n{F0A45D}- 15000$, 2 EXP\n"},
	{"Martvis Momwoba",		60000,      5,		"\n{ffffff}Martvis Mowmobis Asagebad Mibrdzandit Avto Skolashi\n\n/gps >> Mtavari Adgilebi >> Auto School \n\n{F0A45D}- 60000$, 5 EXP\n"},
	{"Fermashi Mushaoba",   30000,     	3,		"\n{ffffff}Sachiroa Mixvidet Fermashi Da Aigot 20X Mosavali\nPirvel Rigshi Sachiroa Daiwkot Mushaoba Meriashi\n\n/gps >> Samushaoebi >> Ferma\n\n{F0A45D}- 30000$, 3 EXP\n"},
    {"Shaxtashi Mushaoba",	50000,		4,		"\n{ffffff}Shaxtashi Mushaobistvis Sachiroa Gadazidot 10X Qva\n\n/gps >> Samushaoebi >> Shaxta \n\n{F0A45D}- 50000$, 4 EXP\n"},
	{"Mobuluri Telefoni",	10000,		3,		"\n{ffffff}Mobiluri Telefonis Shesadzenad Mibrdzandit Nebismier 24/7 Marketshi\n\n/gps >> Markets \n\n{F0A45D}- 10000$, 3 EXP\n"},
	{"Iaragebis Qarxana",   45000,      4,		"\n{ffffff}Iaragebis Qarxanashi Sachiroa Gadazidot 10X Yuti\n\n/gps >> Samushaoebi >> Iaragebis Qarxana \n\n{F0A45D}- 45000$, 4 EXP\n"},
	{"Planis Pltantacia",   45000,      4,		"\n{ffffff}Planis Plantaciashi Sachiroa Moikvanot 10X Balaxi\n\n/gps >> Samushaoebi >> Planis Plantacia \n\n{F0A45D}- 45000$, 4 EXP\n"},
	{"Traileris Mdzgoli",   45000,      4,		"\n{ffffff}Trailerze Samushaod Sachiroa Gadaitanot 3X Tvirti\n\n/gps >> Samushaoebi >> Trailer \n\n{F0A45D}- 45000$, 4 EXP\n"},
    {"Transportis Shedzena",45000,      4,		"\n{ffffff}Transportis Shesadzenad Sachiroa Mixvidet Avto Salonshi\nDa Sheidzinot Transporti\n\n/gps >> Mtavari Adgilebi >> AutoSalon \n\n{F0A45D}- 45000$, 4 EXP\n"},
	{"Tansacmlis Shedzena", 55000,      3,		"\n{ffffff}Tansacmlis (Skinis) Shesadzenad Mibrdzandit Tanscacmlis Magaziashi\n\n/gps >> Mtavari Adgilebi >> Skin Shop \n\n{F0A45D}- 55000$, 3 EXP\n"},
	{"Aqsesuaris Shedzena", 55000,      3,		"\n{ffffff}Aqsesuaris Shesadzenat Sachiroa Mixvidet SkinShopshi Da Ikidot Aksesuari\n\n/gps >> Mtavari Adgilebi >> Skin Shop \n\n{F0A45D}- 55000$, 3 EXP\n"},
    {"Frakciashi Gawevrianeba",55000,   3,		"\n{ffffff}Sachiroa Gawevriadet Nebismier Frakciashi\n\n{F0A45D}- 55000$, 3 EXP\n"},
    {"Ojaxshi Gawevrianeba", 55000,  	3,		"\n{ffffff}Sachiroa Gawevriadet Nebismier Familyshi\n\n{F0A45D}- 55000$, 3 EXP\n"},
    {"Daojaxeba", 			55000,  	3,		"\n{ffffff}Dasaojaxeblad Sachiroa Mixvidet Eklesiashi Da\nXeli Stxovot Tkvens Meore Naxevars\n\n{F0A45D}- 55000$, 3 EXP\n"}
};

/* ========================= << [ Anti C-Bug ] >> =========================== */
new bool:AntiC[MAX_PLAYERS], OldShoot[MAX_PLAYERS];

/* ======================= << [ DeathMatch System ] >> ====================== */
new DMKill[MAX_PLAYERS], DMDeath[MAX_PLAYERS], DMVirtual[MAX_PLAYERS];
new KillNames[MAX_PLAYERS], DMArea[MAX_PLAYERS];
new Float:DmRandom[9][3] =
{
	{-346.9080,2210.1492,42.4844},//1
	{-421.7599,2204.8752,42.4297},//2
	{-378.2790,2221.5044,42.0938},//3
	{-443.1659,2221.4031,42.4297},//4
	{-372.9104,2273.1995,41.7706},//5
	{-346.9080,2210.1492,42.4844},//6
	{-421.6016,2226.1008,42.4297},//7
	{-374.9994,2267.2522,42.4146},//8
	{-364.1501,2203.3845,42.4844}//9
};
new Float:DmRandom2[10][3] =
{
	{-1275.8639,2470.9553,87.5075},//1
	{-1282.5347,2515.1726,87.1382},//2
	{-1288.2180,2540.3333,87.2560},//3
	{-1309.0646,2554.8059,87.3366},//4
	{-1307.9452,2540.9829,87.7422},//5
	{-1319.3547,2544.4873,87.5878},//6
	{-1332.2245,2529.0432,87.1552},//7
	{-1327.2660,2504.0146,87.0469},//8
	{-1310.1011,2487.8943,87.1689},//9
	{-1311.3324,2510.1111,87.0420}//10
};

/* ======================= << [ GreenZone System ] >> ======================= */
enum GZONE
{
	ZoneID,
	ZoneName[50],
	Float:ZonePosX,
	Float:ZonePosY,
	Float:ZonePosZ,
	Float:ZoneDistance,
	ZoneVirtualWorld
};
new ZoneInfo[MAX_ZONE][GZONE];
new TotalZone = 0;
new Text:greenzone_TD[16];

/* ======================= << [ FreeMode Camera ] >> ======================== */
enum noclipenum
{
	cameramode,
	flyobject,
	modes,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];


/* ======================= << [ AutoSchool System ] >> ====================== */
// Theory
enum E_Question {
    Q_TEXT[128],
    A1_TEXT[128],
    A2_TEXT[128],
    A3_TEXT[128],
    CORRECT_ANSWER
}

new Question[MAX_QUESTIONS][E_Question] = {
    {"Ramdenia Sichkaris Limiti Qalaqshi??", "30 km/h", "50 km/h", "70 km/h", 1},
    {"Rogor Iqcevit Witel Shuqnishanze?", "Vcherdebi", "Mivdivar", "Vaneleb", 0},
    {"Rodis Iketebt Ghveds?", "Manqanis Daqoqvis Shemdgom", "Dadzvris Shemdgom", "Manqanashi Dajdomistanave", 2},
    {"Rogor Iqcevit Yvitel Shuqnishanze?", "Vumateb Sichqares", "Vemzadebi Gacherebistvis", "Vcherdebi", 1},
    {"Dainaxe Moqalaqe Gadasasvlelze:", "Vusignaleb", "Vachereb", "Vagrdzeleb Modzraobas", 1},
    {"Ras Nishnavs STOP Nishani?", "Vaneleb", "Vachereb", "Vaignoreb", 1},
    {"Rodis Iyenebt Cimcimebs?", "Xazebis Shecvlis Dros", "Daparkingebis Dros", "Yvela Zemot Chamotvlili", 2},
    {"Ramdenia Alkoholis Limiti Sisxlshi?", "0.05%", "0.08%", "0.10%", 1},
    {"Gagiskdat saburavi, rogor imoqmedeb?", "Vamuxrucheb", "Vukleb Sichqares Nel-Nela", "Vzrdi Sichqares", 1},
    {"Rogor Iqcevit Saswrapos Danaxvisas?", "Vzrdi Sichqares", "Gadavdivar Marjvena Zolshi", "Vaignoreb", 1}
};

new PlayerScore[MAX_PLAYERS];
new PlayerIncorrectAnswers[MAX_PLAYERS];
new Player_Passed_Exam[MAX_PLAYERS];
new RandomizedQuestions[MAX_PLAYERS][MAX_QUESTIONS][E_Question];

// Practic
new Float: AutoSchoolPositions[][] =
{
    {1125.2539,-1696.1693,13.3580},
    {1111.0828,-1709.7928,13.0883},
    {1040.0737,-1697.7607,13.0877},
    {1040.2297,-1587.3088,13.0868},
    {1065.2056,-1420.6731,13.1286},
    {1180.0536,-1408.0319,12.9615},
    {1193.3699,-1480.8561,13.0869},
    {1193.6221,-1556.9919,13.0864},
    {1169.5564,-1569.4333,13.0157},
    {1147.6801,-1589.5353,13.1784},
    {1147.6639,-1697.5493,13.4853},
    {1128.4462,-1709.7570,13.1277},
    {1125.8068,-1680.5803,13.3575}
}, AutoSchoolCars[14], autoschoolEx[2];
new AutoSchoolCar[MAX_PLAYERS], AutoSchoolStatus[MAX_PLAYERS];

/* ======================= << [ AutoSalon System ] >> ======================= */
/*new Text:Buy_TD[9], PlayerText:Buy_PTD[MAX_PLAYERS][2];
new AutoSalonCar[8], AutoSackPickup, AS_select[MAX_PLAYERS];
new AutoSalonCarPrices[][] =
{
    {25000},
    {26000},
    {30000},
    {34000},
    {42000},
    {45000},
    {50000},
    {60000}
};*/

/* ======================= << [ AutoSalon System ] >> ======================= */
new AS_status[MAX_PLAYERS], AS_car[MAX_PLAYERS], AS_select[MAX_PLAYERS];
new Text:car_TD[11], PlayerText:car_PTD[MAX_PLAYERS][5];
static const stock AS_cars[][2] =
{
	{400, 25000},
	{402, 100000},
	{405, 30000},
	{411, 150000},
	{429, 70000},
	{439, 40000},
	{451, 75000},
	{475, 35000},
	{477, 65000},
	{495, 80000},
	{496, 35000},
	{506, 65000},
	{535, 35000},
	{536, 25000},
	{541, 130000},
	{555, 40000},
	{558, 70000},
	{559, 120000},
	{560, 135000},
	{561, 35000},
	{562, 140000},
	{579, 80000}
};
static const stock AS_cars_launcher[][2] =
{
	{12311, 1000000}, //Mercedes-AMG E63 CarsCount[0]
	{12314, 1200000}, //Mercedes-Benz W210 CarsCount[1]
	{12318, 1300000}, //Toyota Supra MK4 CarsCount[2]
    {12304, 1500000}, //BMW M3 E46 CarsCount[3]
    {12321, 1500000}, //BMW M3 E36 CarsCount[4]
    {12315, 1600000}, //Mercedes-AMG C63 CarsCount[5]
    {12304, 1600000}, //BMW M5 E39 CarsCount[6]
    {12316, 1800000}, //BMW M5 E60 CarsCount[7]
    {12320, 1800000}, //Chevrolet Corvette C7 CarsCount[8]
    {12302, 1900000}, //Dodge Challenger SRT Hellcat CarsCount[9]
    {12307, 2000000}, //BMW X5 M Competition CarsCount[10]
    {12323, 2100000}, //BMW X6 M Competition CarsCount[11]
    {12313, 2000000}, //Audi RS7 CarsCount[12]
    {12325, 1900000}, //BMW M4 F82 CarsCount[13]
    {12319, 2000000}, //BMW M4 G82 CarsCount[14]
    {12309, 2000000}, //Mercedes-AMG CLS 6.3 CarsCount[15]
    {12322, 2300000}, //Lamborghini Urus CarsCount[16]
    {12317, 2200000}, //Mercedes-AMG G63 4X4 CarsCount]17]
    {12326, 1800000}, //Toyota Land Cruiser Prado CarsCount[18]
    {12312, 1900000}, //Porsche 911 GT3 CarsCount[19]
    {12303, 2400000}, //Lamborghini Aventador CarsCount[20]
    {12332, 1700000}, //BMW M5 E34 CarsCount[21]
    {12333, 2300000}, //Tesla Model S CarsCount[22]
    {12334, 1850000}, //Alfa Romeo Giulia CarsCount[23]
    {12335, 2000000} //BMW M5 F10 CarsCount[24]
};
new AS_client[MAX_PLAYERS];

/* ======================== << [ CarMarket System ] >> ====================== */
enum CINFO
{
	ID,
	Float:CarPosX,
	Float:CarPosY,
	Float:CarPosZ,
	Float:CarPosC,
	CarOwner[64],
	CarID,
	CarPrice,
	CarStatus,
	CarSlot,
	CarTime,
	CarIDInfo,
	Text3D:CarText
};
new CarInfo[MAX_CARS][CINFO];
new TotalCar = 0;
new Salon_String[256];

/* ======================== << [ Ships System ] >> ========================== */
new Text3D:ShipText[MAX_PLAYERS], ObjectShip[MAX_PLAYERS] = {0x7F800000,...};

/* ========================= << [ Tie System ] >> =========================== */
new bool:TieStatus[MAX_PLAYERS];

/* ======================== << [ Cuff System ] >> =========================== */
new bool: IsPlayerCuffed[MAX_PLAYERS];

/* ======================= << [ Ticket System ] >> ========================== */
new TicketOffer[MAX_PLAYERS], TicketMoney[MAX_PLAYERS];

/* ======================== << [ Heal System ] >> =========================== */
new HealOffer[MAX_PLAYERS], HealPrice[MAX_PLAYERS];

/* ======================= << [ Prison System ] >> ========================= */
new Float: StatePrisonSpawn[][] =
{
	{1230.4312, 1342.1895, 3011.0005},
	{1230.6383, 1346.2228, 3011.0005},
	{1230.3719, 1349.9456, 3011.0005}
};

/* ======================= << [ Marriage System ] >> ======================== */
new ProposeOffer[MAX_PLAYERS];

/* ======================= << [ Trailer System ] >> ========================= */
new TrailerLimit;
new Roadtrain[12];
new Misabmeli[12];
new bool:TrailerJob[MAX_PLAYERS];
new bool:Aigotvirti[MAX_PLAYERS];
new TvirtisSaxeoba[MAX_PLAYERS];
new TrailerInvite;

/* ======================== << [ Family System ] >> ========================= */
enum e_Family
{
	fID,
	fName[24],
	fLeader[MAX_PLAYER_NAME],
	fType,
	fColor,
	fLevel,
	fExp,
	fMansion
}
new FamilyInfo[MAX_FAMILY][e_Family];

new FamilyMenu[][] = {"Family Information", "Online Members", "Change Color", "Change Type", "Change Name"};
new FamilyColors[][] = {"{c0392b}", "{e74c3c}", "{9b59b6}", "{8e44ad}", "{2980b9}", "{3498db}", "{1abc9c}", "{16a085}", "{27ae60}", "{2ecc71}", "{f1c40f}", "{f39c12}", "{e67e22}", "{ecf0f1}", "{7f8c8d}", "{34495e}"};
new FamilyTypes[][] = {"[X]", "» Family", "» Crew", "» Squad", "$ Corporation", "» Dynasty", "» Empire", "» Brotherhood"};
new CreateFamilyPic;
new fam_string[256];
new Text3D: PlayerFamilyText[MAX_PLAYERS];
new fOnlineMembers[MAX_PLAYERS][25];

/* ======================= << [ Mansion System ] >> ========================= */
enum e_Mansion
{
	mID,
	Float: mEnterPos[3],
	Float: mExitPos[4],
	mFamily,
	mOwned,
	mPrice,
	mLock,
	mCarID[MAX_MANSION_CAR],
	Float: mCarPosX[MAX_MANSION_CAR],
	Float: mCarPosY[MAX_MANSION_CAR],
	Float: mCarPosZ[MAX_MANSION_CAR],
	Float: mCarPosA[MAX_MANSION_CAR],
	mEnterPickup,
	mExitPickup,
	Text3D: mText,
	mVehicle[MAX_MANSION_CAR],
	Text3D: mCarText[MAX_MANSION_CAR]
}
new MansionInfo[MAX_MANSION][e_Mansion];
new MansionColorsByFamilyColors[] = { 17, 70, 22, 80, 103, 7, 16, 114, 51, 182, 44, 61, 65, 49, 34, 91 };

new MansionCars[][] =
{
	{402, 10000},
	{405, 12000},
	{411, 70000},
	{412, 20000},
	{415, 25000},
	{429, 40000},
	{451, 50000},
	{461, 35000},
	{521, 40000},
	{522, 50000},
	{506, 55000},
	{534, 45000},
	{535, 40000},
	{541, 90000},
	{560, 80000},
	{562, 95000}
};

/* ======================== << [ Taxi System ] >> =========================== */
new TaxiCar[11], pTaxi[MAX_PLAYERS], Text3D:TaxiLabel[MAX_VEHICLES][11];
new TransportDuty[MAX_PLAYERS], TaxiPassenger[MAX_PLAYERS], LastPassenger[MAX_PLAYERS];

/* ====================== << [ Donate System ] >> =========================== */
enum eDonate
{
	bool: d_Status,
	d_Name[MAX_PLAYER_NAME],
	d_Text[100],
	d_Date[32]
}
new DonateInfo[MAX_DONATES][eDonate];

/* ======================== << [ Call System ] >> =========================== */
new TaxiCall = INVALID_PLAYER_ID;

/* ======================== << [ Speedometer ] >> =========================== */
new Speedometer_Timer[MAX_PLAYERS];
new PlayerText:Speedometer_PTD[MAX_PLAYERS][38];
new PlayerText:Speedometer2_PTD[MAX_PLAYERS][44];

/* ======================== << [ Knock System ] >> ========================== */
new bool:KnockStatus[MAX_PLAYERS], Float:KnockPos[MAX_PLAYERS][4], KnockData[MAX_PLAYERS][2];
new Text3D:KnockText[MAX_PLAYERS];

/* ======================== << [ BoomBox System ] >> ======================== */
#define BOOMBOX_DISTANCE Float:(40.0)
new BoomBoxID[MAX_PLAYERS], BoomBoxListener[MAX_PLAYERS];
enum e_BoomBox
{
	bb_ID,
	bool:bb_Busy,
	Float:bb_Position[3],
	bb_Player,
	bb_Object,
	Text3D:bb_Text,
	bb_Area
}
new BoomBoxData[MAX_BOOMBOX][e_BoomBox];

/* ========================== << [ Container System ] >> ========================== */
new ContainerStatus[6], Text3D:ContainerText[6], ContainerCar[MAX_PLAYERS], ContainerObject[MAX_PLAYERS],
	ContainerGate[12], ContainerTables[6], bool:ContainerStatusPlayer[MAX_PLAYERS];

new Float:ContainerPositions[][] =
{
	{827.8518, -2064.9316, 12.8672},
	{827.8818, -2059.8860, 12.8672},
	{827.8885, -2054.7917, 12.8672},
	{827.9608, -2049.8716, 12.8672},
	{827.9242, -2044.7798, 12.8672},
	{827.8598, -2039.8550, 12.8672}
};
new Float:ContainerInsidePositions[][] =
{
	{823.0431, -2064.9016, 12.9812},
	{823.4345, -2059.8069, 12.9812},
	{823.3676, -2054.8608, 12.9812},
	{823.7993, -2049.8699, 12.9812},
	{824.1646, -2044.6858, 12.9812},
	{824.1035, -2039.8171, 12.9812}
};
enum
{
	CONTAINER_TYPE_VIP = 0,
	CONTAINER_TYPE_CAR = 1,
	CONTAINER_TYPE_MONEY = 2,
	CONTAINER_TYPE_LEVEL = 3,
	CONTAINER_TYPE_MAX = 4
}

/* ======================== << [ GunShop System ] >> ======================== */ // Gunshop by bedina
enum GunInfo
{
    GunID,
    GunName[20],
    GunPrice
};
new GunData[][GunInfo] =
{
    {24, "Desert Eagle", 10},
    {25, "Shotgun", 15},
    {29, "MP5", 20},
    {30, "AK-47", 25},
    {31, "M4", 30},
    {34, "Sniper Rifle", 40}
};
new selectedGun[MAX_PLAYERS];

/* ====================== << [ Elections Systems ] >> ======================= */
new ElectionON, ElectionPick, ElectionPickX;
enum e_Elections_INFO
{
	eName[24],
	eParty[24],
	eNumber,
	eVoices
};
new ElectionInfo[MAX_ELECTIONS][e_Elections_INFO];

/* ========================= << [ GeoLocation ] >> ========================== */
enum e_PLAYER_GEO_INFORMATION
{
    player_ip[GEO_MAX_IP_LENGTH + 1],
    player_country[GEO_MAX_COUNTRY_NAME_LENGTH + 1],
    player_city[GEO_MAX_CITY_NAME_LENGTH + 1],
    player_lat[GEO_MAX_LAT_LON_LENGTH + 1],
    player_lon[GEO_MAX_LAT_LON_LENGTH + 1],
    player_provider[GEO_MAX_PROVIDER_NAME_LENGTH + 1],
    player_proxy[GEO_MAX_PROXY_LENGTH + 1]
};
new
    player_geoInfo[MAX_PLAYERS][e_PLAYER_GEO_INFORMATION];

/* ================== << [ BitCoin/VideCard System ] >> ===================== */
enum
{
	VIDEO_CARD_TYPE_NONE,
	VIDEO_CARD_TYPE_WEAK,
	VIDEO_CARD_TYPE_STRONG,
	VIDEO_CARD_TYPE_BADASS,

	VIDEO_CARD_STATUS_NONE,
	VIDEO_CARD_STATUS_AMAZING,
	VIDEO_CARD_STATUS_GREAT,
	VIDEO_CARD_STATUS_NORMAL,
	VIDEO_CARD_STATUS_BAD,
	VIDEO_CARD_STATUS_BROKEN
}
new BitcoinValue = 150;

/* =========================== << [ Items ] >> ============================== */
#define INDEX_NONE  (-1)
#define INDEX_HEAD  (0)
#define INDEX_FACE  (1)
#define INDEX_SPINE (2)
#define INDEX_HAND  (3)
#define INDEX_ARM   (4)
#define INDEX_OTHER (5)
enum
{
	ITEM_NONE,
    ITEM_HELICOTER,
    ITEM_BACKPACK_PARACHUTE,
    ITEM_LIGHT_HAT,
    ITEM_RED_HAT,
    ITEM_ROCKSTAR_CASE,
    ITEM_SKATE,
    ITEM_PARROT,
    ITEM_BOOMBOX,
    ITEM_GELTMAN,
    ITEM_PHONE_1,
    ITEM_PHONE_2,
    ITEM_PHONE_3,
    ITEM_WIZARD_HAT,
    ITEM_SKULL,
    ITEM_RED_CASE,
    ITEM_BLACK_PACK,
    ITEM_NAILED_BAT,
    ITEM_CONSTRUNT_VEST,
    ITEM_HOOK,
    ITEM_PACKAGE,
    ITEM_GUITAR_1,
    ITEM_GUITAR_2,
    ITEM_GUITAR_3,
    ITEM_BULL_HORN,
    ITEM_BACKPACK_HIKER,
    ITEM_BALLON_1,
    ITEM_BALLON_2,
    ITEM_BALLON_3,
    ITEM_BALLON_4,
    ITEM_BALLON_5,
    ITEM_BALLON_6,
    ITEM_BALLON_7,
    ITEM_SIMCARD,
    ITEM_BANDANA_1,
    ITEM_BANDANA_2,
    ITEM_BANDANA_3,
    ITEM_BANDANA_4,
    ITEM_BANDANA_5,
    ITEM_CYLN_HAT_1,
    ITEM_CYLN_HAT_2,
    ITEM_CYLN_HAT_3,
    ITEM_CYLN_HAT_4,
	ITEM_MEDIC,
	ITEM_SANTAHAT,
	ITEM_CHICKEN,
	ITEM_ARMOR,
	ITEM_BOMB,
	ITEM_FUEL,
	ITEM_FAST_FOOD,
	ITEM_CIGARETTE,
	ITEM_GLASSES_1,
	ITEM_GLASSES_2,
	ITEM_GLASSES_3,
	ITEM_GLASSES_4,
	ITEM_EGG,
	ITEM_FISH,
	ITEM_FISHING_ROD,
	ITEM_BAG_GOLD,
	ITEM_BAG_IRON,
	ITEM_BAG_RGB,
	ITEM_BAG_GHOST,
	ITEM_BAG_DUCK,
	ITEM_CAP_BOMJGANG,
	ITEM_BACK_DELTAPLAN,
	ITEM_MASK_REDATOR,
	ITEM_MAK_PANDA,
	ITEM_BAG_CHICKEN,
	ITEM_BAG_PANDA,
	ITEM_BAG_ALIEN,
	ITEM_HEAD_SPERO1,
	ITEM_BACK_ANGEL,
	ITEM_BACK_SWORD,
	ITEM_BACK_OCTOPUS,
	ITEM_BACK_DRAGON,
	ITEM_CAP_GUCCI,
	ITEM_BAG_MARVEL,
	ITEM_BAG_GUCCI,
	ITEM_BACK_AMULETI,
	ITEM_HEAD_GENUINE,
	MAX_ITEMS
}
enum
{
    ITEM_NAME_ENG,
    ITEM_NAME_GEO
}
enum e_Items
{
    item_id,
    item_model,
    item_name_eng[32],
    item_name_geo[32],
    item_index,
    Float: item_preview[4],
	item_usetext[8],
	item_description[128]
}
new ItemInfo[][e_Items] =
{
	{ITEM_NONE,                 19382,  "None",         "None",                 INDEX_NONE,         {0.0, 0.0, 0.0, 0.0},   "Use", ""},
    {ITEM_HELICOTER,            2469,   "Helicopter",   "Vertmfreni",           INDEX_SPINE,		{80.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Vertmfreni', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BACKPACK_PARACHUTE,   3026,   "Parachute",    "Parashuti",            INDEX_SPINE,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Parashuti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_LIGHT_HAT,            18968,  "Light Hat",    "Lurji Qudi",           INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_RED_HAT,              18969,  "Red Hat",      "Witeli Qudi",          INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_ROCKSTAR_CASE,        19624,  "Case",         "Chemodani",            INDEX_HAND,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Chemodani', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_SKATE,                19878,  "Skate",        "Skeiti",               INDEX_HAND,			{45.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Skeiti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_PARROT,               19079,  "Parrot",       "Tutikushi",            INDEX_ARM,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Tutikushi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BOOMBOX,              2226,   "Boom-Box",     "Boom-Box",             INDEX_NONE,			{0.0, 0.0, 180.0, 0.9},	"Use", "Nivti 'Boom-Box', Gamoikeneba Musikis Chasartavas Nebismier Adgilas\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
    {ITEM_GELTMAN,              11704,  "Geltman",      "Witeli Maska",         INDEX_FACE,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Witeli Maska', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_PHONE_1,              18866,  "Phone Blue",   "Mobiluri Telefoni",    INDEX_NONE,			{90.0, 0.0, 0.0, 0.7},	"Open", "Nivti 'Telefoni', Gamoikeneba Telefonis Amosagebad\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
    {ITEM_PHONE_2,              18874,  "Phone White",  "Mobiluri Telefoni",    INDEX_NONE,			{90.0, 0.0, 0.0, 0.7},	"Open", "Nivti 'Telefoni', Gamoikeneba Telefonis Amosagebad\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
    {ITEM_PHONE_3,              18871,  "Phone Green",  "Mobiluri Telefoni",    INDEX_NONE,			{90.0, 0.0, 0.0, 0.7},	"Open", "Nivti 'Telefoni', Gamoikeneba Telefonis Amosagebad\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
    {ITEM_WIZARD_HAT,           19528,  "Wizard Hat",   "Jadoqris Qudi",        INDEX_HEAD,			{0.0, 0.0, 0.0, 0.8},	"Use", "Aksesuari 'Jadoqris Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_SKULL,                6865,   "Skull",        "Chonchxi",             INDEX_FACE,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Chonchxi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_RED_CASE,             19921,  "Red Case",     "Witeli Chemodani",     INDEX_HAND,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Witeli Chemodani', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BLACK_PACK,           11745,  "Black Pack",   "Shavi Chanta",         INDEX_HAND,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Shavi Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_NAILED_BAT,           2045,   "Nailed Bat",   "Ekliani Bita",         INDEX_SPINE,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Ekliani Bita', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_CONSTRUNT_VEST,       19904,  "Constructor Vest", "Zeda",             INDEX_SPINE,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Zeda', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_HOOK,                 2590,   "Hook",         "Celi",                 INDEX_HAND,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Celi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_PACKAGE,              1276,   "Package",      "Azrze ar var",         INDEX_SPINE,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Package', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_GUITAR_1,             19317,  "Pop Guitar",   "Witeli Gitara",        INDEX_SPINE,		{0.0, 330.0, 0.0, 0.9},	"Use", "Aksesuari 'Gitara', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_GUITAR_2,             19318,  "Metal Guitar", "Tetri Gitara",         INDEX_SPINE,		{0.0, 330.0, 0.0, 0.9},	"Use", "Aksesuari 'Gitara', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_GUITAR_3,             19319,  "Rock Guitar",  "Shavi Gitara",         INDEX_SPINE,		{0.0, 330.0, 0.0, 0.9},	"Use", "Aksesuari 'Gitara', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BULL_HORN,            19314,  "Bull Horn",    "Rqebi",                INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Rqebi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BACKPACK_HIKER,       19559,  "Hiker Backpack","Zurgchanta",          INDEX_SPINE,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Zurgchanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_1,             19332,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_2,             19333,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_3,             19334,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_4,             19335,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_5,             19336,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_6,             19337,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BALLON_7,             19338,  "Ballon",        "Sahaero Bushti",      INDEX_OTHER,		{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Sahaero Bushti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_SIMCARD,              1581,   "SIM Card",      "SIM Barati",          INDEX_NONE,			{0.0, 0.0, 0.0, 1.0},	"Open", "Nivti 'SIM Barati', Gamoikeneba Sakutari Nomris Sanaxavad\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
    {ITEM_BANDANA_1,            18906,  "Red Bandana",   "Bendena",             INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Bendena', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BANDANA_2,            18907,  "Rainbow Bandana","Bendena",            INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Bendena', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BANDANA_3,            18908,  "Blue Bandana",  "Bendena",             INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Bendena', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BANDANA_4,            18909,  "Blue2 Bandana", "Bendena",             INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Bendena', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
    {ITEM_BANDANA_5,            18910,  "Red2 Bandana",  "Bendena",             INDEX_HEAD,			{0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Bendena', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CYLN_HAT_1,           18948,  "Blue Hat",      "Lurji Qudi",       	INDEX_HEAD,			{0.0, -99.0, 0.0, 0.7},	"Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CYLN_HAT_2,           18949,  "Green Hat",     "Mwvane Qudi",       	INDEX_HEAD,			{0.0, -99.0, 0.0, 0.7},	"Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CYLN_HAT_3,           18950,  "Red Hat",     	 "Witeli Qudi",       	INDEX_HEAD,			{0.0, -99.0, 0.0, 0.7},	"Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CYLN_HAT_4,           18951,  "Yellow Hat",    "Yviteli Qudi",       	INDEX_HEAD,			{0.0, -99.0, 0.0, 0.7},	"Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_MEDIC,                11738,  "First Aid Kit", "Pirveladi Daxmareba",  INDEX_NONE,		{0.0, 0.0, 0.0, 1.0},	"Heal", "Nivti 'Pirveladi Daxmareba', Gamoikeneba Sicocxlis Asamateblad\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
	{ITEM_SANTAHAT,             19064,  "Santa Hat",     "Santas Qudi",         INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},	"Use", "Aksesuari 'Qudi', Gammoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CHICKEN,              19137,  "Chicken Mask",  "Qatmis Maska",        INDEX_HEAD,         {90.0, 0.0, 90.0, 0.8},	"Use", "Aksesuari 'Maska', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_ARMOR,                19515,  "Armour",        "Bronis Jileti",       INDEX_SPINE,        {0.0, 0.0, 0.0, 0.8},	"Use", "Aksesuari 'Bronis Jileti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BOMB,					1654,   "Dynamite",      "Bombi",               INDEX_NONE,         {0.0, 0.0, 165.0, 0.8},	"Put", "Nivti 'Bombi', Gamoikeneba Bankis Sacavis Asafetkeblad\nShedzena Sheidzleba Shav Bazarze"},
	{ITEM_FUEL,                 1650,   "Fuel",          "Benzini",             INDEX_NONE,         {0.0, 0.0, 0.0, 0.9},	"Pour", "Nivti 'Benzini', Gamoikeneba Transportshi Chasasxmelad\nShedzena Sheidzleba Nebismier Avto Gasamart Sadgurze"},
	{ITEM_FAST_FOOD,            2663,   "Fast Food",     "Sakvebi",             INDEX_NONE,         {0.0, 0.0, 0.0, 0.9},	"Eat", "Nivti 'Sakvebi', Gamoikeneba Sachmelad\nShedzena Sheidzleba Nebismier Restoran'shi"},
	{ITEM_CIGARETTE,            19625,  "Cigarette",     "Sigareti",            INDEX_NONE,         {0.0, 0.0, 0.0, 0.7},   "Smoke", "Nivti 'Sigareti', Gamoikeneba Mosawevad\nShedzena Sheidzleba Nebismier 24/7 Market'shi"},
	{ITEM_GLASSES_1,            19023,  "Sunglasses",    "Satvale",             INDEX_FACE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Satvale', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_GLASSES_2,            19024,  "Sunglasses",    "Satvale",             INDEX_FACE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Satvale', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_GLASSES_3,            19025,  "Sunglasses",    "Satvale",             INDEX_FACE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Satvale', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_GLASSES_4,            19026,  "Sunglasses",    "Satvale",             INDEX_FACE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Satvale', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_EGG,                  19345,  "Easter Egg",    "Saagdgomo Kvercxi",   INDEX_NONE,         {0.0, 0.0, 0.0, 1.0},   "Change", "Nivti 'Kvercxi', Gamoikeneba Nivtebis Gadacvlashi\nMopoveba Sheidzleba Server'ze 5 Saatis Gatarebit"},
	{ITEM_FISH,                 19630,  "Fish",    		 "Tevzi",   			INDEX_NONE,         {0.0, 0.0, 0.0, 1.0},   "Sell", "Sakvebi* 'Tevzi', Gamoikeneba Gasakidad/Gadasacvlelad\nMopoveba Sheidzleba Tevzaobit\nErti Tevzis Fasi 100$"},
	{ITEM_FISHING_ROD,          18632,  "Fishing Rod",   "Ankesi",              INDEX_NONE,         {0.0, 0.0, 0.0, 1.0},   "Use",  "Nivti 'Ankesi', Gamoikeneba Satevzaod\nShedznea Shegidzliat Nebismier 24/7 Marketshi"},
	{ITEM_BAG_GOLD,            3234,  "Suitcase",    "Gold Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_IRON,            3235,  "Suitcase",    "IronMan Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_RGB,            3237,  "Suitcase",    "RGB Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_GHOST,            3238,  "Suitcase",    "Ghost Rider Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_DUCK,            4766,  "Mask",    "Yellow Duck Mask",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Nigabi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CAP_BOMJGANG,            4769,  "Hat",    "Bomj Gang Hat",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BACK_DELTAPLAN,            4775,  "Back",    "Deltaplan",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Nivti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_MASK_REDATOR,            3152,  "Mask",    "Predator Mask",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Nigabi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_MAK_PANDA,            3154,  "Mask",    "Panda Mask",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Nigabi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_CHICKEN,            3164,  "Suitcase",    "Chicken Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_PANDA,            3176,  "Suitcase",    "Panda Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_ALIEN,            3185,  "Suitcase",    "Alien Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_HEAD_SPERO1,            5387,  "Sphere",    "Sphere Galactic",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Spero', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BACK_ANGEL,            5383,  "Wing",    "Angel Wing",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Frtebi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BACK_SWORD,            6546,  "Swords",    "Swords",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Swords', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BACK_OCTOPUS,            6787,  "Wings",    "Doctor Octopus",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Doctor Octopus', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BACK_DRAGON,            4774,  "Dragon",    "Dragon",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Dragon', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_CAP_GUCCI,            6026,  "Hat",    "Gucci's Qudi",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Gucci's Qudi', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_MARVEL,            6025,  "Suitcase",    "Marvel Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Marvel's Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BAG_GUCCI,            6618,  "Suitcase",    "Gucci Suitcase",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Gucci's Chanta', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_BACK_AMULETI,            6553,  "Suitcase",    "Amuleti",             INDEX_SPINE,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Amuleti', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"},
	{ITEM_HEAD_GENUINE,            6552,  "GENUINE",    "GENUINE",             INDEX_HEAD,         {0.0, 0.0, 0.0, 1.0},   "Use", "Aksesuari 'Genuine', Gamoikeneba Mxolod Mosargebad\nShedzena Sheidzleba SkinShop'shi"}
};//ITEM_HEAD_GENUINE
new newitems[] = {6648, 3228, 3229, 3231, 3229, 3231, 3234, 3235, 3236,
					3237, 3238, 3151, 4763, 4764, 4765, 4766, 4767, 4769,
					4770, 4771, 4773, 4775, 3152, 3153, 3154, 3159, 3160,
					3161, 3164, 3176, 3181, 3183, 3185, 11806, 5389, 5387,
					5386, 5384, 6553, 6551, 6552, 6551, 5383, 6546, 6545,
					6782, 6785, 6787, 4774, 6799, 6772, 6771, 6026, 6025,
					6618, 6801};

/* ======================= << [ Inventory System ] >> ======================= */
new PlayerText:Inv_PTD[MAX_PLAYERS][12],
	PlayerText:UsedItems_PTD[MAX_PLAYERS][INV_MAX_ACCS],
	PlayerText:Index_PTD[MAX_PLAYERS][INV_MAX_SLOTS], Text:Inv_TD[52];
enum e_Inventory
{
	bool:i_Opened,
	i_Items[INV_ALL_ITEM],
	i_UsedItems[INV_MAX_ACCS],
	i_Skin,
	i_Index,
	i_Page,
	i_Near,
	bool:i_Usement,
	bool:i_UsementLoaded,
}
new InvData[MAX_PLAYERS][e_Inventory];
new BadItem[] = { -1, 0, 74, 4238 };

new Float:InvUsementPositions[][] =
{
	{441.205505, 145.337707},
	{471.505401, 145.139801},
	{501.505615, 145.239807},
	{531.505004, 144.942001},
	{561.504577, 145.144302},
	{441.204711, 178.295501},
	{471.404602, 178.500000},
	{501.404693, 178.500000},
	{531.505004, 178.500000},
	{561.404724, 178.593307},
	{441.404907, 211.739807},
	{471.304901, 211.739807},
	{501.204895, 211.839904},
	{531.204711, 211.742004},
	{561.504272, 211.742004},
	{441.304199, 245.190902},
	{471.304107, 245.388702},
	{501.304107, 245.391006},
	{531.404418, 245.088806},
	{561.404602, 245.193206},
	{441.204498, 278.353302},
	{471.304504, 278.446594},
	{501.404602, 278.446594},
	{531.404724, 278.446594},
	{561.204528, 278.642211}
};
new Float:InvUsementAdditional[][] =
{
	{0.0, 0.5},
	{0.8, 1.5},
	{0.8, 11.9},
	{0.8, 21.8},
	{13.5, 2.5},
	{14.0, 12.7},
	{14.0, 22.8}
};

/* ========================= << [ Drop System ] >> ========================== */
#define MAX_DROP_ITEM   (40)
enum e_Drop
{
    d_Status,
    d_Object,
    d_Model,
    d_Sphere,
    d_Added,
	d_Health,
    Text3D: d_Text
}
new DropInfo[MAX_DROP_ITEM][e_Drop];
new PlayerText:Pick_PTD[MAX_PLAYERS][4];

/* ========================= << [ TextDraws ] >> ============================ */
//new Text:logo[14];
new Text:logo_TD[8];
//new Text:logo[6];
new Text:ReportTXT[4];
new Text:StopAnimationTD;
new PlayerText:DMTXT[MAX_PLAYERS];
new PlayerText:Timer_PTD[MAX_PLAYERS];
new PlayerText:CaptureTextDraw_PTD[MAX_PLAYERS][4];
new Text:zones_TD[3], PlayerText:zones_PTD[MAX_PLAYERS][1];
new Text:youtube_TD[13];
new kick_str[350];
/* ========================= << [ Animations ] >> =========================== */
new AnimNames[50][] =
{
	"1.  Dawola[1]",
	"2.  RAPis Kitxva[1]",
	"3 . RAPis Kitxva[2]",
	"4.  Dajdoma[1]",
	"5.  Dajdoma[2]",
	"6.  Xelebis Aweva",
	"7.  Iaragis Damizna",
	"8.  Trakze Dartyma",
	"9.  Yvavilebis Micema",
	"10. Fuck Bich",
	"11. Kung-Fu[1]",
	"12. Kocna Kacurad",
	"13. Kocna Qalurad",
	"14. Cekva[2]",
	"15. Cekva[3]",
	"16. Cekva[4]",
	"17. Kung-Fu[2]",
	"18. Taksis Gachereba",
	"19. Dajdoma[3]",
	"20. Dajdoma[4]",
	"21. Dawola[2]",
	"22. Dawola[3]",
	"23. Dawola[4]",
	"24. AK-47",
	"25. Deagle",
	"26. Xelis Qneva",
	"27. Mitingis Sheqmna",
	"28. Dadzaxeba",
	"29. Davardna",
	"30. Adgoma",
	"31. Misalmeba[1]",
	"32. Misalmeba[2]",
	"33. Misalmeba[3]",
	"34. Daleva",
	"35. Fexit Dartyma",
	"36. Fiqri",
	"37. Danebeba",
	"38. Xelis Kvra",
	"39. Gadaxtoma",
	"40. Xatva[Gravity]",
	"41. Eqimi",
	"42. Kvdeba",
	"43. Axtoma",
	"44. Gagoreba",
	"45. Boks",
	"46. RAPis Kitxva[3]",
	"47. You Nigga[5]",
	"48. Dawola",
	"49. Dzarcva",
	"50. Moweva"
};

/* ======================== << [ Fraction System ] >> ======================= */
enum frac_Info
{
	frac_ID,
	Float: frac_SpawnPositionX,
	Float: frac_SpawnPositionY,
	Float: frac_SpawnPositionZ,
	Float: frac_SpawnRotation,
	frac_Interior,
    frac_VirtualWorld,
	frac_LeaderRank,
	frac_Color,
    frac_Payment,
    frac_MaxSkin,
    frac_Ranking
}
new FractionInfo[][frac_Info] =
{
	{FRACTION_NONE, 	0.0, 0.0, 0.0, 0.0, 0, 0, 0, COLOR_WHITE, 1},
	{FRACTION_LSPD, 	1195.3182,	1347.2725,	3011.0005,  	180.0,  	6,  	5,  	15,     0x0000FFAA,     0,  	8,	9},
    {FRACTION_FBI,  	1478.5179,	251.6274,	1013.5359,      40.0,  		3,  	4,  	10,     0x313131AA,     8525,  	7,	8},
    {FRACTION_ARMY, 	308.5337, 	-164.7664, 	999.5938,      	270.0,  	6,  	3,  	9,      0xB59C66FF,     9103,   5,	7},
    {FRACTION_BALLAS, 	332.5906,	1125.0209,	1083.8828,		120.0,		5,		10,		8,		0x990099AA,		0,		4,	6},
    {FRACTION_VAGOS, 	332.5906,	1125.0209,	1083.8828,		120.0,		5,		11,		8,		0xFFD633AA,		0,		4,	6},
    {FRACTION_AZTEC, 	332.5906,	1125.0209,	1083.8828,		120.0,		5,		12,		8,		0x00FFFFAA,		0,		4,	6},
    {FRACTION_GROVE, 	332.5906,	1125.0209,	1083.8828,		120.0,		5,		13,		8,		0x009900AA,		0,		4,	6},
    {FRACTION_RIFA, 	332.5906,	1125.0209,	1083.8828,		120.0,		5,		14,		8,		0x5200CCAA,		0,		4,	6},
    {FRACTION_MEDIC,    -43.9619,	169.3641,	999.0569,       270.0,      9,      15,     6,      0xA52A2AFF,     9092,  	5,	5},
    {FRACTION_BIKERS,   508.3728,	-78.6393,	998.9609,       180.0,      11,     16,     6,      0x2E9AFEFF,     0,  	5,	5},
    {FRACTION_LSNEWS,	2824.3613,	1670.6003,	2001.0859,		180.0,		1,		17,		7,		0x50AE6AAA,		9543,	5,	5},
    {FRACTION_CITYHALL, 361.6606,	206.8779,	1008.3828,      270.0,      3,      40,     8,      0x114D71FF,     10806,  5,  6},
	{FRACTION_LCN,      -50.1756,	1400.3091,	1084.4297,      0.0,        8,      50,     10,     0xB03060FF,     0,      4,  6},
	{FRACTION_YAKUZA,   -50.1756,	1400.3091,	1084.4297,      0.0,        8,      51,     10,     0x8B0000FF,     0,      4,  6},
	{FRACTION_RM,      	-50.1756,	1400.3091,	1084.4297,      0.0,        8,      52,     10,     0x008B8BFF,     0,      4,  6}
};
new Float:FractionFormPositions[][] =
{
    {0.0, 0.0, 0.0},
    {1195.7905,1341.6829,3011.0005},
    {1472.6322, 248.8021, 1013.5359},
    {312.7246, -168.7207, 999.5938},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {-24.0693, 157.6900, 999.0569},
    {0.0, 0.0, 0.0},
    {2822.1240, 1666.0674, 2001.0859},
    {367.8570, 216.3926, 1008.3828},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0}
};
new FractionFormPickup[sizeof(FractionFormPositions)];
new FractionSkins[][] =
{
	{0},
	{280, 283, 281, 282, 284, 285, 306, 307},
    {286, 166, 165, 164, 163, 304, 228},
    {287, 61, 179, 191, 121},
    {103, 104, 102, 19},
    {108, 110, 109, 47},
    {114, 292, 115, 116},
	{105, 270, 106, 107}, // 271
	{175, 173, 174, 30},
	{275, 70, 274, 276, 308},
	{100, 248, 247, 254, 298},
	{188, 217, 250, 261, 211},
	{98, 147, 187, 150, 141},
	{124, 113, 127, 223},
	{122, 123, 120, 67},
	{112, 111, 125, 126}
};
new FractionNames[][] =
{
	"None", "LSPD", "FBI", "LS Army", "Ballas", "Vagos", "Azteca", "Grove", "Rifa", "Medic", "Bikers", "LS News", "City Hall", "La Cosa Nostra", "Yakuza", "Russian Mafia"
};
new GovGuns[] =
{
    3, 23, 25, 29, 31
};
#define FractionRankNames[%0][%1] GetRankName(%0,%1)
new lspdEx[2],lspdlift[6], fbiEx[2], armyEx[3], armygates[2], lspdgate, lspdGuns, medicss[2], lspic[2];
new fbiLift[2], fbiGuns;
new ballaspic[2], vagospic[2], grovepic[2], aztecapic[2], rifapic[2], hamcvhod, hamcvqhod;
new lcnpic[2], yakuzapic[2], rmpic[2];
new MedicCallTime;
new MedicReviveTime[MAX_PLAYERS];

enum e_DoorsLSPD
{
	bool:dl_Stattus,
	dl_DoorObject,
}
new LSPDDoors[3][e_DoorsLSPD];
new Float:InteractDoorLSPD_Positions[][] =
{
	{1216.6100, 1344.9858, 3011.2351, 		1216.5889, 1346.5287, 3011.2351},
	{1223.8350, 1351.3170, 3011.2351,       1222.3085, 1351.3401, 3011.2351},
	{1227.7300, 1351.3170, 3011.2351,       1229.3353, 1351.4194, 3011.2351}
};

/* ======================= << [ Accessorie Shop ] >> ======================== */
new Accessorie_Selection = mS_INVALID_LISTID,
	Accessorie_Price[MAX_PLAYERS],
	Accessorie_Model[MAX_PLAYERS];
new const AccessorieSelect[][] =
{
	{ITEM_HELICOTER, 			100000},
	{ITEM_BACKPACK_PARACHUTE, 	125000},
	{ITEM_LIGHT_HAT,			76000},
	{ITEM_RED_HAT,				76000},
	{ITEM_ROCKSTAR_CASE,		160000},
	{ITEM_SKATE,				150000},
	{ITEM_PARROT,				240000},
	{ITEM_GELTMAN,				350000},
	{ITEM_WIZARD_HAT,			180000},
	{ITEM_RED_CASE,				96000},
	{ITEM_BLACK_PACK,			115000},
	{ITEM_NAILED_BAT,			125000},
	{ITEM_CONSTRUNT_VEST,		225000},
	{ITEM_GUITAR_1,				320000},
	{ITEM_GUITAR_2,				320000},
	{ITEM_GUITAR_3,				320000},
	{ITEM_BULL_HORN,			200000},
	{ITEM_BACKPACK_HIKER,		340000},
	{ITEM_BALLON_1,				1500000},
	{ITEM_BALLON_2,				1500000},
	{ITEM_BALLON_3,				1500000},
	{ITEM_BALLON_4,				1500000},
	{ITEM_BALLON_5,				1500000},
	{ITEM_BANDANA_1,			127000},
	{ITEM_BANDANA_2,			127000},
	{ITEM_BANDANA_3,			127000},
	{ITEM_BANDANA_4,			127000},
	{ITEM_BANDANA_5,			127000},
	{ITEM_CYLN_HAT_1,			92500},
	{ITEM_CYLN_HAT_2,			92500},
	{ITEM_CYLN_HAT_3,			92500},
	{ITEM_CYLN_HAT_4,			92500}
};

/* ========================= << [ Drop System ] >> ========================== */
/*enum e_Drop
{
    d_Status,
    d_Object,
    d_Model,
    d_Sphere,
    d_Added,
	d_Health,
    Text3D: d_Text
}
new DropInfo[MAX_DROP_ITEM][e_Drop];
new PlayerText:Pick_PTD[MAX_PLAYERS][9];
*/
/* ====================== << [ Anti Reconnects ] >> =========================
enum exInfo
{
	ExitName[MAX_PLAYER_NAME],
	ExitTime,
};
new ExitInfo[MAX_PLAYERS][exInfo];
 ======================== << [ Recon System ] >> ========================== */
new Text:reconmenu_TD[16];
enum eRecon
{
	bool: rec_Status,
	rec_Player,
	Float:rec_PosX,
	Float:rec_PosY,
	Float:rec_PosZ,
	Float:rec_PosR,
	rec_Interior,
	rec_VirtualWorld,
	rec_SpawnStatus
}
new ReconInfo[MAX_PLAYERS][eRecon];

/* ======================== << [ Report System ] >> ========================= */
#define REPORT_NONE_TEXT "xx-xxx-xx"
enum e_report
{
	rID,
	rText[128]
}
new ReportInfo[MAX_REPORT][e_report];
new bool: ReportOpen[MAX_PLAYERS], ReportID[MAX_PLAYERS];
new Text:report_TD[5], Text:reports_TD[MAX_REPORT];

/* ======================== << [ Event System ] >> ========================== */
enum e_Event
{
    bool: event_On,
    event_Name[32],
    event_Time,
    Float: event_PosX,
    Float: event_PosY,
    Float: event_PosZ,
    event_Interior,
    event_VirtualWorld,
	bool: event_AutoHealth,
	bool: event_AutoArmour,
	event_Skin,
	bool: event_Weapons[9]
}
new EventInfo[e_Event];
new EventWeapons[] = { 23, 24, 25, 27, 29, 30, 31, 33, 34 };
new Text:TeleportEvent[14];

/* ========================= << [ AntiCheats ] >> =========================== */
new BadWeaponIDs[] =
{
	4, 9, 16, 17, 35, 36, 37, 39, 40, 41, 44, 45
};
new lastDialogID[MAX_PLAYERS] = { -1, ... };
new CheatInDemorgan[MAX_PLAYERS];
new Float:LastVelocity[MAX_PLAYERS][3];
new troll[MAX_PLAYERS];
new atroll;
new vehicleput[MAX_PLAYERS];

enum p_sync
{
	Float: s_pos_x,
	Float: s_pos_y,
	Float: s_pos_z,
	s_controllable
}
new P_Sync[MAX_PLAYERS][p_sync];
new Float:SYNC_SettedPos[MAX_PLAYERS][3];
new SYNC_SettedTimer[MAX_PLAYERS];

stock s_ac_TogglePlayerControllable(playerid, toggle)
{
    P_Sync[playerid][s_controllable] = toggle;
	return TogglePlayerControllable(playerid, toggle);
}
#if defined _ALS_TogglePlayerControllable
	#undef TogglePlayerControllable
#else
	#define _ALS_TogglePlayerControllable
#endif
#define TogglePlayerControllable s_ac_TogglePlayerControllable

stock s_ac_SetPlayerPos(playerid, Float:x, Float:y, Float:z)
{
	if(SYNC_SettedTimer[playerid] != -1)
	{
	    KillTimer(SYNC_SettedTimer[playerid]);
	    SYNC_SettedTimer[playerid] = -1;
	}
	SetTimerEx("SYNC_SetPosTime", 1000, false, "i", playerid);
    SYNC_SettedPos[playerid][0] = x;
    SYNC_SettedPos[playerid][1] = y;
    SYNC_SettedPos[playerid][2] = z;
	return SetPlayerPos(playerid, x, y, z);
}
#if defined _ALS_SetPlayerPos
	#undef SetPlayerPos
#else
	#define _ALS_SetPlayerPos
#endif
#define SetPlayerPos s_ac_SetPlayerPos
function SYNC_SetPosTime(playerid)
{
	/*if(!IsPlayerInRangeOfPoint(playerid, 7.0, SYNC_SettedPos[playerid][0], SYNC_SettedPos[playerid][1], SYNC_SettedPos[playerid][2])
	&& PlayerInfo[playerid][pAdmin] == 0 && DelayPickup[playerid] < gettime())
	{
     ACKick(playerid, "Teleport hack", "035");
	}*/
	if(SYNC_SettedTimer[playerid] != -1) KillTimer(SYNC_SettedTimer[playerid]);
	SYNC_SettedTimer[playerid] = -1;
}

/* ======================= << [ Nexius AntiCheat ] >> ======================= */
//Nex-AC by Nexius v1.9.61 (0.3.7)
#define AC_USE_CONFIG_FILES	true
#define AC_USE_NPC false
#define AC_MAX_PING 590
#define AC_MIN_TIME_RECONNECT 10
#define AC_TRIGGER_ANTIFLOOD_TIME 5
#define AC_GLOBAL_TRIGGER_TYPE_PLAYER 0
#define AC_MAX_CODES 53
#define AC_MAX_CODES_ON_PAGE 15
#define AC_CODE_TRIGGER_TYPE_DISABLED 0
#define AC_CODE_TRIGGER_TYPE_WARNING 1
#define AC_CODE_TRIGGER_TYPE_KICK 2
#define AC_MAX_TRIGGER_TYPES 3
#define AC_TABLE_FIELD_TRIGGER "ac_code_trigger_type"
#define AC_TABLE_FIELD_CODE "ac_code"
#define AC_MAX_TRIGGER_TYPE_NAME_LENGTH (8 + 1)
#define AC_MAX_CODE_NAME_LENGTH (33 + 1)
#define AC_MAX_CODE_LENGTH (3 + 1)
#include <nex-ac>
new pAntiCheatSettingsPage[MAX_PLAYERS],
    pAntiCheatLastCodeTriggerTime[MAX_PLAYERS][AC_MAX_CODES],
    pAntiCheatSettingsMenuListData[MAX_PLAYERS][AC_MAX_CODES_ON_PAGE],
    pAntiCheatSettingsEditCodeId[MAX_PLAYERS];
new AC_CODE_TRIGGER_TYPE[AC_MAX_CODES], AC_CODE_TRIGGERED_COUNT[AC_MAX_CODES] = {0, ...};
static const AC_TRIGGER_TYPE_NAME[AC_MAX_TRIGGER_TYPES][AC_MAX_TRIGGER_TYPE_NAME_LENGTH] = {{"Disabled"}, {"Warning"}, {"Kick"}};
static const AC_CODE[AC_MAX_CODES][AC_MAX_CODE_LENGTH] =
{
    "000",
	"001",
	"002",
	"003",
    "004",
	"005",
    "006",
	"007",
    "008",
	"009",
	"010",
	"011",
    "012",
	"013",
    "014",
	"015",
    "016",
	"017",
    "018",
	"019",
    "020",
	"021",
    "022",
	"023",
    "024",
	"025",
    "026",
	"027",
    "028",
	"029",
    "030",
	"031",
    "032",
	"033",
    "034",
	"035",
    "036",
	"037",
    "038",
 	"039",
	"040",
	"041",
    "042",
	"043",
    "044",
	"045",
    "046",
	"047",
    "048",
	"049",
    "050",
	"051",
    "052"
};

static const AC_CODE_NAME[AC_MAX_CODES][AC_MAX_CODE_NAME_LENGTH] =
{
    {"AirBreak (onfoot)"},
    {"AirBreak (in vehicle)"},
    {"Teleport (onfoot)"},
    {"Teleport (in vehicle)"},
    {"Teleport (into/between vehicles)"},
    {"Teleport (vehicle to player)"},
    {"Teleport (pickups)"},
    {"FlyHack (onfoot)"},
    {"FlyHack (in vehicle)"},
    {"SpeedHack (onfoot)"},
    {"SpeedHack (in vehicle)"},
    {"Health hack (in vehicle)"},
    {"Health hack (onfoot)"},
    {"Armour hack"},
    {"Money hack"},
    {"Weapon hack"},
    {"Ammo hack (add)"},
    {"Ammo hack (infinite)"},
    {"Special actions hack"},
    {"GodMode from bullets (onfoot)"},
    {"GodMode from bullets (in vehicle)"},
    {"Invisible hack"},
    {"Lagcomp-spoof"},
    {"Tuning hack"},
    {"Parkour mod"},
    {"Quick turn"},
    {"FW/Auto C"},
    {"FakeSpawn"},
    {"FakeKill"},
    {"AIM"},
    {"CJ run"},
    {"CarShot"},
    {"CarJack"},
    {"UnFreeze"},
    {"AFK Ghost"},
    {"Full Aiming"},
    {"Fake NPC"},
    {"Reconnect"},
    {"High ping"},
    {"Dialog hack"},
    {"Sandbox"},
    {"Invalid version"},
    {"Rcon hack"},
    {"Tuning crasher"},
    {"Invalid seat crasher"},
    {"Dialog crasher"},
    {"Attached object crasher"},
    {"Weapon Crasher"},
    {"Connects to one slot"},
    {"Flood callback functions"},
    {"Flood change seat"},
    {"DDos"},
    {"NOP's"}
};

/* ======================== << [ Weapon-Config ] >> ========================= */
#include <weapon-config>

/* ====================== << [ Fraction WareHouse ] >> ====================== */
new BallasMat = 50000;
new VagosMat = 50000;
new GroveMat = 50000;
new AztecaMat = 50000;
new RifaMat = 50000;
new BallasDrugs = 0;
new VagosDrugs = 0;
new GroveDrugs = 0;
new AztecaDrugs = 0;
new RifaDrugs = 0;
new BallasBank = 0;
new VagosBank = 0;
new GroveBank = 0;
new AztecaBank = 0;
new RifaBank = 0;
new obshiaki[8];

/* ======================= << [ Command System ] >> ========================= */
enum e_cmd_desc
{
	cmd_Text[16],
	cmd_Desc[128],
}
new CommandData[][e_cmd_desc] =
{
	{"/exit",             	"Saxlidan Gasvla"},
	{"/hpanel",             "Saxlis Panelis Gaxsna"},
	{"/home",             	"Saxlis Povna"},
	{"/cars",             "Sakutari Transportis Chamogdeba"},
	{"/sellcar",            "Sakutari Transportis Gakidva"},
	{"/engine",             "Transportis Drzavis Daqoqva"},
	{"/lights",             "Transportis Shuqebis Anteba"},
	{"/lock",             	"Transportis Gaxsna/Daketva"},
	{"/alock",             	"Transportis Gaxsna/Daketva"},
	{"/mutelist",           "Chatis Banis Mizezebis Naxva"},
	{"/bmenu",             	"Biznesis Panelis Gaxsna"},
	{"/bwithdraw",          "Biznesidan Tanxis Ageba"},
	{"/mask",             	"Maskis Gaketeba/Moxsna"},
	{"/stopmus",            "Musikis Gatishva"},
	{"/time",             	"Saatis Naxva"},
	{"/members",            "Frakciis Wevrebis Naxva"},
	{"/id",             	"Motamashis Informaciis Gageba"},
	{"/shout",             	"Yvirili"},
	{"/whisper",            "Churchuli"},
	{"/b",             		"OOC Chat Gamokeneba"},
	{"/racia",             	"Gov Frakciis Chatis Gamokeneba"},
	{"/rr",             	"Frakciis OOC Chatis Gamokeneba"},
	{"/departaments",       "Departamentebis Chatis Gamokeneba"},
	{"/megaphone",          "Megephonis Gamokeneba"},
	{"/family",             "Gang Frakciis Chatis Gamokeneba"},
	{"/rescars",            "Frakciis Mankanebis Darespawneba"},
	{"/suspect",            "Dzebnis Dadeba"},
	{"/spawnchange",        "Gachenis Adgilis Shecvla"},
	{"/gotp",             	"Eventze Misvla"},
	{"/armyskill",          "Army Skill Naxva"},
	{"/eject",             	"Motamashis Transportidan Gadmogdeba"},
	{"/leave",             	"Frakciis Datoveba"},
	{"/changeskin",         "Frakciis Wevris Skinis Shecvla"},
	{"/coloroff",           "Feris Moshoreba"},
	{"/color",             	"Feris Dadeba"},
	{"/clist",             	"Feris Archeva"},
	{"/limit",             	"Mankanis Sichkaris Shezgudva"},
	{"/changekey",          "Axali Transportis Gasagebis Damzadeba"},
	{"/givekey",            "Transportis Gasagebis Gacema"}
};

/* ========================= << [ GangZones ] >> ============================ */
new TotalGzR;
new TotalGzA;
new TotalGzB;
new TotalGzG;
new TotalGzV;
new startcapture = 0;
new captures = 0;
new GzCheckOn = 0;
new ghettoon = 0;
new Boost2X;
new GzCheckTimer;
new FrakCD[20];
new ZoneOnBattle[130];
new GZSafeTime[130];
new CountOnZone[40];
new KillCounter[MAX_PLAYERS];
new bool:AutoTimer[MAX_PLAYERS], bool:AntiDialog[MAX_PLAYERS];
new Text3D: GhettoText[5];
new allowedfactions[] = {FRACTION_BALLAS, FRACTION_VAGOS, FRACTION_AZTEC, FRACTION_GROVE, FRACTION_RIFA};
new CaptureOn[MAX_PLAYERS];
enum GzoneInfo
{
	gID,
	Float:gCoords[4],
	gFrakVlad,
	gNapad
}
new GZInfo[130][GzoneInfo];
new Float:STANDARTGangZone[130][4] =
{
	{1642.710571,-2174.567871,1770.710571,-2073.567871},
	{1770.710571,-2174.567871,1898.710571,-2073.567871},
	{1898.710571,-2174.567871,2026.710571,-2073.567871},
	{2026.710571,-2174.567871,2154.710449,-2073.567871},
	{2154.710449,-2174.567871,2282.710449,-2073.567871},
	{2282.710449,-2174.567871,2410.710449,-2073.567871},
	{2410.710449,-2174.567871,2538.710449,-2073.567871},
	{2538.710449,-2174.567871,2666.710449,-2073.567871},
	{2666.710449,-2174.567871,2794.710449,-2073.567871},
	{2794.710449,-2174.567871,2922.710449,-2073.567871},
	{1642.710571,-2073.567871,1770.710571,-1972.567749},
	{1770.710571,-2073.567871,1898.710571,-1972.567749},
	{1898.710571,-2073.567871,2026.710571,-1972.567749},
	{2026.710571,-2073.567871,2154.710449,-1972.567749},
	{2154.710449,-2073.567871,2282.710449,-1972.567749},
	{2282.710449,-2073.567871,2410.710449,-1972.567749},
	{2410.710449,-2073.567871,2538.710449,-1972.567749},
	{2538.710449,-2073.567871,2666.710449,-1972.567749},
	{2666.710449,-2073.567871,2794.710449,-1972.567749},
	{2794.710449,-2073.567871,2922.710449,-1972.567749},
	{1642.710571,-1972.567871,1770.710571,-1871.567749},
	{1770.710571,-1972.567871,1898.710571,-1871.567749},
	{1898.710571,-1972.567871,2026.710571,-1871.567749},
	{2026.710571,-1972.567871,2154.710449,-1871.567749},
	{2154.710449,-1972.567871,2282.710449,-1871.567749},
	{2282.710449,-1972.567871,2410.710449,-1871.567749},
	{2410.710449,-1972.567871,2538.710449,-1871.567749},
	{2538.710449,-1972.567871,2666.710449,-1871.567749},
	{2666.710449,-1972.567871,2794.710449,-1871.567749},
	{2794.710449,-1972.567871,2922.710449,-1871.567749},
	{1642.710571,-1871.567871,1770.710571,-1770.567749},
	{1770.710571,-1871.567871,1898.710571,-1770.567749},
	{1898.710571,-1871.567871,2026.710571,-1770.567749},
	{2026.710571,-1871.567871,2154.710449,-1770.567749},
	{2154.710449,-1871.567871,2282.710449,-1770.567749},
	{2282.710449,-1871.567871,2410.710449,-1770.567749},
	{2410.710449,-1871.567871,2538.710449,-1770.567749},
	{2538.710449,-1871.567871,2666.710449,-1770.567749},
	{2666.710449,-1871.567871,2794.710449,-1770.567749},
	{2794.710449,-1871.567871,2922.710449,-1770.567749},
	{1642.710571,-1770.567871,1770.710571,-1669.567749},
	{1770.710571,-1770.567871,1898.710571,-1669.567749},
	{1898.710571,-1770.567871,2026.710571,-1669.567749},
	{2026.710571,-1770.567871,2154.710449,-1669.567749},
	{2154.710449,-1770.567871,2282.710449,-1669.567749},
	{2282.710449,-1770.567871,2410.710449,-1669.567749},
	{2410.710449,-1770.567871,2538.710449,-1669.567749},
	{2538.710449,-1770.567871,2666.710449,-1669.567749},
	{2666.710449,-1770.567871,2794.710449,-1669.567749},
	{2794.710449,-1770.567871,2922.710449,-1669.567749},
	{1642.710571,-1669.567871,1770.710571,-1568.567749},
	{1770.710571,-1669.567871,1898.710571,-1568.567749},
	{1898.710571,-1669.567871,2026.710571,-1568.567749},
	{2026.710571,-1669.567871,2154.710449,-1568.567749},
	{2154.710449,-1669.567871,2282.710449,-1568.567749},
	{2282.710449,-1669.567871,2410.710449,-1568.567749},
	{2410.710449,-1669.567871,2538.710449,-1568.567749},
	{2538.710449,-1669.567871,2666.710449,-1568.567749},
	{2666.710449,-1669.567871,2794.710449,-1568.567749},
	{2794.710449,-1669.567871,2922.710449,-1568.567749},
	{1642.710571,-1568.567871,1770.710571,-1467.567749},
	{1770.710571,-1568.567871,1898.710571,-1467.567749},
	{1898.710571,-1568.567871,2026.710571,-1467.567749},
	{2026.710571,-1568.567871,2154.710449,-1467.567749},
	{2154.710449,-1568.567871,2282.710449,-1467.567749},
	{2282.710449,-1568.567871,2410.710449,-1467.567749},
	{2410.710449,-1568.567871,2538.710449,-1467.567749},
	{2538.710449,-1568.567871,2666.710449,-1467.567749},
	{2666.710449,-1568.567871,2794.710449,-1467.567749},
	{2794.710449,-1568.567871,2922.710449,-1467.567749},
	{1642.710571,-1467.567871,1770.710571,-1366.567749},
	{1770.710571,-1467.567871,1898.710571,-1366.567749},
	{1898.710571,-1467.567871,2026.710571,-1366.567749},
	{2026.710571,-1467.567871,2154.710449,-1366.567749},
	{2154.710449,-1467.567871,2282.710449,-1366.567749},
	{2282.710449,-1467.567871,2410.710449,-1366.567749},
	{2410.710449,-1467.567871,2538.710449,-1366.567749},
	{2538.710449,-1467.567871,2666.710449,-1366.567749},
	{2666.710449,-1467.567871,2794.710449,-1366.567749},
	{2794.710449,-1467.567871,2922.710449,-1366.567749},
	{1642.710571,-1366.567871,1770.710571,-1265.567749},
	{1770.710571,-1366.567871,1898.710571,-1265.567749},
	{1898.710571,-1366.567871,2026.710571,-1265.567749},
	{2026.710571,-1366.567871,2154.710449,-1265.567749},
	{2154.710449,-1366.567871,2282.710449,-1265.567749},
	{2282.710449,-1366.567871,2410.710449,-1265.567749},
	{2410.710449,-1366.567871,2538.710449,-1265.567749},
	{2538.710449,-1366.567871,2666.710449,-1265.567749},
	{2666.710449,-1366.567871,2794.710449,-1265.567749},
	{2794.710449,-1366.567871,2922.710449,-1265.567749},
	{1642.710571,-1265.567871,1770.710571,-1164.567749},
	{1770.710571,-1265.567871,1898.710571,-1164.567749},
	{1898.710571,-1265.567871,2026.710571,-1164.567749},
	{2026.710571,-1265.567871,2154.710449,-1164.567749},
	{2154.710449,-1265.567871,2282.710449,-1164.567749},
	{2282.710449,-1265.567871,2410.710449,-1164.567749},
	{2410.710449,-1265.567871,2538.710449,-1164.567749},
	{2538.710449,-1265.567871,2666.710449,-1164.567749},
	{2666.710449,-1265.567871,2794.710449,-1164.567749},
	{2794.710449,-1265.567871,2922.710449,-1164.567749},
	{1642.710571,-1164.567871,1770.710571,-1063.567749},
	{1770.710571,-1164.567871,1898.710571,-1063.567749},
	{1898.710571,-1164.567871,2026.710571,-1063.567749},
	{2026.710571,-1164.567871,2154.710449,-1063.567749},
	{2154.710449,-1164.567871,2282.710449,-1063.567749},
	{2282.710449,-1164.567871,2410.710449,-1063.567749},
	{2410.710449,-1164.567871,2538.710449,-1063.567749},
	{2538.710449,-1164.567871,2666.710449,-1063.567749},
	{2666.710449,-1164.567871,2794.710449,-1063.567749},
	{2794.710449,-1164.567871,2922.710449,-1063.567749},
	{1642.710571,-1063.567871,1770.710571,-962.567871},
	{1770.710571,-1063.567871,1898.710571,-962.567871},
	{1898.710571,-1063.567871,2026.710571,-962.567871},
	{2026.710571,-1063.567871,2154.710449,-962.567871},
	{2154.710449,-1063.567871,2282.710449,-962.567871},
	{2282.710449,-1063.567871,2410.710449,-962.567871},
	{2410.710449,-1063.567871,2538.710449,-962.567871},
	{2538.710449,-1063.567871,2666.710449,-962.567871},
	{2666.710449,-1063.567871,2794.710449,-962.567871},
	{2794.710449,-1063.567871,2922.710449,-962.567871},
	{1642.710571,-962.567871,1770.710571,-861.567871},
	{1770.710571,-962.567871,1898.710571,-861.567871},
	{1898.710571,-962.567871,2026.710571,-861.567871},
	{2026.710571,-962.56787,2154.710449,-861.567871},
	{2154.710449,-962.567871,2282.710449,-861.567871},
	{2282.710449,-962.567871,2410.710449,-861.567871},
	{2410.710449,-962.567871,2538.710449,-861.567871},
	{2538.710449,-962.567871,2666.710449,-861.567871},
	{2666.710449,-962.567871,2794.710449,-861.567871},
	{2794.710449,-962.567871,2922.710449,-861.567871}
};
function LoadGZ()
{
	new string[50];
	new File = ini_openFile("gamefiles/gangzone.ini");
	new l[2048];
	new asd[5][10];
	for(new i =0;i<sizeof(GZInfo);i++)
	{
		format(string,sizeof(string), "Zone%d",i);
		new x = ini_getString(File,string,l);
		if(x < 0)
		{
			GZInfo[i][gCoords][0] = STANDARTGangZone[i][0];
			GZInfo[i][gCoords][1] = STANDARTGangZone[i][1];
			GZInfo[i][gCoords][2] = STANDARTGangZone[i][2];
			GZInfo[i][gCoords][3] = STANDARTGangZone[i][3];
		}
		else
		{
			split(l,asd,'|');
			GZInfo[i][gCoords][0] = floatstr(asd[0]);
			GZInfo[i][gCoords][1] = floatstr(asd[1]);
			GZInfo[i][gCoords][2] = floatstr(asd[2]);
			GZInfo[i][gCoords][3] = floatstr(asd[3]);
		}
		GZInfo[i][gFrakVlad] = strval(asd[4]);
		if(GZInfo[i][gFrakVlad] == 0) GZInfo[i][gFrakVlad] = allowedfactions[random(sizeof(allowedfactions))];
		GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);
		ZoneOnBattle[i] = 0;
		GZSafeTime[i] = 0;
	}
	ini_closeFile(File);
}
function SaveGZ()
{
	new string[400];
	new File = ini_openFile("gamefiles/gangzone.ini");
	new l[10];
	for(new i =0;i<sizeof(GZInfo);i++)
	{
		format(l,sizeof(l), "Zone%d",i);
		format(string,sizeof(string), "%f|%f|%f|%f|%d",GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3],GZInfo[i][gFrakVlad]);
		ini_setString(File,l,string);
	}
	ini_closeFile(File);
}
function GzCheck()
{
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(ZoneOnBattle[i] == 1)
		{
			if(GZSafeTime[i] > 0) GZSafeTime[i] --;
            foreach(new x:Player)
 			{
				new string[128];
				new y = PlayerInfo[x][pMember];
				if(y == GZInfo[i][gNapad] || y == GZInfo[i][gFrakVlad])
				{
					if(CaptureOn[x] == 0)
					{
						for(new c; c < 4; c++) PlayerTextDrawShow(x, CaptureTextDraw_PTD[x][c]);
						CaptureOn[x] = 1;
					}
					if(GZSafeTime[i] > 0) format(string,sizeof(string),"Time: %s",Convert(GZSafeTime[i]));
					PlayerTextDrawSetString(x, CaptureTextDraw_PTD[x][2], string);
					format(string,120,"%s ~r~%d",GetGangNamec(GZInfo[i][gNapad]),CountOnZone[GZInfo[i][gNapad]]);
					PlayerTextDrawSetString(x, CaptureTextDraw_PTD[x][1], string);
					format(string,120,"%s ~r~%d",GetGangNamec(GZInfo[i][gFrakVlad]),CountOnZone[GZInfo[i][gFrakVlad]]);
					PlayerTextDrawSetString(x, CaptureTextDraw_PTD[x][3], string);
				}
			}
			if(GZSafeTime[i] <= 0)
			{
			    new highscore = -1;
				new highscoreowner = INVALID_PLAYER_ID;
				foreach(new p:Player)
				{
				    new g = PlayerInfo[p][pMember];
					if(g == GZInfo[i][gNapad] || g == GZInfo[i][gFrakVlad])
					{
						if(KillCounter[p] > highscore)
						{
							highscore = KillCounter[p];
							highscoreowner = p;
						}
					}
				}
				if(CountOnZone[GZInfo[i][gFrakVlad]] > CountOnZone[GZInfo[i][gNapad]])
				{
				    foreach(new x:Player)
				    {
				        new y = PlayerInfo[x][pMember];
						if(y == GZInfo[i][gNapad] || y == GZInfo[i][gFrakVlad])
						{
                            for(new c; c < 4; c++) PlayerTextDrawDestroy(x, CaptureTextDraw_PTD[x][c]);
							KillCounter[x] = 0;
							CaptureOn[x] = 0;
						}
					}
					SendFractionMessage(0x00B953AA,"{FFFFFF}Gilocavt, Tkven Sheinarchunet Tkveni Teritoria", GZInfo[i][gFrakVlad]);
					SendFractionMessage(0xC56565AA,"{FF0000}Samwuxarod Tkven Ver Daipyarit Axali Teritoria", GZInfo[i][gNapad]);
					format(gstr, 256, "{FF0000}[GINFO] Gang Capture's Sauketeso Motamashe Iko : {ffffff}%s[%d] | {FF0000}Kill : %d", Name(highscoreowner), highscoreowner, highscore);
					SendFractionMessage(COLOR_WHITE, gstr, GZInfo[i][gFrakVlad]);
					SendFractionMessage(COLOR_WHITE, gstr, GZInfo[i][gNapad]);
					CountOnZone[GZInfo[i][gFrakVlad]] = 0;
					CountOnZone[GZInfo[i][gNapad]] = 0;
				}
				else if(CountOnZone[GZInfo[i][gFrakVlad]] < CountOnZone[GZInfo[i][gNapad]])
				{
				    foreach(new x:Player)
				    {
				        new y = PlayerInfo[x][pMember];
						if(y == GZInfo[i][gNapad] || y == GZInfo[i][gFrakVlad])
						{
							for(new c; c < 4; c++) PlayerTextDrawDestroy(x, CaptureTextDraw_PTD[x][c]);
							KillCounter[x] = 0;
							CaptureOn[x] = 0;
						}
					}
					CountOnZone[GZInfo[i][gFrakVlad]] = 0;
					CountOnZone[GZInfo[i][gNapad]] = 0;
					SendFractionMessage(0x00B953AA,"{FFFFFF}Gilocavt, Tkven Daipkarit Axali Terotoria", GZInfo[i][gNapad]);
					SendFractionMessage(0xC56565AA,"{FF0000}Samwuxarod Tqven Dakarget Teritoriaze Kontroli", GZInfo[i][gFrakVlad]);
					format(gstr, 256, "{FF0000}[GINFO] Gang Capture's Sauketeso Motamashe Iko : {ffffff}%s[%d] | {FF0000}Kill : %d", Name(highscoreowner), highscoreowner, highscore);
					SendFractionMessage(COLOR_WHITE, gstr, GZInfo[i][gFrakVlad]);
					SendFractionMessage(COLOR_WHITE, gstr, GZInfo[i][gNapad]);
					GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
					GZInfo[i][gNapad] = 0;
				}
				else if(CountOnZone[GZInfo[i][gFrakVlad]] == CountOnZone[GZInfo[i][gNapad]])
				{
				    GZSafeTime[i] = 60;
				    foreach(new x:Player)
		 			{
		 				new y = PlayerInfo[x][pMember];
						if(y == GZInfo[i][gNapad] || y == GZInfo[i][gFrakVlad])
						{
							GameTextForPlayer(x, "~y~Golden Time", 1000, 1);
						}
					}
				    return true;
				}
				captures--;
				ClearTotalGz();
				ZoneOnBattle[i] = 0;
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
				SaveGZ();
				if(captures == 0) KillTimer(GzCheckTimer), GzCheckOn = 0;
				break;
			}
		}
	}
	return true;
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}

/* ======================== << [ Moroz System ] >> ========================== */
new MorozSystem[MAX_FRACTIONS];

/* ======================= << [ Launcher System ] >> ======================== */
new Text3D:LauncherVehicleText[MAX_PLAYERS][MAX_VEHICLES];
new bool:LauncherVehicleTextCreated[MAX_PLAYERS][MAX_VEHICLES];

/* ========================= << [ Tune System ] >> ========================== */
#define TUNE_ENTER_POSITION 1031.8668,-1442.8438,13.5546
new bool: TuneHasOn[MAX_PLAYERS], TuneSelectID[MAX_PLAYERS], TuneSelectPlace[MAX_PLAYERS];

new CarTune_Dialog[][] =
{
	"Color 1",
	"Color 2",
	"Nitro",
	"Wheels",
	"Spoiler",
	"Paintjob",
	"Hydraulic",
	"Rear Bumper",
	"Front Bumper"
};
new CarTune_Colors[][] =
{
	{0, 1000},
	{1, 1000},
	{2, 1000},
	{3, 2000},
	{5, 1500},
	{6, 2000},
	{8, 1000},
	{16, 2000},
	{79, 2000}
};
new CarTune_Nitros[][] =
{
	{1009, 5000},
	{1008, 8000},
	{1010, 15000}
};
new CarTune_Wheels[][] =
{
	{1073, 5000},
	{1074, 5000},
	{1075, 5500},
	{1076, 6000},
	{1077, 6000},
	{1078, 6200},
	{1079, 7000},
	{1080, 7000}
};
new CarTune_Paintjobs[][] =
{
	{0, 7000},
	{1, 7000},
	{2, 7000}
};
new CarTune_Spoilers[][] =
{
	{5000, 5000},
	{5000, 5000},
	{5000, 5000}
};
new CarTune_Bumpers[][] =
{
	{6000, 6000},
	{6000, 6000}
};

/* ======================== << [ Vehicle System ] >> ======================== */
new engines, lightss, alarms, doorss, bonnets, boots, objectives;
new caridhouse[MAX_PLAYERS];
new IsAdminVehicle[MAX_VEHICLES];
new MyCarID[MAX_PLAYERS][25], MyCarTune[MAX_PLAYERS][25][11];
new MyCarInsertID[MAX_PLAYERS][25];
new gCarLock[MAX_VEHICLES], gFuel[MAX_VEHICLES], SpeedLimit[MAX_PLAYERS];
new TireBurnout[MAX_PLAYERS], BurnoutTimer[MAX_PLAYERS];
new chabmulia[MAX_VEHICLES], chabmuli[MAX_VEHICLES];
new CarTrailer[MAX_PLAYERS];

new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper",
	"Firetruck","Trashmaster","Stretch","Manana","Infernus","Voodoo","Pony","Mule",
	"Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington",
	"Bobcat","Mr.Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar",
	"Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon",
	"Coach","Cabbie","Stallion","Rumpo","RC Bandit","Romero","Packer","Monster",
	"Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer",
	"PCJ-600","Faggio","Freeway","RC Barron","RC Raider","Glendale","Oceanic","Sanchez",
	"Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler",
	"Zr-350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis","Baggage",
	"Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville",
	"Benson","Mesa","RC Goblin","Hotring A","Hotring B","Bloodring Banger","Rancher",
	"Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt",
	"Tanker","RoadTrain","Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900",
	"NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade",
	"Freight","Streak","Vortex","Vincent","Bullet","Clover","Sadler","Firetruck",
	"Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility",
	"Nevada","Yosemite","Windsor","Monster A","Monster B","Uranus","Jester","Sultan",
	"Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito",
	"Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway","Tornado",
	"AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo",
	"RC Cam","Launch","Police Car","Police Car","Police Car","Police Ranger",
	"Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
new vMods[] =
{
	0x033C2700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x021A27FA, 0x00000000, 0x00FFFE00,
	0x00000007, 0x0003C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x023B2785, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02BC4703, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x03BA278A, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x028E078A, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02310744, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x0228073A, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02BD4701, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x023A2780, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x0228077A, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x027A27CA, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x0282278A, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x023E07C0, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x03703730, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x031D2775, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02BE4788, 0x00000000, 0x00FFFE00,
	0x00000007, 0x0003C000, 0x00000000, 0x02010771, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029A0FCE, 0x00000000, 0x00FFFE00, 0x00000007, 0x0000C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x03382700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x023F8795, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029F078C, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000, 0x029627EA, 0x00000000, 0x00FFFE00,
	0x00000007, 0x0003C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x0236C782, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029E1FCA, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0xFC000437, 0x00000000, 0x021C0000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x03FE6007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00001B87, 0x00000001, 0x01E00000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x039E07D2, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x023CC700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00030000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x038E07D6, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x023D0709, 0x00000000, 0x00FFFE00, 0x00000007, 0x0000C000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x029E1F8A, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x029C077A, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000, 0x02BD076C, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0xFFFFFE00, 0x00000007, 0x00000000, 0x000001F8,
	0x02000700, 0x00000000, 0x00FFFFFE, 0x00000007, 0xC0000000, 0x00002007, 0xFE000700, 0x00000003, 0x00FFFE00,
	0x00000007, 0x00003C00, 0x00000600, 0xCE000700, 0xFF800000, 0x00FFFE01, 0x00000007, 0x3C000000, 0x00000000,
	0x02000700, 0x000003FC, 0x00FFFE00, 0x00000007, 0x003C0000, 0x00001800, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x007FE000, 0x00FFFE00, 0x00000007, 0x03C00000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000047, 0x0000003E, 0x3C000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00001C00, 0x00FFFE00,
	0x0000000F, 0x00000000, 0x0003C000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x000003C0, 0xC0000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x029607C2, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x03FFE7CF, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x031727F1, 0x00000000, 0x00FFFE00, 0x00000007, 0x00030000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x025627F0, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x039E07C2, 0x00000000, 0x00FFFE00, 0x00000007, 0x0003C000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000,
	0x02000700, 0x00000000, 0x00FFFE00, 0x00000007, 0x00000000, 0x00000000, 0x02000700, 0x00000000, 0x00FFFE00,
	0x00000007, 0x00000000, 0x00000000
};
new uf_VehicleSpeeds[] =
{
	160, 160, 200, 120, 150, 165, 110, 170, 110, 180, 160, 240, 160, 160, 140,
	230, 155, 200, 150, 160, 180, 180, 165, 145, 170, 200, 200, 170, 170, 200,
	190, 130, 800, 180, 200, 120, 160, 160, 160, 160, 160, 750, 150, 150, 110,
	165, 190, 200, 190, 150, 120, 240, 190, 190, 190, 140, 160, 160, 165, 160,
	200, 190, 260, 190, 750, 750, 160, 160, 190, 200, 170, 160, 190, 190, 160,
	160, 200, 200, 150, 165, 200, 120, 150, 120, 190, 160, 100, 200, 200, 170,
	170, 160, 160, 190, 220, 170, 200, 200, 140, 140, 160, 750, 260, 260, 160,
	260, 230, 165, 140, 120, 140, 200, 200, 200, 120, 120, 165, 165, 160, 340,
	340, 190, 190, 190, 110, 160, 160, 160, 170, 160, 600, 700, 140, 200, 160,
	160, 160, 110, 110, 150, 160, 230, 160, 165, 260, 160, 160, 160, 200, 160,
	160, 165, 160, 200, 170, 180, 110, 110, 200, 200, 200, 200, 200, 200, 750,
	200, 160, 160, 170, 110, 110, 900, 600, 110, 600, 160, 160, 200, 110, 160,
	165, 190, 160, 170, 120, 165, 260, 200, 140, 200, 260, 120, 200, 200, 600,
	190, 200, 200, 200, 160, 165, 110, 200, 200, 260, 260, 160, 160, 160, 140,
	160, 260, 210, 180, 225, 190, 170, 220,	160, 160, 110, 110, 150, 160, 230,
	160, 165, 260, 160, 160, 160, 200, 160, 200, 160, 160, 170, 110, 110, 900,
	600, 110, 600, 160, 160, 200, 110, 160, 165, 190, 160, 170, 120, 165, 260,
	200, 140, 200, 260, 120, 200, 200, 600, 190, 200, 200, 200, 160, 165, 110
};
new lspdcar[19], fbicar[9], armycar[20], medicscar[6], lsnewscar[5];
new ballascar[11], vagoscar[12], aztecacar[11], grovecar[11], rifacar[9], bikercar[12];
new lcncar[11], yakuzacar[11], rmcar[8];

enum MainZone
{
    Zone_Name[28],
    Float:Zone_Area[6]
}
static const SanAndreasZones[][MainZone] =
{
    {"The Big Ear",                 {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
    {"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
    {"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
    {"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
    {"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
    {"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
    {"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
    {"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
    {"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
    {"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
    {"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
    {"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
    {"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
    {"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
    {"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
    {"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
    {"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
    {"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
    {"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
    {"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
    {"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
    {"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
    {"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
    {"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
    {"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
    {"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
    {"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
    {"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
    {"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
    {"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
    {"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
    {"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
    {"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
    {"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
    {"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
    {"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
    {"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
    {"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
    {"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
    {"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
    {"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
    {"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
    {"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
    {"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
    {"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
    {"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
    {"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
    {"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
    {"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
    {"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
    {"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
    {"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
    {"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
    {"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
    {"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
    {"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
    {"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
    {"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
    {"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
    {"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
    {"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
    {"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
    {"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
    {"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
    {"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
    {"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
    {"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
    {"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
    {"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
    {"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
    {"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
    {"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
    {"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
    {"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
    {"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
    {"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
    {"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
    {"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
    {"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
    {"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
    {"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
    {"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
    {"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
    {"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
    {"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
    {"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
    {"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
    {"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
    {"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
    {"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
    {"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
    {"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
    {"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
    {"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
    {"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
    {"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
    {"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
    {"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
    {"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
    {"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
    {"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
    {"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
    {"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
    {"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
    {"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
    {"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
    {"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
    {"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
    {"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
    {"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
    {"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
    {"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
    {"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
    {"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
    {"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
    {"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
    {"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
    {"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
    {"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
    {"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
    {"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
    {"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
    {"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
    {"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
    {"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
    {"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
    {"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
    {"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
    {"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
    {"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
    {"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
    {"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
    {"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
    {"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
    {"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
    {"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
    {"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
    {"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
    {"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
    {"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
    {"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
    {"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
    {"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
    {"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
    {"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
    {"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
    {"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
    {"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
    {"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
    {"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
    {"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
    {"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
    {"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
    {"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
    {"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
    {"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
    {"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
    {"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
    {"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
    {"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
    {"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
    {"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
    {"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
    {"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
    {"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
    {"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
    {"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
    {"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
    {"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
    {"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
    {"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
    {"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
    {"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
    {"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
    {"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
    {"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
    {"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
    {"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
    {"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
    {"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
    {"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
    {"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
    {"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
    {"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
    {"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
    {"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
    {"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
    {"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
    {"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
    {"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
    {"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
    {"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
    {"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
    {"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
    {"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
    {"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
    {"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
    {"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
    {"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
    {"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
    {"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
    {"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
    {"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
    {"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
    {"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
    {"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
    {"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
    {"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
    {"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
    {"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
    {"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
    {"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
    {"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
    {"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
    {"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
    {"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
    {"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
    {"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
    {"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
    {"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
    {"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
    {"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
    {"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
    {"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
    {"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
    {"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
    {"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
    {"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
    {"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
    {"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
    {"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
    {"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
    {"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
    {"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
    {"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
    {"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
    {"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
    {"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
    {"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
    {"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
    {"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
    {"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
    {"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
    {"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
    {"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
    {"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
    {"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
    {"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
    {"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
    {"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
    {"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
    {"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
    {"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
    {"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
    {"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
    {"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
    {"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
    {"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
    {"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
    {"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
    {"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
    {"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
    {"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
    {"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
    {"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
    {"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
    {"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
    {"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
    {"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
    {"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
    {"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
    {"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
    {"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
    {"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
    {"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
    {"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
    {"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
    {"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
    {"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
    {"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
    {"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
    {"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
    {"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
    {"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
    {"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
    {"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
    {"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
    {"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
    {"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
    {"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
    {"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
    {"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
    {"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
    {"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
    {"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
    {"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
    {"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
    {"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
    {"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
    {"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
    {"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
    {"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
    {"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
    {"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
    {"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
    {"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
    {"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
    {"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
    {"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
    {"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
    {"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
    {"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
    {"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
    {"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
    {"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
    {"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
    {"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
    {"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
    {"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
    {"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
    {"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
    {"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
    {"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
    {"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
    {"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
    {"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
    {"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
    {"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
    {"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
    {"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
    {"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
    {"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
    {"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
    {"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
    {"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
    {"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
    {"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
    {"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
    {"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
    {"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
    {"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
    {"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
    {"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
    {"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
    {"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
    {"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
    {"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
    {"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
    {"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
    {"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
    {"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
    {"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
    {"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
    {"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
    {"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
    {"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
    {"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
    {"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
    {"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
    {"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
    {"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
    {"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
    {"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
    {"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
    {"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

/* ========================== << [ Variables ] >> =========================== */
new MySQL: connect;
new tmpobjid, fso_map;
new freshTimer;
new minutetimer;
new salontimer;
new ghour = 0;
new timeshift = 0;
new shifthour;
new realtime = 1;
new parashuti;
new ipchanger = 0;
new ticktime = 0;
new hospitalHP;
new marexit;
new marenter;
new pasportEx;
new houseSales;
new bankPic[2];
new gunPic[2];
new armyalarmtime;
new meriajobs;
new merialicenses;
new piarmessage;
new miwera;
new PoliceGate;
new RepairPrice = 1000;
new vipchat = true;

new WrongPassword[MAX_PLAYERS];
new LoginTime[MAX_PLAYERS];
new DelayPickup[MAX_PLAYERS];
new DelayChat[MAX_PLAYERS];
new DelayKey[MAX_PLAYERS];
new DelayCMD[MAX_PLAYERS];
new DelayAD[MAX_PLAYERS];
new DelayClick[MAX_PLAYERS];
new gCheckpoint[MAX_PLAYERS];
new gBigEar[MAX_PLAYERS];
new gotome[MAX_PLAYERS];
new PlayedTime[MAX_PLAYERS];
new FreeHouses[MAX_PLAYERS][20];
new WantedTime[MAX_PLAYERS];
new prox_Country[MAX_PLAYERS][32];
new prox_City[MAX_PLAYERS][32];
new PhoneOnline[MAX_PLAYERS];
new SpyPlayerID[MAX_PLAYERS];
new eAddict[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new itemslist[MAX_PLAYERS][MAX_ITEMS];
new TD_Fixer_gz[MAX_PLAYERS];
new Has_Player_Entered_Pin[MAX_PLAYERS];

// string variables
new qwerty228[1500];
new log_str[300];
new randomcode32[32][] = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "2", "3", "4", "5", "6", "7"};
new SmileText[][] = {"dd", "ddd", "dddd", "ddddd", ":d", ":dd", ":ddd", ":dddd", ":D", ":DD", ":DDD", ":DDDD", "D:", ":)", "(:", ":))", ":)))", "((:"};
new CensorText[][] = {"yle", "ylee", "Yle", "Ylee", "kle", "klee", "Kle", "Klee", "yleo", "Yleo", "kleo", "nabozar", "nabozari", "nabozaro", "nabozaroo", "Nabozari", "Nabozaro", "navichari", "Nabichvari", "Muteli", "muteli", "mutelo", "Muteli", "naxui", "Naxui", "idi naxui", "siri", "Siri", "movtkan", "Movtkan", "movtyan", "Movtyan", "MOVTKAN", "MOVTYAN", "prochi", "Prochi", "prowi", "Prowi", "PROCHI", "PROWI"};
new developerName[][] =
{
	"Jax_Teller",
    "Levan_Bedinashvili",
	"Aleksandre_Kinkladze",
	"Jack_Ximenez"
};
/* ========================= << [ TOP Stocks ] >> =========================== */
stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
forward Float:GetDistanceBetweenPoints(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2);
stock Float:GetDistanceBetweenPoints(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2)
{
    x1 -= x2;
    y1 -= y2;
    z1 -= z2;
    return floatsqroot((x1 * x1) + (y1 * y1) + (z1 * z1));
}
stock GetMafiaName(fnumbwer)
{
	new string[25];
	switch(fnumbwer)
	{
		case FRACTION_LCN: format(string,sizeof(string), "La Cosa Nostra");
		case FRACTION_YAKUZA: format(string,sizeof(string), "Yakudza");
		case FRACTION_RM: format(string,sizeof(string), "Russian Mafia");
	}
	return string;
}
stock GetMafiaNamec(fnumbwer)
{
	new string[25];
	switch(fnumbwer)
	{
		case FRACTION_LCN: format(string,sizeof(string), "{EAB921}La Cosa Nostra");
		case FRACTION_YAKUZA: format(string,sizeof(string), "{ED0000}Yakuza");
		case FRACTION_RM: format(string,sizeof(string), "{B2B1B1}Russian Mafia");
	}
	return string;
}
stock ClearTotalMz()
{
	mafiakv[0] = 0;
	mafiakv[1] = 0;
	mafiakv[2] = 0;
	mafiakv[3] = 0;
}
stock MaffiaTextUPDATE()
{
    ClearTotalMz();
    for(new i =0;i<sizeof(McInfo);i++)
	{
		if(McInfo[i][FrakVlad] == FRACTION_LCN) mafiakv[0]++;
		if(McInfo[i][FrakVlad] == FRACTION_YAKUZA) mafiakv[1]++;
		if(McInfo[i][FrakVlad] == FRACTION_RM) mafiakv[2]++;
	}
	new TextUPT[260];
	format(TextUPT,sizeof(TextUPT),"{63BD4E}La Cosa Nostra\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d", mafiakv[0]);
	Update3DTextLabelText(MaffiaText[0],0xFF8080FF,TextUPT);
	format(TextUPT,sizeof(TextUPT),"{63BD4E}Yakuza\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d", mafiakv[1]);
	Update3DTextLabelText(MaffiaText[1],0xFF8080FF,TextUPT);
	format(TextUPT,sizeof(TextUPT),"{63BD4E}Russian Maffia\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d", mafiakv[2]);
	Update3DTextLabelText(MaffiaText[2],0xFF8080FF,TextUPT);
	return true;
}
stock SetPlayerAttachedObjectEx(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0, materialcolor1 = 0, materialcolor2 = 0)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, index)) RemovePlayerAttachedObjectEx(playerid, index);
    InvData[playerid][i_UsedItems][index] = modelid;
    if(InvData[playerid][i_Opened])
    {
        new i = index;
    	PlayerTextDrawSetPreviewRot(playerid, UsedItems_PTD[playerid][i], GetItemRot(InvData[playerid][i_UsedItems][i], 0), GetItemRot(InvData[playerid][i_UsedItems][i], 1), GetItemRot(InvData[playerid][i_UsedItems][i], 2), GetItemRot(InvData[playerid][i_UsedItems][i], 3));
        PlayerTextDrawSetPreviewModel(playerid, UsedItems_PTD[playerid][index], InvData[playerid][i_UsedItems][index]);
		PlayerTextDrawHide(playerid, UsedItems_PTD[playerid][index]);
		PlayerTextDrawShow(playerid, UsedItems_PTD[playerid][index]);
    }
	return SetPlayerAttachedObject(playerid, index, modelid, bone, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ, materialcolor1, materialcolor2);
}
stock RemovePlayerAttachedObjectEx(playerid, index)
{
	InvData[playerid][i_UsedItems][index] = 19382;
 	if(InvData[playerid][i_Opened])
    {
        PlayerTextDrawSetPreviewModel(playerid, UsedItems_PTD[playerid][index], InvData[playerid][i_UsedItems][index]);
		PlayerTextDrawHide(playerid, UsedItems_PTD[playerid][index]);
		PlayerTextDrawShow(playerid, UsedItems_PTD[playerid][index]);
    }
    return RemovePlayerAttachedObject(playerid, index);
}
stock Float:RandomFloat(Float:min, Float:max = 0.0, dp = 2)
{
    new Float:mul = floatpower(10.0, float(dp));
    switch (dp)
    {
        case 0: mul = 1.0;
        case 1: mul = 10.0;
        case 2: mul = 100.0;
        case 3: mul = 1000.0;
        default: mul = floatpower(10.0, float(dp));
    }
    if (max != max)
    {
        if (min < 0.0)
            return -(float(random(floatround(-min * mul))) / mul);
        return float(random(floatround(min * mul))) / mul;
    }
    // Parameters are the wrong way around - do it anyway.
    if (max < min)
        return float(random(floatround(min * mul - max * mul))) / mul + max;
    // NOT a silly check - "IsNaN".
    return float(random(floatround(max * mul - min * mul))) / mul + min;
}

/* ============================ << [ Main ] >> ============================== */
main () {
    print("- "SERVER_SHORT_NAME" ...");
	printf("Number of objects count: %d",CountDynamicObjects());
	printf("Number of pickups count: %d",CountDynamicPickups());
}
/*public OnCefInitialize(player_id, success)
{
	if(GetLauncherStatus(player_id))
	{
        if (success == 1)
		{
    		cef_create_browser(player_id, 1, "https://genuine-rp.ge/interface/index.html", false, false);
      		cef_subscribe("grp:hud", "CefInterface");
    		cef_always_listen_keys(player_id, 1, bool:KEY_YES);
			cef_hide_browser(player_id, 1, true);
			cef_focus_browser(player_id, 1, false);
			print("connected");
			return;
		}
		else {
			print("not connected");
		}
	}
}*/
//----------------------- [ Launcher Skin System ] --------------------------------//
function SpawnPlayerTimer(playerid)
{
	SpawnPlayer(playerid);
}
stock SpawnPlayerNew(playerid)
{
	new skinid = GetPlayerSkin(playerid);
	if(PlayerInfo[playerid][pMember] != 0)
	{
	    if(PlayerInfo[playerid][pForm] == 0) skinid = PlayerInfo[playerid][pSkin];
		else skinid = PlayerInfo[playerid][pModel];
	}
	else if(PlayerInfo[playerid][pMember] == 0) skinid = PlayerInfo[playerid][pSkin];
	if(GetPVarInt(playerid, "ReconSkin") == 0) skinid = GetPVarInt(playerid, "ReconSkin");
	//if(skinid == 0 || skinid == 74) skinid = 23;
	SetPVarInt(playerid, "LauncherSkin", skinid);
	SetTimerEx("SkinRestore", 500, false, "i", playerid);
	SetPlayerSkin(playerid, 0);
	return SetTimerEx("SpawnPlayerTimer", 100, false, "i", playerid);
}
#if defined _ALS_SpawnPlayer
#undef SpawnPlayer
#else
#define _ALS_SpawnPlayer
#endif
#define SpawnPlayer SpawnPlayerNew
function SkinRestore(playerid)
{
	new skinid = GetPlayerSkin(playerid);
	if(PlayerInfo[playerid][pMember] != 0)
	{
	    if(PlayerInfo[playerid][pForm] == 0) skinid = PlayerInfo[playerid][pSkin];
		else skinid = PlayerInfo[playerid][pModel];
	}
	else if(PlayerInfo[playerid][pMember] == 0) skinid = PlayerInfo[playerid][pSkin];
	SetPVarInt(playerid, "LauncherSkin", skinid);
	SetPlayerSkin(playerid, GetPVarInt(playerid, "LauncherSkin"));
}
/* =========================== << [ Publics ] >> ============================ */
public OnGameModeInit()
{
    ticktime = GetTickCount();
	cef_subscribe("grp:hud", "CefInterface");
    // Server Configuration
    SendRconCommand("hostname "SERVER_FULL_NAME);
    SendRconCommand("language "SERVER_LANGUAGE);
    SendRconCommand("weburl "SERVER_WEBURL);
    SetGameModeText(SERVER_MODETEXT);
    #if SERVER_PASSWORD_MODE == true
        SendRconCommand("password "SERVER_PASSWORD);
    #endif
    SendRconCommand("password arshexvide");

    if(IsCrashDetectPresent())
    {
        DisableCrashDetectLongCall();
		//SetCrashDetectLongCallTime
    }

    // MySQL
    MySQL_Active();

    // Loading
    gLoadTextDraws();
    LoadInteractions();
    LoadAllObject();
    LoadPickups();
    LoadTextLabels();
    LoadVehicles();
    LoadMapIcons();
    LoadDemorgan();
    LoadMZ();
    LoadFarm();
    LoadSettings();
    LoadDrugObj();
    LoadGZ();
    AntiDeAMX();
    //ClearReconnect();
    ResetJetX();
    ResetFightData();
    LoadContainers();

	StopAnimationTD = TextDrawCreate(401.00, 419.00, "~w~Press ~g~ENTER ~w~To Stop Animation");
	TextDrawBackgroundColor(StopAnimationTD, 0x000000FF);
	TextDrawFont(StopAnimationTD, 2);
	TextDrawSetOutline(StopAnimationTD, 1);
	TextDrawLetterSize(StopAnimationTD, 0.300000, 1.250000);
	TextDrawColor(StopAnimationTD, 0x0095B6FF);
	TextDrawSetProportional(StopAnimationTD, 1);

    Accessorie_Selection = LoadModelSelectionMenu("acces.txt");
    //MapAndreas_Init(MAP_ANDREAS_MODE_FULL /*, "scriptfiles/SAFull.hmap"*/ );

    for(new i = 0; i < MAX_ELECTIONS; i ++)
	{
		format(ElectionInfo[i][eName], 24, "None");
		format(ElectionInfo[i][eParty], 24, "None");
    	ElectionInfo[i][eNumber] = 0;
	}
    /* ====================================================================== */
    ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED); //PLAYER_MARKERS_MODE_STREAMED
    DisableInteriorEnterExits();
    EnableVehicleFriendlyFire();
	ManualVehicleEngineAndLights();
    AllowInteriorWeapons(1);
	ShowNameTags(1);
    EnableStuntBonusForAll(0);
    SetVehiclePassengerDamage(true);
    SetDisableSyncBugs(true);
    SetRespawnTime(2000);
    SetNameTagDrawDistance(31.0);
   	Streamer_TickRate(100);
	Streamer_VisibleItems(0, 2500);
   	LimitPlayerMarkerRadius(15.0);
   	//LimitGlobalChatRadius(15.0);
    /* ====================================================================== */
    if(realtime)
    {
        new gminute, gsecond;
        gettime(ghour, gminute, gsecond);
        FixHour(ghour);
        ghour = shifthour;
        SetWorldTime(shifthour);
    }
    EventInfo[event_On] = false;
 	for(new i = 0; i < MAX_REPORT; i ++)
    {
        DeleteReport(i);
   	}
    /* ====================================================================== */
    freshTimer = SetTimer("FreshTime", 1000, true); 		// [1.0] sec
    minutetimer = SetTimer("MinuteTimer", UPDATE_INTERVAL, true);
    salontimer = SetTimer("SalonTimer", 3600000, true);
    SetTimer("OptimizeLoad", 3000, false); 					// [3.0] sec | not a loop
    /* ====================================================================== */
    AddPlayerClass(230, 1958.33, 1343.12, 15.36, 269.15, 0, 0, 0, 0, 0, 0);
    /* ====================================================================== */
    AStream = SvCreateGStream(0x82e0aaFF, "Admin Chat");
    for(new i = 0; i < MAX_FRACTIONS; i ++)
	{
		FractionWalkie[i] = SvCreateGStream(0x85A57Bff, "Racia Chat");
	}
	ShaftArea[0] = CreateDynamicSphere(1262.2584, -1244.5692, 17.0281, 2.5);
	ShaftArea[1] = CreateDynamicSphere(1260.7750, -1233.3258, 16.2463, 2.5);
	ShaftArea[2] = CreateDynamicSphere(1253.9120, -1240.0854, 17.8593, 3.5);
	/* ========================= << [ 3DTextLabel ] >> ========================== */
	GhettoText[0] = Create3DTextLabel("_", 0x36A8CFAA, 321.1270,1117.0868,1083.8828, 10.0, FractionInfo[FRACTION_BALLAS][frac_VirtualWorld], 1);
	GhettoText[1] = Create3DTextLabel("_", 0x36A8CFAA, 321.1270,1117.0868,1083.8828, 10.0, FractionInfo[FRACTION_VAGOS][frac_VirtualWorld], 1);
	GhettoText[2] = Create3DTextLabel("_", 0x36A8CFAA, 321.1270,1117.0868,1083.8828, 10.0, FractionInfo[FRACTION_GROVE][frac_VirtualWorld], 1);
	GhettoText[3] = Create3DTextLabel("_", 0x36A8CFAA, 321.1270,1117.0868,1083.8828, 10.0, FractionInfo[FRACTION_AZTEC][frac_VirtualWorld], 1);
	GhettoText[4] = Create3DTextLabel("_", 0x36A8CFAA, 321.1270,1117.0868,1083.8828, 10.0, FractionInfo[FRACTION_RIFA][frac_VirtualWorld], 1);
	
    MaffiaText[0] = Create3DTextLabel("_", 0x36A8CFAA, -45.4528,1410.7362,1084.4297, 10.0, FractionInfo[FRACTION_LCN][frac_VirtualWorld], 1);
	MaffiaText[1] = Create3DTextLabel("_", 0x36A8CFAA, -45.4528,1410.7362,1084.4297, 10.0, FractionInfo[FRACTION_YAKUZA][frac_VirtualWorld], 1);
	MaffiaText[2] = Create3DTextLabel("_", 0x36A8CFAA, -45.4528,1410.7362,1084.4297, 10.0, FractionInfo[FRACTION_RM][frac_VirtualWorld], 1);
	meriajobs = CreateDynamicCP(1399.4141, -41.4295, 1000.9170, 1.2, -1, -1, -1, 25.0);//CityHall Jobs
	CreateDynamic3DTextLabel("{ffffff}Samushao Vakansiebi", COLOR_WHITE, 358.7862, 183.6372, 1008.3828, 10.0);
	CreateDynamic3DTextLabel("{FFFFFF}Press - {4FB64F}'ALT'", COLOR_WHITE, 686.4847, -1609.5450, 14.5957, 10.0);
	CreateDynamic3DTextLabel("{ffffff}/fight [Motamashis ID]", COLOR_WHITE, 765.1197, 11.2571, 1000.7075, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 35);
	Create3DTextLabel("{FFFFFF}Press - {4FB64F}ALT", 0xFF0000FF,1169.9048,-1329.8494,1221.6130,10.3, 3, 3);
	Create3DTextLabel("{FFFFFF}Type - {4FB64F}'/buygun'", 0xFF0000FF,-719.8036,1461.2598,-90.5046,15.3, 3, 3);
	//Create3DTextLabel("{FFFFFF}Press - {4FB64F}'ALT'", 0xFF0000FF,1216.6095,1344.2372,3011.0005, 3.0, 1);
	CreateDynamic3DTextLabel("{FFFFFF}Press - {4FB64F}'ALT'", COLOR_WHITE, 1216.6095, 1344.2372, 3011.0005, 4.0);
	CreateDynamic3DTextLabel("{FFFFFF}Press - {4FB64F}'ALT'", COLOR_WHITE, 1224.5875, 1351.0205, 3011.0005, 4.0);
	CreateDynamic3DTextLabel("{FFFFFF}Press - {4FB64F}'ALT'", COLOR_WHITE, 1226.9658, 1351.4828, 3011.0005, 4.0);
	CreateDynamic3DTextLabel("{FFFFFF}Press - {4FB64F}'H'", COLOR_WHITE, TUNE_ENTER_POSITION, 7.0);
    /* ====================================================================== */
    return 1;
}
public OnGameModeExit()
{
    KillTimer(freshTimer);
    KillTimer(minutetimer);
    KillTimer(salontimer);
    SaveGZ();
    SvDeleteStream(AStream);
    for(new i = 0; i < MAX_FRACTIONS; i ++) if(FractionWalkie[i]) SvDeleteStream(FractionWalkie[i]);
    MySQL_Deactive();
    return 1;
}
public OnPlayerConnect(playerid)
{
    if(IsPlayerNPC(playerid)) return false;
	sendclear(playerid, IsPlayerMobile(playerid)?16:32);

    new strIP[30], bewstr[300];
    GetPlayerIp(playerid, strIP, sizeof(strIP));
    if(is_player_nabozari(strIP)) return SendClientMessage(playerid, -1, "Tkven Ver Shemoxvalt Serverze"), Kick(playerid);
    if(!!strcmp(strIP, "127.0.0.1"))
    {
        format(bewstr, sizeof(bewstr),"api.ipinfodb.com/v3/ip-country/?key=d3da1359c7bffdaa648ffec2a09e981fa5e3e6d1f2aab35b13c6a48f2340d9b0&ip=%s", strIP);
        HTTP(playerid, HTTP_GET, bewstr, "", "GetPlayerCountry");
    }

	SendClientMessage(playerid, 0xEA5151AA, "» {FFFFFF}Tkven Shemobrdzandit Serverze - {EA5151}'"SERVER_SHORT_NAME"'");//E37F8D
    SendClientMessage(playerid, 0xEA5151AA, "» {FFFFFF}Sasiamovno Gartobas Gisurvebt - {EA5151}G:RP Development Team");//E37F8D
    
    if (SvGetVersion(playerid) == SV_NULL)
    {
        SendClientMessage(playerid, 0xF0A45DFF, "[Voice] - {ffffff}Tkven Ar Gikeniat Voice Chat");
    }
    else if (SvHasMicro(playerid) == SV_FALSE)
    {
        SendClientMessage(playerid, 0xF0A45DFF, "[Voice] - {ffffff}Tkven Ar Gakvt Sheertebuli Mikrofoni");
    }
    else if ((LStream[playerid] = SvCreateDLStreamAtPlayer(15.0, SV_INFINITY, playerid, 0x85c1e9FF, "IC")))
    {
        SendClientMessage(playerid, 0xF0A45DFF, "[Voice] - {ffffff}Voice Chat Gaaktiurda | {ff0000}Press [ Z ] ");
		SvAddKey(playerid, 0x5A); // Z
		SvAddKey(playerid, 0x42); // B
		SvAddKey(playerid, 0x58); // X
	}
    //
	new version[24];
	GetPlayerVersion(playerid, version, sizeof(version));
    if(GetString(version, LAUNCHER_VERSION)) SetLauncherStatus(playerid, true);
    else SetLauncherStatus(playerid, false);
  	if(GetLauncherStatus(playerid))
	{
     	SendClientMessage(playerid, COLOR_WHITE, "");
	    SendClientMessage(playerid, 0x3399FFAA, "--------------------------------------------------------------------------------------------");
		SendClientMessage(playerid, COLOR_WHITE, "» {369B5A}Tkven Shemoxvedit Serverze {EA5151}Genuine Project {369B5A}Officialuri Launcher'it");
		SendClientMessage(playerid, COLOR_WHITE, "» {369B5A}Tkven Gagiaktiurdat Launcher Bonus - {EA5151}2x EXP Jobs & Payday");
		SendClientMessage(playerid, 0x3399FFAA, "--------------------------------------------------------------------------------------------");
		SendClientMessage(playerid, COLOR_WHITE, "");
		EnableHealthBarForPlayer(playerid, false);
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "» {369B5A}Tkven Ar Giweriat G:RP Launcher {FFFFFF}- Mis Chasawerad Ewviet Youtube : "color_admin"Genuine Project");
		for(new i = sizeof(logo_TD)-1; i > -1; i --) TextDrawShowForPlayer(playerid, logo_TD[i]);
		LoadGiftTD(playerid);
	}
	ResetPlayerData(playerid);
 	ResetInventoryData(playerid);
    SetPlayerColor(playerid, COLOR_NONE);
	for(new i = 0; i < 130; i++)
	{
		GangZoneShowForPlayer(playerid,GZInfo[i][gID],GetGangZoneColor(i));
		if(i<30) GangZoneShowForPlayer(playerid,McInfo[i][ID],GetMafiaZoneColor(i));
	}
    return 1;
}
public OnIncomingConnection(playerid, ip_address[], port)
{
   	if(GetMaxPlayerOnIP(ip_address) > 4)
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "<warning> Kicked By Anti Bot !");
	    ACKick(playerid, "012", "Anti Bot");
	    return true;
	}
    return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
	/* ==================== << [ Last Position Save ] >> ==================== */
	if(IsPlayerSpawned(playerid) && isLogged[playerid])
	{
		GetPlayerPos(playerid, PlayerInfo[playerid][pLastPos][0], PlayerInfo[playerid][pLastPos][1], PlayerInfo[playerid][pLastPos][2]);
	    PlayerInfo[playerid][pLastVirtualWorld] = GetPlayerVirtualWorld(playerid);
	    PlayerInfo[playerid][pLastInterior] = GetPlayerInterior(playerid);
	    PlayerUpdateDataFloat(playerid, "pLastPosX", PlayerInfo[playerid][pLastPos][0]);
	    PlayerUpdateDataFloat(playerid, "pLastPosY", PlayerInfo[playerid][pLastPos][1]);
	    PlayerUpdateDataFloat(playerid, "pLastPosZ", PlayerInfo[playerid][pLastPos][2]);
	    PlayerUpdateData(playerid, "pLastInterior", PlayerInfo[playerid][pLastInterior]);
	    PlayerUpdateData(playerid, "pLastVirtualWorld", PlayerInfo[playerid][pLastVirtualWorld]);
    }
    SavePlayerData(playerid);

	if(isAlogged[playerid] && AStream)
	{
		SvDetachListenerFromStream(AStream, playerid);
	}
	if(jobID[playerid] != JOB_NONE && jobCash[playerid] > 0)
	{
		PlayerInfo[playerid][pCashAmount] = jobCash[playerid]*Boost2X;
		PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
		format(log_str, sizeof(log_str), "%s'm(a) Morcha Samushaos Da Gamoimushava: %d$", Name(playerid), jobCash[playerid]*Boost2X);
	   	CreateLog("Money", log_str);
	}
	IphoneON[playerid] = false;
	for(new k; k != 11; k++) PlayerTextDrawDestroy(playerid, MaffiaTXT[playerid][k]);
	foreach(new i:Player)
	{
	    if(ReconInfo[i][rec_Player] == playerid)
	    {
	        StopSpectate(i, 2);
	    }
        if(gotome[i] == playerid)
	    {
	        gotome[i] = -1;
		}
		if(TaxiPassenger[i] == playerid)
		{
			gCheckpoint[i] = CHECKPOINT_NONE;
			TaxiPassenger[i] = -1;
			DisablePlayerCheckpoint(i);
            SendClientMessage(i, 0x8099B5FF, "[Dispatcher]{ECECEC} Tkvenma Mgzavrma Datova Serveri");
		}
		if(FightOpponent[i] == playerid)
		{
			format(gstr, sizeof(gstr), "[Fight]:{ffffff} Brdzola Moigo {EC7063}%s'm(a)",Name(i));
			SendNearText(i, gstr, 15.0, 0xEC7063FF);
			SendClientMessage(i, 0xEC7063FF, "[Fight]:{ffffff} Motamashem Datova Serveri");
			GameTextForPlayer(i, "~r~player disconnected", 3000, 4);
			ResetFightData();
		}
	}
	new stolid = GetPVarInt(playerid,"GameStol");
	if(stolid != 88)
	{
	    new g = KazinoDuty[playerid];
		TextDrawHideForPlayer(playerid,KostiBox[stolid]);
   		TextDrawHideForPlayer(playerid,TableName[stolid]);
   		TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
   		TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
   		TextDrawHideForPlayer(playerid,KostiKeyExit);
   		TextDrawHideForPlayer(playerid,KostiKeyDone);
   		TextDrawHideForPlayer(playerid,KostiKeyStavka);
   		SetPVarInt(playerid,"GameStol",88);
   		SetPVarInt(playerid,"StolReg",88);
   		TogglePlayerControllable(playerid,1);
   		CancelSelectTextDraw(playerid);
   		DelName(playerid,stolid);
   		SetPVarInt(playerid,"Ochki",88);
     	if(g > 0) SetTimerEx("NullStol",30000, false, "i", stolid), StolInfo[stolid][Stavka] = 0;
	}
    //if(isLogged[playerid]) strmid(ExitInfo[playerid][ExitName],Name(playerid), 0, strlen(Name(playerid)), 32), ExitInfo[playerid][ExitTime] = GetTickCount();
    if(PlayerInfo[playerid][pAdmin] && isAlogged[playerid])
    {
        new string[100];
        format(string, sizeof(string), "<ALogin> %s Gavida | Level %d",Name(playerid),PlayerInfo[playerid][pAdmin]);
        SendAdminMessage(0xF4B800AA, string);
    }
   	if(IsPlayerCuffed[playerid])
	{
	    PlayerInfo[playerid][pPrison] = 1;
	    PlayerUpdateData(playerid, "pPrison", PlayerInfo[playerid][pPrison]);
		PlayerInfo[playerid][pPrisonTime] = 60*60;
		PlayerUpdateData(playerid, "pPrisonTime", PlayerInfo[playerid][pPrisonTime]);
		PlayerInfo[playerid][pWanted] = 0;
		PlayerUpdateData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
		SetPlayerWantedLevelEx(playerid);
		new cufstr[256];
		format(cufstr, sizeof(cufstr), "[Disconnect] Motamashe {ffffff}%s {FF6347}Avtomaturad Chajda Cixeshi {ffffff}1 Saatit{FF6347} Mizezi {ffffff}Borkileb Dadebuli Gavida Serveridan!", Name(playerid));
    	SendClientMessageToAll(COLOR_LIGHTRED, cufstr);
	}
    if(RentCarID[playerid] != -1)
    {
        DestroyVehicle(RentCarID[playerid]);
        RentCarID[playerid] = -1;
    }
    if(caridhouse[playerid] != -1)
    {
        RemoveVehicleTune(playerid, caridhouse[playerid]);
        DestroyVehicle(caridhouse[playerid]);
        caridhouse[playerid] = -1;
    }
    if(AutoSchoolCar[playerid] != -1)
    {
        SetVehicleToRespawn(AutoSchoolCar[playerid]);
        SetVehicleHealth(AutoSchoolCar[playerid], 999);
        RepairVehicle(AutoSchoolCar[playerid]);
        AutoSchoolCar[playerid] = -1;
    }
    if (LStream[playerid])
	{
		SvDeleteStream(LStream[playerid]);
		LStream[playerid] = SV_NULL;
	}
    if(Speedometer_Timer[playerid] != -1)
    {
        EndSpeedometer(playerid);
    }
 	if(GetPVarInt(playerid,"block"))
 	{
		if(ObjectShip[playerid] != FLOAT_INFINITY)
		{
			DestroyDynamicObject(ObjectShip[playerid]);
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DestroyDynamic3DTextLabel(ShipText[playerid]);
	}
	if(KnockText[playerid] != Text3D:INVALID_3DTEXT_ID)
	{
	    Delete3DTextLabel(KnockText[playerid]);
	    KnockText[playerid] = Text3D:INVALID_3DTEXT_ID;
	}
	if(BoomBoxID[playerid] != -1)
	{
		DestroyBoomBox(BoomBoxID[playerid]);
		BoomBoxID[playerid] = -1;
	}
	if(Aigotvirti[playerid] == true)
	{
	    TrailerLimit -= 1;
	}
	if(ContainerCar[playerid] != -1)
	{
	    DestroyVehicle(ContainerCar[playerid]);
	    ContainerCar[playerid] = -1;
	}
	if(ContainerObject[playerid] != -1)
	{
		DestroyDynamicObject(ContainerObject[playerid]);
		ContainerObject[playerid] = -1;
	}
   	for(new i = 0; i < 53; i++)
	{
		EnableAntiCheatForPlayer(playerid, i, 1);
		if(i < MAX_REPORT)
	    {
	        DeleteReport(i, true);
	        RenewReport(i);
	    }
	}
	isPlayerActive[playerid] = false;
    isLogged[playerid] = false;
    SetString(myNumber[playerid], "-");
    SetString(PlayerInfo[playerid][Name], "...");
    ResetPlayerData(playerid);
    return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid)) return true;
	new ip[16];
	GetPlayerIp(playerid, ip, 16);
	/* ---------------------------------------------------------------------- */
	new ping;
    if((ping = GetPlayerPing(playerid)) && (ping > 5000))
    {
        BlockIpAddress(ip, ping+1024);
  		Kick(playerid);
  		SendClientMessage(playerid, -1, "!!!");
  		return true;
    }
	/* ---------------------------------------------------------------------- */
	new hgh[156];
	format(hgh, sizeof(hgh), "SELECT * FROM `banip` WHERE IP = '%s'",ip);
	mysql_tquery(connect, hgh, "CheckBanIP", "i", playerid);
	/* ---------------------------------------------------------------------- */
    if(isLogged[playerid]) return true;
    ResetPlayerData(playerid);
    SetPlayerVirtualWorld(playerid, playerid+77);
    SetPlayerInterior(playerid, 0);
    TogglePlayerControllable(playerid, false);
    new query[128];
    format(query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE Name = '%s'", Name(playerid));
    mysql_tquery(connect, query, "SearchForAccount", "i", playerid);
    /* ---------------------------------------------------------------------- */
   	GetPlayerIp(playerid, player_geoInfo[playerid][player_ip], GEO_MAX_IP_LENGTH);
    new request[31 - 2 + GEO_MAX_IP_LENGTH];
    strcat(request, GEO_IP_INFO_DETECT_URL);
    strcat(request, player_geoInfo[playerid][player_ip]);
    strcat(request, GEO_IP_INFO_DETECT_URL_FIELDS);
    //HTTP(playerid, HTTP_GET, request, "", "p_proxy_check");
    return 1;
}
public OnPlayerRequestSpawn(playerid)
{
    if(!isLogged[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
   	if(GetPlayerSkin(playerid) == 0 && GetPlayerScore(playerid) == 0)
	{
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
	}
    return 1;
}
public OnPlayerSpawn(playerid)
{
    if(GetPlayerScore(playerid) == 0 && GetPlayerSkin(playerid) == 74 || PlayerInfo[playerid][pLevel] == 0 && GetPlayerSkin(playerid) == 0)
	{
	    format(YCMDstr, sizeof(YCMDstr), "{FF9900}[ANTITROLL] {FFFFFF}Motamashe {FF9900}%s {FFFFFF}Gaikicka, | Reason: {FF9900}0 Score Move",Name(playerid));
	    SendAdminMessage(COLOR_WHITE,YCMDstr);
	    Kick(playerid);
	    printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [0 Score Move]", Name(playerid));
	}
    if(!isLogged[playerid] || isProceted[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
    SetPlayerSpawn(playerid);
    DisplayTime(playerid);
   	if(TrailerJob[playerid] == true && TvirtisSaxeoba[playerid] == 1)
    {
        TvirtisSaxeoba[playerid] = 0;
        Aigotvirti[playerid] = false;
    	DisablePlayerCheckpoint(playerid);
        sendinfo(playerid, "Tqven Agar Gadagaqvt Tvirti!");
       	ShowPlayerDialog(playerid,INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "","","","");
       	TrailerLimit -= 1;
    }
   	if(GetPlayerSkin(playerid) == 0 && GetPlayerScore(playerid) == 0)
	{
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
	}
	format(myNumber[playerid], 16, "%s", PlayerInfo[playerid][pNumber]);
    return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    if(!isLogged[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
    FixLauncherSkin(playerid, 1900);
    SetPVarInt(playerid,"AFK_Time",0);
    EnterBizz[playerid] = -1;
    if(maskOn[playerid])
    {
        PlayerInfo[playerid][pMask] = 0;
        PlayerUpdateData(playerid, "pMask", PlayerInfo[playerid][pMask]);
    }
    new string[100];
    if(killerid != INVALID_PLAYER_ID)
    {
		for(new i =0;i<sizeof(McInfo);i++)
		{
			if(ZoneOnMBattle[i] == 1)
			{
			    if(PlayerInfo[killerid][pMember] == McInfo[i][Napad] && PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember] ||
			    PlayerInfo[killerid][pMember] == McInfo[i][FrakVlad] && PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
			    {
					if(PlayerInfo[playerid][pMember] == McInfo[i][Napad] || PlayerInfo[playerid][pMember] == McInfo[i][FrakVlad])
	   				{
	   				    if(PlayerToKvadrat(playerid,McInfo[i][Coords][0],McInfo[i][Coords][1],McInfo[i][Coords][2],McInfo[i][Coords][3]) && PlayerToKvadrat(killerid,McInfo[i][Coords][0],McInfo[i][Coords][1],McInfo[i][Coords][2],McInfo[i][Coords][3]))
						{
							CountOnMFZone[PlayerInfo[killerid][pMember]] += 1;
						 	MKillCounter[killerid] += 1;
						 	moklaWarze[killerid] += 1;
						 	moklaWarze[playerid] = 0;
						 	KillNames[killerid] += 1;
							KillNames[playerid] = 0;

	                        GhettoKillNames(killerid);
						 	if(moklaWarze[killerid] == 5)
							{
								format(string,sizeof(string),"{FF0000}[MaffiaInfo] {FFFFFF}%s'm(a) Gaaketa -5Kill | Gadaeca: +10.000$", Name(killerid));
								PlayerInfo[killerid][pCash] += 10000;
								format(log_str, sizeof(log_str), "%s'm(a) Gaaketa 5 Kill Da Gadaeca 10.000", Name(playerid));
		   						CreateLog("Money", log_str);
								PlayerUpdateData(killerid, "pCash", PlayerInfo[killerid][pCash]);
								moklaWarze[killerid] = 0;
								SendFractionMessage(COLOR_WHITE, string, McInfo[i][FrakVlad]);
								SendFractionMessage(COLOR_WHITE, string, McInfo[i][Napad]);
					        }
					 		foreach(new n:Player)
					 		{
					 		    if(PlayerInfo[n][pMember] == McInfo[i][Napad] || PlayerInfo[n][pMember] == McInfo[i][FrakVlad])
					 		    {
					 				SendDeathMessageToPlayer(n, killerid, playerid, reason);
								}
							}
						}
					}
				}
			}
		}
	 	for(new i = 0; i < sizeof(GZInfo); i ++)
		{
			if(ZoneOnBattle[i] == 1)
			{
			    if(PlayerInfo[killerid][pMember] == GZInfo[i][gNapad] && PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember] ||
			    PlayerInfo[killerid][pMember] == GZInfo[i][gFrakVlad] && PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
			    {
					if(PlayerInfo[playerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad])
	   				{
				 		CountOnZone[PlayerInfo[killerid][pMember]] += 1;
				 		SetPlayerColorEx(killerid);
						KillNames[killerid] += 1;
						KillNames[playerid] = 0;

			 			KillCounter[killerid] += 1;

						GhettoKillNames(killerid);

						foreach(new n:Player)
				 		{
				 		    if(PlayerInfo[n][pMember] == GZInfo[i][gNapad] || PlayerInfo[n][pMember] == GZInfo[i][gFrakVlad])
				 		    {
				 				SendDeathMessageToPlayer(n, killerid, playerid, reason);
							}
						}
					}
				}
			}
		}
	}
    maskOn[playerid] = false;
    colorOff[playerid] = false;
    SetPlayerColorEx(playerid);
	Tazer[playerid] = false;
	Tazed[playerid] = false;
	pTaxi[playerid] = INVALID_VEHICLE_ID;
	TaxiPassenger[playerid] = -1;
	LearningFight[playerid] = 0;
	foreach(new i:Player)
	{
        if(isAlogged[i])
        {
            SendDeathMessageToPlayer(i, killerid, playerid, reason);
        }
        if(DMArea[playerid] >= 1 && DMArea[i] >= 1)
        {
            SendDeathMessageToPlayer(i, killerid, playerid, reason);
        }
    }
    if(IphoneON[playerid] == true)
	{
		IphoneON[playerid] = false;
		for(new i = 0; i < 72; i ++) TextDrawHideForPlayer(playerid, telephoneSamsung[i]);
		CancelSelectTextDraw(playerid);
	}
	if(IsBag[playerid] == 1)
	{
		IsBag[playerid] = 0;
  		IsBag[killerid] = 1;
    	RemovePlayerAttachedObject(playerid, 8);
	    SetPlayerAttachedObject(killerid, 1, 1550, 1, 0,-0.25,0,0,45,0);
	    KillTimer(BagTimer[playerid]);
	    BagTimer[playerid] = -1;
	    BagTimer[killerid] = SetTimerEx("GiveBankCash" , 120000, false, "d", killerid);
		SendClientMessage(killerid, COLOR_WHITE, "Tkven Aiget Fulit Savse Chanta");
	}
    new stolid = GetPVarInt(playerid,"GameStol");
	if(stolid != 88)
	{
	    new g = KazinoDuty[playerid];
		TextDrawHideForPlayer(playerid,KostiBox[stolid]);
   		TextDrawHideForPlayer(playerid,TableName[stolid]);
   		TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
   		TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
   		TextDrawHideForPlayer(playerid,KostiKeyExit);
   		TextDrawHideForPlayer(playerid,KostiKeyDone);
   		TextDrawHideForPlayer(playerid,KostiKeyStavka);
   		SetPVarInt(playerid,"GameStol",88);
   		SetPVarInt(playerid,"StolReg",88);
   		TogglePlayerControllable(playerid,1);
   		CancelSelectTextDraw(playerid);
   		DelName(playerid,stolid);
   		SetPVarInt(playerid,"Ochki",88);
   		if(g > 0)
  		{
  		    SetTimerEx("NullStol",30000, false, "i", stolid);
   			StolInfo[stolid][Stavka] = 0;
   		}
	}
	if(Animation[playerid])
	{
		Animation[playerid] = false;
		TextDrawHideForPlayer(playerid, StopAnimationTD);
	}
    if(AutoSchoolCar[playerid] != -1)
    {
        SetVehicleToRespawn(AutoSchoolCar[playerid]);
        SetVehicleHealth(AutoSchoolCar[playerid], 999);
        RepairVehicle(AutoSchoolCar[playerid]);
        AutoSchoolCar[playerid] = -1;
        DisablePlayerRaceCheckpoint(playerid);
    }
    if(RentCarID[playerid] != -1)
    {
        DestroyVehicle(RentCarID[playerid]);
        RentCarID[playerid] = -1;
    }
	if(JetXStatus[playerid])
	{
	    JetXMoveToPlayer(playerid, false);
	}
	if(TuneHasOn[playerid])
	{
		HideTuneMenu(playerid);
	}
	if(DMArea[playerid] >= 1)
	{
	    KillNames[killerid] += 1;
	    KillNames[playerid] = 0;
	    DMKill[killerid] += 1;
	    DMDeath[playerid] += 1;
		SetPlayerHealth(killerid,100);
		DMTXTUPDATE(playerid);
		DMTXTUPDATE(killerid);
		GhettoKillNames(playerid);
	}
	PlayerInfo[playerid][pDeaths] ++;
	PlayerUpdateData(playerid, "pDeaths", PlayerInfo[playerid][pDeaths]);
	if(playerid != INVALID_PLAYER_ID && killerid != INVALID_PLAYER_ID && IsPlayerConnected(killerid))
	{
		PlayerInfo[killerid][pKills] ++;
		PlayerUpdateData(killerid, "pKills", PlayerInfo[killerid][pKills]);
	}
    gCheckpoint[playerid] = CHECKPOINT_NONE;
    DisablePlayerCheckpoint(playerid);

   	/*if(KnockStatus[playerid] == true && PlayerInfo[playerid][pForm] == 0 && CountPlayerHouses(playerid) == 0 && DMArea[playerid] == 0)
	{
	    hospitalSpawn[playerid] = true;
	}*/
	if(FightOpponent[playerid] != -1)
	{
		if(FightData[fight_Player1] == playerid)
		{
			format(gstr, sizeof(gstr), "[Fight]:{ffffff} Brdzola Moigo {EC7063}%s'm(a)",Name(FightData[fight_Player2]));
			SendNearText(FightData[fight_Player2], gstr, 15.0, 0xEC7063FF);
			SetPlayerPos(FightData[fight_Player2], 763.1197,11.2571,1000.7075);
			SetPlayerSkinEx(FightData[fight_Player2]);
		}
		else if(FightData[fight_Player2] == playerid)
		{
			format(gstr, sizeof(gstr), "[Fight]:{ffffff} Brdzola Moigo {EC7063}%s'm(a)",Name(FightData[fight_Player1]));
			SendNearText(FightData[fight_Player1], gstr, 15.0, 0xEC7063FF);
			SetPlayerPos(FightData[fight_Player1], 767.1197,11.2571,1000.7075);
		}
		FightOpponent[FightData[fight_Player1]] = -1;
		FightOpponent[FightData[fight_Player2]] = -1;
		FightOffer[FightData[fight_Player1]] = -1;
        FightOffer[FightData[fight_Player2]] = -1;
		hospitalSpawn[playerid] = true;
		ResetFightData();
	}
   	else if(PlayerInfo[playerid][pAdmin] <= 0 && CaptureOn[playerid] == 0 && DMArea[playerid] == 0 && PlayerEvent[playerid] == false)
	{
	    if(killerid != INVALID_PLAYER_ID && PlayerInfo[killerid][pAdmin] > 0)
	    {
     		KnockStatus[playerid] = false;
	        if(PlayerInfo[playerid][pMember] == 0) hospitalSpawn[playerid] = true;
	    }
	    else if(KnockStatus[playerid])
	    {
	        KnockStatus[playerid] = false;
	        if(PlayerInfo[playerid][pMember] == 0) hospitalSpawn[playerid] = true;
	    }
	    else
	    {
	        SetPlayerHealth(playerid, 120);
	        KnockStatus[playerid] = true;
		    GetPlayerPos(playerid, KnockPos[playerid][0], KnockPos[playerid][1], KnockPos[playerid][2]);
		    GetPlayerFacingAngle(playerid, KnockPos[playerid][3]);
			KnockData[playerid][0] = GetPlayerInterior(playerid);
			KnockData[playerid][1] = GetPlayerVirtualWorld(playerid);
		}
	}
	if(TrailerJob[playerid] == true && TvirtisSaxeoba[playerid] == 1)
    {
        TvirtisSaxeoba[playerid] = 0;
        Aigotvirti[playerid] = false;
    	DisablePlayerCheckpoint(playerid);
        sendinfo(playerid, "Tqven Agar Gadagaqvt Tvirti!");
       	ShowPlayerDialog(playerid,INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "","","","");
       	TrailerLimit -= 1;
    }
	PlayerEvent[playerid] = false;
    return 1;
}
public OnPlayerUpdate(playerid)
{
    if(GetPlayerSpecialAction(playerid) == 2 && PlayerInfo[playerid][pAdmin] == 0)
	{
		Kick(playerid);
        printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code Spec Action]", Name(playerid));
	}
	if(atroll == 1) { TrollDetect(playerid); }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][pAdmin] <= 0 || GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		if(PlayerInfo[playerid][pAdmin] == 0)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Tqven Gaickiket Cheterobistvis (#006)");
		    Kick(playerid);
		    printf("[AntiCheat] - %s Gaikika Serveridan Mizezi - Cheater [Code : #006]", Name(playerid));
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Float:a, Float:b, Float: c;
		GetVehicleVelocity(GetPlayerVehicleID(playerid), a,b,c);
		if(c > 0.7)
		{
		    if(a == 0.000 || b == 0.000)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Tqven Gaikiket Serveridan Cheterobistvis! {FFFFFF}(#008)");
				Kick(playerid);
				printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code #008]", Name(playerid));
				return false;
			}
		}
	}
    SetPVarInt(playerid,"AFK_Tick", GetPVarInt(playerid,"AFK_Tick") + 1);
	if(IsPlayerNearStol(playerid) != -1 && GetPVarInt(playerid,"GameStol") == 88) GameTextForPlayer(playerid,"~g~PRESS ENTER",1500,4);
	if(GetPVarInt(playerid,"GameStol") != 88) SelectTextDraw(playerid, 0x4169e1FF);
	if(IsNearJetMachine(playerid) != -1 && JetXStatus[playerid] == false) GameTextForPlayer(playerid,"~g~PRESS ENTER",1500,4);
	if(IsPlayerInRangeOfPoint(playerid, 80.0, 1133.0889, -8.8106, 1000.6797))
	{
		if(PlayerInfo[playerid][pCasinoBlock] == 1)
		{
			SpawnPlayer(playerid);
			SendClientMessage(playerid, 0x69C6B1AA, "< > {ffffff}Tkven Gadevt Casino Block");
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
		{
	        if(1 <= PlayerInfo[playerid][pAdmin] <= 9)
			{
				SpawnPlayer(playerid);
				SendClientMessage(playerid, 0x69C6B1AA, "< > {ffffff}Tkven Xart Administratori Aserom Tkven Ver Shexvalt Casinoshi");
			}
		}
 	}
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);
		if(noclipdata[playerid][modes] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
		{
		    MoveCamera(playerid);
		}
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][modes]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{
				noclipdata[playerid][modes] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr;
	}
	if(FightOpponent[playerid] != -1)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 7.0, 760.9799,11.0707,1001.1639))
		{
		    SetPlayerPos(playerid, 760.9799,11.0707,1001.1639);
		}
	}
	if(isLogged[playerid])
	{
	    new Float:RvankaPOS[3];
     	GetPlayerVelocity(playerid,RvankaPOS[0],RvankaPOS[1],RvankaPOS[2]);
     	if(RvankaPOS[0] > 2.0 || RvankaPOS[1] > 2.0)
     	{
	      	SetPVarInt(playerid, "RvankaTime", GetPVarInt(playerid, "RvankaTime") + 1);
	      	if(GetPVarInt(playerid, "RvankaTime") >= 3 && miwera == 0)
	      	{
    			SetPVarInt(playerid, "RvankaTime", 0);
    			format(gstr, sizeof(gstr), c_ac"» AntiCheat » {FFFFFF}%s[%d] Shesadzloa Ikenebs Cheats: "c_ac"%s[#%03d]", Name(playerid), playerid, "Rvanka", 99);
     			SendAdminMessage(0x5D6D7EFF, gstr);
     			miwera = 3;
      		}
     	}
	}
    return 1;
}
public OnPlayerText(playerid, text[])
{
    if(!isLogged[playerid])
    {
        Kick(playerid);
        return false;
    }
    if(DelayChat[playerid] > gettime()) return false;
    DelayChat[playerid] = gettime()+1;
    if(PlayerInfo[playerid][pMute] == 1)
	{
        SendMuteMessage(playerid);
		return false;
	}
	if(IsIP(text))
	{
	    return false;
	}
    if(realtime)
    {
        new text_string[300], aaduty = -1, smiled = IsSmileText(text), censored = IsCensorText(text), stolid = GetPVarInt(playerid, "GameStol");
		if(smiled)
		{
		    format(text_string, sizeof(text_string), "%s: Icinis",Name(playerid));
		    SendNearText(playerid, text_string, 15.0, COLOR_PURPLE);
	        SetPlayerChatBubble(playerid, "Icinis", COLOR_PURPLE, 30.0, 10000);
	        return false;
		}
		if(censored)
		{
  			format(text_string, sizeof(text_string), "%s: Igineba",Name(playerid));
		    SendNearText(playerid, text_string, 15.0, COLOR_PURPLE);
	        SetPlayerChatBubble(playerid, "Igineba", COLOR_PURPLE, 30.0, 10000);
	        return false;
		}
		if((stolid != 88 && stolid >= 0) && CasinoDuty[playerid] == true)
	   	{
	    	format(text_string, sizeof(text_string), "{FE2626}[Casino Table %d] - %s [%d]: {FFFFFF}%s",stolid, Name(playerid), playerid, text);
			SendCasinoSMS(stolid, 0x00C6C696, text_string);
			SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
			return false;
		}
        new member = PlayerInfo[playerid][pForm];
        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !Animation[playerid] && !ChatAnim[playerid] && !Tazed[playerid] && !phoneOpen[playerid] && !antidouble[playerid] && TakingPicture[playerid] == 0 && !KnockStatus[playerid] && GetPlayerAnimationIndex(playerid) != 471)
        {
            // strlen(text)*100 | 2400
            ApplyAnimation(playerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
            SetTimerEx("StopAnimation", 2400, false, "d", playerid);
            ChatAnim[playerid] = true;
        }
		format(text_string, sizeof(text_string), "- %s(%d):{ffffff} %s",Name(playerid),playerid,text);
  		if(AdminDuty[playerid])
		{
            aaduty++;
		    format(text_string, sizeof(text_string), "{FF0000}%s{ffffff}: (( %s ))",Name(playerid),text);
		}
        if(maskOn[playerid])
        {
            format(text_string, sizeof(text_string), "- Hidden: %s",text);
        }
        SendNearText(playerid, text_string, 15.0, (colorOff[playerid])? COLOR_WHITE : (FractionInfo[member][frac_Color]));
        SetPlayerChatBubble(playerid, text, COLOR_WHITE, 30.0, 10000);
    }
    else
	{
		return true;
	}
    return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    vehicleput[playerid] = vehicleid;
    SetPVarInt(playerid,"AFK_Time",0);
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(gCarLock[vehicleid] == 1)
    {
        SetPlayerPosEx(playerid, x, y, z, 500);
        ClearAnimations(playerid);
        GameTextForPlayer(playerid,"~w~Manqana ~r~Daketilia", 3000, 3);
    }
	if(IsABmx(vehicleid))
    {
        GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
        SetVehicleParamsEx(vehicleid, 1, lightss, alarms, doorss, bonnets, boots, objectives);
        UnLockCar(vehicleid);
    }
    if(KnockStatus[playerid])
    {
        ACKick(playerid, "Knocked Enter Vehicle", "031");
    }
   	if(!ispassenger)
	{
		if(IsVehicleHasDriver(vehicleid))
		{
			senderror2(playerid, "Motamashis Tranportidan Gadmogdeba Akrdalulia");
            SetPlayerPosEx(playerid, x, y, z, 500);
			ClearAnimations(playerid);
			return 1;
		}
		if(caridhouse[playerid] != vehicleid)
		{
			new vehowner = GetVehicleOwner(vehicleid);
			if(vehowner != INVALID_PLAYER_ID)
			{
                if(DelayKey[playerid] > gettime())
			    {
					new exQuery[350],name[28],nametarget[28];
					GetPlayerName(playerid,name,28);
					GetPlayerName(vehowner,nametarget,28);
					mysql_format(connect, exQuery, 350,"SELECT `Owner`,`Player` FROM `carkeys` WHERE `Owner` = '%s' AND `Player` = '%s'",nametarget,name);
					mysql_tquery(connect, exQuery, "SearchForKey", "ii", playerid, vehowner);
					DelayKey[playerid] = gettime()+3;
				}
				else
				{
		            SetPlayerPosEx(playerid, x, y, z, 500);
					ClearAnimations(playerid);
				}
			}
		}
	}
	SetVehicleParamsForPlayer(vehicleid, playerid, 0, gCarLock[vehicleid]);
	if(IsPlayerInAnyVehicle(playerid)) TrollDetect(playerid);
    return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    SetPVarInt(playerid,"AFK_Time",0);
	foreach(new i:Player)
	{
		if(TransportDuty[i] == 1 && GetPlayerState(i) == PLAYER_STATE_DRIVER && vehicleid == GetPlayerVehicleID(i))
		{
		    if(LastPassenger[i] == playerid) break;
            LastPassenger[i] = playerid;
            PlayerInfo[playerid][pPayment] += Random(5000, 10000);
            SendClientMessage(playerid, COLOR_YELLOW, "[Taxi]{ffffff} Xelfasi Dagericxebat PayDay'ze");
 			break;
		}
	}
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && TransportDuty[playerid] == 1)
    {
		TransportDuty[playerid] = 0;
		SendClientMessage(playerid, 0x8099B5FF, "{8099B5}Taxi Info {FFFFFF}Tkven Daasrulet Samushao Dge. Gisurvebt Warmatebebs");
		return true;
	}
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(!isLogged[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
    if(newstate == PLAYER_STATE_DRIVER)
    {
         if((GetTickCount()-GetPVarInt(playerid, "cartime")) < 1000)
         {
            SetPVarInt(playerid, "carspam", GetPVarInt(playerid, "carspam")+1);
            if(GetPVarInt(playerid, "carspam") >= 5)
			{
			    if(PlayerInfo[playerid][pAdmin] == 0)
				{
				    SetPVarInt(playerid, "carspam", 0);
				    ACKick(playerid, "Seat hack", "034");
				    return true;
				}
            }
         }
         SetPVarInt(playerid, "cartime", GetTickCount());
    }
	new vehicleid = GetPlayerVehicleID(playerid);
	switch(newstate)
	{
		case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER:
		{
		    /*if(!IsPlayerInRangeOfPoint(playerid, 30.0, P_Sync[playerid][s_pos_x], P_Sync[playerid][s_pos_y], P_Sync[playerid][s_pos_z]))
		    {
  				ACKick(playerid, "027", "Teleport Hack (vehicle)");
			    return true;
		    }*/
  			if(vehicleput[playerid] != vehicleid)
			{
				ACKick(playerid, "026", "Teleport Hack (vehicle)");
			    return true;
			}
		}
	}
	if(newstate == 2) SetPVarInt(playerid,"AC_MCS",GetTickCount());
	else if(oldstate == 2) if((GetTickCount() - GetPVarInt(playerid,"AC_MCS")) <= 250 && PlayerInfo[playerid][pAdmin] <= 0)
	{
		SendClientMessage(playerid,COLOR_RED,"Tqven Gaikicket Cheterobis Gamo");
		Kick(playerid);
		printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code #Tick]", Name(playerid));
		return true;
	}
	if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2) && PlayerInfo[playerid][pAdmin] <= 0)
	{
		SendClientMessage(playerid,COLOR_RED,"Tqven Gaikicket Cheterobis Gamo");
		Kick(playerid);
		printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code #Tick Vol 2]", Name(playerid));
		return true;
	}
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_DRIVER)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED, "Tqven Gaickiket Serveridan Cheterobistvis! (#025)");
	    printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code : 025 [1]]", Name(playerid));
	}
	if(oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_DRIVER)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED, "Tqven Gaickiket Serveridan Cheterobistvis! (#025)");
	    printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code : 025 [2]]", Name(playerid));
	}
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_PASSENGER)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED, "Tqven Gaickiket Serveridan Cheterobistvis! (#025)");
     	printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code : 025 [3]]", Name(playerid));
	}
	//
	if(newstate == 2) SetPVarInt(playerid,"AC_MCS",GetTickCount());
	else if(oldstate == 2) if((GetTickCount() - GetPVarInt(playerid,"AC_MCS")) <= 250 && PlayerInfo[playerid][pAdmin] <= 0) return SendClientMessage(playerid,COLOR_RED,"Tqven Gaikicket Cheterobis Gamo"), Kick(playerid);
	if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2) && PlayerInfo[playerid][pAdmin] <= 0) return SendClientMessage(playerid,COLOR_RED,"Tqven Gaikicket Cheterobis Gamo"), Kick(playerid);
	if(newstate == PLAYER_STATE_DRIVER)
    {
         if((GetTickCount()-GetPVarInt(playerid, "cartime")) < 1000)
         {
            SetPVarInt(playerid, "carspam", GetPVarInt(playerid, "carspam")+1);
            if(GetPVarInt(playerid, "carspam") >= 5)
			{
			    if(PlayerInfo[playerid][pAdmin] > 0) return true;
				format(YCMDstr, sizeof gstr, "» AntiCheat »{ffffff} Motamashe %s(%d) Shesadzloa Yrides Manqanebs", Name(playerid), playerid);
				SendAdminMessage(0x5D6D7EFF, YCMDstr);
            }
         }
         SetPVarInt(playerid, "cartime", GetTickCount());
    }
    if(newstate == PLAYER_STATE_DRIVER)
    {
        if(!IsABmx(vehicleid))
        {
            GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
            if(engines == 0)
			{
				SendClientMessage(playerid, COLOR_GREEN, "{55AB6E}Manqanis Dasaqoqad Gamoikenet:{DFCFCF} /en(gine) & '2'");
				SendClientMessage(playerid, COLOR_GREEN, "{55AB6E}Manqanis Menus Gasaxsnelad Gamoikenet:{DFCFCF} /cmenu");
			}
            speedometerChange[playerid] = true;
            StartSpeedometer(playerid);
        }
        if(IsABmx(vehicleid))
        {
            GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
            SetVehicleParamsEx(vehicleid, 1, lightss, alarms, doorss, bonnets, boots, objectives);
            UnLockCar(vehicleid);
        }
        if(AutoSchoolCars[0] <= vehicleid <= AutoSchoolCars[sizeof(AutoSchoolCars)-1])
        {
            if(AutoSchoolStatus[playerid] == 0)
            {
                AutoSchoolStatus[playerid] = 0;
                gCheckpoint[playerid] = CHECKPOINT_PRACTICE;
                SetPlayerAutoSchool(playerid, AutoSchoolStatus[playerid]);
                AutoSchoolCar[playerid] = vehicleid;
                SetVehicleHealth(AutoSchoolCar[playerid], 999);
                RepairVehicle(AutoSchoolCar[playerid]);
            }
            else
            {
                SendClientMessage(playerid, COLOR_FIRST, "Tkven Ar Xart Chawerili Praktikis Gamocdaze");
                RemovePlayerFromVehicleEx(playerid);
            }
            return true;
        }
        else
        {
            if(!IsABmx(vehicleid) && GetVehicleModel(vehicleid) != 462)
            {
                if(!PlayerInfo[playerid][pLicense][LICENSE_CAR])
                {
                    RemovePlayerFromVehicleEx(playerid);
                    sendinfo(playerid, "Tkven Ar Icit Mankanis Martva, Martvis Mowmobis Ageba Shegidzlias Avto Skolashi >> /gps");
                }

            }
        }
        if(lspdcar[0] <= vehicleid <= lspdcar[18])
		{
			if(PlayerInfo[playerid][pMember] != FRACTION_LSPD)
			{
                SendClientMessage(playerid, COLOR_GREY, "Ar Xart LSPD Tanamshromeli !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
            if(PlayerInfo[playerid][pForm] != PlayerInfo[playerid][pMember])
            {
                SendClientMessage(playerid, COLOR_GREY, "Ar Gamogicvliat Samushao Forma !");
                RemovePlayerFromVehicleEx(playerid);
            }
            return true;
		}
        if(fbicar[0] <= vehicleid <= fbicar[8])
		{
			if(PlayerInfo[playerid][pMember] != FRACTION_FBI)
			{
                SendClientMessage(playerid, COLOR_GREY, "Ar Xart FBI Tanamshromeli !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
            if(PlayerInfo[playerid][pForm] != PlayerInfo[playerid][pMember])
            {
                SendClientMessage(playerid, COLOR_GREY, "Ar Gamogicvliat Samushao Forma !");
                RemovePlayerFromVehicleEx(playerid);
            }
            return true;
		}
        if(armycar[0] <= vehicleid <= armycar[19])
        {
            if(PlayerInfo[playerid][pMember] != FRACTION_ARMY)
			{
                SendClientMessage(playerid, COLOR_GREY, "Ar Xart Army Tanamshromeli !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
            if(PlayerInfo[playerid][pForm] != PlayerInfo[playerid][pMember])
            {
                SendClientMessage(playerid, COLOR_GREY, "Ar Gamogicvliat Samushao Forma !");
                RemovePlayerFromVehicleEx(playerid);
            }
            return true;
        }
        if(medicscar[0] <= vehicleid <= medicscar[5])
        {
            if(PlayerInfo[playerid][pMember] != FRACTION_MEDIC)
			{
                SendClientMessage(playerid, COLOR_GREY, "Ar Xart Hospital Tanamshromeli !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
            if(PlayerInfo[playerid][pForm] != PlayerInfo[playerid][pMember])
            {
                SendClientMessage(playerid, COLOR_GREY, "Ar Gamogicvliat Samushao Forma !");
                RemovePlayerFromVehicleEx(playerid);
            }
            return true;
        }
        if(lsnewscar[0] <= vehicleid <= lsnewscar[4])
        {
            if(PlayerInfo[playerid][pMember] != FRACTION_LSNEWS)
			{
                SendClientMessage(playerid, COLOR_GREY, "Ar Xart LS News Tanamshromeli !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
            if(PlayerInfo[playerid][pForm] != PlayerInfo[playerid][pMember])
            {
                SendClientMessage(playerid, COLOR_GREY, "Ar Gamogicvliat Samushao Forma !");
                RemovePlayerFromVehicleEx(playerid);
            }
            return true;
        }
        if(ballascar[0] <= vehicleid <= ballascar[10])
        {
        	if(PlayerInfo[playerid][pMember] != FRACTION_BALLAS)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Ballas Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
        }
        if(vagoscar[0] <= vehicleid <= vagoscar[11])
        {
        	if(PlayerInfo[playerid][pMember] != FRACTION_VAGOS)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Vagos Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
        }
        if(aztecacar[0] <= vehicleid <= aztecacar[10])
        {
        	if(PlayerInfo[playerid][pMember] != FRACTION_AZTEC)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Aztecas Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
        }
        if(grovecar[0] <= vehicleid <= grovecar[10])
        {
        	if(PlayerInfo[playerid][pMember] != FRACTION_GROVE)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Groves Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
        }
        if(rifacar[0] <= vehicleid <= rifacar[8])
        {
        	if(PlayerInfo[playerid][pMember] != FRACTION_RIFA)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Rifas Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
        }
		if(bikercar[0] <= vehicleid <= bikercar[11])
		{
		   	if(PlayerInfo[playerid][pMember] != FRACTION_BIKERS)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Biker's Club Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
		}
		if(lcncar[0] <= vehicleid <= lcncar[10])
		{
 			if(PlayerInfo[playerid][pMember] != FRACTION_LCN)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart La Cosa Nostra Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
		}
		if(yakuzacar[0] <= vehicleid <= yakuzacar[10])
		{
 			if(PlayerInfo[playerid][pMember] != FRACTION_YAKUZA)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Yakuza Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
		}
		if(rmcar[0] <= vehicleid <= rmcar[7])
		{
		 	if(PlayerInfo[playerid][pMember] != FRACTION_RM)
			{
                SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Russian Mafia Wevri !");
                RemovePlayerFromVehicleEx(playerid);
                return true;
		 	}
		 	return true;
		}
 		if(TaxiCar[0] <= vehicleid <= TaxiCar[10])
		{
			if(PlayerInfo[playerid][pJob] == 2)
			{
				if(pTaxi[playerid] != vehicleid)
				{
				    new str[350];
				    format(str,sizeof(str),"{FFFFFF}Mogesalmebit : {8099B5}%s\n{FFFFFF}Tkveni Taxi Skill : {8099B5}%d\n{FFFFFF}Mankanis Komforti : {8099B5}Standart Class\n\n{FFFFFF}Namdvilad Gsurt Qiraoba? Mankanis Fasi {8099B5}1000 {FFFFFF}$",Name(playerid));
					ShowPlayerDialog(playerid, 9127, DIALOG_STYLE_MSGBOX, "{8099B5}Genuine {FFFFFF}| Taxi Park", str, "Diax", "Ara");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Taksisti, Samushaos Dawkeba Shegidzliat Meriashi (/gps)");
				RemovePlayerFromVehicleEx(playerid);
				return true;
			}
		}
  		/*if(AutoSalonCar[0] <= vehicleid <= AutoSalonCar[7])
        {
            RemovePlayerFromVehicleEx(playerid);
            return true;
        }*/
  		if(Roadtrain[0] <= vehicleid <= Roadtrain[11])
		{
			if(TrailerJob[playerid] == false)
			{
			    senderror(playerid, "Tkven Ar Gakvt Am Transportis Gamoyenebis Ufleba | Trailers Company");
			    RemovePlayerFromVehicleEx(playerid);
			    return true;
			}
		}
		for(new i; i < TotalCar; i++)
		{
		    if(vehicleid == CarInfo[i][CarIDInfo])
		    {
	    		RemovePlayerFromVehicleEx(playerid);
	    		SetVehicleToRespawn(vehicleid);
		    }
		}
		for(new i = 1; i < MAX_MANSION; i ++)
		{
		    if(MansionInfo[i][mID] == 0) continue;
		    if(MansionInfo[i][mVehicle][0] <= vehicleid <= MansionInfo[i][mVehicle][MAX_MANSION_CAR-1])
		    {
		        if(FamilyInfo[p_family_id][fMansion] != i)
		        {
					senderror2(playerid, "Es Transporti Ar Aris Tkveni Ojaxis");
					RemovePlayerFromVehicleEx(playerid);
		        }
		        return true;
		    }
		}
        return true;
    }
    else
    {
        EndSpeedometer(playerid);
    }
    return true;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(oldinteriorid == 5) DisablePlayerCheckpoint(playerid);
	if(LearningFight[playerid] > 0)
	{
	    SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
 		LearningFight[playerid] = 0;
   		SetPlayerSkinEx(playerid);
	    DisablePlayerCheckpoint(playerid);
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	while(strfind(inputtext, "%s",true) !=-1) strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	while(strfind(inputtext, "%",true) !=-1) strdel(inputtext,strfind(inputtext, "%",true),strfind(inputtext, "%",true)+1);
    if (lastDialogID[playerid] != dialogid && dialogid != INVALID_DIALOG_ID)
    {
        ACKick(playerid, "012", "Dialog Hack");
        lastDialogID[playerid] = -1;
    }
    else lastDialogID[playerid] = -1;
    switch(dialogid)
    {
        case 1: // Authorization
        {
            if(!response) return Kick(playerid);
            if(IsBadText(inputtext))
            {
                ShowAuthorization(playerid);
                return true;
			}
            new query[256];
            format(query, sizeof(query), "SELECT * FROM `accounts` WHERE Name = '%s' AND Password = '%s'",Name(playerid),inputtext);
            mysql_tquery(connect, query, "LoadPlayerData", "i", playerid);
            return true;
        }
        case 2: // Registration
        {
            if(!response) return Kick(playerid);
            new bad_password = -1, password_length = strlen(inputtext);
            if(!password_length || password_length < 6 || password_length > 20)
            {
                SendClientMessage(playerid, COLOR_FIRST, "Parolis Zoma Unda Ikos 6'dan 20' Simbolomde !");
                ShowRegistration(playerid);
                return false;
            }
            for(new i = 0; i < password_length; i ++)
            {
                switch(inputtext[i]) {
                    case '0'..'9', 'a'..'z', 'A'..'Z': continue;
                    default: {
                        bad_password ++;
                        break;
			   		}
                }
            }
            if(IsBadText(inputtext)) bad_password ++;
            if(bad_password != -1)
            {
                SendClientMessage(playerid, COLOR_FIRST, "Shekvanili Paroli Unda Ikos Latinuri Simboloebit");
                ShowRegistration(playerid);
                return false;
            }
            if(!HasNumber(inputtext))
            {
            	SendClientMessage(playerid, COLOR_FIRST, "Paroli Unda Sheicavdes Cifrebs");
                ShowRegistration(playerid);
                return true;
            }
            SetString(PlayerInfo[playerid][Password], inputtext, 32);
            ShowChooseSex(playerid);
            return true;
        }
        case 3: // Choose Sex
        {
            if(!response) return ShowRegistration(playerid);
            if(listitem == 0) return ShowChooseSex(playerid);
            if(!CheckForAccount(Name(playerid)) && response)
            {
                new query[256];
                format(query, sizeof(query), "INSERT INTO `accounts` (`Name`, `Password`) VALUES ('%s', '%s')",Name(playerid),PlayerInfo[playerid][Password]);
                mysql_query(connect, query);
                isLogged[playerid] = true;
                PlayerInfo[playerid][pSex] = listitem;
				if(GetLauncherStatus(playerid))
				{
					cef_create_browser(playerid, 1, "https://genuine-rp.ge/interface/index.html", false, false);
			  		cef_subscribe("grp:hud", "CefInterface");
					cef_always_listen_keys(playerid, 1, bool:KEY_YES);
					cef_hide_browser(playerid, 1, false);
					cef_focus_browser(playerid, 1, false);
				}
                RegisterPlayerData(playerid);
                CancelSelectTextDraw(playerid);
            }
            else Kick(playerid);
            SpawnPlayer(playerid);
            return true;
        }
        case 4: // Admin Login
        {
            if(!response) return true;
            if(PlayerInfo[playerid][pAdmin] == 0) return false;
            if(!strlen(inputtext)) return false;
            if(!strcmp(PlayerInfo[playerid][pAlogin], inputtext))
            {
                isAlogged[playerid] = true;
                new string[90];
                if(AStream) SvAttachListenerToStream(AStream, playerid);
                UpdateReportTD();
                for(new i = 0; i < 4; i ++) TextDrawShowForPlayer(playerid, ReportTXT[i]);
               	for(new i = 0; i < 53; i++)
				{
					EnableAntiCheatForPlayer(playerid, i, 0);
				}
				format(string, sizeof(string), "<ALogin> Shemovida %s[%d]", Name(playerid), playerid);
   			  	SendAdminMessage(0xF4B800AA,string,1);
            }
            else
            {
				senderror(playerid, "Mititebuli Admin Paroli Arasworia !");
            }
            return true;
        }
        case 5: // Admin Key
        {
            if(!response) return true;
            if(PlayerInfo[playerid][pAdmin] == 0) return false;
            if(!isAlogged[playerid]) return false;
            if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 15)
            {
                SendClientMessage(playerid, COLOR_ADMIN, "[Shecdoma]:{ffffff} Adminis Parolis Zoma Unda Ikos "color_admin"5'dan 15'{ffffff} Simbolomde");
                return false;
            }
            SetString(PlayerInfo[playerid][pAlogin], inputtext);
            new string[128];
            format(string, sizeof(string), color_admin"[AdminKey]: {ffffff}Tkveni Axali Admin Paroli Dakenda Aucileblad Daimaxsovret | %s",inputtext);
            SendClientMessage(playerid, COLOR_ADMIN, string);
            SavePlayerData(playerid);
            return true;
        }
        case 6: // Buy House
        {
            if(!response) return true;
            for(new i = 1; i <= TotalHouse; i ++)
            {
                if(!IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2])) continue;
                if(PlayerInfo[playerid][pCash] < HouseInfo[i][hPrice])
                {
                    senderror(playerid, "Ar Gakvt Sakmarisi Tanxa");
                    break;
                }
                if(CountPlayerHouses(playerid) >= MAX_PLAYER_HOUSE)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Tkven Ukve Gakvt Shedzenili 3 Saxli");
                    return false;
                }
                GivePlayerExp(playerid, 2);
                PlayerInfo[playerid][pCash] -= HouseInfo[i][hPrice];
                SetPlayerPosEx(playerid, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2], 3000);
                SetPlayerInterior(playerid, HouseInfo[i][hInterior]);
                SetPlayerVirtualWorld(playerid, i+11);
                SetPlayerFacingAngle(playerid, HouseInfo[i][hFacingAngle]);
                GivePlayerHouse(playerid, i);
                format(gstr, sizeof(gstr), "Tkven Sheidzinet Saxli {ffffff}%d {FFFF00}| Fasi: {ffffff}%d$",CountPlayerHouses(playerid),HouseInfo[i][hPrice]);
                SendClientMessage(playerid, COLOR_YELLOW, gstr);
                format(gstr, sizeof(gstr), "Saatshi Mogiwevt{ffffff} %d$ {FFFF00}Gadaxda, Angarishis Shevseba Shegidzliat Nebismieri Bankomatidan",HouseInfo[i][hTax]);
                SendClientMessage(playerid, COLOR_YELLOW, gstr);
                SetPVarInt(playerid, "HouseID", i);
                SetTimerEx("FindHouseBug", 1000, false, "i", playerid);
                SpawnType[playerid] = 2;
                format(log_str, sizeof(log_str), "%s'm(a) Ikida Saxli Da Gadaixada: %d$", Name(playerid), HouseInfo[i][hPrice]);
	   			CreateLog("Money", log_str);
                RenewHouse(i);
                return true;
            }
            return true;
        }
        case 7: // Enter House
        {
            if(!response) return true;
            for(new i = 1; i <= TotalHouse; i ++)
            {
                if(!IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2])) continue;
                if(!GetString(HouseInfo[i][hOwner], Name(playerid)) && HouseInfo[i][hLock] == 1)
                {
                    GameTextForPlayer(playerid, "~r~locked", 3000, 1);
                    break;
                }
                SetPlayerPosEx(playerid, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2], 2000);
                SetPlayerInterior(playerid, HouseInfo[i][hInterior]);
                SetPlayerVirtualWorld(playerid, i+11);
                SetPlayerFacingAngle(playerid, HouseInfo[i][hFacingAngle]);
                SetPVarInt(playerid, "HouseID", i);
                SetTimerEx("FindHouseBug", 1000, false, "i", playerid);
                return true;
            }
            return true;
        }
        case 8: // House Panel
        {
            if(!response) return true;
            new house = GetPVarInt(playerid, "HouseID");
            switch(listitem)
            {
                case 0: // Lock
                {
                    HouseInfo[house][hLock] = !HouseInfo[house][hLock];
                    PC_EmulateCommand(playerid, "/hpanel");
                    return true;
                }
                case 1: // Fixcar
                {
                    PC_EmulateCommand(playerid, "/cars");
                    return true;
                }
                case 2: // Sellhouse
                {
                    new i = house;
                    RemovePlayerHouse(playerid, i);
                    RemoveNameHouse(i);
                    SendClientMessage(playerid, COLOR_HOUSE, "[House]{ffffff}- Tkven Gayidet Tkveni Saxli");
                    format(log_str, sizeof(log_str), "%s'm(a) Gakida Saxli Da Aigo: %d$", Name(playerid), HouseInfo[i][hPrice]);
	   				CreateLog("Money", log_str);

                    SavePlayerData(playerid);
                    SaveHouseData(house);
                    RenewHouse(house);
                    
                    PlayerInfo[playerid][pCash] += HouseInfo[i][hPrice];
                    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);

                    if(GetPlayerVirtualWorld(playerid) == i+11)
                    {
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
                        SetPlayerPosEx(playerid, HouseInfo[house][hPosition][0], HouseInfo[house][hPosition][1], HouseInfo[house][hPosition][2], 2000);
                        DelayPickup[playerid] = gettime()+5;
                    }
                    return true;
                }
                case 3: // Buy/Sell Garage
                {
                    new i = house;
                    if(HouseInfo[i][hGarage] == 1)
                    {
                        HouseInfo[i][hGarage] = 0;
                        PlayerInfo[playerid][pCash] += 16000;
                        SendClientMessage(playerid, COLOR_HOUSE, "[House]{ffffff}- Tkven Gayidet Garagi! Fasi: 16.000$");
                        format(log_str, sizeof(log_str), "%s'm(a) Gakida Garaji Da Aigo: 16.000$", Name(playerid));
	   					CreateLog("Money", log_str);
                    }
                    else if(HouseInfo[i][hGarage] == 0)
                    {
                        HouseInfo[i][hGarage] = 1;
                        PlayerInfo[playerid][pCash] -= 20000;
                        SendClientMessage(playerid, COLOR_HOUSE, "[House]{ffffff}- Tkven Iyidet Garagi! Fasi: 20.000$");
                        format(log_str, sizeof(log_str), "%s'm(a) Gakida Garaji Da Aigo: 20.000$", Name(playerid));
	   					CreateLog("Money", log_str);
                    }
                    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                	
                    SavePlayerData(playerid);
                    SaveHouseData(house);
                    RenewHouse(house);
                    return true;
                }
            }
            return true;
        }
        case 9: // FixCar
        {
            if(!response) return true;
        /*    if(GetPVarInt(playerid, "CarDialog") == 69)
            {
				DeletePVar(playerid, "CarDialog");
	            if(PlayerInfo[playerid][pCash] < 100) return senderror(playerid, "Ar Gakvt 100$");
	            if(caridhouse[playerid] != -1) DestroyVehicle(caridhouse[playerid]);
	            new phouse = GetMyHouse(Name(playerid), 0);
	            if(!listitem)
				{
    				caridhouse[playerid] = AddStaticVehicle(MyCarID[playerid][listitem], HouseInfo[phouse][hCarPosition][0], HouseInfo[phouse][hCarPosition][1], HouseInfo[phouse][hCarPosition][2], HouseInfo[phouse][hCarPosition][3], MyCarTune[playerid][listitem][CARTUNE_COLOR1], MyCarTune[playerid][listitem][CARTUNE_COLOR2]);
				}
				else
				{
				    new rand = random(2);
				    caridhouse[playerid] = AddStaticVehicle(MyCarID[playerid][listitem], VehiclePositionsInsideGarage[rand][0], VehiclePositionsInsideGarage[rand][1], VehiclePositionsInsideGarage[rand][2], VehiclePositionsInsideGarage[rand][3], MyCarTune[playerid][listitem][CARTUNE_COLOR1], MyCarTune[playerid][listitem][CARTUNE_COLOR2]);
				}
				ApplyVehicleTune(playerid, caridhouse[playerid], listitem);
				SetVehicleNumberPlate(caridhouse[playerid], "Genuine");
				SetVehicleHealth(caridhouse[playerid], 999.0);
			 	LinkVehicleToInterior(caridhouse[playerid], GetPlayerInterior(playerid));
			 	SetVehicleVirtualWorld(caridhouse[playerid], GetPlayerVirtualWorld(playerid));
			 	PlayerInfo[playerid][pCash] -= 100;
	            GameTextForPlayer(playerid, "~g~Car Spawned~n~~r~-100$", 3000, 1);
	            LockCar(caridhouse[playerid]);
            }
			else
			{*/
			new query[128];
			format(query, sizeof(query),"SELECT * FROM `cars` WHERE ID = '%s' AND `ForSale` = '1'", MyCarInsertID[playerid][listitem]);
			mysql_query(connect, query);
			new rows;
			cache_get_row_count(rows);
			if(rows) return senderror(playerid, "Tkveni Transporti Ukve Dgas Gasayidad!");
			ShowPlayerDialog(playerid, 83, DIALOG_STYLE_LIST, "FixCar", "{F0A45D}[1] {FFFFFF}- Daspawneba Quchashi\n{F0A45D}[2] {FFFFFF}- Daspawneba Garajshi\n", "Spawn", "Close");
			//ShowPlayerDialog(playerid, 83, DIALOG_STYLE_LIST, "FixCar", "{F0A45D}[1] {FFFFFF}- Daspawneba Quchashi", "Spawn", "Close");
            SetPVarInt(playerid, "CarDialog", listitem);
            //}
            return true;
        }
        case 10: // Mute Custom Reason
        {
            if(!response) return true;
			if(!strlen(inputtext)) return true;
			new mute_time = 10, mute_reason[32], mute_id = GetPVarInt(playerid, "ActionID"), mstr[256];
			SetString(mute_reason, inputtext);
			format(mstr, sizeof(mstr), "Administratorma {ffffff}%s'm(a){FF6347} Daado Chatis Bani {ffffff}%s'(s){FF6347} Mizezi: {ffffff}%s(%smin)",Name(playerid),Name(mute_id),mute_reason,Convert(mute_time*60));
			SendClientMessageToAll(COLOR_LIGHTRED, mstr);
			PlayerInfo[mute_id][pMute] = 1;
			PlayerUpdateData(mute_id, "pMute", PlayerInfo[mute_id][pMute]);
			PlayerInfo[mute_id][pMuteTime] = mute_time*60;
			PlayerUpdateData(mute_id, "pMuteTime", PlayerInfo[mute_id][pMuteTime]);
			SendClientMessage(mute_id, COLOR_WHITE, "- Administratorma Dagadot Chatis Bani !");
            SvMutePlayerEnable(mute_id);
           	PlayerInfo[playerid][pAdmin_Mute] ++;
			PlayerUpdateData(playerid, "pAdmin_Mute", PlayerInfo[playerid][pAdmin_Mute]);
            return true;
        }
        case 11: // Mute
        {
            if(!response) return true;
			new mute_time, mute_reason[32], mute_id = GetPVarInt(playerid, "ActionID"), mstr[256];
			switch(listitem)
			{
			    case 0:
			    {
			        mute_time = 10;
			        mute_reason = "Chat Flood";
			    }
   				case 1:
			    {
			        mute_time = 20;
			        mute_reason = "OOC Sheurawkofa";
			    }
   				case 2:
			    {
			        mute_time = 5;
			        mute_reason = "Motxovna";
			    }
   				case 3:
			    {
			        mute_time = 15;
			        mute_reason = "Administatoris Sheurawkofa";
			    }
       			case 4:
			    {
			        mute_time = 15;
			        mute_reason = "Proektis Sheurawkofa";
			    }
			    case 5:
			    {
			        ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "{ffffff}Mute Reason", "Miutitet Chatis Banis Dadebis Mizezi", "Mute", "Close");
			        return true;
				}
			}
			format(mstr, sizeof(mstr), "Administratorma {ffffff}%s'm(a){FF6347} Daado Chatis Bani {ffffff}%s'(s){FF6347} Mizezi: {ffffff}%s(%smin)",Name(playerid),Name(mute_id),mute_reason,Convert(mute_time*60));
			SendClientMessageToAll(COLOR_LIGHTRED, mstr);
			format(log, sizeof(log), "[Mute] Administrator [%s] Muted - [%s] Reason : [%s]",Name(playerid),Name(mute_id),mute_reason);
			CreateLog("Mute.txt", log);
			PlayerInfo[mute_id][pMute] = 1;
			PlayerUpdateData(mute_id, "pMute", PlayerInfo[mute_id][pMute]);
			PlayerInfo[mute_id][pMuteTime] = mute_time*60;
			PlayerUpdateData(mute_id, "pMuteTime", PlayerInfo[mute_id][pMuteTime]);
			SendClientMessage(mute_id, COLOR_WHITE, "- Administratorma Dagadot Chatis Bani !");
            SvMutePlayerEnable(mute_id);
 			PlayerInfo[playerid][pAdmin_Mute] ++;
			PlayerUpdateData(playerid, "pAdmin_Mute", PlayerInfo[playerid][pAdmin_Mute]);
			return true;
        }
        case 12: // Prison
        {
        	if(!response) return true;
			new prison_time, prison_reason[32], prison_id = GetPVarInt(playerid, "ActionID"), pstr[256];
			switch(listitem)
			{
			    case 0:
			    {
			        prison_time = 20;
			        prison_reason = "Cheater";
			    }
   				case 1:
			    {
			        prison_time = 15;
			        prison_reason = "NonRP Action / RP Avoid";
			    }
   				case 2:
			    {
			        prison_time = 15;
			        prison_reason = "Death Match";
			    }
   				case 3:
			    {
			        prison_time = 10;
			        prison_reason = "Spawn Kill";
			    }
       			case 4:
			    {
			        prison_time = 15;
			        prison_reason = "Revenge Kill";
			    }
			    case 5:
			    {
			        ShowPlayerDialog(playerid, 13, DIALOG_STYLE_INPUT, "{ffffff}Prison Reason", "Miutitet Cixeshi Chasmis Mizezi", "Prison", "Close");
			        return true;
				}
			}
			if(GetPVarInt(playerid, "Slient") == 0)
			{
				format(pstr, sizeof(pstr), "Administratorma {ffffff}%s'm(a){FF6347} Chasva Cixeshi {ffffff}%s{FF6347} Mizezi: {ffffff}%s(%smin)",Name(playerid),Name(prison_id),prison_reason,Convert(prison_time*60));
				SendClientMessageToAll(COLOR_LIGHTRED, pstr);
			}
			format(log, sizeof(log), "[Prison] Administrator [%s] Prisoned - [%s] Reason : [%s]",Name(playerid),Name(prison_id),prison_reason);
			CreateLog("Prison.txt", log);
			PlayerInfo[prison_id][pPrison] = 1;
			PlayerUpdateData(prison_id, "pMute", PlayerInfo[prison_id][pMute]);
			PlayerInfo[prison_id][pPrisonTime] = prison_time*60;
			PlayerUpdateData(prison_id, "pMuteTime", PlayerInfo[prison_id][pMuteTime]);
			SendClientMessage(prison_id, COLOR_WHITE, "- Administratorma Chagsvat Cixeshi !");
            SpawnPlayer(prison_id);
            PlayerTextDrawColor(prison_id, Timer_PTD[prison_id], -1523963137);
          	PlayerInfo[playerid][pAdmin_Prison] ++;
			PlayerUpdateData(playerid, "pAdmin_Prison", PlayerInfo[playerid][pAdmin_Prison]);
            return true;
        }
        case 13: // Prison Custom Reason
        {
      		if(!response) return true;
			if(!strlen(inputtext)) return true;
			new prison_time = 10, prison_reason[32], prison_id = GetPVarInt(playerid, "ActionID"), pstr[256];
			SetString(prison_reason, inputtext);
			format(pstr, sizeof(pstr), "Administratorma {ffffff}%s'm(a){FF6347} Chasva Cixeshi {ffffff}%s{FF6347} Mizezi: {ffffff}%s(%smin)",Name(playerid),Name(prison_id),prison_reason,Convert(prison_time*60));
			SendClientMessageToAll(COLOR_LIGHTRED, pstr);
			PlayerInfo[prison_id][pPrison] = 1;
			PlayerUpdateData(prison_id, "pPrison", PlayerInfo[prison_id][pPrison]);
			PlayerInfo[prison_id][pPrisonTime] = prison_time*60;
			PlayerUpdateData(prison_id, "pPrisonTime", PlayerInfo[prison_id][pPrisonTime]);
			SpawnPlayer(prison_id);
			SendClientMessage(prison_id, COLOR_WHITE, "- Administratorma Chagsvat Cixeshi !");
            SpawnPlayer(prison_id);
           	PlayerInfo[playerid][pAdmin_Prison] ++;
			PlayerUpdateData(playerid, "pAdmin_Prison", PlayerInfo[playerid][pAdmin_Prison]);
            return true;
        }
        case 14: // Enter / Buy Bussiness
        {
            if(!response) return true;
            new bizid = GetPVarInt(playerid, "bizid");
            switch(listitem)
            {
                case 0: // Enter
                {
                    SetPlayerPosEx(playerid, BizzInfo[bizid][bEnteredPos][0], BizzInfo[bizid][bEnteredPos][1], BizzInfo[bizid][bEnteredPos][2], 2000);
                    SetPlayerInterior(playerid, BizzInfo[bizid][bInterior]);
                    SetPlayerVirtualWorld(playerid, bizid+22);
                    SetPlayerFacingAngle(playerid, BizzInfo[bizid][bEnteredAngle]);
                    SetCameraBehindPlayer(playerid);
                    SetTimerEx("FindBizzBug", 1000, false, "i", playerid);
                    return true;
                }
                case 1: // Buy
                {
                    if(PlayerInfo[playerid][pLicense][LICENSE_BIZZ] == 0) return senderror(playerid, "Tkven Ar Gakvt Biznesis Licenzia! Ageba Shegidzliat Meriashi");
                    if(PlayerInfo[playerid][pBizz] != 0) return senderror(playerid, "Tkven Ukve Gakvt Biznesi !");
                    if(PlayerInfo[playerid][pCash] < BizzInfo[bizid][bPrice]) return SendClientMessage(playerid, COLOR_BIZZ, "[Error]:{ffffff} Ar Gakvt Sakmarisi Tanxa");
                    PlayerInfo[playerid][pCash] -= BizzInfo[bizid][bPrice];
                    PlayerInfo[playerid][pBizz] = bizid;

                    SavePlayerData(playerid);

                    BizzInfo[bizid][bLock] = 0;
                    BizzInfo[bizid][bOwned] = 1;
                    SetString(BizzInfo[bizid][bOwner], Name(playerid));

                    SendClientMessage(playerid, COLOR_BIZZ, "[Bussiness]{ffffff} Tkven Sheidzinet Biznesi, Samartavad Gamoikenet: /bmenu");
                    format(log_str, sizeof(log_str), "%s'm(a) Sheidzina Saxli Da Gadaixada: %d$", Name(playerid), BizzInfo[bizid][bPrice]);
	   				CreateLog("Money", log_str);
                    SetPlayerPosEx(playerid, BizzInfo[bizid][bEnteredPos][0], BizzInfo[bizid][bEnteredPos][1], BizzInfo[bizid][bEnteredPos][2], 2000);
                    SetPlayerInterior(playerid, BizzInfo[bizid][bInterior]);
                    SetPlayerVirtualWorld(playerid, bizid+22);
                    SetPlayerFacingAngle(playerid, BizzInfo[bizid][bEnteredAngle]);
                    SetCameraBehindPlayer(playerid);
                    RenewBizz(bizid);
                    SaveBizzData(bizid);
                    SetTimerEx("FindBizzBug", 1000, false, "i", playerid);
                    return true;
                }
            }
            return true;
        }
        case 15: // Enter Bizz With Price
        {
            if(!response) return true;
            new bizid = GetPVarInt(playerid, "bizid");
            if(!GetString(BizzInfo[bizid][bOwner], Name(playerid)))
            {
                if(PlayerInfo[playerid][pCash] < BizzInfo[bizid][bEnterPrice]) return senderror(playerid, "Ar Gakvt Sakmarisi Tanxa");
                PlayerInfo[playerid][pCash] -= BizzInfo[bizid][bEnterPrice];
                BizzInfo[bizid][bSafe] += BizzInfo[bizid][bEnterPrice];
                format(log_str, sizeof(log_str), "%s'm(a) Shevida biznesshi da gaidaxada: %d$", Name(playerid), BizzInfo[bizid][bEnterPrice]);
	   			CreateLog("Money", log_str);
            }
            SetPlayerPosEx(playerid, BizzInfo[bizid][bEnteredPos][0], BizzInfo[bizid][bEnteredPos][1], BizzInfo[bizid][bEnteredPos][2], 2000);
            SetPlayerInterior(playerid, BizzInfo[bizid][bInterior]);
            SetPlayerVirtualWorld(playerid, bizid+22);
            EnterBizz[playerid] = bizid;
            SetPlayerFacingAngle(playerid, BizzInfo[bizid][bEnteredAngle]);
            SetCameraBehindPlayer(playerid);
            SaveBizzData(bizid);
            SetTimerEx("FindBizzBug", 1000, false, "i", playerid);
            return true;
        }
        case 16: // Bussiness Menu
        {
            if(!response) return true;
            new bizzid = GetPVarInt(playerid, "BizzID"), string[256];
            switch(listitem)
            {
                case 0: // Lock / Unlock
                {
                    if(BizzInfo[bizzid][bLock] == 1) BizzInfo[bizzid][bLock] = 0;
                    else BizzInfo[bizzid][bLock] = 1;
                    PC_EmulateCommand(playerid, "/bmenu");
                    return true;
                }
                case 1: // Statistic
                {
                    ShowBizzStats(playerid, bizzid);
                    return true;
                }
                case 2: // Buy Products
                {
                    if(BizzInfo[bizzid][bProducts] >= MAX_BIZZ_PRODUCT) return SendClientMessage(playerid, COLOR_GREY, "Tkvens Bizness Ar Chirdeba Produkti");
                    new products_price = (MAX_BIZZ_PRODUCT-BizzInfo[bizzid][bProducts]) * 50;
                    SetPVarInt(playerid, "BizzProductPrice", products_price);
                    format(string, sizeof(string), "{ffffff}Produktebis Shesavsebad Sachiroa - %d$",products_price);
                    ShowPlayerDialog(playerid, 17, DIALOG_STYLE_MSGBOX, "Products", string, "Buy", "Back");
                    return true;
                }
                case 3: // Set Enter Price
                {
                    format(string, sizeof(string), "{ffffff}Miutitet Biznesshi Shesvlis Fasi\n\nMin-500$ / Max-15000$");
                    ShowPlayerDialog(playerid, 18, DIALOG_STYLE_INPUT, "Enter Price", string, "Set", "Back");
                    return true;
                }
                case 4: // Product Price
                {
                    ShowPlayerDialog(playerid, 30, DIALOG_STYLE_INPUT, "Product Price", "{ffffff}\n\nChawere Produktebis Fasebi:\n\n", "Set", "Close");
                    return true;
                }
                case 5: // Sell Bizz
                {
                    new i=PlayerInfo[playerid][pBizz];
                    SetPlayerPosEx(playerid, BizzInfo[i][bExitedPos][0], BizzInfo[i][bExitedPos][1], BizzInfo[i][bExitedPos][2], 2000);
                    SetPlayerInterior(playerid, 0);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerFacingAngle(playerid, BizzInfo[i][bExitedAngle]);
                    SetCameraBehindPlayer(playerid);
                    BizzInfo[i][bLock] = 1;
                    BizzInfo[i][bOwned] = 0;
                    SetString(BizzInfo[i][bOwner], "For Sale");
                    BizzInfo[i][bProducts] = 0;
                    BizzInfo[i][bProductPrice] = 1000;
                    BizzInfo[i][bEnterPrice] = 1000;
                    PlayerInfo[playerid][pBizz] = 0;
                    PlayerUpdateData(playerid, "pBizz", PlayerInfo[playerid][pBizz]);
                    PlayerInfo[playerid][pBank] += BizzInfo[i][bSafe] / 2;
                    PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
                    PlayerInfo[playerid][pCash] += BizzInfo[i][bPrice];
                    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                    format(log_str, sizeof(log_str), "%s'm(a) gakida biznesi da miigo: %d$", Name(playerid), BizzInfo[i][bSafe] / 2);
	   				CreateLog("Money", log_str);
	   				format(log_str, sizeof(log_str), "%s'm(a) gakida biznesi da miigo: %d$", Name(playerid), BizzInfo[i][bPrice]);
	   				CreateLog("Money", log_str);
                    BizzInfo[i][bSafe] = 1000;

                    RenewBizz(i);
                    SavePlayerData(playerid);
                    SaveBizzData(i);
                    return true;
                }
            }
            return true;
        }
        case 17: // Buy Products
        {
            if(!response) return PC_EmulateCommand(playerid, "/bmenu");
            new products_price = GetPVarInt(playerid, "BizzProductPrice"), bizzid = GetPVarInt(playerid, "BizzID");
            if(PlayerInfo[playerid][pCash] < products_price) return senderror(playerid, "Ar Gakvt Sakmarisi Tanxa !");
            PlayerInfo[playerid][pCash] -= products_price;
            BizzInfo[bizzid][bProducts] = MAX_BIZZ_PRODUCT;
            SendClientMessage(playerid, COLOR_YELLOW, "Tkven Ikidet Produktebi Biznesistvis");
            format(log_str, sizeof(log_str), "%s'm(a) ikida produqtebi biznesistvis: %d$", Name(playerid), products_price);
	   		CreateLog("Money", log_str);
            SavePlayerData(playerid);
            SaveBizzData(bizzid);
            return true;
        }
        case 18: // Change Enter Price
        {
            if(!response) return PC_EmulateCommand(playerid, "/bmenu");
            new input = strval(inputtext);
            if(!input || input < 500 || input > 15000) return senderror(playerid, "Shesvlis Fasi Unda Ikos - Min:500$ / Max:15000$");
            BizzInfo[PlayerInfo[playerid][pBizz]][bEnterPrice] = input;
            SendClientMessage(playerid, COLOR_YELLOW, "Biznesshi Shesvlis Fasi Dakenda");
            SaveBizzData(PlayerInfo[playerid][pBizz]);
            PC_EmulateCommand(playerid, "/bmenu");
            return true;
        }
        case 19: // Market 24/7 Items
        {
            if(!response) return true;
            new string[156], bought = -1;
            for(new i = 1; i <= TotalBizz; i ++)
            {
                if(!IsPlayerInRangeOfPoint(playerid, 9.0, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2])) continue;
                if(GetPlayerVirtualWorld(playerid) == i+22)
                {
                    if(BizzInfo[i][bProducts] <= 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Biznesshi Ar Aris Sakmarisi Produkti");
                        return true;
                    }
                    new price = ((listitem+1) * BizzInfo[i][bProductPrice]);
                    if(PlayerInfo[playerid][pCash] < price)
                    {
                        format(string, sizeof(string), "[Shecdoma]:{ffffff} Ar Gakvt Sakmarisi Tanxa ! Sachiroa: "color_bizz"%d$",price);
                        SendClientMessage(playerid, COLOR_BIZZ, string);
                        return true;
                    }
                    switch(listitem)
                    {
                        case 0: // Phone
                        {
                            format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt %s",MarketItems[listitem]);
                            if(IsPlayerHavePhone(playerid)) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            //if(GetPlayerItem(playerid, GetItemModelById(ITEM_PHONE_1))) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            //if(PlayerInfo[playerid][pPhone] == 1) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            //PlayerInfo[playerid][pPhone] = 1;
                            GivePlayerItem(playerid, GetItemModelById(ITEM_PHONE_1));
                            bought ++;
                        }
                        case 1: // Phone SIM Card
                        {
                            format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt %s",MarketItems[listitem]);
                            if(GetPlayerItem(playerid, GetItemModelById(ITEM_SIMCARD))) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            PlayerInfo[playerid][pNumber] = Random(10000, 99999);
                            GivePlayerItem(playerid, GetItemModelById(ITEM_SIMCARD));
                            //if(PlayerInfo[playerid][pSIM] == 1) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            //PlayerInfo[playerid][pSIM] = 1;
                            bought ++;
                        }
                        case 2: // Watch
                        {
                            format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt %s",MarketItems[listitem]);
                            if(PlayerInfo[playerid][pWatch] == 1) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            PlayerInfo[playerid][pWatch] = 1;
                            bought ++;
                        }
                        case 3: // Mask
                        {
                            format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt %s",MarketItems[listitem]);
                            if(PlayerInfo[playerid][pMask] == 1 || maskOn[playerid]) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            PlayerInfo[playerid][pMask] = 1;
                            bought ++;
                        }
                  		case 4: // First Aid Kit
                        {
                            format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt Sakmarisi %s",MarketItems[listitem]);
							if(CountPlayerItem(playerid, GetItemModelById(ITEM_MEDIC)) >= 10) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            GivePlayerItem(playerid, GetItemModelById(ITEM_MEDIC));
                            bought ++;
                        }
                        case 5: // Rope
                        {
                    		format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt Sakmarisi Toki | %d",PlayerInfo[playerid][pRope]);
                            if(PlayerInfo[playerid][pRope] >= 10) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            PlayerInfo[playerid][pRope] ++;
						    bought ++;
                        }
                        case 6: // Directory
                        {
                            format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt %s",MarketItems[listitem]);
                            if(PlayerInfo[playerid][pDirectory] == 1) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            PlayerInfo[playerid][pDirectory] = 1;
						    bought ++;
                        }
        				case 7: // Cigarette
                        {
                            GivePlayerItem(playerid, GetItemModelById(ITEM_CIGARETTE));
                            bought ++;
                        }
        				case 8: // BoomBox
                        {
                            GivePlayerItem(playerid, GetItemModelById(ITEM_BOOMBOX));
                            bought ++;
                        }
        				case 9: // BoomBox
                        {
                        	format(string, sizeof(string), "[Shecdoma]:{ffffff} Tkven Ukve Gakvt %s",MarketItems[listitem]);
                            if(RobbingTools[playerid]) return SendClientMessage(playerid, COLOR_BIZZ, string);
                            RobbingTools[playerid] = true;
                            bought ++;
                        }
                    }
                    if(bought == 0)
                    {
                        if(random(100) < 20) GivePlayerExp(playerid, 1);
                        PlayerInfo[playerid][pCash] -= price;
                        BizzInfo[i][bSafe] += price;
                        BizzInfo[i][bProducts] -= 2;
                        SavePlayerData(playerid);
                        SaveBizzData(i);
                        format(string, sizeof(string), "[Market] -{ffffff} Tkven Sheidzinet: "color_bizz"%s{ffffff} | Fasi: "color_bizz"%d$",MarketItems[listitem],price);
                        SendClientMessage(playerid, COLOR_BIZZ, string);
                        format(log_str, sizeof(log_str), "%s'm(a) sheidzina magaziashi %s - fasi: %d$", Name(playerid),MarketItems[listitem],price);
	   					CreateLog("Money", log_str);
                    }
                }
            }
            return true;
        }
        case 20: // Restourant Items
        {
            if(!response) return true;
            new string[128], bought = -1;
            for(new i = 1; i <= TotalBizz; i ++)
            {
                if(!IsPlayerInRangeOfPoint(playerid, 9.0, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2])) continue;
                if(GetPlayerVirtualWorld(playerid) == i+22)
                {
                    new price = ((listitem+1) * BizzInfo[i][bProductPrice]);
                    if(PlayerInfo[playerid][pCash] < price)
                    {
                        format(string, sizeof(string), "[Shecdoma]:{ffffff} Ar Gakvt Sakmarisi Tanxa ! Sachiroa: "color_bizz"%d$",price);
                        SendClientMessage(playerid, COLOR_BIZZ, string);
                        return true;
                    }
					switch(listitem)
					{
					    case 0,1,2: bought ++;
					}
                    if(bought == 0)
                    {
                        PlayerInfo[playerid][pCash] -= price;
                        BizzInfo[i][bSafe] += price;
                        SavePlayerData(playerid);
                        SaveBizzData(i);
                        format(string, sizeof(string), "[Market] -{ffffff} Tkven Miirtvit: "color_bizz"%s{ffffff} | Fasi: "color_bizz"%d$",MarketItems[listitem],price);
                        SendClientMessage(playerid, COLOR_BIZZ, string);
						GivePlayerItem(playerid, GetItemModelById(ITEM_FAST_FOOD));
						format(log_str, sizeof(log_str), "%s'm(a) ikida sachmeli magaziashi %s - fasi: %d$", Name(playerid),MarketItems[listitem],price);
	   					CreateLog("Money", log_str);
                    }
                }
            }
            return true;
        }
        case 21: // Fraction Uniforms
        {
            if(!response) return true;
            new member = PlayerInfo[playerid][pMember], form = PlayerInfo[playerid][pForm];
            new nearForm = GetNearestFormPickup(playerid);
            if(nearForm != FRACTION_NONE && nearForm == member)
            {
                if(!form)
                {
                    PlayerInfo[playerid][pForm] = member;
                    SendClientMessage(playerid, 0x5DADE2FF, "- Tkven Dabrundit Samushaoze");
                }
                else if(form)
                {
                    PlayerInfo[playerid][pForm] = FRACTION_NONE;
                    SendClientMessage(playerid, 0x5DADE2FF, "- Tkven Gaxvedit Shvebulebashi !");
                }
                SetPlayerSkinEx(playerid);
            }
            return true;
        }
       	case 22: // Teleport
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1134.9340,-1755.3342,13.2847);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1134.9340,-1754.9709,13.5791);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 1:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1510.1595,-848.2604,65.5188);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1510.1595,-848.2604,65.5188);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 2:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2026.0707,179.2475,28.8359);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -2026.0707,179.2475,28.8359);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 3:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1797.3173,839.3347,10.6719);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1797.3173,839.3347,10.6719);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 4:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 934.5005,-1745.0565,13.5469);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 934.5005,-1745.0565,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 5:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2182.6470,-2276.5984,13.5337);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2182.6470,-2276.5984,13.5337);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 6:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2201.7083,-1697.3547,13.6818);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2201.7083,-1697.3547,13.6818);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
					}
				case 7:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2042.7015,-92.3698,35.1718);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -2042.7015,-92.3698,35.1718);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 8:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -1077.7568,-2305.7173,52.3192);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -1077.7568,-2305.7173,52.3192);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 9:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1249.2120,-1819.5248,13.4101);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1249.2120,-1819.5248,13.4101);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 10:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1483.4178,-1743.8053,13.5469);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1483.4178,-1743.8053,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 11:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1466.0204,-1013.3198,26.8438);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1466.0204,-1013.3198,26.8438);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 12:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 82.1025,1920.3364,17.6807);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 82.1025,1920.3364,17.6807);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 13:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1790.5914,-1742.2714,13.5469);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1790.5914,-1742.2714,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 14:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1359.0708,-1278.9153,13.3582);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1359.0708,-1278.9153,13.3582);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 15:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -1336.3948,466.9529,7.1875);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -1336.3948,466.9529,7.1875);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 16:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 320.1389,1952.5820,17.6406);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 320.1389,1952.5820,17.6406);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 17:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1630.3284,-1150.3087,24.0703);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1630.3284,-1150.3087,24.0703);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 18:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1959.5488,-2180.7593,13.5469);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1959.5488,-2180.7593,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 19:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2424.8781738281,-769.12707519531,1421.9255371094);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2424.8781738281,-769.12707519531,1421.9255371094);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 20:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1450.6117,-2467.6792,13.5547);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1450.6117,-2467.6792,13.5547);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 21:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2483.7451,2773.3271,10.4680);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2483.7451,2773.3271,10.4680);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				case 22:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2695.5076,-1704.6638,11.8438);
						}
						else
						{
							SetPlayerPos(playerid, 2695.5076,-1704.6638,11.8438);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);

						return true;
					}
				case 23:
					{
						SetPlayerPos(playerid, 265.0579,78.0565,1004.6830);
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,6);
						return true;
					}
				case 24:
					{
						SetPlayerPos(playerid, -219.1858,1410.8696,30.5167);
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,18);
						SetPlayerVirtualWorld(playerid, 1);
						return true;
                     }
				 case 25:
				     {
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2034.9454,1013.4725,10.8203);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2034.9454,1013.4725,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
                     }
                 case 26:
				     {
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 455.3977,-1498.7764,31.0628);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 455.3977,-1498.7764,31.0628);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
                     }
                 case 27:
				     {
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 82.1802,1171.2877,18.6565);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 82.1802,1171.2877,18.6565);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
                     }
  				 case 28:
				     {
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2347.4998,-2302.9875,13.5469);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2347.4998,-2302.9875,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
                     }
      			case 29:
				     {
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2119.3523,-1117.0657,25.3120);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2119.3523,-1117.0657,25.3120);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Tkven Gadateleportirdit Mititebul Adgilze");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
        case 23: // AutoSchool
        {
            if(!response) return true;
			if(PlayerInfo[playerid][pLicense][LICENSE_CAR] == 1) return senderror(playerid, "Tkven Ukve Gakvt Martvis Mowmoba.");
			if(AutoSchoolStatus[playerid] != -1) return senderror(playerid, "Tkven Ukve Imkofebit Praktikis Gamocdaze.");
            AutoSchoolStatus[playerid] = 0;
            sendinfo(playerid, "Tkven Daiwyet Praktikuli Gamocdis Testi, Gisurvebt Warmatebebs.");
            sendinfo(playerid, "Miyevit Witel Checkpointebs Rata Warmatebit Daasrulot Gamocda.");
            return true;
        }
        case 24: // Spawn Change
		{
			if(!response) return true;
			new string[100], manyhouse = 0;
			switch(listitem)
            {
			    case 1:
                {
					if(!CountPlayerHouses(playerid)) return senderror(playerid, "Tkven Ar Gakvt Saxli");
                    manyhouse ++;
                    format(gstr, sizeof(gstr), "{ffffff}[1] HouseID: %d\n[2] HouseID: %d\n[3] HouseID: %d",PlayerInfo[playerid][pHouse][0],PlayerInfo[playerid][pHouse][1],PlayerInfo[playerid][pHouse][2]);
                    ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "{ffffff}- Spawn House", gstr, "Spawn", "Close");
                    SpawnType[playerid] = listitem+1;
                    return true;
			    }
			    case 2:
                {
			        if(PlayerInfo[playerid][pMember] == 0) return senderror(playerid, "Tkven Ar Xart Arcert Frakciashi");
			        if(PlayerInfo[playerid][pForm] == 0) return senderror(playerid, "Tkven Ar Gacviat Samushao Forma");
			    }
			    case 3:
			    {
			        if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror(playerid, "Tkven Ar Xart Familyshi");
			        if(FamilyInfo[p_family_id][fMansion] == 0) return senderror(playerid, "Tkven Familys Ar Akvs Mansion");
			    }
			}
            if(manyhouse == 0)
            {
                SpawnType[playerid] = listitem+1;
                format(string, sizeof(string), "{ffffff}Axali Spawn Archeulia: "color_pretty_blue"%s",SpawnNames[listitem]);
                SendClientMessage(playerid, -1, string);
            }
			return 1;
		}
        case 25: // Event Menu
        {
            if(!response) return true;
            switch(listitem)
            {
                case 0: PC_EmulateCommand(playerid, "/eventmenu");
                case 1:
                {
                    if(EventInfo[event_On] == true)
                    {
                        EventInfo[event_On] = false;
                        SetString(EventInfo[event_Name], "");
                        EventInfo[event_Time] = 0;
                        EventInfo[event_AutoHealth] = false;
                        EventInfo[event_AutoArmour] = false;
                        EventInfo[event_Skin] = 0;
                        for(new i = 0; i < 9; i ++) EventInfo[event_Weapons][i] = false;
                        EndEvent();
                    }
                    else
                    {
						ShowEventMenu2(playerid);
                    }
                }
            }
            return true;
        }
        case 26: // Event Menu 2
        {
            if(!response) return ShowEventMenu(playerid);
            switch(listitem)
            {
                case 0:
                {
                    ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "{ffffff}Event Name", "\n\n{ffffff}Chaweret Eventi Saxeli:\n", "Enter", "Back");
                    return true;
                }
                case 1:
                {
                    ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "{ffffff}Event Second", "15 sec\n25 sec\n60 sec\n75 sec\n120sec\n180 sec\n240 sec\n300 sec", "Enter", "Back");
                    return true;
                }
                case 2: EventInfo[event_AutoHealth] = !EventInfo[event_AutoHealth], ShowEventMenu2(playerid);
            	case 3: EventInfo[event_AutoArmour] = !EventInfo[event_AutoArmour], ShowEventMenu2(playerid);
            	case 4:
            	{
            	    ShowPlayerDialog(playerid, 80, DIALOG_STYLE_INPUT, "{ffffff}Event Skin", "Chaweret Skinis ID", "Enter", "Back");
            	    return true;
            	}
            	case 5:
            	{
            	    new string[70*sizeof(EventWeapons)], str[60], wpname[30];
            	    string = "{ffffff}Weapon\t{ffffff}Status\n";
					for(new i = 0; i < sizeof(EventWeapons); i ++)
					{
					    GetWeaponName(EventWeapons[i], wpname, 30);
					    format(str, sizeof(str), "[%d] - %s\t%s\n",i+1,wpname,(EventInfo[event_Weapons][i])?("{7DCEA0}Enabled"):("{E74C3C}Disabled"));
					    strcat(string, str);
					}
					ShowPlayerDialog(playerid, 81, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Event Weapons", string, "Action", "Back");
            	    return true;
            	}
                case 6:
                {
                    if(!strlen(EventInfo[event_Name]))
                    {
                        senderror(playerid, "Sheavset Kvela Veli !");
                        ShowEventMenu2(playerid);
                        return true;
                    }
                    if(EventInfo[event_Time] <= 0)
                    {
                        senderror(playerid, "Sheavset Kvela Veli !");
                        ShowEventMenu2(playerid);
                        return true;
                    }
                    EventInfo[event_On] = true;
                    GetPlayerPos(playerid, EventInfo[event_PosX], EventInfo[event_PosY], EventInfo[event_PosZ]);
                    EventInfo[event_Interior] = GetPlayerInterior(playerid);
                    EventInfo[event_VirtualWorld] = GetPlayerVirtualWorld(playerid);
                    StartEvent();
                }
            }
            return true;
        }
        case 27: // Event Menu 3
        {
            if(!response)
            {
                ShowEventMenu2(playerid);
                return true;
            }
            if(!strlen(inputtext))
            {
                ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "{ffffff}Event Name", "\n{27AE60}_______________________\n{ffffff}Chaweret Eventi Saxeli:\n", "Enter", "Back");
                return true;
            }
            SetString(EventInfo[event_Name], inputtext);
            ShowEventMenu2(playerid);
            return true;
        }
        case 28: // Event Menu 4
        {
            if(!response)
            {
                ShowEventMenu2(playerid);
                return true;
            }
            new ev_sec=0;
            switch(listitem)
            {
                case 0: ev_sec = 15;
                case 1: ev_sec = 25;
                case 2: ev_sec = 60;
                case 3: ev_sec = 75;
                case 4: ev_sec = 120;
                case 5: ev_sec = 180;
                case 6: ev_sec = 240;
                case 7: ev_sec = 300;
            }
            EventInfo[event_Time] = ev_sec;
            ShowEventMenu2(playerid);
            return true;
        }
        case 668:
		{
	    	if(!response) return DeletePVar(playerid, "MCapture");
		    if(strval(inputtext) == GetPVarInt(playerid, "MCapture"))
		    {
	    		if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
				if(FrakMF[PlayerInfo[playerid][pMember]] != 0) return senderror(playerid,"Tqvenma Mafiam Ukve Dacapta Am Saatshi.");
				if(!startmcapture) return senderror(playerid,"Am Dros Es Daushvebelia");
	  			if(mafiaon == 0) return sendinfo(playerid, "Capture Gamortulia Administraciis Mier");
			    for(new i = 0; i < 30; i++)
			    {
			        if(PlayerToKvadrat(playerid,McInfo[i][Coords][0], McInfo[i][Coords][1],McInfo[i][Coords][2],McInfo[i][Coords][3]) && McInfo[i][FrakVlad] != PlayerInfo[playerid][pMember] && ZoneOnMBattle[i]==0)
					{
						new playerss = 0;
						new playeri = 0;
						foreach(new m:Player)
						{
							if(PlayerInfo[m][pMember] == McInfo[i][FrakVlad]) playerss++;
							if(PlayerInfo[m][pMember] == PlayerInfo[playerid][pMember]) playeri++;
						}
					    if(playeri < 1) return senderror(playerid,"Ver Daiwyebt Teritoriis Agebas, Tqven Bandashi Unda Iyos Minimum 2 Kaci Rom Daipyrot Teritoria");
					    if(playerss < 1) return senderror(playerid,"Ver Daiwyebt Teritoriis Agebas, Mowinaagmdege Bandashi Unda Iyos Minimum 2 Kaci Rom Daipyrot Teritoria");
						if(FrakMF[McInfo[i][FrakVlad]] != 0) return senderror(playerid,"Am Mafias Ukve Qonda Am Saatshi Capture");
	  					FrakMF[McInfo[i][FrakVlad]] = 1;
						FrakMF[PlayerInfo[playerid][pMember]] = 1;
						MSafeTime[i] = 601;
						McInfo[i][Napad] = PlayerInfo[playerid][pMember];
						ZoneOnMBattle[i] = 1;
	      				format(YCMDstr, 256, "Mafia %s{FFFFFF} Captavs Mafias %s{FFFFFF} Capter: %s", GetMafiaNamec(McInfo[i][Napad]), GetMafiaNamec(McInfo[i][FrakVlad]), Name(playerid));
						SendFractionMessage(COLOR_WHITE, YCMDstr, FRACTION_LCN);
						SendFractionMessage(COLOR_WHITE, YCMDstr, FRACTION_YAKUZA);
						SendFractionMessage(COLOR_WHITE, YCMDstr, FRACTION_RM);
						SendAdminMessage(COLOR_RED, YCMDstr);
						GangZoneFlashForAll(McInfo[i][ID],0x00FF00AA);
						if(MfCheckOn == 0)
						{
							MfCheckTimer = SetTimer("MfCheck", 1000,1);
							MfCheckOn = 1;
						}
						break;
					}
				}
		    }
		    else
		    {
		        senderror(playerid, "Tkvens Mier Mititebuli Pasuxi Arasworia");
			}
		}
        case 80: // Event Menu 5
        {
            if(!response) return ShowEventMenu2(playerid);
			new skinid = strval(inputtext);
			if(!(0 <= skinid <= 311)) return ShowEventMenu2(playerid), senderror(playerid, "Araswori Skinis ID");
			EventInfo[event_Skin] = skinid;
			ShowEventMenu2(playerid);
            return true;
        }
        case 81: // Event Menu 6
        {
            if(!response) return ShowEventMenu2(playerid);
            EventInfo[event_Weapons][listitem] = !EventInfo[event_Weapons][listitem];
    	    new string[70*sizeof(EventWeapons)], str[60], wpname[30];
    	    string = "{ffffff}Weapon\t{ffffff}Status\n";
			for(new i = 0; i < sizeof(EventWeapons); i ++)
			{
			    GetWeaponName(EventWeapons[i], wpname, 30);
			    format(str, sizeof(str), "[%d] - %s\t%s\n",i+1,wpname,(EventInfo[event_Weapons][i])?("{7DCEA0}Enabled"):("{E74C3C}Disabled"));
			    strcat(string, str);
			}
			ShowPlayerDialog(playerid, 81, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Event Weapons", string, "Action", "Back");
            return true;
        }
        case 29:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pJob] != 1) return senderror2(playerid, "Tkven Ar Mushaobt Fermashi, Samushaos Dawkeba Shegidzliat Meriashi /gps >> Mtavari Adgilebi >> City Hall");
                if(jobID[playerid] != JOB_FARM)
                {
                    FARM_INSTRUMENT[playerid] = 1;
                    jobID[playerid] = JOB_FARM;
                    SetPlayerSkin(playerid, 132);
                    SetPlayerAttachedObject(playerid,9,18890,6,0.04,-0.05,0.01,0.00,0.00,0.00,1.00,0.99,0.43);
                    SendClientMessage(playerid, 0x42B02CFF, !"[Mititeba] Mosavlis Misagebad, Gaagrdzelet Mititebebi");
                    SendClientMessage(playerid, 0x42B02CFF, !"[Mititeba] Midit Mosavaltan, Daachiret 'ALT' Da Ar Aushvat Sanam Ar Damtavrdeba Dro");
                }
                else
                {
                    FARM_INSTRUMENT[playerid] = 0;
				    RemovePlayerAttachedObject(playerid, 9);
                    jobID[playerid] = 0;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPlayerSkinEx(playerid);
                }
			}
			return true;
		}
        case 30: // Product Price 2
        {
            if(!response) return true;
            new bizzid = GetPVarInt(playerid, "bizid");
            new price = strval(inputtext);
            if(!price || price > 25000 || price < 100) return senderror(playerid, "Produktebis Fasi min:100$/max:25000$");
            BizzInfo[bizzid][bProductPrice] = price;
            SendClientMessage(playerid, COLOR_YELLOW, "Produktebis Fasi Dakenda");
            SaveBizzData(bizzid);
            return true;
        }
        case 31: // Take Gov Weapon
        {
            new string[100], gunname[32], gunammo;
            if(listitem != sizeof(GovGuns)) GetWeaponName(GovGuns[listitem], gunname, sizeof(gunname));
            if(response)
            {
                switch(listitem)
                {
                    case 0: gunammo = 1;
                    case 1: gunammo = 25;
                    case 2: gunammo = 15;
                    case 3: gunammo = 100;
                    case 4: gunammo = 150;
                    case sizeof(GovGuns): gunammo = 2;
                }
                if(gunammo != 2)
                {
                    if(gunammo == 1) format(string, sizeof(string), "You Took: %s",gunname);
                    else format(string, sizeof(string), "You Took: %s (%d)",gunname,gunammo);
                }
                else
                {
                    format(string, sizeof(string), "You Took: Armour (100%%)");
                }
                SendClientMessage(playerid, 0x7FB151FF, string);
                if(gunammo != 2) GivePlayerWeapon(playerid, GovGuns[listitem], gunammo);
                else SetPlayerArmour(playerid, 100.0);
            }
            return true;
        }
        case 32: // MP 1
	    {
	       	if(!response) return true;
    		new Float:x, Float:y, Float:z;
      		GetPlayerPos(playerid, x, y, z);
			switch(listitem)
			{
			    case 0:
			    {
			        foreach(new i:Player)
			        {
						if(GetDistanceBetweenPlayers(playerid,i) < 50)
						{
						    ResetWeapons(i);
						    GameTextForPlayer(i, "ResetWeapons", 1500, 1);
						}
			        }
				}
				case 1:
				{
				    foreach(new i:Player)
				    {
				        if(GetDistanceBetweenPlayers(playerid, i) < 50)
				        {
				            SetPlayerArmour(i, 0);
				            GameTextForPlayer(i, "Armour OFF", 1500, 1);
				        }
				    }
				}
				case 2:
				{
					foreach(new i:Player)
				    {
				        if(PlayerInfo[i][pAdmin] == 0)
				        {
					        if(GetDistanceBetweenPlayers(playerid, i) < 50)
					        {
					            TogglePlayerControllable(i, 1);
					            GameTextForPlayer(i, "UnFreeze", 1500, 1);
					        }
				        }
				    }
				}
			    case 3: ShowPlayerDialog(playerid, 33, DIALOG_STYLE_INPUT, "Enter Weapon ID", "{FFFFFF}Miutitet Iaragis ID, Iaragebi Gadaecemat Mxolod Eventis Motamasheebs", "Shemdeg", "Ukan");
				case 4:
				{
					foreach(new i:Player)
				    {
				        if(GetDistanceBetweenPlayers(playerid, i) < 50)
				        {
				            SetPlayerArmour(i, 100);
				            GameTextForPlayer(i, "Armour ON", 1500, 1);
				        }
				    }
				}
				case 5:
			    {
			        foreach(new i:Player)
			        {
						if(GetDistanceBetweenPlayers(playerid,i) < 50 )
						{
						    SetPlayerHealth(i, 100);
						    GameTextForPlayer(i, "100HP", 1500, 1);
						}
			        }
			    }
				case 6:
				{
					foreach(new i:Player)
				    {
				        if(PlayerInfo[i][pAdmin] == 0)
				        {
					        if(GetDistanceBetweenPlayers(playerid, i) < 50)
					        {
					            TogglePlayerControllable(i, 0);
					            GameTextForPlayer(i, "Freeze", 1500, 1);
					        }
				        }
				    }
				}
				case 7:
				{
					foreach(new i:Player)
				    {
				        if(PlayerInfo[i][pAdmin] == 0)
				        {
					        if(GetDistanceBetweenPlayers(playerid, i) < 50)
					        {
					            SetPlayerHealth(i, 0);
					            GameTextForPlayer(i, "Death", 1500, 1);
					        }
				        }
				    }
				}
				case 8: ShowPlayerDialog(playerid, 73, DIALOG_STYLE_INPUT, "Enter Skin ID", "{FFFFFF}Miutitet Skinis ID, Skinebi Miecemat Mxolod Eventis Motamasheebs", "Shemdeg", "Ukan");
			}
		}
		case 33: // MP 2
	    {
	        if(response)
	        {
				if(!strlen(inputtext))
				{
				    ShowPlayerDialog(playerid, 33, DIALOG_STYLE_INPUT, "Enter Weapon ID", "{FFFFFF}Miutitet Iaragis ID, Iaragebi Gadaecemat Mxolod Eventis Motamasheebs", "Shemdeg", "Ukan");
				    return false;
				}
				new weapid = strval(inputtext);
				if(weapid != 24 && weapid != 25 && weapid != 28 && weapid != 29 && weapid != 30 && weapid != 31 && weapid != 33 && weapid != 34)
				{
				    senderror(playerid, "Am Iaragis Eventze Gacema Akrdzalulia");
				    ShowPlayerDialog(playerid, 33, DIALOG_STYLE_INPUT, "{CC66FF}Event Menu{FFFFFF} | Enter The Weapons ID", "{FFFFFF}Miutitet Iaragis ID, Iaragebi Gadaecemat Mxolod Eventis Motamasheebs", "Shemdeg", "Ukan");
				    return false;
				}
				foreach(new i:Player)
		        {
					new Float:x,Float:y,Float:z;
					GetPlayerPos(playerid, x,y,z);
					if(GetDistanceBetweenPlayers(playerid,i) < 50 )
					{
						GivePlayerWeapon(i, weapid, 9999);
					}
				}
			}
			else
			{
			    PC_EmulateCommand(playerid, "/mp");
			}
		}
        case 34: // Set Leader
        {
            if(response)
            {
                new actionid = GetPVarInt(playerid, "ActionID");
                PlayerInfo[actionid][pMember] = listitem+1;
                PlayerInfo[actionid][pForm] = listitem+1;
                PlayerInfo[actionid][pRank] = FractionInfo[listitem+1][frac_LeaderRank];
                PlayerInfo[actionid][pModel] = FractionSkins[listitem+1][1];
                SpawnType[actionid] = 3;
                SpawnPlayer(actionid);
                SavePlayerData(actionid);
            }
            return true;
        }
        case 35: // ChangeSkin
        {
            if(response)
            {
                new actionid = GetPVarInt(playerid, "ActionID");
                new member = PlayerInfo[playerid][pMember];
                PlayerInfo[actionid][pModel] = FractionSkins[member][listitem];
                SetPlayerSkinEx(actionid);
                SendClientMessage(playerid, COLOR_WHITE, "Liderma Shegicvalat Skini");
                format(gstr, sizeof(gstr), "Tkven Sheucvalet Skini %s'(s)",Name(actionid));
                SendClientMessage(playerid, COLOR_WHITE, gstr);
            }
            return true;
        }
        case 36: // Music Link
	    {
			if(response)
			{
                if(!strlen(inputtext)) return true;
                foreach(new i:Player)
                {
                    StopAudioStreamForPlayer(i);
                    PlayAudioStreamForPlayer(i, inputtext);
                }
			}
            return true;
	    }
        case 37: // House Spawn
        {
            if(!response) return true;
            if(PlayerInfo[playerid][pHouse][listitem] == 0) return SendClientMessage(playerid, 0x0080C0FF, "[Shecdoma]:{ffffff} Archeul Slotshi Ar Gakvt Saxli");
            if(GetMyHouse(Name(playerid), PlayerInfo[playerid][pHouse][listitem]))
            {
                SpawnHouseID[playerid] = PlayerInfo[playerid][pHouse][listitem];
                if(SpawnStatus[playerid] == true)
                {
                    HideSpawnMenu(playerid);
                    SpawnType[playerid] = 2;
                    SpawnPlayer(playerid);
                }
            }
            return true;
        }
        case 38: // Color List
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: SetPlayerColor(playerid, 0xFFFFFFFF);
					case 1: SetPlayerColor(playerid, 0xEF625AFF);
					case 2: SetPlayerColor(playerid, 0xEB372EFF);
					case 3: SetPlayerColor(playerid, 0xFF8306FF);
					case 4: SetPlayerColor(playerid, 0xFFFF04FF);
					case 5: SetPlayerColor(playerid, 0x40FF5CFF);
					case 6: SetPlayerColor(playerid, 0x11FF11FF);
					case 7: SetPlayerColor(playerid, 0x06FFFFFF);
					case 8: SetPlayerColor(playerid, 0x00B1F4FF);
					case 9: SetPlayerColor(playerid, 0x0049F4FF);
					case 10: SetPlayerColor(playerid, 0x8700F4FF);
					case 11: SetPlayerColor(playerid, 0xED01F3FF);
					case 12: SetPlayerColor(playerid, 0xF2029EFF);
					case 13: SetPlayerColor(playerid, 0xF4005BFF);
					case 14: SetPlayerColor(playerid, 0xF40006FF);
	            }
	        }
            return true;
		}
		case 39:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0: ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
					case 1: ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
					case 2: ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
					case 3: ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 0, 0, 0, 1, 1,1);
					case 4: ApplyAnimation(playerid,"JST_BUISNESS","girl_02",4.1,0,0,0,1,1,1);
					case 5: ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1,1);
					case 6: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0,1);
					case 7: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0,1);
					case 8: ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0,1);
					case 9: ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1);
					case 10: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0,1);
					case 11: ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.0, 0, 0, 0, 0, 0,1);
					case 12: ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.0, 0, 0, 0, 0, 0,1);
					case 13: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2); //
					case 14: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
					case 15: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
					case 16: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
					case 17: ApplyAnimation(playerid,"PED","IDLE_taxi",4.0,0,0,0,0,0);
					case 18: ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,0,0,1,1,1);
					case 19: ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,0,0,1,1,1);
					case 20: ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
					case 21: ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",3.0,0,1,1,1,0);
					case 22: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.0, 1, 0, 0, 0, 0);
					case 23: ApplyAnimation(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1,1);
					case 24: ApplyAnimation(playerid,"PED","Gun_stand",4.1,0,1,1,1,1,1);
					case 25: ApplyAnimation(playerid, "KISSING","gfwave2", 4.1,0,1,1,0,0);
					case 26: ApplyAnimation(playerid, "ON_LOOKERS","wave_loop", 4.1,1,1,1,0,0);
					case 27: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.0,0,0,0,0,0);
					case 28: ApplyAnimation(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1,1);
					case 29: ApplyAnimation(playerid,"PED","BIKE_pickupL",4.1,0,0,0,0,0,1);
					case 30: ApplyAnimation(playerid,"GANGS","hndshkaa",4.0, 0, 0, 0, 0, 0,1);
					case 31: ApplyAnimation(playerid,"GANGS","hndshkfa",4.0, 0, 0, 0, 0, 0,1);
					case 32: ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.0, 0, 0, 0, 0, 0,1);
					case 33: ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					case 34: ApplyAnimation(playerid,"GANGS","shake_carK",4.0,0,0,0,0,0);
					case 35: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
					case 36: ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
					case 37: ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
					case 38: ApplyAnimation(playerid,"MISC","scratchballs_01",4.0,0,0,0,0,0);
					case 39: ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
					case 40: ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
					case 41: ApplyAnimation(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
					case 42: ApplyAnimation(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
					case 43: ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
					case 44: ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
					case 45: ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.0,0,0,0,0,0);
					case 46: ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.0,0,0,0,0,0);
					case 47: ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
					case 48: ApplyAnimation(playerid,"PED","gang_gunstand",3.0,0,1,1,1,0);
					case 49: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,1,0,0,0,0,1);
				}
				Animation[playerid] = true;
				TextDrawShowForPlayer(playerid, StopAnimationTD);
			}
		}
		case 41:
		{
		    if(!response) return 1;
			if(PlayerInfo[playerid][pAdmin])
			{
			    switch(listitem)
			    {
			        case 0: // [ Create ]
			        {
						ShowPlayerDialog(playerid, 42, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Name", "\n{ffffff}- Tkven Kmnit Axal Promocode's Serverze\nMiutitet Zogadi Promocode\n\nShemdegi Safexuri "color_promo"Promocode Cash", "Enter", "Exit");
			        }
			        case 1:
			        {
			            ShowPlayerDialog(playerid, 45, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Delete", "\n{ffffff}- Tkven Shlit Promocode's Serveridan\nMiutitet Promocode's Saxeli\n\n", "Delete", "Exit");
			        }
			        case 2:
			        {
         				new PromoName[100], PromoCash, PromoLevel, PromoCount, string[500], strcarter[150], sql_str[200];
				 		format(sql_str, sizeof(sql_str), "SELECT * FROM `promocode` WHERE ID >= '1'");
						mysql_query(connect, sql_str);
						new getrows;
						cache_get_row_count(getrows);
						if(!getrows) return sendpromo(playerid, "Server'ze Araa Promocode");
						string = "{ffffff}Name\t{ffffff}Cash\t{ffffff}Level\t{ffffff}Count\n";
						for new i = 0; i < getrows; i ++ do
						{
						    cache_get_value_name(i, "Text", PromoName, 100);
					 		cache_get_value_name_int(i, "Cash", PromoCash);
					 		cache_get_value_name_int(i, "Level", PromoLevel);
					 		cache_get_value_name_int(i, "Count", PromoCount);
					 		format(strcarter, sizeof(strcarter), color_promo"[%d] -{ffffff} %s\t%d$\t%d\t%d\n",(i+1),PromoName,PromoCash,PromoLevel,PromoCount);
					 		strcat(string, strcarter);
				 		}
				 		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, color_promo"Promocode{ffffff} | List", string, "Exit", "");
			        }
			    }
				return 1;
			}
		}
		case 42:
		{
			if(response)
			{
			    if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 16)
			    {
			        sendpromo(playerid, "PromoCode Saxeli Unda Ikos 3'dan 16' Simbolomde");
			        ShowPlayerDialog(playerid, 42, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Name", "\n{ffffff}- Tkven Kmnit Axal Promocode's Serverze\nMiutitet Zogadi Promocode\n\nShemdegi Safexuri "color_promo"Promocode Cash", "Enter", "Exit");
					return 1;
			    }
			    if(CheckPromocode(inputtext))
			    {
					sendpromo(playerid, "PromoCode Aseti Saxelit Ukve Arsebobs !");
			        return 1;
			    }
			    SetPVarString(playerid, "PromoName", inputtext);
			    ShowPlayerDialog(playerid, 43, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Cash", "\n{ffffff}- Tkven Kmnit Axal Promocode's Serverze\nMiutitet Tanxis Odenoba\n\nShemdegi Safexuri "color_promo"Promocode Level", "Enter", "Exit");
				return 1;
			}
			return 1;
		}
		case 43:
		{
		    if(response)
		    {
		        if(!strval(inputtext) || strval(inputtext) < 1000 || strval(inputtext) > 7000000)
		        {
		            sendpromo(playerid, "PromoCode Tanxa Unda Ikos 1000$'dan 7000000$'mde");
		            ShowPlayerDialog(playerid, 43, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Cash", "\n{ffffff}- Tkven Kmnit Axal Promocode's Serverze\nMiutitet Tanxis Odenoba\n\nShemdegi Safexuri "color_promo"Promocode Level", "Enter", "Exit");
		            return 1;
		        }
		    	SetPVarInt(playerid, "PromoCash", strval(inputtext));
			    ShowPlayerDialog(playerid, 44, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Level", "\n{ffffff}- Tkven Kmnit Axal Promocode's Serverze\nMiutitet Levelis Odenoba\n\nShemdegi Safexuri "color_promo"Promocode Create", "Enter", "Exit");
		        return 1;
		    }
		    return 1;
		}
		case 44:
		{
		    if(response)
		    {
		        if(!strval(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 15)
		        {
		            sendpromo(playerid, "PromoCode Level Unda Ikos 1'dan 15'mde");
		            ShowPlayerDialog(playerid, 44, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Level", "\n{ffffff}- Tkven Kmnit Axal Promocode's Serverze\nMiutitet Levelis Odenoba\n\nShemdegi Safexuri "color_promo"Promocode Create", "Create", "Exit");
		            return 1;
		        }
		    	SetPVarInt(playerid, "PromoLevel", strval(inputtext));
				new promo_name[36];
				GetPVarString(playerid, "PromoName", promo_name, sizeof(promo_name));
	     		CreatePromocode(promo_name, GetPVarInt(playerid, "PromoCash"), GetPVarInt(playerid, "PromoLevel"));
	     		sendpromo(playerid, "Axali PromoCode Sheikmna Warmatebit");
		        return 1;
		    }
		    return 1;
		}
		case 45:
		{
		    if(response)
		    {
		        if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 16 || !CheckPromocode(inputtext))
		        {
                    sendpromo(playerid, "PromoCode Ver Moidzebna");
                    return 1;
		        }
		        DeletePromocode(inputtext);
		        sendpromo(playerid, "PromoCode Warmatebit Waishala Serveridan");
		        return 1;
		    }
		    return 1;
		}
		case 40: // Enter Player Promocode
		{
			if(response)
			{
			    if(PlayerInfo[playerid][pPromouse] == 1) return true;
   				if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 16 || !CheckPromocode(inputtext))
		        {
                    sendpromo(playerid, "PromoCode Ver Moidzebna");
                    return 1;
		        }
        		new PromoName[100], PromoCash, PromoLevel, PromoCount, string[255], sql_str[200];
		 		format(sql_str, sizeof(sql_str), "SELECT * FROM `promocode` WHERE Text = '%s'",inputtext);
				mysql_query(connect, sql_str);
				new getrows;
				cache_get_row_count(getrows);
				if(!getrows) return sendpromo(playerid, "PromoCode Ver Moidzebna");
				for new i = 0; i < getrows; i ++ do
				{
				    cache_get_value_name(i, "Text", PromoName, 100);
			 		cache_get_value_name_int(i, "Cash", PromoCash);
			 		cache_get_value_name_int(i, "Level", PromoLevel);
			 		cache_get_value_name_int(i, "Count", PromoCount);
		 		}
		 		format(string, sizeof(string), color_promo"[PROMO]{ffffff}: Tkven Gamoikenet Promocode: "color_promo"%s{ffffff} Gadmogecat Tanxa: "color_promo"%d${ffffff} Level:"color_promo" %d",PromoName,PromoCash,PromoLevel);
				SendClientMessage(playerid, -1, string);
				PlayerInfo[playerid][pCash] += PromoCash;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		 		PlayerInfo[playerid][pLevel] += PromoLevel;
		 		PlayerUpdateData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
				PlayerInfo[playerid][pPromouse] = 1;
				PlayerUpdateData(playerid, "pPromouse", PlayerInfo[playerid][pPromouse]);
				format(log_str, sizeof(log_str), "%s'm(a) gamoikena promokodi  %s - aigo fuli %d da aigo level %d", Name(playerid),PromoName,PromoCash,PromoLevel);
	   			CreateLog("Money", log_str);
		 		SavePlayerData(playerid);
		 		format(sql_str, sizeof(sql_str), "UPDATE `promocode` SET `Count` = '%d' WHERE Text = '%s'",PromoCount+1,inputtext);
				mysql_query(connect, sql_str);
				return 1;
			}
			return 1;
		}
		case 46: // Settings
		{
            if(!response) return true;
            new string[210];
			switch(listitem)
			{
			    case 0:
			    {
					format(string, sizeof(string), "{ffffff}\n- Tkven Cvlit IP Dacvis Parols\nParoli Unda Sheicavdes 4-dan 12-mde Simbolos\n{ffffff}Axlandeli Paroli:"color_mm" %s\n\nMiutitet Axali Paroli:",PlayerInfo[playerid][pIPKey]);
					ShowPlayerDialog(playerid, 48, DIALOG_STYLE_INPUT, color_mm"MainMenu{ffffff} | IP Key", string, "Set", "Back");
					return true;
			    }
				case 1: // IP Protection
				{
				    if(PlayerInfo[playerid][pProtection] == 0)
				    {
				        PlayerInfo[playerid][pProtection] = 1;
				    }
				    else
				    {
                        PlayerInfo[playerid][pProtection] = 0;
				    }
					PlayerUpdateData(playerid, "pProtection", PlayerInfo[playerid][pProtection]);
				    ShowSettings(playerid);
					return true;
				}
				case 2: // Chage IP Key
				{
					format(string, sizeof(string), "{ffffff}\n- Tkven Cvlit IP Dacvis Parols\nParoli Unda Sheicavdes 4-dan 12-mde Simbolos\n{ffffff}Axlandeli Paroli:"color_mm" %s\n\nMiutitet Axali Paroli:",PlayerInfo[playerid][pIPKey]);
					ShowPlayerDialog(playerid, 47, DIALOG_STYLE_INPUT, color_mm"MainMenu{ffffff} | IP Key", string, "Set", "Back");
					return true;
				}
			}
		    return true;
		}
		case 47: // Set IP Key
		{
			if(!response) return ShowSettings(playerid);
			new string[210];
			if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 12)
			{
				format(string, sizeof(string), "{ffffff}\n- Tkven Cvlit IP Dacvis Parols\nParoli Unda Sheicavdes 4-dan 12-mde Simbolos\n{ffffff}Axlandeli Paroli:"color_mm" %s\n\nMiutitet Axali Paroli:",PlayerInfo[playerid][pIPKey]);
				ShowPlayerDialog(playerid, 47, DIALOG_STYLE_INPUT, color_mm"MainMenu{ffffff} | IP Key", string, "Set", "Back");
				return true;
			}
			format(string, sizeof(string), "{ffffff} Tkveni IP Dacva Sheicvala: "color_mm"%s",inputtext);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SetString(PlayerInfo[playerid][pIPKey], inputtext);
			SavePlayerData(playerid);
		    return true;
		}
		case 48: // Set IP Key
		{
			if(!response) return ShowSettings(playerid);
			new string[256];
			if(!strlen(inputtext) || strlen(inputtext) < 4 || strlen(inputtext) > 12)
			{
				format(string, sizeof(string), "{ffffff}\n- Tkven Cvlit Parols\nParoli Unda Sheicavdes 4-dan 12-mde Simbolos\n{ffffff}Axlandeli Paroli:"color_mm" %s\n\nMiutitet Axali Paroli:",PlayerInfo[playerid][Password]);
				ShowPlayerDialog(playerid, 48, DIALOG_STYLE_INPUT, color_mm"MainMenu{ffffff} | IP Key", string, "Set", "Back");
				return true;
			}
			format(string, sizeof(string), "{ffffff} Tkveni Paroli Sheicvala: "color_mm"%s",inputtext);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SetString(PlayerInfo[playerid][Password], inputtext);
			PlayerUpdateDataString(playerid, "Password", PlayerInfo[playerid][Password]);
			SavePlayerData(playerid);
		    return true;
		}
		case 49: // Enter IP Key
		{
		    if(!response)
		    {
		        SendClientMessage(playerid, COLOR_FIRST, "Gasasvlelad Daweret: /q(uit)");
		        return true;
		    }
		    if(!strlen(inputtext)) return ShowProtection(playerid);
		    if(!strcmp(PlayerInfo[playerid][pIPKey], inputtext))
		    {
			    ShowSpawnMenu(playerid);
			    isLogged[playerid] = true;
			    isProceted[playerid] = false;
			    return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_FIRST, "IP Dacvis Paroli Arasworia ! Gasasvlelada Daweret: /q(uit)");
			}
		    return true;
		}
		case 50: // Advertisement
		{
		    if(!response) return true;
			if(DelayAD[playerid] > gettime()) return SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Reklamis Gagzavna Shesadzlebelia 2 Wutshi Ertxel");
		    if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 124) return ShowPlayerDialog(playerid, 50, DIALOG_STYLE_INPUT, "{ffffff}Advertisement", "\n{ffffff}- Tkven Agzavnit Reklamas Serverze\n-Fasi: {FF6347} 150.000$\n\n{ffffff}Chaweret Reklamis Teqsti:", "Send", "Close");
			if(IsPiarText(inputtext)) return SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Mititebulia Araswori Simboloebi");
			if(PlayerInfo[playerid][pCash] < 150000) return SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Tkven Ar Gakvt 150.000$");
			format(gstr, sizeof(gstr), "[Advertisement]: %s(%d):{ffffff} %s",Name(playerid),playerid,inputtext);
			SendClientMessageToAll(COLOR_LIGHTRED, gstr);
			PlayerInfo[playerid][pCash] -= 150000;
			format(log_str, sizeof(log_str), "%s'm(a) gaagzavna reklama da gadaixada 150.000", Name(playerid));
	   		CreateLog("Money", log_str);
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
            DelayAD[playerid] = gettime()+120;
		    return true;
		}
		case 51: // Take Pasport
		{
	        if(response)
	        {
	            if(PlayerInfo[playerid][pLicense][LICENSE_PASS] == 1) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ukve Gaqvt Piradobis Mowmoba.");
	        	if(PlayerInfo[playerid][pCash] < 500) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa Piradobis Asagebad Sachiroa 500$");
             	format(gstr, sizeof(gstr), "[Goverment News] {FFFFFF}Los Santosis Axali Moqalaqe, Saxeli - {4FB64F}%s{FFFFFF}!",Name(playerid));
                SendClientMessageToAll(0x28B8C6FF, gstr);
               	PlayerInfo[playerid][pLicense][LICENSE_PASS] = 1;
               	PlayerInfo[playerid][pCash] -= 500;
				SendClientMessage(playerid, COLOR_WHITE, "Tqven Warmatebit Aiget Piradobis Mowmoba!");
				format(log_str, sizeof(log_str), "%s'm(a) sheidzina piradoba da gadaixada 500", Name(playerid));
	   			CreateLog("Money", log_str);
				SavePlayerData(playerid);
				PlayerInfo[playerid][pQuest][QUEST_PASS] = 1;
				QuestChecker(playerid);
       		}
		    return true;
		}
		case 52: // Free Houses
		{
		    if(response)
		    {
				new houseid = FreeHouses[playerid][listitem];
				SetPlayerCheckpoint(playerid, HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2], 6);
				SetPlayerGPS(playerid, "House", true,  HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2]);
				gCheckpoint[playerid] = CHECKPOINT_HOME;
				//SendClientMessage(playerid, COLOR_LIGHTRED, "Mititebuli Saxli Moinishna Rukaze Witlad");
		    }
		    return true;
		}
		case 53: // Weapon Factory
		{
		    if(response)
		    {
                if(jobID[playerid] == JOB_WEAPON_FACTORY)
                {
                	format(gstr, sizeof(gstr), "[Weapon Factory]:{ffffff} Tkven Daasrulet Samushao Da Gadmogecat: %d$",jobCash[playerid]*Boost2X);
                	SendClientMessage(playerid, 0x8099B5FF, gstr);
                	PlayerInfo[playerid][pCash] += jobCash[playerid]*Boost2X;
                	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                	format(log_str, sizeof(log_str), "%s'm(a) daasrula mushaoba da gadaeca %d$", Name(playerid),jobCash[playerid]*Boost2X);
	   				CreateLog("Money", log_str);
				    RemovePlayerAttachedObject(playerid, 9);
                    jobID[playerid] = 0;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPlayerSkinEx(playerid);
                    gCheckpoint[playerid] = CHECKPOINT_NONE;
	                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	                DisablePlayerCheckpoint(playerid);
	                SetPVarInt(playerid, "WeaponFactory", 0);
					PlayerInfo[playerid][pCashAmount] = 0;
					PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
                }
                else
                {
                    jobID[playerid] = JOB_WEAPON_FACTORY;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPVarInt(playerid, "WeaponFactory", 0);
                    SetPlayerSkin(playerid, 27);
                }
			}
		    return true;
		}
		case 54: // Plantation Job
		{
  			if(response)
		    {
                if(jobID[playerid] == JOB_PLANTATION)
                {
      				PlantationWork[playerid] = false;
                	format(gstr, sizeof(gstr), "[Plantation Farm]:{ffffff} Tkven Daasrulet Samushao Da Gadmogecat: %d$ | %d Drug",jobCash[playerid]*Boost2X,GetPVarInt(playerid, "PlantDrug"));
                	SendClientMessage(playerid, 0x8099B5FF, gstr);
                	PlayerInfo[playerid][pCash] += jobCash[playerid]*Boost2X;
                	format(log_str, sizeof(log_str), "%s'm(a) daasrula mushaoba da gadaeca [plantacia] %d$", Name(playerid),jobCash[playerid]*Boost2X);
	   				CreateLog("Money", log_str);
                	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                	PlayerInfo[playerid][pDrug] += GetPVarInt(playerid, "PlantDrug");
                	PlayerUpdateData(playerid, "pDrug", PlayerInfo[playerid][pDrug]);
				    RemovePlayerAttachedObject(playerid, 9);
                    jobID[playerid] = 0;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPlayerSkinEx(playerid);
                    gCheckpoint[playerid] = CHECKPOINT_NONE;
	                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	                DeletePVar(playerid, "mushaobs");
	                SetPVarInt(playerid, "PlantDrug", 0);
					PlayerInfo[playerid][pCashAmount] =  0;
					PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
                }
                else
                {
                    PlantationWork[playerid] = true;
                    jobID[playerid] = JOB_PLANTATION;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPlayerSkin(playerid, 144);
                    SetPVarInt(playerid, "PlantDrug", 0);
                }
			}
			return true;
		}
		case 55: // Jobs
		{
			if(response)
			{
			    if(PlayerInfo[playerid][pWarn] > 0) return senderror2(playerid, "Tkven Gadevt Gafrtxileba!");
			    new nolvl = 0;
				switch(listitem)
				{
				    case 0:
				    {
                        PlayerInfo[playerid][pJob] = 0;
                        PlayerUpdateData(playerid, "pJob", PlayerInfo[playerid][pJob]);
				        SendClientMessage(playerid, COLOR_BIZZ, "Tkven Datovet Samushao");
				        return true;
				    }
				    case 1:
				    {
						if(PlayerInfo[playerid][pLevel] < 1) nolvl ++;
				    }
		    		case 2:
				    {
						if(PlayerInfo[playerid][pLevel] < 2) nolvl ++;
				    }
				    case 3:
   					{
   					    if(PlayerInfo[playerid][pLevel] < 5) nolvl ++;
				    }
				}
				if(nolvl) return SendClientMessage(playerid, COLOR_BIZZ, "Tkven Ar Xart Sakmarisi Leveli");
				if(PlayerInfo[playerid][pJob] == listitem) return true;
				PlayerInfo[playerid][pJob] = listitem;
				PlayerUpdateData(playerid, "pJob", PlayerInfo[playerid][pJob]);
				format(gstr, sizeof(gstr), "Tkven Daiwket Mushaoba{BDBDBD} %s",GetJobName(listitem));
				SendClientMessage(playerid, COLOR_BIZZ, gstr);
			}
		    return true;
		}
		case 72: // Shaft Job
		{
  			if(response)
		    {
                if(jobID[playerid] == JOB_SHAFT)
                {
                	format(gstr, sizeof(gstr), "[Shaft]:{ffffff} Tkven Daasrulet Samushao Da Gadmogecat: %d$",jobCash[playerid]*Boost2X);
                	SendClientMessage(playerid, 0x8099B5FF, gstr);
                	PlayerInfo[playerid][pCash] += jobCash[playerid]*Boost2X;
                	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                	format(log_str, sizeof(log_str), "%s'm(a) daasrula mushaoba da gadaeca [shaft] %d$", Name(playerid),jobCash[playerid]*Boost2X);
	   				CreateLog("Money", log_str);
				    RemovePlayerAttachedObject(playerid, 9);
                    jobID[playerid] = 0;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPlayerSkinEx(playerid);
                    gCheckpoint[playerid] = CHECKPOINT_NONE;
	                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	                SetPVarInt(playerid, "ShaftWork", 0);
					PlayerInfo[playerid][pCashAmount] =  0;
					PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
                }
                else
                {
                    jobID[playerid] = JOB_SHAFT;
                    jobStatus[playerid] = 0;
                    jobAmount[playerid] = 0;
                    jobCash[playerid] = 0;
                    SetPlayerSkin(playerid, 260);
                    SetPVarInt(playerid, "ShaftWork", 0);
                }
			}
			return true;
		}
		case 56: // SPY Dialog
		{
		    if(response)
		    {
				if(!strlen(inputtext))
				{
				    ShowSkinDialog(playerid);
				    return false;
				}
				new skinid = strval(inputtext);
				if(skinid != 19 && skinid != 21 && skinid != 22 && skinid != 30 && skinid != 46 && skinid != 47 && skinid != 96 && skinid != 102 && skinid != 103 && skinid != 104 && skinid != 102 && skinid != 105 &&
				skinid != 106 && skinid != 107 && skinid != 108 && skinid != 109 && skinid != 110 && skinid != 111 && skinid != 112 && skinid != 113 && skinid != 114 && skinid != 115 && skinid != 116 && skinid != 118 &&
			 	skinid != 119 && skinid != 120 && skinid != 121 && skinid != 122 && skinid != 123 && skinid != 124 && skinid != 125 && skinid != 126 && skinid != 127 && skinid != 169 && skinid != 170 && skinid != 171 &&
				skinid != 173 && skinid != 174 && skinid != 175 && skinid != 223 && skinid != 269 && skinid != 271 && skinid != 272 && skinid != 273 && skinid != 292 && skinid != 293 && skinid != 280 && skinid != 282 &&
			    skinid != 283 && skinid != 284 && skinid != 300 && skinid != 302 && skinid != 61 && skinid != 71 && skinid != 179 && skinid != 191 && skinid != 287 && skinid != 98 && skinid != 147 && skinid != 150 &&
				skinid != 187 && skinid != 228 && skinid != 59 && skinid != 211 && skinid != 217 && skinid != 250 && skinid != 176 && skinid != 177 && skinid != 195 && skinid != 247 && skinid != 268  && skinid != 23 &&
			    skinid != 29 && skinid != 67 && skinid != 181 && skinid != 249 && skinid != 296 && skinid != 285)
				{
				    senderror2(playerid, "Tkvens Mier Mititebuli Skin ID Ar Aris Swori!");
				    ShowSkinDialog(playerid);
				    return false;
				}
				SetPlayerArmour(playerid, 0);
				SetPlayerSkin(SpyPlayerID[playerid], skinid);

				new skinstr[256];
				format(skinstr, sizeof(skinstr), "{63BD4E}[/spy] {FFFFFF}Tkven Sheucvalet Motamashe: {63BD4E}%s{FFFFFF}'s Skin", Name(SpyPlayerID[playerid]));
				SendClientMessage(playerid, COLOR_WHITE, skinstr);

				format(skinstr, sizeof(skinstr), "{63BD4E}[/spy] {FFFFFF}Motamashe: {63BD4E}%s{FFFFFF}'m Shegicvalat Skin", Name(playerid));
				SendClientMessage(SpyPlayerID[playerid], COLOR_WHITE, skinstr);
			}
			return true;
		}
  		case 57: // Car Menu
		{
            if(response)
            {
                new sendername[MAX_PLAYER_NAME];
                GetPlayerName(playerid,sendername,sizeof(sendername));
                switch(listitem)
                {
                    case 0: PC_EmulateCommand(playerid, "/engine");
                    case 1: PC_EmulateCommand(playerid, "/engine");
                    case 2: PC_EmulateCommand(playerid, "/lights");
                    case 3: PC_EmulateCommand(playerid, "/lights");
                    case 4:
                    {
   	                	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,bonnets,boots,objectives);
		                SetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,true,boots,objectives);
                    }
                  	case 5:
                    {
   	                	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,bonnets,boots,objectives);
		                SetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,false,boots,objectives);
                    }
                 	case 6:
                    {
   	                	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,bonnets,boots,objectives);
		                SetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,bonnets,true,objectives);
                    }
                   	case 7:
                    {
   	                	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,bonnets,boots,objectives);
		                SetVehicleParamsEx(GetPlayerVehicleID(playerid),engines,lightss,alarms,doorss,bonnets,false,objectives);
                    }
                }
			}
			return true;
		}
		case 58: // Fraction Clear
		{
			if(response)
			{
	           	format(gstr, sizeof(gstr), "UPDATE accounts SET pMember = '0', pRank = '0', pForm = '0' WHERE pMember = '%d'", listitem+1);
				mysql_query(connect, gstr);
	        	foreach(new i:Player)
	            {
	            	if(PlayerInfo[i][pMember] == listitem+1)
	            	{
	            	    SetPlayerArmour(i, 0);
	            	    ResetWeapons(i);
	            	    PlayerInfo[i][pMember] = 0;
	            	    PlayerUpdateData(i, "pMember", PlayerInfo[i][pMember]);
	            	    PlayerInfo[i][pRank] = 0;
	            	    PlayerUpdateData(i, "pRank", PlayerInfo[i][pRank]);
 	    				PlayerInfo[i][pModel] = 0;
	            	    PlayerUpdateData(i, "pModel", PlayerInfo[i][pModel]);
 	    				PlayerInfo[i][pForm] = 0;
	            	    PlayerUpdateData(i, "pForm", PlayerInfo[i][pForm]);

                        SetPlayerColorEx(i);
                        SetPlayerSkinEx(i);
						format(gstr, sizeof(gstr), "Administrator: {8099B5}%s{FFFFFF}'m(a) Dashala Tkveni Organizacia: {8099B5}%s", Name(playerid), FractionNames[listitem+1]);
						SendClientMessage(i, COLOR_WHITE, gstr);
					}
	            }
	            format(gstr, sizeof(gstr), "Tkven Dashalet Organizacia: {8099B5}%s", FractionNames[listitem+1]);
	            SendClientMessage(playerid, COLOR_WHITE, gstr);
			    return true;
			}
			return true;
		}
		case 59: // SellCar
		{
			if(!response) return true;
			new query[256];
			format(query, sizeof(query), "DELETE FROM `cars` WHERE `Owner` = '%s', `Model` = '%d'",Name(playerid),MyCarID[playerid][listitem]);
			mysql_query(connect, query);
			PlayerInfo[playerid][pCash] += GetCarPrice(MyCarID[playerid][listitem]);
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
			format(query, sizeof(query), "Tkven Gakidet Transporti Da Gadmogecat: %d$", GetCarPrice(MyCarID[playerid][listitem]));
			format(log_str, sizeof(log_str), "%s'm(a) gakida transporti da gadaeca %d$", Name(playerid),GetCarPrice(MyCarID[playerid][listitem]));
	   		CreateLog("Money", log_str);
			SendClientMessage(playerid, COLOR_WHITE, query);
			return true;
		}
		case 60: // Suspect
		{
		    if(!response) return true;
		    switch (listitem)
		    {
			    case 0:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 2;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Mkvlelobis Mcdeloba");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 1:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 5;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Mkvleloba");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 2:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 3;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Bankis Gadzarcva");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 3:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 6;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Tanamdebobis Pirze Tavdasxma");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 4:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 1;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Samartaldamcavistvis Xelis Sheshla");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 5:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 2;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Manqanis Moparva");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 6:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 1;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Daumorchilebloba");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 7:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 2;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Narkotikebi");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 8:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 3;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Ukanono Iaragi");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
				case 9:
				{
					PlayerInfo[GetPVarInt(playerid,"ActionID")][pWanted] += 1;
		    		SetPlayerCriminal(GetPVarInt(playerid,"ActionID"),Name(playerid), "Sheurawyofa");
		    		foreach(new i:Player)
		    		{
			    		if(PlayerInfo[i][pMember] == 1)
			    		{
		        	  		PlayCrimeReportForPlayer(i, GetPVarInt(playerid,"ActionID"), 16);
		        		}
		    		}
					WantedTime[GetPVarInt(playerid,"ActionID")] = 300;
				}
			}
			SetPlayerWantedLevelEx(GetPVarInt(playerid,"ActionID"));
		}
		case 61: // Quest
		{
		    if(response)
		    {
				ShowPlayerDialog(playerid, 62, DIALOG_STYLE_MSGBOX, "{ffffff}Quest Info", gQuest[listitem][q_Desc], "Back", "");
		        return true;
		    }
			return true;
		}
		case 62: // Quest Back
		{
			ShowQuestDialog(playerid);
			return true;
		}
		case 63: // Directory
		{
		    if(!response) return true;
		    switch(listitem)
		    {
				case 0:
		        {
					SendClientMessage(playerid, COLOR_YELLOW, "Lawyers Online:");
		            foreach(new i:Player)
		            {
						if(PlayerInfo[i][pMember] == FRACTION_CITYHALL && PlayerInfo[i][pRank] == 4)
						{
						    format(gstr, sizeof(gstr), "%s[%d] | Number: %d", Name(i), i, PlayerInfo[i][pNumber]);
							SendClientMessage(playerid, COLOR_WHITE, gstr);
						}
		            }
		        }
     			case 1:
		        {
					SendClientMessage(playerid, COLOR_YELLOW, "Leaders Online:");
		            foreach(new i:Player)
		            {
						if(IsALeader(i))
						{
						    format(gstr, sizeof(gstr), "%s | %s[%d] | Number: %d", FractionNames[PlayerInfo[i][pMember]], Name(i), i, PlayerInfo[i][pNumber]);
							SendClientMessage(playerid, COLOR_WHITE, gstr);
						}
		            }
		        }
     			case 2:
		        {
					SendClientMessage(playerid, COLOR_YELLOW, "Dealers Online:");
		            foreach(new i:Player)
		            {
						if(KazinoDuty[i] > 0)
						{
						    format(gstr, sizeof(gstr), "%s[%d] | Number: %d", Name(i), i, PlayerInfo[i][pNumber]);
							SendClientMessage(playerid, COLOR_WHITE, gstr);
						}
		            }
		        }
		       	case 3:
		        {
					SendClientMessage(playerid, COLOR_YELLOW, "Doctors Online:");
		            foreach(new i:Player)
		            {
						if(PlayerInfo[i][pMember] == FRACTION_MEDIC)
						{
						    format(gstr, sizeof(gstr), "%s[%d] | Number: %d", Name(i), i, PlayerInfo[i][pNumber]);
							SendClientMessage(playerid, COLOR_WHITE, gstr);
						}
		            }
		        }
		    }
		    return true;
		}
		case 64: // Smilliar Items
		{
		    if(response)
		    {
      			GivePlayerItem(playerid, GetItemModelById(itemslist[playerid][listitem]));
                format(gstr, sizeof(gstr), "you got: %s", GetItemName(itemslist[playerid][listitem]));
                SendClientMessage(playerid, -1, gstr);
		        return true;
		    }
		    return true;
		}
		case 65: // Player Donate
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "DTime") > gettime()) return senderror2(playerid, "Donates Gagzavna Shesadzlebelia 2 Wutshi Ertxel");
		        if(strlen(inputtext) < 3) return true;
				if(CountAllDonate() >= MAX_DONATES) return sendinfo(playerid, "Am Momentshi Ver Gaagzavnit Donates");
		        AddDonate(playerid, inputtext);
		        SetPVarInt(playerid, "DTime", gettime()+120);
				return true;
	    	}
		    return true;
		}
		case 66: // Admin Donate
		{
		    if(response)
		    {
		        for(new i = 0; i < MAX_DONATES; i ++) RemoveDonate(i);
		        SendClientMessage(playerid, COLOR_WHITE, "Donate List Cleared");
				return true;
		    }
		    return true;
		}
		case 67:
		{
		    if(!response) return 1;
		    if(LearningFight[playerid] == listitem) return 0;
			if(listitem == 0)
			{
				SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Tkven Morchit Chxubis Sheswavlas");
			    LearningFight[playerid] = 0;
			    SetPlayerSkinEx(playerid);
			    DisablePlayerCheckpoint(playerid);
			    SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
			    return 1;
			}
			if(PlayerInfo[playerid][pFightSkill][listitem - 1] >= MAX_FIGHT_SKILL) return SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Tkven Ukve Icit Mititebuli Chxubis Stili");
			switch(listitem)
			{
			    case 0: SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
   				case 1: SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
   				case 2: SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		 	   	case 3: SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
			}
		    LearningFight[playerid] = listitem;
		    SetPlayerSkin(playerid, Fighter_Skins[listitem - 1]);
            SetPlayerCheckpoint(playerid, Fighter_Checkpoint[listitem-1][0], Fighter_Checkpoint[listitem-1][1], Fighter_Checkpoint[listitem-1][2], Fighter_Checkpoint[listitem-1][3]);
		    return 1;
		}
		case 70: // Enter Report Answer
        {
			new str[200];
			if(ReportID[playerid] == -1) return senderror(playerid, "Error");
			new reporter = ReportID[playerid];
			new length = strlen(inputtext);
			if(!length && !response)
			{
				SendClientMessage(reporter, C_black, "[Report]:{ffffff} Administraciam Uari Tkva Tkveni Reportis Ganxilvaze");
				SendClientMessage(playerid, C_black, "[Report]:{ffffff} Tkven Uari Tkvit Reportis Ganxilvaze");
				ReportID[playerid] = -1;
				return true;
			}
			if(response)
			{
				format(str, sizeof(str), "[Report Answer]: %s:{ffffff} %s",Name(playerid),inputtext);
				SendClientMessage(reporter, C_blue, str);
				format(str, sizeof(str), "[Report Answer]: %s'm(a) Gasca Pasuxi {ffffff} %s's | %s",Name(playerid),Name(reporter),inputtext);
				SendAdminMessage(C_blue, str);
				ReportID[playerid] = -1;
				PlayerInfo[playerid][pAdmin_ReportAnswer] ++;
				PlayerUpdateData(playerid, "pAdmin_ReportAnswer", PlayerInfo[playerid][pAdmin_ReportAnswer]);
				return true;
			}
            return true;
        }
        case 71: // Report
		{
			if(CountReports() >= MAX_REPORT) return senderror(playerid, "Am Momentshi Ver Gagzavnit Reports");
		    if(!response) return true;
			new length = strlen(inputtext);
			if(!length || length > 100)
			{
			    ShowReportDialog(playerid);
			    return true;
			}
			new str[200];
			format(str, sizeof(str), "Kitxva/Sachivari Gaigzavna Administraciastan:{ffffff} %s",inputtext);
			SendClientMessage(playerid, C_blue, str);
			AddReport(playerid, inputtext);
		    SetPVarInt(playerid, "AntiReportFlood", gettime()+120);
			return true;
		}
		case 73: // MP 3
		{
  			if(response)
	        {
				if(!strlen(inputtext))
				{
				    ShowPlayerDialog(playerid, 73, DIALOG_STYLE_INPUT, "Enter Skin ID", "{FFFFFF}Miutitet Skinis ID, Skinebi Miecemat Mxolod Eventis Motamasheebs", "Shemdeg", "Ukan");
				    return false;
				}
				new skinid = strval(inputtext);
				if(!IsASkin(skinid))
				{
				    senderror(playerid, "Araswori Skinis ID");
				    ShowPlayerDialog(playerid, 73, DIALOG_STYLE_INPUT, "Enter Skin ID", "{FFFFFF}Miutitet Skinis ID, Skinebi Miecemat Mxolod Eventis Motamasheebs", "Shemdeg", "Ukan");
				    return false;
				}
				new Float:x,Float:y,Float:z;
				GetPlayerPos(playerid, x,y,z);
				foreach(new i:Player)
		        {
					if(GetDistanceBetweenPlayers(playerid,i) < 50)
					{
						GameTextForPlayer(i, "Changeskin", 1500, 1);
						SetPlayerSkin(i, skinid);
					}
				}
			}
			else
			{
			    PC_EmulateCommand(playerid, "/mp");
			}
		}
		case 74: // Buy License
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(PlayerInfo[playerid][pCash] < 50000) return SendClientMessage(playerid, 0xF8C471FF, "[CityHall]:{ffffff} Ar Gakvt Sakmarisi Tanxa! Sachiroa 50.000$");
  						PlayerInfo[playerid][pCash] -= 50000;
  						format(log_str, sizeof(log_str), "%s'm(a) sheidzina biznesis licenzia - 50.000$", Name(playerid));
	   					CreateLog("Money", log_str);
						PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
						PlayerInfo[playerid][pLicense][LICENSE_BIZZ] = 1;
						PlayerUpdateData(playerid, "pLicenseBizz", PlayerInfo[playerid][pLicense][LICENSE_BIZZ]);
						SendClientMessage(playerid, 0xF8C471FF, "[CityHall]:{ffffff} Tkven Sheidzinet{F8C471} Biznesis Licenzia");
					}
	    			case 1:
				    {
				        if(PlayerInfo[playerid][pCash] < 65000) return SendClientMessage(playerid, 0xF8C471FF, "[CityHall]:{ffffff} Ar Gakvt Sakmarisi Tanxa! Sachiroa 65.000$");
  						PlayerInfo[playerid][pCash] -= 65000;
  						format(log_str, sizeof(log_str), "%s'm(a) sheidzina iaragis licenzia 65.000$", Name(playerid));
	   					CreateLog("Money", log_str);
						PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
						PlayerInfo[playerid][pLicense][LICENSE_GUN] = 1;
						PlayerUpdateData(playerid, "pLicenseGun", PlayerInfo[playerid][pLicense][LICENSE_GUN]);
						SendClientMessage(playerid, 0xF8C471FF, "[CityHall]:{ffffff} Tkven Sheidzinet{F8C471} Iaragis Licenzia");
					}
				}
			}
			return true;
		}
		case 75: // Take
		{
			if(response)
			{
				new string[256], actionid = GetPVarInt(playerid, "ActionID");
				if(PlayerInfo[actionid][pLicense][listitem] == 0)
				{
   					format(string, sizeof(string), "Motamashes Ar Akvs{ffffff} %s",GetLicenseName(listitem));
					SendClientMessage(playerid, 0x5DADE2FF, string);
				    return true;
				}
				PlayerInfo[actionid][pLicense][listitem] = 0;
				PlayerUpdateData(actionid, "pLicensePass", PlayerInfo[actionid][pLicense][LICENSE_PASS]);
				PlayerUpdateData(actionid, "pLicenseCar", PlayerInfo[actionid][pLicense][LICENSE_CAR]);
				PlayerUpdateData(actionid, "pLicenseBizz", PlayerInfo[actionid][pLicense][LICENSE_BIZZ]);
				format(string, sizeof(string), "Tkven Chamoartvit {ffffff}%s'(s) {5DADE2}%s",Name(actionid),GetLicenseName(listitem));
				SendClientMessage(playerid, 0x5DADE2FF, string);
				format(string, sizeof(string), "%s'm(a){5DADE2} Chamogartvat{ffffff} %s",Name(playerid),GetLicenseName(listitem));
				SendClientMessage(actionid, -1, string);
			}
			return true;
		}
		case 76: // ATM 1
		{
			if(!response) return 1;
   			new dialog_string[250];
   			SetPVarInt(playerid, "ATMID", listitem);
   			switch(listitem)
   			{
   			    case 0:
   			    {
   			     	format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Gamogakvt Tanxa Tkveni Bankis Angarishidan\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-100$ | MAX-1000000$\nBalance: %d",PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | Take", dialog_string, "Take", "Exit");
   			    }
   			    case 1:
   			    {
   			     	format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Shegakvt Tanxa Tkveni Bankis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-100$ | MAX-1000000$\nBalance: %d",PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | Put", dialog_string, "Put", "Exit");
   			    }
   			    case 2:
   			    {
   					format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Telefonis Nomris Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-5$ | MAX-20$\nBalance: %d",PlayerInfo[playerid][pMobile]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | SIM", dialog_string, "Next", "Exit");
   			    }
   			    case 3:
   			    {
					format(dialog_string, sizeof(dialog_string), color_payday"[1]{ffffff} Saxlis Nomeri 1\t %d Tanxa\n"color_payday"[2]{ffffff} Saxlis Nomeri 2\t %d Tanxa\n"color_payday"[3]{ffffff} Saxlis Nomeri 3\t %d Tanxa",HouseInfo[PlayerInfo[playerid][pHouse][0]][hBalance],HouseInfo[PlayerInfo[playerid][pHouse][1]][hBalance],HouseInfo[PlayerInfo[playerid][pHouse][2]][hBalance]);
   			       	//format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Saxlis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-5$ | MAX-20$\nBalance: %d",PlayerInfo[playerid][pMobile]);
					ShowPlayerDialog(playerid, 78, DIALOG_STYLE_LIST, color_payday"ATM{ffffff} | Service | House", dialog_string, "Next", "Exit");
				}
   			}
			return 1;
		}
		case 77: // ATM 2
		{
		    if(!response) return ShowPlayerATMDialog(playerid);
		    new tanxa = strval(inputtext), dialog_string[250];
			switch(GetPVarInt(playerid, "ATMID"))
			{
			    case 0:
			    {
  					if(!tanxa || tanxa < 100 || tanxa > 1000000)
					{
   			     		format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Gamogakvt Tanxa Tkveni Bankis Angarishidan\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-100$ | MAX-1000000$\nBalance: %d",PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | Take", dialog_string, "Next", "Exit");
						return 1;
					}
					if(PlayerInfo[playerid][pBank] < tanxa)
					{
                    	SendClientMessage(playerid, -1, color_payday"[Shecdoma]{ffffff} Tkveni Bankis Angarishze Ar Aris Sakmarisi Tanxa");
					    ShowPlayerATMDialog(playerid);
					    return 1;
					}

					PlayerInfo[playerid][pCash] += tanxa;
					PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					PlayerInfo[playerid][pBank] -= tanxa;
					PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
					format(log_str, sizeof(log_str), "%s'm(a) gamoitana bankis angarishidan - %d", Name(playerid),tanxa);
	   				CreateLog("Money", log_str);
					BankomatInfo[GetPVarInt(playerid, "BankomatID")][BankomatMoney] -= tanxa;
  					format(other_string, 80, "~b~~h~~h~+%d$",tanxa);
					GameTextForPlayer(playerid, other_string, 2500, 1);

					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
					SavePlayerData(playerid);

					format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Gamogakvt Tanxa Tkveni Bankis Angarishidan\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-100$ | MAX-1000000$\nBalance: %d",PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | Take", dialog_string, "Next", "Exit");
			    }
  			  	case 1:
			    {
  					if(!tanxa || tanxa < 100 || tanxa > 1000000)
					{
   			     		format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Shegakvt Tanxa Tkveni Bankis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-100$ | MAX-1000000$\nBalance: %d",PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | Put", dialog_string, "Next", "Exit");
						return 1;
					}
					if(PlayerInfo[playerid][pCash] < tanxa)
					{
                    	SendClientMessage(playerid, -1, color_payday"[Shecdoma]{ffffff} Tkven Ar Gakvt Sakmarisi Tanxa");
					    ShowPlayerATMDialog(playerid);
					    return 1;
					}

					PlayerInfo[playerid][pCash] -= tanxa;
					PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					PlayerInfo[playerid][pBank] += tanxa;
					PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
					format(log_str, sizeof(log_str), "%s'm(a) sheitana bankis angarishze - %d", Name(playerid),tanxa);
	   				CreateLog("Money", log_str);
					BankomatInfo[GetPVarInt(playerid, "BankomatID")][BankomatMoney] += tanxa;
  					format(other_string, 80, "~b~~h~~h~-%d$",tanxa);
					GameTextForPlayer(playerid, other_string, 2500, 1);
                    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
					SavePlayerData(playerid);

					format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Shegakvt Tanxa Tkveni Bankis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-100$ | MAX-1000000$\nBalance: %d",PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | Put", dialog_string, "Next", "Exit");
			    }
			    case 2:
			    {
					if(!tanxa || tanxa < 5 || tanxa > 20)
					{
   						format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Telefonis Nomris Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-5$ | MAX-20$\nBalance: %d",PlayerInfo[playerid][pMobile]);
						ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | SIM", dialog_string, "Next", "Exit");
						return 1;
					}
					if((PlayerInfo[playerid][pMobile] + tanxa) > 100)
					{
						SendClientMessage(playerid, -1, color_payday"[Shecdoma]{ffffff} Tkveni Telefonis Angarishze Aris Sakmarisi Tanxa");
		                ShowPlayerATMDialog(playerid);
					    return 1;
					}

					PlayerInfo[playerid][pCash] -= tanxa;
					PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					PlayerInfo[playerid][pMobile] += tanxa;
					format(log_str, sizeof(log_str), "%s'm(a) sheitana mobiluris angarishze - %d", Name(playerid),tanxa);
	   				CreateLog("Money", log_str);
					PlayerUpdateData(playerid, "pMobile", PlayerInfo[playerid][pMobile]);
					BankomatInfo[GetPVarInt(playerid, "BankomatID")][BankomatMoney] -= tanxa;
					SavePlayerData(playerid);

					format(other_string, 80, "~b~~h~~h~+%d$",tanxa);
					GameTextForPlayer(playerid, other_string, 2500, 1);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
					SavePlayerData(playerid);

					format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Telefonis Nomris Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-5$ | MAX-20$\nBalance: %d",PlayerInfo[playerid][pMobile]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | SIM", dialog_string, "Next", "Exit");
				}
				case 3:
				{
					if(!tanxa || tanxa < 1000 || tanxa > 50000)
					{
						format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Saxlis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-1000$ | MAX-50000$\nBalance: %d",HouseInfo[PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]][hBalance]);
						ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | House", dialog_string, "Next", "Exit");
						return 1;
					}
					if((HouseInfo[PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]][hBalance] + tanxa) > 50000)
					{
						SendClientMessage(playerid, -1, color_payday"[Shecdoma]{ffffff} Tkveni Saxlis Angarishze Aris Sakmarisi Tanxa");
		                ShowPlayerATMDialog(playerid);
					    return 1;
					}

                    BankomatInfo[GetPVarInt(playerid, "BankomatID")][BankomatMoney] += tanxa;
					PlayerInfo[playerid][pCash] -= tanxa;
					HouseInfo[PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]][hBalance] += tanxa;
					SavePlayerData(playerid);
					SaveHouseData(PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]);

					format(other_string, 80, "~b~~h~~h~+%d$",tanxa);
					GameTextForPlayer(playerid, other_string, 2500, 1);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
					SavePlayerData(playerid);
                    format(log_str, sizeof(log_str), "%s'm(a) sheitana tanxa saxlis angarishze - %d", Name(playerid),HouseInfo[PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]][hBalance]);
	   				CreateLog("Money", log_str);
					format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Saxlis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-1000$ | MAX-50000$\nBalance: %d",HouseInfo[PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]][hBalance]);
					ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | House", dialog_string, "Next", "Exit");
				}
			}
			return 1;
		}
		case 78: // ATM 3
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pHouse][listitem] == 0) return SendClientMessage(playerid, -1, color_payday"[Shecdoma]{ffffff} Mititebul Slotze Ar Gakvt Saxli");
		        SetPVarInt(playerid, "ATMHouse", listitem);
				new dialog_string[256];
				format(dialog_string, sizeof(dialog_string), "{ffffff}- Tkven Ricxavt Tanxas Saxlis Angarishze\n{ffffff}- Chaweret Tanxis Odenoba:\n\n"color_payday"- Min-1000$ | MAX-50000$\nBalance: %d",HouseInfo[PlayerInfo[playerid][pHouse][GetPVarInt(playerid, "ATMHouse")]][hBalance]);
				ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, color_payday"ATM{ffffff} | Service | House", dialog_string, "Next", "Exit");
		    }
		    return 1;
		}
		case 79: // Admin Panel
		{
		    if(response)
		    {
				if(!KINKLA(playerid)) return true;
				new query[200];
			 	if(strfind(inputtext, "Radar", true) != -1)
			 	{
					ShowPlayerDialog(playerid, 163, DIALOG_STYLE_LIST, "{3399FF}Admin Panel{FFFFFF} | Radar", "[1] Radaris Dayeneba\n[2] Radaris Poziciis Shecvla", "Archeva", "Ukan");
					PC_EmulateCommand(playerid, "/apanel");
			 	    return true;
			 	}
			 	if(strfind(inputtext, "Boost", true) != -1)
			 	{
					if(Boost2X == 1) Boost2X = 2;
					else Boost2X = 1;
					PC_EmulateCommand(playerid, "/apanel");
			 	    return true;
			 	}
			 	if(strfind(inputtext, "Goverment", true) != -1)
			 	{
					SetPVarString(playerid, "ApanelTester", "GovTester");
					ShowPlayerDialog(playerid, 87, DIALOG_STYLE_INPUT, color_admin"Apanel{ffffff} | Goverment", "{ffffff}Chaweret Goverment Testeris Saxeli", "Set", "Back");
			 	    return true;
			 	}
			 	if(strfind(inputtext, "Ghetto", true) != -1)
			 	{
					SetPVarString(playerid, "ApanelTester", "GhettoTester");
					ShowPlayerDialog(playerid, 87, DIALOG_STYLE_INPUT, color_admin"Apanel{ffffff} | Ghetto", "{ffffff}Chaweret Ghetto Testeris Saxeli", "Set", "Back");
			 	    return true;
			 	}
			 	if(strfind(inputtext, "Mafia", true) != -1)
			 	{
					SetPVarString(playerid, "ApanelTester", "MafiaTester");
					ShowPlayerDialog(playerid, 87, DIALOG_STYLE_INPUT, color_admin"Apanel{ffffff} | MafiaTester", "{ffffff}Chaweret Mafia Testeris Saxeli", "Set", "Back");
			 	    return true;
			 	}
			 	if(strfind(inputtext, "Capture", true) != -1)
			 	{
                    ghettoon = !ghettoon;
                    PC_EmulateCommand(playerid, "/apanel");
			 	    return true;
			 	}
		        switch(listitem)
		        {
		            case 0:
		            {
    					mysql_query(connect, "DELETE FROM `bans` WHERE Day >= '0'");
						format(query, sizeof(query), "Administratorma{ffffff} %s'm(a)"color_admin" Moxsna Bani Kvela Motamashes",Name(playerid));
	        			SendClientMessageToAll(COLOR_ADMIN, query);
					}
     				case 1:
		            {
    					mysql_query(connect, "DELETE FROM `banip` WHERE `ID` >= '0'");
						format(query, sizeof(query), "Administratorma{ffffff} %s'm(a)"color_admin" Moxsna IP Bani Kvela Motamashes",Name(playerid));
	        			SendClientMessageToAll(COLOR_ADMIN, query);
					}
 					case 2:
		            {
		                new prisonplayercount = 0;
    					foreach(new i:Player)
    					{
    					    if(PlayerInfo[playerid][pPrison] > 0)
    					    {
    					        PlayerInfo[playerid][pPrisonTime] = 1;
    					        prisonplayercount++;
    					    }
    					}
    					if(!prisonplayercount) return SendClientMessage(playerid, COLOR_GREY, "Arcerti Motamashe Araa Cixeshi");
						format(query, sizeof(query), "Administratorma{ffffff} %s'm(a)"color_admin" Gamoushva Cixidan Kvela Motamashe",Name(playerid));
	        			SendClientMessageToAll(COLOR_ADMIN, query);
					}
					case 3:
		            {
		                new warnplayercount = 0;
    					foreach(new i:Player)
    					{
    					    if(PlayerInfo[playerid][pWarn] > 0)
    					    {
  					    		PlayerInfo[playerid][pWarn] = 0;
								PlayerUpdateData(playerid, "pWarn", PlayerInfo[playerid][pWarn]);
								PlayerInfo[playerid][pWarnTime] = 0;
								PlayerUpdateData(playerid, "pWarnTime", PlayerInfo[playerid][pWarnTime]);
								warnplayercount++;
    					    }
    					}
    					if(!warnplayercount) return SendClientMessage(playerid, COLOR_GREY, "Arcert Motamashes Ar Adevs Gafrtxileba");
						format(query, sizeof(query), "Administratorma{ffffff} %s'm(a)"color_admin" Moxsna Gafrtxileba Kvela Motamashes",Name(playerid));
	        			SendClientMessageToAll(COLOR_ADMIN, query);
					}
					case 4:
		            {
		                new muteplayercount = 0;
    					foreach(new i:Player)
    					{
    					    if(PlayerInfo[playerid][pMute] > 0)
    					    {
						        PlayerInfo[playerid][pMuteTime] = 1;
								muteplayercount++;
    					    }
    					}
    					if(!muteplayercount) return SendClientMessage(playerid, COLOR_GREY, "Arcert Motamashes Ar Adevs Mute");
						format(query, sizeof(query), "Administratorma{ffffff} %s'm(a)"color_admin" Moxsna Mute Kvela Motamashes",Name(playerid));
	        			SendClientMessageToAll(COLOR_ADMIN, query);
					}
		        }
		    }
		    return true;
		}
		case 82: // Bizz Stats
		{
		    if(response)
		    {
   				new bizzid = listitem+1;
			    ShowBizzStats(playerid, bizzid);
		    }
		    return true;
		}
		case 83: // FixCar
		{
		    if(response)
		    {
				new tt = GetPVarInt(playerid, "CarDialog");
	            if(PlayerInfo[playerid][pCash] < 100) return senderror(playerid, "Ar Gakvt 100$");
	            if(caridhouse[playerid] != -1) DestroyVehicle(caridhouse[playerid]);
	            if(!listitem)
				{
    				new phouse = -1;
			        for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
			        {
			            if(PlayerInfo[playerid][pHouse][i] == 0) continue;
			            new test = PlayerInfo[playerid][pHouse][i];
			            if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[test][hPosition][0], HouseInfo[test][hPosition][1], HouseInfo[test][hPosition][2]))
			            {
			         		phouse = test;
			            }
			        }
			        if(phouse == -1) return senderror2(playerid, "Ar Xart Axlos Arcert Saxltan");
    				caridhouse[playerid] = AddStaticVehicle(MyCarID[playerid][tt], HouseInfo[phouse][hCarPosition][0], HouseInfo[phouse][hCarPosition][1], HouseInfo[phouse][hCarPosition][2], HouseInfo[phouse][hCarPosition][3], MyCarTune[playerid][tt][CARTUNE_COLOR1], MyCarTune[playerid][tt][CARTUNE_COLOR2]);
					//SetPlayerPos(playerid, HouseInfo[phouse][hCarPosition][0], HouseInfo[phouse][hCarPosition][1], HouseInfo[phouse][hCarPosition][2]);
				}
				else
				{
				    new rand = random(2);
				    caridhouse[playerid] = AddStaticVehicle(MyCarID[playerid][tt], VehiclePositionsInsideGarage[rand][0], VehiclePositionsInsideGarage[rand][1], VehiclePositionsInsideGarage[rand][2], VehiclePositionsInsideGarage[rand][3], MyCarTune[playerid][tt][CARTUNE_COLOR1], MyCarTune[playerid][tt][CARTUNE_COLOR2]);
				}
				SetVehicleNumberPlate(caridhouse[playerid], "Genuine");
				SetVehicleHealth(caridhouse[playerid], 999.0);
			 	LinkVehicleToInterior(caridhouse[playerid], GetPlayerInterior(playerid));
			 	SetVehicleVirtualWorld(caridhouse[playerid], GetPlayerVirtualWorld(playerid));
			 	PlayerInfo[playerid][pCash] -= 100;
			 	format(log_str, sizeof(log_str), "%s'm(a) daaspawna mankana da gadaixada 100", Name(playerid));
	   			CreateLog("Money", log_str);
	            GameTextForPlayer(playerid, "~g~Car Spawned~n~~r~-100$", 3000, 1);
	            LockCar(caridhouse[playerid]);
	            SetPVarInt(playerid, "MyCarID", tt);
	            ApplyVehicleTune(playerid, caridhouse[playerid], tt);
			}
		    return true;
		}
		case 84: // House Inside Pickup
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
					    for(new i = 1; i <= TotalHouse; i ++)
					    {
					        if(!IsPlayerInRangeOfPoint(playerid, 4.0, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2])) continue;
					        if(GetPlayerVirtualWorld(playerid) == i+11)
					        {
					            SetPlayerPosEx(playerid, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2], 1500);
					            SetPlayerInterior(playerid, 0);
					            SetPlayerVirtualWorld(playerid, 0);
					            SetCameraBehindPlayer(playerid);
					            DelayPickup[playerid] = gettime()+5;
					            return true;
					        }
					    }
				    }
				    case 1:
				    {
						new hasgarage = -1;
				    	for(new i = 1; i <= TotalHouse; i ++)
					    {
					        if(!IsPlayerInRangeOfPoint(playerid, 9.0, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2])) continue;
					        if(GetPlayerVirtualWorld(playerid) == i+11)
					        {
								hasgarage = HouseInfo[i][hGarage];
								break;
					        }
					    }
					    if(!hasgarage) return senderror2(playerid, "Tkven Ar Gakvt Shedzenili Garaji! Gamoikenet {ffffff}/hpanel");
        				SetPlayerPosEx(playerid, 2371.7502, 791.9389, 1013.4380, 1500);
        				SetPlayerFacingAngle(playerid, 157.8);
			            SetCameraBehindPlayer(playerid);
			            DelayPickup[playerid] = gettime()+3;
				    }
				}
			}
		    return true;
		}
		case 85: // Container
		{
		    if(response || !response)
		    {
				new containerid = GetPVarInt(playerid, "ContainerID");
		    	TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
				ContainerCar[playerid] = -1;
				if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
				ContainerObject[playerid] = -1;
				switch(containerid)
				{
					case 0: ContainerTables[0] = CreateDynamicObject(2637, 821.03998, -2064.91968, 12.28990,   0.00000, 0.00000, 90.00000);
					case 1: ContainerTables[1] = CreateDynamicObject(2637, 821.03998, -2059.85962, 12.28990,   0.00000, 0.00000, 90.00000);
					case 2: ContainerTables[2] = CreateDynamicObject(2637, 821.03998, -2054.86523, 12.28990,   0.00000, 0.00000, 90.00000);
					case 3: ContainerTables[3] = CreateDynamicObject(2637, 821.03998, -2049.81812, 12.28990,   0.00000, 0.00000, 90.00000);
					case 4: ContainerTables[4] = CreateDynamicObject(2637, 821.03998, -2044.87207, 12.28990,   0.00000, 0.00000, 90.00000);
					case 5: ContainerTables[5] = CreateDynamicObject(2637, 821.03998, -2039.83765, 12.28990,   0.00000, 0.00000, 90.00000);
				}
				switch(GetPVarInt(playerid, "ContainerPrize"))
				{
				    case 0:
					{
						PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "ContainerAmount");
						PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
						format(log_str, sizeof(log_str), "%s'm(a) miigo conteineris prizi fuli : %d", Name(playerid),GetPVarInt(playerid, "ContainerAmount"));
	   					CreateLog("Money", log_str);
					}
			  		case 1:
					{
						PlayerInfo[playerid][pLevel] += GetPVarInt(playerid, "ContainerAmount");
						PlayerUpdateData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
					}
					case 2:
					{
						PlayerInfo[playerid][pDonateRank] = GetPVarInt(playerid, "ContainerAmount");
						PlayerUpdateData(playerid, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
						PlayerInfo[playerid][pVipTime] = getdate()+GetPVarInt(playerid, "ContainerDays");
						PlayerUpdateData(playerid, "pVipTime", PlayerInfo[playerid][pVipTime]);
					}
					case 3:
					{
						GivePlayerCar(playerid, GetPVarInt(playerid, "ContainerCar"));
					}
				}
				ContainerStatusPlayer[playerid] = false;
		    }
		    return true;
		}
		case 86: // Heal Offer
		{
		    if(response)
		    {
		    	if(HealOffer[playerid] != -1)
				{
					if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) return senderror2(HealOffer[playerid], "Motamashes Ar Akvs Sakmarisi Tanxa Samkurnalod");
					PlayerInfo[HealOffer[playerid]][pCash] += HealPrice[playerid];

					PlayerUpdateData(HealOffer[playerid], "pCash", PlayerInfo[HealOffer[playerid]][pCash]);
					PlayerInfo[playerid][pCash] -= HealPrice[playerid];
					PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					GameTextForPlayer(playerid, "~g~+100HP", 3000, 1);
					new str[30];
					format(str, sizeof(str), "~g~+%d$", HealPrice[playerid]);
					GameTextForPlayer(playerid, str, 3000, 1);
					SetPlayerHealth(playerid, 100);
					HealPrice[playerid] = 0;
					HealOffer[playerid] = -1;
	     			format(log_str, sizeof(log_str), "%s'm(a) Imkurnala Da Gadaixada: %d$", Name(playerid), HealPrice[playerid]);
	     			CreateLog("Money", log_str);
	     			format(log_str, sizeof(log_str), "%s'm(a) Umkurnala Motamashes Da Gamoimushava: %d$", Name(HealOffer[playerid]), HealPrice[playerid]);
                    CreateLog("Money", log_str);
                    //HospitalMeds -= 1;
				}
				else
				{
					senderror2(playerid, "Tkventvis Aravis Ar Shemoutavazebia Mkurnaloba!");
				}
		    }
		    return true;
		}
		case 87: // Apanel Testers
		{
		    if(response)
		    {
		        if(!strlen(inputtext)) return true;
		        new query[128], name[MAX_PLAYER_NAME];
		        GetPVarString(playerid, "ApanelTester", name, sizeof(name));
		        format(query, sizeof(query), "UPDATE `settings` SET %s = '%s'",name,inputtext);
				mysql_query(connect, query);
				PC_EmulateCommand(playerid, "/apanel");
			}
			return true;
		}
		case 88: // Graphics Card
		{
		    if(response)
		    {
		        new string[300], str[80];
		        if(listitem == 3)
		        {
		            format(string, sizeof(string), "\n{ffffff}- Erti BTC Fasi: {52BE80}%d$\n{ffffff}- Tkven Gakvt:{52BE80} %d\n\n{ffffff}Chaweret Ramdenis Gadacvlac Gsurt",BitcoinValue,PlayerInfo[playerid][pBitcoin]);
		            ShowPlayerDialog(playerid, 91, DIALOG_STYLE_INPUT, "{52BE80}Exchange{ffffff} | BTC", string, "Exchange", "Close");
		            return true;
		        }
				if(PlayerInfo[playerid][pVideoCardType][listitem] == VIDEO_CARD_TYPE_NONE)
				{
					string = "{ffffff}Graphics Card:\t{ffffff}Price:\n";
					for(new i = 1; i < VIDEO_CARD_TYPE_BADASS+1; i ++)
					{
						format(str, sizeof(str), "{52BE80}(%i){ffffff} %s\t%d\n",i,GetVideoCardName(i),150000*i);
						strcat(string, str);
					}
					ShowPlayerDialog(playerid, 89, DIALOG_STYLE_TABLIST_HEADERS, "{52BE80}Graphics Card{ffffff} | Buy", string, "Buy", "Close");
					SetPVarInt(playerid, "GraphicsCardID", listitem);
				}
				else
				{

					format(string, sizeof(string), ".\n{52BE80}(1){ffffff} Video Karta %d\n{52BE80}(2){ffffff} Informacia\n{52BE80}(3){ffffff} Video Kartis Gakidva - 100.000$");
					ShowPlayerDialog(playerid, 90, DIALOG_STYLE_TABLIST_HEADERS, "{52BE80}Graphics Card{ffffff} | Menu", string, "Select", "Close");
				    /*switch(listitem)
				    {
   						string = "{ffffff}Graphics Card:\t{ffffff}Price:\n";
						for(new i = 1; i < VIDEO_CARD_TYPE_BADASS; i ++)
						{
							format(str, sizeof(str), "{52BE80}(%i){ffffff} %s\t%s\n",i+1,GetVideoCardName(PlayerInfo[playerid][pVideoCardType][i]),150000*i);
							strcat(string, str);
						}
						ShowPlayerDialog(playerid, 89, DIALOG_STYLE_TABLIST_HEADERS, "{52BE80}Graphics Card{ffffff} | Buy", string, "Buy", "Close");
						SetPVarInt(playerid, "GraphicsCardID", listitem);
				    }*/
				}
			}
		    return true;
		}
		case 89: // Graphics Card Buy
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash] < (listitem+1)*150000) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
		        PlayerInfo[playerid][pCash] -= (listitem+1)*150000;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        new vid = GetPVarInt(playerid, "GraphicsCardID");
				PlayerInfo[playerid][pVideoCardType][vid] = listitem+1;
				PlayerInfo[playerid][pVideoCardStatus][vid] = VIDEO_CARD_STATUS_AMAZING;
		        PC_EmulateCommand(playerid, "/vmenu");
		        format(log_str, sizeof(log_str), "%s'm(a) sheidzina video barati da gadaixada : %d", Name(playerid),(listitem+1)*150000);
	   			CreateLog("Money", log_str);
		        SavePlayerVideoCards(playerid);
		    }
		    else
		    {
		        PC_EmulateCommand(playerid, "/vmenu");
		    }
		    return true;
		}
		case 90: // Graphics Card Menu
		{
		    if(response)
		    {
		        new string[256], str[90], vid = GetPVarInt(playerid, "GraphicsCardID");
		        switch(listitem)
		        {
		            case 0: PC_EmulateCommand(playerid, "/vmenu");
		            case 1:
		            {
						format(str, sizeof(str), "{ffffff}Video Karta: %s\n",GetVideoCardName(PlayerInfo[playerid][pVideoCardType][vid]));
						strcat(string, str);
						format(str, sizeof(str), "{ffffff}Statusi: %s%s\n",GetVideoCardStatusColors(PlayerInfo[playerid][pVideoCardStatus][vid]),GetVideoCardStatus(PlayerInfo[playerid][pVideoCardStatus][vid]));
						strcat(string, str);
						format(str, sizeof(str), "{ffffff}Gamomushavebuli: %d\n",PlayerInfo[playerid][pVideoCardWorked][vid]);
						strcat(string, str);
						ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "Graphics Card Info", string, "Close", "");
					}
					case 2:
					{
					    PlayerInfo[playerid][pCash] += 100000;
					    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	    				PlayerInfo[playerid][pVideoCardType][vid] = VIDEO_CARD_TYPE_NONE;
						PlayerInfo[playerid][pVideoCardStatus][vid] = VIDEO_CARD_STATUS_NONE;
						format(log_str, sizeof(log_str), "%s'm(a) gakida video barati da miigo 100.000$", Name(playerid));
	   					CreateLog("Money", log_str);
						SavePlayerVideoCards(playerid);
					}
		        }
		    }
		    else
		    {
		        PC_EmulateCommand(playerid, "/vmenu");
		    }
		    return true;
		}
		case 91: // Exchange Bitcoin
		{
		    if(response)
		    {
				new btc = strval(inputtext);
				if(!btc) return true;
				if(PlayerInfo[playerid][pBitcoin] < btc) return SendClientMessage(playerid, 0x52BE80FF, "[Error]:{ffffff} Ar Gakvt Amdeni BTC");
				PlayerInfo[playerid][pBitcoin] -= btc;
				PlayerUpdateData(playerid, "pBitcoin", PlayerInfo[playerid][pBitcoin]);
				PlayerInfo[playerid][pCash] += btc*BitcoinValue;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				format(gstr, sizeof(gstr), "Tkven Gadacvalet {52BE80}%d Bitcoin{ffffff} / %d$",btc,btc*BitcoinValue);
				format(log_str, sizeof(log_str), "%s'm(a) gadacvala %d bitcoin %d fasi", Name(playerid),btc,btc*BitcoinValue);
	   			CreateLog("Money", log_str);
				SendClientMessage(playerid, -1, gstr);
		    }
		    return true;
		}
		case 92: // Mansion Buy
		{
			if(response)
			{
			    new mansionid = GetPVarInt(playerid, "MansionID");
       			if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror2(playerid, "Tkven Ar Xart Arcert Family'shi");
		        if(PlayerInfo[playerid][pFamilyRank] < 6) return senderror2(playerid, "Tkven Ver Sheidzent Mansion's");
		        if(FamilyInfo[p_family_id][fMansion] != 0) return senderror2(playerid, "Tkveni Family Ukve Flobs Mansions");
		        if(PlayerInfo[playerid][pCash] < MansionInfo[mansionid][mPrice]) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
   				PlayerInfo[playerid][pCash] -= MansionInfo[mansionid][mPrice];
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				format(log_str, sizeof(log_str), "%s'm(a) sheidzina mansion da gadaixada %d", Name(playerid),MansionInfo[mansionid][mPrice]);
	   			CreateLog("Money", log_str);
				new other[128];
				format(other, sizeof(other), "~r~-%d$", MansionInfo[mansionid][mPrice]);
				GameTextForPlayer(playerid, other, 1000, 1);
				FamilyInfo[p_family_id][fMansion] = mansionid;
				FamilyUpdateData(p_family_id, "fMansion", FamilyInfo[p_family_id][fMansion]);
				MansionInfo[mansionid][mOwned] = 1;
				MansionUpdateData(mansionid, "mOwned", MansionInfo[mansionid][mOwned]);
				MansionInfo[mansionid][mFamily] = p_family_id;
				MansionUpdateData(mansionid, "mFamily", MansionInfo[mansionid][mFamily]);
				
				new string[128];
				format(string, 128, "{34495e}Mansion ID:{ffffff} #%d\n{34495e}Price:{ffffff} %d$\n{34495e}Family:{ffffff} %s",MansionInfo[p_mansion_id][mID],MansionInfo[p_mansion_id][mPrice],FamilyInfo[p_mansion_id][fName]);
				UpdateDynamic3DTextLabelText(MansionInfo[p_mansion_id][mText], COLOR_WHITE, string);
			    return true;
			}
		}
		case 93: // Mansion Menu
		{
		    if(response)
		    {
		        new str[100], string[100*MAX_MANSION_CAR];
		        switch(listitem)
		        {
		            case 0: // Door Un/Lock
		            {
						MansionInfo[p_mansion_id][mLock] = !MansionInfo[p_mansion_id][mLock];
						MansionUpdateData(p_mansion_id, "mLock", MansionInfo[p_mansion_id][mLock]);
						PC_EmulateCommand(playerid, "/mansion");
		            }
		            case 1: // Mansion Car Buy
		            {
						for(new i = 0; i < MAX_MANSION_CAR; i ++)
						{
						    format(str, sizeof(str), "{48c9b0}[%d]{ffffff} %s\n", i+1, MansionInfo[p_mansion_id][mCarID][i]?GetVehicleName(MansionInfo[p_mansion_id][mCarID][i]):"Arcerti");
							strcat(string, str);
						}
						ShowPlayerDialog(playerid, 94, DIALOG_STYLE_LIST, "{48c9b0}Mansion{ffffff} | Select Slot", string, "Select", "Back");
		            }
		            case 2: // Mansion Car Respawn
		            {
		                new other[128];
						for(new i = 0; i < MAX_MANSION_CAR; i ++)
						{
						    new carid = i;
			   				/*if(!IsValidVehicle(MansionInfo[p_mansion_id][mVehicle][carid]))
						    {
						        CreateVehicle(MansionInfo[p_mansion_id][mCarID][carid], MansionInfo[p_mansion_id][mCarPosX][carid], MansionInfo[p_mansion_id][mCarPosY][carid], MansionInfo[p_mansion_id][mCarPosZ][carid], MansionInfo[p_mansion_id][mCarPosA][carid], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[p_mansion_id][mFamily]][fColor]], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[p_mansion_id][mFamily]][fColor]], 0);
						    }
						    if(!IsValidDynamic3DTextLabel(MansionInfo[p_mansion_id][mCarText][carid]))
						    {
								format(other, sizeof(other), "{48c9b0}Car: {FFFFFF}%s\n{48c9b0}Family: {FFFFFF}%s\n\n[%d]", GetVehicleName(MansionCars[carid][0]), FamilyInfo[p_family_id][fName], carid);
            					MansionInfo[p_mansion_id][mCarText][carid] = CreateDynamic3DTextLabel(other, 0x48C9B0FF, 0.0000, 0.0000, 0.3000, 10.0000, INVALID_PLAYER_ID, MansionInfo[p_mansion_id][mVehicle][carid], 0, -1, -1);
						    }*/
						    if(IsValidVehicle(MansionInfo[p_mansion_id][mVehicle][carid]))
						    {
								DestroyVehicle(MansionInfo[p_mansion_id][mVehicle][carid]);
						    }
                            if(!IsValidDynamic3DTextLabel(MansionInfo[p_mansion_id][mCarText][carid]))
                            {
                                DestroyDynamic3DTextLabel(MansionInfo[p_mansion_id][mCarText][carid]);
                            }
		        			CreateVehicle(MansionInfo[p_mansion_id][mCarID][carid], MansionInfo[p_mansion_id][mCarPosX][carid], MansionInfo[p_mansion_id][mCarPosY][carid], MansionInfo[p_mansion_id][mCarPosZ][carid], MansionInfo[p_mansion_id][mCarPosA][carid], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[p_mansion_id][mFamily]][fColor]], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[p_mansion_id][mFamily]][fColor]], 0);
							format(other, sizeof(other), "{48c9b0}Car: {FFFFFF}%s\n{48c9b0}Family: {FFFFFF}%s\n\n[%d]", GetVehicleName(MansionCars[carid][0]), FamilyInfo[p_family_id][fName], carid);
            				MansionInfo[p_mansion_id][mCarText][carid] = CreateDynamic3DTextLabel(other, 0x48C9B0FF, 0.0000, 0.0000, 0.3000, 10.0000, INVALID_PLAYER_ID, MansionInfo[p_mansion_id][mVehicle][carid], 0, -1, -1);
						    if(!IsVehicleOccupied(MansionInfo[p_mansion_id][mVehicle][i]))
							{
							    //SetVehiclePos(MansionInfo[p_mansion_id][mVehicle][i], MansionInfo[p_mansion_id][mCarPosX][carid], MansionInfo[p_mansion_id][mCarPosY][carid], MansionInfo[p_mansion_id][mCarPosZ][carid]);
							    //SetVehicleZAngle(MansionInfo[p_mansion_id][mVehicle][i], MansionInfo[p_mansion_id][mCarPosA][carid]);
								//SetVehicleToRespawn(MansionInfo[p_mansion_id][mVehicle][i]);
								//ChangeVehicleColor(MansionInfo[p_mansion_id][mVehicle][i], MansionColorsByFamilyColors[p_family_color], MansionColorsByFamilyColors[p_family_color]);
							}
						}
			    		SendClientMessage(playerid, 0x48C9B0FF, "[Mansion]:{ffffff} Tkven Daarespawnet Mankanebi");
		            }
		            case 3: // Mansion Parking
		            {
   						for(new i = 0; i < MAX_MANSION_CAR; i ++)
						{
						    format(str, sizeof(str), "{48c9b0}[%d]{ffffff} %s\n", i+1, MansionInfo[p_mansion_id][mCarID][i]?GetVehicleName(MansionInfo[p_mansion_id][mCarID][i]):"Arcerti");
							strcat(string, str);
						}
						ShowPlayerDialog(playerid, 96, DIALOG_STYLE_LIST, "{48c9b0}Mansion{ffffff} | Park", string, "Select", "Back");
		            }
		        }
		        return true;
		    }
		}
		case 94: // Mansion Select Car Slot
		{
		    if(response)
		    {
				new str[100], string[800];
				string = "{ffffff}Car Name:\t{ffffff}Price:\n";
				for(new i = 0; i < sizeof(MansionCars); i ++)
				{
				    format(str, sizeof(str), "{48c9b0}[%d]{ffffff} %s\t%d$\n", i+1, GetVehicleName(MansionCars[i][0]), MansionCars[i][1]);
					strcat(string, str);
				}
				ShowPlayerDialog(playerid, 95, DIALOG_STYLE_TABLIST_HEADERS, "{48c9b0}Mansion{ffffff} | Buy Car", string, "Buy", "Back");
		        SetPVarInt(playerid, "MansionCarID", listitem);
		    }
		    else
		    {
		        PC_EmulateCommand(playerid, "/mansion");
		    }
		    return true;
		}
		case 95: // Mansion Car Buy
		{
			if(response)
			{
			    new carid = GetPVarInt(playerid, "MansionCarID");
			    if(PlayerInfo[playerid][pCash] < MansionCars[carid][1]) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			    PlayerInfo[playerid][pCash] -= MansionCars[carid][1];
			    format(log_str, sizeof(log_str), "%s'm(a) sheidzina mansionis mankana da gadaixada - %d", Name(playerid),MansionCars[carid][1]);
	   			CreateLog("Money", log_str);
			    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
   				new other[128];
				format(other, sizeof(other), "~y~-%d$", MansionCars[carid][1]);
				GameTextForPlayer(playerid, other, 1000, 1);
			    MansionInfo[p_mansion_id][mCarID][carid] = MansionCars[carid][0];
			    format(other, sizeof(other), "mCarID%d", carid);
       			MansionUpdateData(p_mansion_id, other, MansionInfo[p_mansion_id][mCarID][carid]);
			    
			    if(IsValidVehicle(MansionInfo[p_mansion_id][mVehicle][carid]))
			    {
			        DestroyVehicle(MansionInfo[p_mansion_id][mVehicle][carid]);
			    }
			    CreateVehicle(MansionInfo[p_mansion_id][mCarID][carid], MansionInfo[p_mansion_id][mCarPosX][carid], MansionInfo[p_mansion_id][mCarPosY][carid], MansionInfo[p_mansion_id][mCarPosZ][carid], MansionInfo[p_mansion_id][mCarPosA][carid], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[p_mansion_id][mFamily]][fColor]], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[p_mansion_id][mFamily]][fColor]], 0);
			    if(IsValidDynamic3DTextLabel(MansionInfo[p_mansion_id][mCarText][carid]))
			    {
			        DestroyDynamic3DTextLabel(MansionInfo[p_mansion_id][mCarText][carid]);
			    }
				format(other, sizeof(other), "{48c9b0}Car: {FFFFFF}%s\n{48c9b0}Family: {FFFFFF}%s\n\n[%d]", GetVehicleName(MansionCars[carid][0]), FamilyInfo[p_family_id][fName], carid);
            	MansionInfo[p_mansion_id][mCarText][carid] = CreateDynamic3DTextLabel(other, 0x48C9B0FF, 0.0000, 0.0000, 0.3000, 10.0000, INVALID_PLAYER_ID, MansionInfo[p_mansion_id][mVehicle][carid], 0, -1, -1);
				format(other, sizeof(other), "[Mansion]:{ffffff} Tkven Sheidzinet Axali Mankana: {48c9b0}%s(%d) / %d$", GetVehicleName(MansionCars[carid][0]), MansionCars[carid][0], MansionCars[carid][1]);
			    SendClientMessage(playerid, 0x48C9B0FF, other);
			}
			return true;
		}
		case 96: // Mansion Car Park
		{
		    if(response)
		    {
		        if(!IsPlayerInRangeOfPoint(playerid, 125.0, MansionInfo[p_mansion_id][mEnterPos][0], MansionInfo[p_mansion_id][mEnterPos][1], MansionInfo[p_mansion_id][mEnterPos][2]))
		            return senderror2(playerid, "Tkven Ar Imkofebit Mansiontan Axlos");
		        if(!IsPlayerInAnyVehicle(playerid)) return senderror2(playerid, "Ar Imkofebit Transportshi");
		        new Float:x, Float:y, Float:z, Float:angle, query[16];
		        GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
		        GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
		        MansionInfo[p_mansion_id][mCarPosX][listitem] = x;
		        format(query, 16, "mCarPosX%d", listitem);
		        MansionUpdateDataFloat(p_mansion_id, query, MansionInfo[p_mansion_id][mCarPosX][listitem]);
                MansionInfo[p_mansion_id][mCarPosY][listitem] = y;
		        format(query, 16, "mCarPosY%d", listitem);
		        MansionUpdateDataFloat(p_mansion_id, query, MansionInfo[p_mansion_id][mCarPosY][listitem]);
                MansionInfo[p_mansion_id][mCarPosZ][listitem] = z;
		        format(query, 16, "mCarPosZ%d", listitem);
		        MansionUpdateDataFloat(p_mansion_id, query, MansionInfo[p_mansion_id][mCarPosZ][listitem]);
                MansionInfo[p_mansion_id][mCarPosA][listitem] = angle;
		        format(query, 16, "mCarPosA%d", listitem);
		        MansionUpdateDataFloat(p_mansion_id, query, MansionInfo[p_mansion_id][mCarPosA][listitem]);
		        SendClientMessage(playerid, 0x48C9B0FF, "[Mansion]:{ffffff} Transporti Daparkingda");
		    }
		    else
		    {
		        PC_EmulateCommand(playerid, "/mansion");
		    }
		    return true;
		}
		case 97:
		{
		    if(response)
		    {
		        AS_client[playerid] = listitem;
				ShowAutoSalon(playerid);
		    }
		    return true;
		}
		case 98: // Moroz
		{
		    if(response)
		    {
                new getid = FRACTION_BALLAS+listitem;
                MorozSystem[getid] = !MorozSystem[getid];
                PC_EmulateCommand(playerid, "/Moroz");
		    }
		    return true;
		}
		case 99: // new items
		{
		    if(response)
		    {
		        new string[128];
		        format(string, sizeof(string), "Last Select - %d", newitems[listitem]);
		        SendClientMessage(playerid, -1, string);
		        UseLauncherItem(playerid, newitems[listitem]);
		    }
		    return true;
		}
		case 161:
	    {
	       	if(!response)
            {
                pAntiCheatSettingsPage{playerid} = 0;
                return 1;
            }

            if(!strcmp(inputtext, "<<<"))
            {
                pAntiCheatSettingsPage{playerid} ++;
            }
            else if(!strcmp(inputtext, ">>>"))
            {
                pAntiCheatSettingsPage{playerid} --;
            }
            else
            {
                pAntiCheatSettingsEditCodeId[playerid] = pAntiCheatSettingsMenuListData[playerid][listitem];
                return ShowPlayer_AntiCheatEditCode(playerid, pAntiCheatSettingsEditCodeId[playerid]);
            }
            return ShowPlayer_AntiCheatSettings(playerid);
		}
		case 162:
	    {
	       	if(!response)
            {
                pAntiCheatSettingsEditCodeId[playerid] = -1;
                return ShowPlayer_AntiCheatSettings(playerid);
            }

            new
	            item = pAntiCheatSettingsEditCodeId[playerid];

            if(AC_CODE_TRIGGER_TYPE[item] == listitem)
                return ShowPlayer_AntiCheatSettings(playerid);

            if(AC_CODE_TRIGGER_TYPE[item] == AC_CODE_TRIGGER_TYPE_DISABLED && listitem != AC_CODE_TRIGGER_TYPE_DISABLED)
                EnableAntiCheat(item, 1);

            else if(listitem == AC_CODE_TRIGGER_TYPE_DISABLED)
                EnableAntiCheat(item, 0);

            AC_CODE_TRIGGER_TYPE[item] = listitem;
        	new sql_query[101 - 4 + 1 + 2];
			format(sql_query, sizeof(sql_query), "UPDATE `anticheat` SET `"AC_TABLE_FIELD_TRIGGER"` = '%d' WHERE `"AC_TABLE_FIELD_CODE"` = '%d'", listitem, item);
			mysql_tquery(connect, sql_query, "", "");
            return ShowPlayer_AntiCheatSettings(playerid);
		}
		case 9900: // Commands
		{
		    if(!response) return true;
		    new commandid = -1;
			for(new i = 0; i < sizeof(CommandData); i ++)
			{
			    if(!strcmp(inputtext, CommandData[i][cmd_Text]))
			    {
					commandid = i;
			        return true;
			    }
			}
			if(commandid == -1) return SendClientMessage(playerid, -1, "Command Not Found");
			format(gstr, sizeof(gstr), "%s - %s", inputtext, CommandData[commandid][cmd_Desc]);
			SendClientMessage(playerid, -1, gstr);
			return true;
		}
		case 112:
		{
		    if(response)
		    {
   				new price = strval(inputtext);
				if(!strval(inputtext))
				{
     				if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
					{
					    format(Salon_String, sizeof(Salon_String), "{FFFFFF}Model: {3399FF}%s\n{FFFFFF}Sadgomis Fasi: {3399FF}5.000$\n{FFFFFF}Tkveni Transporti Gayidvashi Ikneba: {3399FF}1{FFFFFF}Saati\n\n{FFFFFF}Miutitet Transportis Fasi Da Daachiret: {3399FF}'Shemdeg'{FFFFFF}s", GetVehicleName(GetVehicleModel(caridhouse[playerid])));
					    ShowPlayerDialog(playerid, 112, DIALOG_STYLE_INPUT, "{3399FF}AutoSalon", Salon_String, "Shemdeg", "Daxurva");
					}
				    return false;
				}
				if(price < 1000 || price > 10000000)
				{
     				if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
					{
					    format(Salon_String, sizeof(Salon_String), "{FFFFFF}Model: {3399FF}%s\n{FFFFFF}Sadgomis Fasi: {3399FF}5.000$\n{FFFFFF}Tkveni Transporti Gayidvashi Ikneba: {3399FF}1{FFFFFF}Saati\n\n{FFFFFF}Miutitet Transportis Fasi Da Daachiret: {3399FF}'Shemdeg'{FFFFFF}s", GetVehicleName(GetVehicleModel(caridhouse[playerid])));
					    ShowPlayerDialog(playerid, 112, DIALOG_STYLE_INPUT, "{3399FF}AutoSalon", Salon_String, "Shemdeg", "Daxurva");
					}
					sendinfo(playerid, "Minimum: 1.000$ / Maxsimum: 10.000.000$");
					return false;
				}
				//if(VehInfo[playerid][Car][0] == 399 && VehInfo[playerid][Car][1] == 399 && VehInfo[playerid][Car][2] == 399 && VehInfo[playerid][Car][3] == 399 && VehInfo[playerid][Car][4] == 399) return senderror(playerid, "Tkven Ar Gyavt Transporti");
				new query[128];
				format(query, sizeof(query),"SELECT * FROM `cars` WHERE Owner = '%s' AND `ForSale` = '1'", Name(playerid));
				mysql_query(connect, query);
				new rows;
				cache_get_row_count(rows);
				if(rows) return senderror(playerid, "Tkveni Transporti Ukve Dgas Gasayidad!");
				if(PlayerInfo[playerid][pCash] < 5000) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa!");
				if(CarInfo[GetPVarInt(playerid, "CarPosID")][CarStatus] == 1) return senderror(playerid, "Es Adgili Dakavebulia!");
				if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
				{
					CarInfo[GetPVarInt(playerid, "CarPosID")][CarID] = GetVehicleModel(caridhouse[playerid]);
					CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarID", CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]);
					CarInfo[GetPVarInt(playerid, "CarPosID")][CarSlot] = MyCarInsertID[playerid][GetPVarInt(playerid, "MyCarID")];
					CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarSlot", CarInfo[GetPVarInt(playerid, "CarPosID")][CarSlot]);
					format(query, sizeof(query), "UPDATE cars SET ForSale = '1' WHERE ID = '%d'",MyCarInsertID[playerid][GetPVarInt(playerid, "MyCarID")]);
					mysql_query(connect, query);
					DestroyVehicle(caridhouse[playerid]);
				}
				PlayerInfo[playerid][pCash] -= 5000;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				format(log_str, sizeof(log_str), "%s'm(a) Daayena Transporti Gasayidad Da Gadaixada: 5.000$", Name(playerid));
				CreateLog("Money", log_str);
				CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice] = price;
				CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarPrice", CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
				CarInfo[GetPVarInt(playerid, "CarPosID")][CarStatus] = 1;
				CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarStatus", CarInfo[GetPVarInt(playerid, "CarPosID")][CarStatus]);
				strmid(CarInfo[GetPVarInt(playerid, "CarPosID")][CarOwner], Name(playerid), 0, Name(playerid), 32);
				CarUpdateDataString(GetPVarInt(playerid, "CarPosID"), "CarOwner", CarInfo[GetPVarInt(playerid, "CarPosID")][CarOwner]);
				CarInfo[GetPVarInt(playerid, "CarPosID")][CarTime] = 1;
				CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarTime", CarInfo[GetPVarInt(playerid, "CarPosID")][CarTime]);
				CarInfo[GetPVarInt(playerid, "CarPosID")][CarIDInfo] = CreateVehicle(CarInfo[GetPVarInt(playerid, "CarPosID")][CarID], CarInfo[GetPVarInt(playerid, "CarPosID")][CarPosX], CarInfo[GetPVarInt(playerid, "CarPosID")][CarPosY], CarInfo[GetPVarInt(playerid, "CarPosID")][CarPosZ], CarInfo[GetPVarInt(playerid, "CarPosID")][CarPosC], 0, 0, 1800);
			  	GetVehicleParamsEx(CarInfo[GetPVarInt(playerid, "CarPosID")][CarIDInfo], engines,lightss,alarms,doorss,bonnets,boots,objectives);
				SetVehicleParamsEx(CarInfo[GetPVarInt(playerid, "CarPosID")][CarIDInfo], 0,lightss,alarms,1,bonnets,boots,objectives);
				CarUpdateText(GetPVarInt(playerid, "CarPosID"));
				SetPVarInt(playerid, "CarPosID", 25);
		    }
		}
		case 113:
		{
		    if(response)
		    {
				if(PlayerInfo[playerid][pCash] < CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa!");
				new target;
				target = ReturnUser(CarInfo[GetPVarInt(playerid, "CarPosID")][CarOwner]);
				if(target >= 0 && target != INVALID_PLAYER_ID)
				{
				    if(CarInfo[GetPVarInt(playerid, "CarPosID")][CarID] == 462 && CarInfo[GetPVarInt(playerid, "CarPosID")][CarStatus] == 0) return senderror(playerid, "Transporti Ukve Gaiyida!");
					if(PlayerInfo[playerid][pCash] < CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa!");
					target = ReturnUser(CarInfo[GetPVarInt(playerid, "CarPosID")][CarOwner]);
					if(target >= 0 && target != INVALID_PLAYER_ID)
					{
						format(other_string, sizeof(other_string), "{3399FF}Gilocavt! {FFFFFF}Tkven Sheidzinet Transporti: {3399FF}%s{FFFFFF} / Fasi: {3399FF}%d$", GetVehicleName(CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]), CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
						SendClientMessage(playerid, COLOR_WHITE, other_string);
						format(other_string, sizeof(other_string), "{3399FF}Gilocavt! {FFFFFF}Tkveni Transporti {3399FF}%s{FFFFFF} Gaiyida: {3399FF}%d${FFFFFF}'ad", GetVehicleName(CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]), CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
						SendClientMessage(target, COLOR_WHITE, other_string);

					    new cashstr[45];
					    format(cashstr, sizeof(cashstr), "~r~-%d$", CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
					    GameTextForPlayer(playerid, cashstr, 1000, 1);
						PlayerInfo[playerid][pCash] -= CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice];
						PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
						format(log_str, sizeof(log_str), "%s'm(a) Sheidzina Transporti: %s Da Gadaixada: %d$", Name(playerid), GetVehicleName(CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]), CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
                        CreateLog("Money", log_str);
					    format(cashstr, sizeof(cashstr), "~g~+%d$", CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
					    GameTextForPlayer(target, cashstr, 1000, 1);
						PlayerInfo[target][pCash] += CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice];
						PlayerUpdateData(target, "pCash", PlayerInfo[target][pCash]);
						format(log_str, sizeof(log_str), "%s'm(a) Gayida Transporti: %s Da Gamoimushava: %d$", Name(target), GetVehicleName(CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]), CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
                        CreateLog("Money", log_str);

						GivePlayerCar(playerid, CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]);
						//PI[playerid][pCarStatus] = 0;
						//PlayerUpdateData(playerid, "CarStatus", PI[playerid][pCarStatus]);

						new query[128];
						format(query, sizeof(query), "DELETE FROM `cars` WHERE `Owner` = '%s' AND `ID` = '%d'",Name(target),CarInfo[GetPVarInt(playerid, "CarPosID")][CarSlot]);
						mysql_query(connect, query);

						if(CarInfo[GetPVarInt(playerid, "CarPosID")][CarIDInfo] != -1)
						{
							DestroyVehicle(CarInfo[GetPVarInt(playerid, "CarPosID")][CarIDInfo]);
							CarInfo[GetPVarInt(playerid, "CarPosID")][CarIDInfo] = -1;
						}
						CarInfo[GetPVarInt(playerid, "CarPosID")][CarID] = 462;
						CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarID", CarInfo[GetPVarInt(playerid, "CarPosID")][CarID]);
						CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice] = 0;
						CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarPrice", CarInfo[GetPVarInt(playerid, "CarPosID")][CarPrice]);
						CarInfo[GetPVarInt(playerid, "CarPosID")][CarStatus] = 0;
						CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarStatus", CarInfo[GetPVarInt(playerid, "CarPosID")][CarStatus]);
						CarInfo[GetPVarInt(playerid, "CarPosID")][CarSlot] = 0;
						CarUpdateData(GetPVarInt(playerid, "CarPosID"), "CarSlot", CarInfo[GetPVarInt(playerid, "CarPosID")][CarSlot]);
						strmid(CarInfo[GetPVarInt(playerid, "CarPosID")][CarOwner], "None", 0, strlen("None"), 20);
						CarUpdateDataString(GetPVarInt(playerid, "CarPosID"), "CarOwner", CarInfo[GetPVarInt(playerid, "CarPosID")][CarOwner]);

						CarUpdateText(GetPVarInt(playerid, "CarPosID"));
						SetPVarInt(playerid, "CarPosID", 25);
					}
					else senderror(playerid, "Transportis Mflobeli Ar Imyofeba Serverze!");
				}
				else
				{
					senderror(playerid, "Transportis Mflobeli Ar Imyofeba Serverze!");
				}
			}
		}
		case 163:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
					case 0:
					{
					    format(b_string, sizeof(b_string), "{FFFFFF}Radarebis Raodenoba: {3399FF}%d\n{FFFFFF}Radaris Sashualebit Ekonikas Gamoaklda: {3399FF}%d$\n{FFFFFF}Tu Gsurt Radaris Dayeneba Amisatvis Sahicroa Miutitot Maxsimaluri Sichkare", TotalRadar, RadarMoney);
	           			ShowPlayerDialog(playerid, 162, DIALOG_STYLE_INPUT, "{3399FF}Admin Panel{FFFFFF} | Radar", b_string, "Shemdeg", "Ukan");
					}
					case 1:
					{
					    new radarstr[790], count = 0;
						for(new r = 1; r <= TotalRadar; r++)
						{
							format(s_string, sizeof(s_string), "¹%d\n", RadarInfo[r][RadarID]);
							strcat(radarstr, s_string);
							count ++;
						}
						if(count == 0) return senderror(playerid, "Serverze Radarebis Raodenoba Sheadgens: 0's!");
					    ShowPlayerDialog(playerid, 165, DIALOG_STYLE_LIST, "{3399FF}Admin Panel{FFFFFF} | Radar", radarstr, "Archeva", "Ukan");
					}
	            }
	        }
	        else PC_EmulateCommand(playerid, "/apanel");
		}
	case 164:
		{
		    if(response)
		    {
		    	new speed;
  				if(sscanf(inputtext,"i", speed))
				{
					format(b_string, sizeof(b_string), "{FFFFFF}Radarebis Raodenoba: {3399FF}%d\n{FFFFFF}Radaris Sashualebit Ekonikas Gamoaklda: {3399FF}%d$\n{FFFFFF}Tu Gsurt Radaris Dayeneba Amisatvis Sahicroa Miutitot Maxsimaluri Sichkare", TotalRadar, RadarMoney);
	                ShowPlayerDialog(playerid, 164, DIALOG_STYLE_INPUT, "{3399FF}Admin Panel{FFFFFF} | Radar", b_string, "Shemdeg", "Ukan");
					return true;
				}
				if(speed < 30 || speed > 110)
				{
					format(b_string, sizeof(b_string), "{FFFFFF}Radarebis Raodenoba: {3399FF}%d\n{FFFFFF}Radaris Sashualebit Ekonikas Gamoaklda: {3399FF}%d$\n{FFFFFF}Tu Gsurt Radaris Dayeneba Amisatvis Sahicroa Miutitot Maxsimaluri Sichkare", TotalRadar, RadarMoney);
	                ShowPlayerDialog(playerid, 164, DIALOG_STYLE_INPUT, "{3399FF}Admin Panel{FFFFFF} | Radar", b_string, "Shemdeg", "Ukan");
	                sendinfo(playerid, "Maxsimaluri Sichkare Unda Shedgebodes Minimum: 30 Da Maxsimum: 110'sgan");
					return true;
				}
				if(GetPlayerVirtualWorld(playerid) != 0) return senderror(playerid, "Am Adgilas Radaris Dayeneba Sheudzlebelia!");
				TotalRadar ++;
				if(TotalRadar == MAX_RADAR) return senderror(playerid, "Radarebis Maxsimaluri Raodenoba Ayenia Ukve Serverze!");
				new Float:RadarPos[4];
				GetPlayerPos(playerid, RadarPos[0], RadarPos[1], RadarPos[2]), GetPlayerFacingAngle(playerid, RadarPos[3]);
				RadarInfo[TotalRadar][RadarPosX] = RadarPos[0];
				RadarInfo[TotalRadar][RadarPosY] = RadarPos[1];
				RadarInfo[TotalRadar][RadarPosZ] = RadarPos[2]-1.0;
				RadarInfo[TotalRadar][RadarPosC] = RadarPos[3];
				RadarInfo[TotalRadar][RadarID] = TotalRadar;
				RadarInfo[TotalRadar][RadarSpeed] = speed;
				new radarsql[512], textstr[200];
                mysql_format(connect, radarsql, sizeof(radarsql), "INSERT INTO `Radars` (`RadarID`, `RadarPosX`, `RadarPosY`, `RadarPosZ`, `RadarPosC`, `RadarSpeed`) VALUES\
				('%i', '%f', '%f', '%f', '%f', '%i')", TotalRadar, RadarInfo[TotalRadar][RadarPosX], RadarInfo[TotalRadar][RadarPosY], RadarInfo[TotalRadar][RadarPosZ], RadarInfo[TotalRadar][RadarPosC], RadarInfo[TotalRadar][RadarSpeed]);
	    		mysql_tquery(connect, radarsql, "", "");
	    		RadarInfo[TotalRadar][RadarObject] = CreateDynamicObject(18880, RadarInfo[TotalRadar][RadarPosX], RadarInfo[TotalRadar][RadarPosY], RadarInfo[TotalRadar][RadarPosZ], 0, 0, RadarInfo[TotalRadar][RadarPosC]);
	    		format(textstr, sizeof textstr, "{FFFFFF}Police Camera: #{3399FF}%d\n{FFFFFF}Maxsimaluri Sichkare: {3399FF}%d{FFFFFF}KM", TotalRadar, RadarInfo[TotalRadar][RadarSpeed]);
				RadarInfo[TotalRadar][RadarText] = CreateDynamic3DTextLabel(textstr, COLOR_WHITE, RadarInfo[TotalRadar][RadarPosX], RadarInfo[TotalRadar][RadarPosY], RadarInfo[TotalRadar][RadarPosZ]+4.0,40.0);
                RadarInfo[TotalRadar][RadarArea] = CreateDynamicSphere(RadarInfo[TotalRadar][RadarPosX], RadarInfo[TotalRadar][RadarPosY], RadarInfo[TotalRadar][RadarPosZ], 30.0);
				PC_EmulateCommand(playerid, "/apanel");
		    }
		    else PC_EmulateCommand(playerid, "/apanel");
		}
	case 165:
	    {
	        if(response)
	        {
	            DestroyDynamicArea(RadarInfo[listitem+1][RadarArea]);
	            DestroyDynamic3DTextLabel(RadarInfo[listitem+1][RadarText]);
	            DestroyDynamicObject(RadarInfo[listitem+1][RadarObject]);
	            new Float:RadarPos[4];
				GetPlayerPos(playerid, RadarPos[0], RadarPos[1], RadarPos[2]), GetPlayerFacingAngle(playerid, RadarPos[3]);
				RadarInfo[listitem+1][RadarPosX] = RadarPos[0];
				RadarInfo[listitem+1][RadarPosY] = RadarPos[1];
				RadarInfo[listitem+1][RadarPosZ] = RadarPos[2]-1.0;
				RadarInfo[listitem+1][RadarPosC] = RadarPos[3];
				RadarInfo[listitem+1][RadarArea] = CreateDynamicSphere(RadarInfo[listitem+1][RadarPosX], RadarInfo[listitem+1][RadarPosY], RadarInfo[listitem+1][RadarPosZ], 30.0);
                RadarInfo[listitem+1][RadarObject] = CreateDynamicObject(18880, RadarInfo[listitem+1][RadarPosX], RadarInfo[listitem+1][RadarPosY], RadarInfo[listitem+1][RadarPosZ], 0, 0, RadarInfo[listitem+1][RadarPosC]);
				new textstr[200];
				format(textstr, sizeof textstr, "{FFFFFF}Police Camera: #{3399FF}%d\n{FFFFFF}Maxsimaluri Sichkare: {3399FF}%d{FFFFFF}KM/H", listitem+1, RadarInfo[listitem+1][RadarSpeed]);
				RadarInfo[listitem+1][RadarText] = CreateDynamic3DTextLabel(textstr, COLOR_WHITE, RadarInfo[listitem+1][RadarPosX], RadarInfo[listitem+1][RadarPosY], RadarInfo[listitem+1][RadarPosZ]+4.0,40.0);
                SaveRadars(listitem+1);
			}
		}
  		case 1221: // VIP Music
		{
  			if(response)
  			{
   			 	switch(listitem)
			 	{
					case 0:
					{
					    StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid,"http://iis.ge:8000/radiotbilisi.mp3.m3u");
					}
					case 1:
					{
					    StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid,"http://shaincast.caster.fm:24734/listen.mp3");
					}
					case 2:
					{
					    StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid,"http://109.172.182.119:8000/broadwave.m3u?src=1&rate=1");
					}
				}
			}
			return true;
	 	}
		case 1900: // Dialog Tune
		{
		    if(response)
		    {
		        new carid = GetPVarInt(playerid, "MyCarID");
				if(listitem == 2)
				{
				    new string[256];
				    format(string, sizeof(string), "{ffffff}Attach nitro to your vehicle\t{ffffff}Price\n{85929e}[1]{ffffff} Nitro 2X\t%d$\n{85929e}[2]{ffffff} Nitro 5X\t%d$\n{85929e}[3]{ffffff} Nitro 10X\t%d$",CarTune_Nitros[0][1], CarTune_Nitros[1][1], CarTune_Nitros[2][1]);
				    ShowPlayerDialog(playerid, 1901, DIALOG_STYLE_TABLIST_HEADERS, "{85929e}Tuning{ffffff} | Nitro", string, "Tune", "Back");
				    return true;
				}
				if(listitem == 4)
				{
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
     				if(!(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558))
					{
						senderror(playerid, "Am Transportze Ar Kendeba Spoiler");
					    ShowTuneDialog(playerid);
					    return true;
					}
				}
				if(listitem == 5)
				{
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
					if(!(getmodel == 562 || getmodel == 534 || getmodel == 535 || getmodel == 536 || getmodel == 567 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558))
					{
						senderror(playerid, "Am Transportze Ar Kendeba PaintJob");
					    ShowTuneDialog(playerid);
					    return true;
					}
				}
				if(listitem == 6)
				{
	   				new string[256];
				    format(string, sizeof(string), "Gnebavt %s Hirdravlika? %s",MyCarTune[playerid][carid][CARTUNE_HYDR]?"Moashorot":"Daamagrot",MyCarTune[playerid][carid][CARTUNE_HYDR]?"":"Fasi: 15.000$");
				    ShowPlayerDialog(playerid, 1902, DIALOG_STYLE_MSGBOX, "{85929e}Tuning{ffffff} | Nitro", string, "Tune", "Back");
				    return true;
				}
				if(listitem == 7)
				{
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
					if(!(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576))
					{
						senderror(playerid, "Am Transportze Ar Kendeba Ukana Bamperi");
					    ShowTuneDialog(playerid);
					    return true;
					}
				}
				if(listitem == 8)
				{
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
					if(!(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576))
					{
						senderror(playerid, "Am Transportze Ar Kendeba Wina Bamperi");
					    ShowTuneDialog(playerid);
					    return true;
					}
				}
				TuneSelectID[playerid] = listitem;
		    }
		    else
		    {
                InvokePlayerFromTune(playerid);
		    }
		    return true;
		}
		case 1901: // Dialog Nitro
		{
		    if(!response) return ShowTuneDialog(playerid), ApplyVehicleTune(playerid, caridhouse[playerid], GetPVarInt(playerid, "MyCarID"));
			if(PlayerInfo[playerid][pCash] < CarTune_Nitros[listitem][1])
			{
			    SendClientMessage(playerid, 0x85929EFF, "[Tune]:{ffffff} Tkven Ar Gakvt Sakmarisi Tanxa");
			    ShowTuneDialog(playerid);
			    return true;
			}
			PlayerInfo[playerid][pCash] -= CarTune_Nitros[listitem][1];
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
			MyCarTune[playerid][GetPVarInt(playerid, "MyCarID")][CARTUNE_NITRO] = CarTune_Nitros[listitem][0];
			ApplyVehicleTune(playerid, caridhouse[playerid], GetPVarInt(playerid, "MyCarID"));
			UpdatePlayerCar(MyCarInsertID[playerid][GetPVarInt(playerid, "MyCarID")], "Nitro", MyCarTune[playerid][GetPVarInt(playerid, "MyCarID")][CARTUNE_NITRO]);
            SendClientMessage(playerid, 0x85929EFF, "[Tune]:{ffffff} Tkven Sheidzinet Nitro");
            ShowTuneDialog(playerid);
            PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
		    return true;
		}
		case 1902: // Dialog Hydrawlic
		{
		    if(!response) return ShowTuneDialog(playerid), ApplyVehicleTune(playerid, caridhouse[playerid], GetPVarInt(playerid, "MyCarID"));
		    new carid = GetPVarInt(playerid, "MyCarID");
			if(MyCarTune[playerid][carid][CARTUNE_HYDR] == 0)
			{
				if(PlayerInfo[playerid][pCash] < 150000)
				{
				    SendClientMessage(playerid, 0x85929EFF, "[Tune]:{ffffff} Tkven Ar Gakvt Sakmarisi Tanxa");
				    ShowTuneDialog(playerid);
				    return true;
				}
				PlayerInfo[playerid][pCash] -= 150000;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				SendClientMessage(playerid, 0x85929EFF, "[Tune]:{ffffff} Tkven Daamagret Hidravlika");
				MyCarTune[playerid][carid][CARTUNE_HYDR] = 1087;
			}
			else
			{
			    SendClientMessage(playerid, 0x85929EFF, "[Tune]:{ffffff} Tkven Moxsenit Hidravlika");
			}
            UpdatePlayerCar(MyCarInsertID[playerid][carid], "Hydrawlic", MyCarTune[playerid][carid][CARTUNE_HYDR]);
            ApplyVehicleTune(playerid, caridhouse[playerid], GetPVarInt(playerid, "MyCarID"));
            PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
            ShowTuneDialog(playerid);
		    return true;
		}
	 	case 4415: // Accessorie Buy
	    {
			if(response)
			{
				if(PlayerInfo[playerid][pCash] <= Accessorie_Price[playerid]) return senderror2(playerid, "Tkven Ar Gkofnit Tanxa");
                PlayerInfo[playerid][pCash] -= Accessorie_Price[playerid];
                PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                format(log_str, sizeof(log_str), "%s'm(a) [accesories] sheidzina aksesuari da gadaixada - %d", Name(playerid),Accessorie_Price[playerid]);
	   			CreateLog("Money", log_str);
				GivePlayerItem(playerid, Accessorie_Model[playerid]);
				Accessorie_Price[playerid] = 0;
				Accessorie_Model[playerid] = 0;
    			SetPlayerQuest(playerid, QUEST_ACS);
				return true;
			}
		}
		case 2099:
		{
		    if(response)
		    {
		        if(!strlen(inputtext))
		        {
					sendinfo(playerid, "Tkven Gatishet Musika");
     				foreach(new i:Player)
			        {
			            if(BoomBoxListener[i] == BoomBoxID[playerid]) StopAudioStreamForPlayer(i);
			        }
					return true;
		        }
		        foreach(new i:Player)
		        {
		            if(!BoomBoxData[BoomBoxID[playerid]][bb_Busy]) return true;
		            if(IsPlayerInDynamicArea(i, BoomBoxData[BoomBoxID[playerid]][bb_Area]))
					{
                        PlayAudioStreamForPlayer(i, inputtext, BoomBoxData[BoomBoxID[playerid]][bb_Position][0], BoomBoxData[BoomBoxID[playerid]][bb_Position][1], BoomBoxData[BoomBoxID[playerid]][bb_Position][2], BOOMBOX_DISTANCE, 1);
                        BoomBoxListener[i] = BoomBoxID[playerid];
					}
		        }
		    }
		}
		case 8000: // Family 1
		{
			if(!response) return true;
			new player_counter, strcater[128], dialogstr[700];
			dialogstr = "{ffffff}Member\t{ffffff}Rank\n";
			switch(listitem)
			{
			    case 0: ShowPlayerFamilyStats(playerid, p_family_id);
			    case 1:
			    {
       				format(fam_string, sizeof(fam_string), "%s[Online Members]:",p_family_color2);
					SendClientMessage(playerid, -1, fam_string);
			        foreach(new i:Player)
			        {
			            if(PlayerInfo[i][pFamilyMember] == p_family_id)
						{
			                format(fam_string, sizeof(fam_string), "%s[Member]: {ffffff}%s[%d]",p_family_color2,Name(i),i);
							SendClientMessage(playerid, -1, fam_string);
			            	player_counter ++;
							if(player_counter < 25)
							{
								if(i == playerid) continue;
							    fOnlineMembers[playerid][player_counter--] = i;
							    SetPVarInt(playerid, "LastPCount", player_counter--);
				            	format(strcater, sizeof(strcater), "%s[%d]{ffffff} %s\t%d\n",p_family_color2,player_counter,Name(i),PlayerInfo[i][pFamilyRank]);
								strcat(dialogstr, strcater);
							}
			            }
			        }
           			format(fam_string, sizeof(fam_string), "%s[Online Members]:{ffffff} Sul: %s%d",p_family_color2,p_family_color2,player_counter);
					SendClientMessage(playerid, -1, fam_string);
					ShowPlayerDialog(playerid, 8002, DIALOG_STYLE_TABLIST_HEADERS, "Family Online Members", dialogstr, "Interact", "Back");
					
			    }
			    case 2: ShowPlayerFamilyColors(playerid);
			    case 3: ShowPlayerFamilyTypes(playerid);
			    case 4: ShowPlayerFamilyInputName(playerid);
				//case 5: ShowPlayerFamilyCoLeader(playerid);
				/*case 6:
				{
	 				new p_family_mansion = FamilyInfo[p_family_id][fMansion];
					if(p_family_mansion == 0) return SEM(playerid, "Tkven's Family's Ar Akvs Saxli");
					ShowPlayerMansionCars(playerid);
				}*/
			}
		    return true;
		}
		case 8001: // Family Color
		{
			if(response)
			{
				FamilyInfo[p_family_id][fColor] = listitem;
				FamilyUpdateData(p_family_id, "fColor", FamilyInfo[p_family_id][fColor]);
				format(fam_string, sizeof(fam_string), "%s[Family Color]:{ffffff} Ojaxis Feri Sheicvala",FamilyColors[listitem]);
				SendClientMessage(playerid, -1, fam_string);
				ShowPlayerFamilyMenu(playerid);
				foreach(new i:Player)
				{
				    if(PlayerInfo[i][pFamilyMember] == p_family_id) SetPlayerFamilyStatus(playerid);
				}
				if(p_mansion_id > 0)
				{
					for(new i = 0; i < MAX_MANSION_CAR; i ++)
					{
					    if(!IsVehicleOccupied(MansionInfo[p_mansion_id][mVehicle][i]))
						{
							SetVehicleToRespawn(MansionInfo[p_mansion_id][mVehicle][i]);
							ChangeVehicleColor(MansionInfo[p_mansion_id][mVehicle][i], MansionColorsByFamilyColors[p_family_color], MansionColorsByFamilyColors[p_family_color]);
						}
					}
				}
			}
			else
			{
			    ShowPlayerFamilyMenu(playerid);
			}
		    return true;
		}
		case 8002:
		{
		    if(response)
		    {
				new string[128];
				format(string, sizeof(string), "{ffffff}Member: %s\n%s[1]{ffffff} Gagdeba Ojaxidan\n%s[2]{ffffff} Rankis Micema",Name(fOnlineMembers[playerid][listitem]),p_family_color2,p_family_color2);
				ShowPlayerDialog(playerid, 8003, DIALOG_STYLE_LIST, "Family Interact", string, "Done", "Close");
		    }
		    else
		    {
		        ShowPlayerFamilyMenu(playerid);
		    }
		    return true;
		}
		case 8003:
		{
			if(response)
			{
			}
			else
			{
			    ShowPlayerFamilyMenu(playerid);
			}
		    return true;
		}
		case 8004: // Family Type
		{
			if(response)
			{
				FamilyInfo[p_family_id][fType] = listitem;
				FamilyUpdateData(p_family_id, "fType", FamilyInfo[p_family_id][fType]);
				format(fam_string, sizeof(fam_string), "%s[Family Color]:{ffffff} Ojaxis Tipi Sheicvala",p_family_color2);
				SendClientMessage(playerid, -1, fam_string);
				ShowPlayerFamilyMenu(playerid);
				foreach(new i:Player)
				{
				    if(PlayerInfo[i][pFamilyMember] == p_family_id) SetPlayerFamilyStatus(playerid);
				}
			}
			else
			{
			    ShowPlayerFamilyMenu(playerid);
			}
		    return true;
		}
		case 8005: // Family Name
		{
			if(response)
			{
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 16)
				{
					senderror2(playerid, "Familys Saxeli Unda Ikos 6'dan 16'Simbolomde !");
					ShowPlayerFamilyMenu(playerid);
					return true;
				}


				format(fam_string, sizeof(fam_string), "%s[Change Name]:{ffffff} Family's Dzveli Saxeli: %s%s",p_family_color2,p_family_color2,FamilyInfo[p_family_id][fName]);
				SendClientMessage(playerid, -1, fam_string);
				
				SetString(FamilyInfo[p_family_id][fName], inputtext);
				FamilyUpdateDataString(p_family_id, "fName", FamilyInfo[p_family_id][fName]);
				
				format(fam_string, sizeof(fam_string), "%s[Change Name]:{ffffff} Family's Axali Saxeli: %s%s",p_family_color2,p_family_color2,FamilyInfo[p_family_id][fName]);
				SendClientMessage(playerid, -1, fam_string);


				ShowPlayerFamilyMenu(playerid);
				foreach(new i:Player)
				{
				    if(PlayerInfo[i][pFamilyMember] == p_family_id) SetPlayerFamilyStatus(playerid);
				}
			}
			else
			{
			    ShowPlayerFamilyMenu(playerid);
			}
		    return true;
		}
		case 9922: // Create Family
		{
		    if(response)
		    {
		    	if(p_family_id != 0) return senderror2(playerid, "Tkven Ukve Imkofebit Family'shi !");
   				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 16) return senderror2(playerid, "Familys Saxeli Unda Ikos 2'dan 16'Simbolomde !");
   				new query[128];
   				format(query, 128, "SELECT * FROM `family` WHERE fName = '%s'",inputtext);
   				mysql_tquery(connect, query, "CreateFamily", "ss", inputtext, Name(playerid));
			}
		    return true;
		}
	  	case 9127: // Taxi
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < 1000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa. Sachiroa 1000 $");
					RemovePlayerFromVehicleEx(playerid);
					TogglePlayerControllable(playerid, true);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 1000;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				pTaxi[playerid] = GetPlayerVehicleID(playerid);
				TogglePlayerControllable(playerid, true);
				format(gstr, sizeof(gstr), "~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD");
				GameTextForPlayer(playerid, gstr, 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Daweret: /fare - Samushaos Dasawyebat");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleEx(playerid);
				TogglePlayerControllable(playerid, true);
				return true;
			}
		}
		case 7905:
		{
		    if(response)
		    {
	    		if(GetAcces[playerid] == true)
				{
				    return true;
				}
				else if(GetAcces[playerid] == false)
				{
			        PlayerInfo[playerid][pCash] += 10000;
			        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					sendinfo(playerid, "Shen Aige 10.000$ Ruletkidan");
     				ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
					GetAcces[playerid] = true;
					format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 10.000$",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 10.000$ | Uari Tkva 3 Level'ze", Name(playerid));
					CreateLog("Roulette", log_str);
				}
			}
			else
			{
	      		if(GetAcces[playerid] == true)
				{
				    return true;
				}
				else if(GetAcces[playerid] == false)
				{
					PlayerInfo[playerid][pLevel] += 3;
		        	PlayerUpdateData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
		        	sendinfo(playerid, "Shen Aige +3 Leveli Ruletkidan");
		        	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        	GetAcces[playerid] = true;
		        	format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan + 3 Level",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 3 Level", Name(playerid));
					CreateLog("Roulette", log_str);
		        }
			}
		}
		case 7906:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 20000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				sendinfo(playerid, "Shen Aige 20.000$ Ruletkidan");
				ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 20.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 20.000$ | Uari Tkva 5 Level'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
				PlayerInfo[playerid][pLevel] += 5;
		        PlayerUpdateData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
		        sendinfo(playerid, "Shen Aige +5 Leveli Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan + 5 Level",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 5 Level", Name(playerid));
				CreateLog("Roulette", log_str);
			}
		}
		case 7907:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 25000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				sendinfo(playerid, "Shen Aige + 25.000$ Ruletkidan");
				ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 25.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 25.000$ | Uari Tkva 7 Level'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
				PlayerInfo[playerid][pLevel] += 7;
		        PlayerUpdateData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
		        sendinfo(playerid, "Shen Aige +7 Leveli Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan + 7 Level",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 7 Level", Name(playerid));
				CreateLog("Roulette", log_str);
			}
		}
	  	case 7908:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 30000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				sendinfo(playerid, "Shen Aige +30.000$ Ruletkidan");
				ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 30.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 30.000$ | Uari Tkva SKIN : 295'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
				//
				PlayerInfo[playerid][pSkin] = 295;
			    PlayerUpdateData(playerid, "pSkin", PlayerInfo[playerid][pSkin]);
				SetPlayerSkinEx(playerid);
				//
		        sendinfo(playerid, "Shen Aige Skin ID: 295 Ruletkidan");
	            ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
	            format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan Skin ID : 295",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Daagdo Skin : 295", Name(playerid));
				CreateLog("Roulette", log_str);
			}
		}
		case 7909:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 35000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				sendinfo(playerid, "Shen Aige +35.000$ Ruletkidan");
				ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 35.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 35.000$ | Uari Tkva SKIN : 110'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
	      		//
				PlayerInfo[playerid][pSkin] = 110;
			    PlayerUpdateData(playerid, "pSkin", PlayerInfo[playerid][pSkin]);
				SetPlayerSkinEx(playerid);
				//
		        sendinfo(playerid, "Shen Aige Skin ID: 110 Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan Skin ID : 110",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo SKIN : 110", Name(playerid));
				CreateLog("Roulette", log_str);
			}
		}
		case 7910:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 40000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				sendinfo(playerid, "Shen Aige +40.000$ Ruletkidan");
				ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 40.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 40.000$ | Uari Tkva SKIN 120", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
		    	//
				PlayerInfo[playerid][pSkin] = 120;
			    PlayerUpdateData(playerid, "pSkin", PlayerInfo[playerid][pSkin]);
				SetPlayerSkinEx(playerid);
				//
		        sendinfo(playerid, "Shen Aige Skin ID: 120 Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan Skin ID : 120",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo SKIN 120", Name(playerid));
				CreateLog("Roulette", log_str);
			}
		}
		case 7911:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 45000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        sendinfo(playerid, "Shen Aige + 45.000 $ Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 45.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 45.000$ | Uari Tkva Nissan GT-R R35'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
			    GivePlayerCar(playerid, 12300);
			}
		}
		case 7912:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 50000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        sendinfo(playerid, "Shen Aige + 50.000$ Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 50.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 50.000$ | Uari Tkva NRG'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
			    GivePlayerCar(playerid, 522);
			}
		}
		case 7913:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 55000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        sendinfo(playerid, "Shen Aige + 55.000.000$ Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 55.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 55.000$ | Uari Tkva Sanchez'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
			    GivePlayerCar(playerid, 468);
			}
		}
		case 7914:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 60000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        sendinfo(playerid, "Shen Aige + 60.000$ Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 60.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 60.000$ | Uari Tkva Super GT'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
			    GivePlayerCar(playerid, 506);
			}
		}
		case 7915:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 65000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        sendinfo(playerid, "Shen Aige + 65.000$ Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 65.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 65.000$ | Uari Tkva BMW M3 E46'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
			    GivePlayerCar(playerid, 12305);
			}
		}
		case 7916:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pCash] += 70000;
		        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		        sendinfo(playerid, "Shen Aige + 70.000$ Ruletkidan");
		        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
		        format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 70.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
                format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Aigo 70.000$ | Uari Tkva Quad'ze", Name(playerid));
				CreateLog("Roulette", log_str);
			}
			else
			{
			    GivePlayerCar(playerid, 471);
			}
		}
		case 777:
		{
	    	if(!response) return true;
	    	switch(listitem)
	    	{
				case 0:
				{}
				case 1:
				{
				    if(PlayerInfo[playerid][pGcoin] < 7) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 7 G-COIN");
   					format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Sheidzina GOLD VIP | {3399FF}Fasi : 7 G-COIN",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					if(PlayerInfo[playerid][pDonateRank] == 1) return sendinfo(playerid,"Tkven Ukve Gakvt GOLD VIP Wodeba");
					PlayerInfo[playerid][pDonateRank] = 3;
					PlayerUpdateData(playerid, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
					PlayerInfo[playerid][pVipTime] = getdate()+5;
					PlayerUpdateData(playerid, "pVipTime", PlayerInfo[playerid][pVipTime]);
					PlayerInfo[playerid][pGcoin] -= 7;
					PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
					sendinfo(playerid,"Tkven Sheidzinet 7 G-COIN'ad GOLD VIP Wodeba");
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Sheidzina GOLD VIP | Fasi : 7 G-COIN", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				case 2:
				{
				    if(PlayerInfo[playerid][pGcoin] < 5) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 5 G-COIN");
   					format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Sheidzina SILVER VIP | {3399FF}Fasi : 5 G-COIN",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					if(PlayerInfo[playerid][pDonateRank] == 1) return sendinfo(playerid,"Tkven Ukve Gakvt SILVER VIP Wodeba");
					PlayerInfo[playerid][pDonateRank] = 2;
					PlayerUpdateData(playerid, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
					PlayerInfo[playerid][pVipTime] = getdate()+5;
					PlayerUpdateData(playerid, "pVipTime", PlayerInfo[playerid][pVipTime]);
					PlayerInfo[playerid][pGcoin] -= 5;
					PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
					sendinfo(playerid,"Tkven Sheidzinet 5 G-COIN'ad SILVER VIP Wodeba");
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Sheidzina SILVER VIP | Fasi : 5 G-COIN", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				case 3:
				{
				    if(PlayerInfo[playerid][pGcoin] < 2) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 2 G-COIN");
   					format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Sheidzina BRONZE VIP | {3399FF}Fasi : 2 G-COIN",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					if(PlayerInfo[playerid][pDonateRank] == 1) return sendinfo(playerid,"Tkven Ukve Gakvt BRONZE VIP Wodeba");
					PlayerInfo[playerid][pDonateRank] = 1;
					PlayerUpdateData(playerid, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
					PlayerInfo[playerid][pVipTime] = getdate()+5;
					PlayerUpdateData(playerid, "pVipTime", PlayerInfo[playerid][pVipTime]);
					PlayerInfo[playerid][pGcoin] -= 2;
					PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
					sendinfo(playerid,"Tkven Sheidzinet 2 G-COIN'ad BRONZE VIP Wodeba");
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Sheidzina BRONZE VIP | Fasi : 2 G-COIN", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				case 4:
				{
				    ShowPlayerDialog(playerid, 778, DIALOG_STYLE_LIST, "UNPRISON | SHOP", "{BBE276}- Riti Gsurt Cixidan Gamosvla?!\n{FFFFFF}[1] {3399FF}G-COIN {FFFFFF}| Fasi : 5 G-COIN\n{FFFFFF}[2] {3399FF}Money {FFFFFF}| Fasi : 250.000$", "Archeva", "Daxurva");
				}
				case 5:
				{
				    if(PlayerInfo[playerid][pGcoin] < 8) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 8 G-COIN");
   					format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Moixsna Gafrtxileba (Warn) | {3399FF}Fasi : 8 G-COIN",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
     				PlayerInfo[playerid][pWarn] = 0;
     				PlayerUpdateData(playerid, "pWarn", PlayerInfo[playerid][pWarn]);
	                PlayerInfo[playerid][pWarnTime] = 0;
	                PlayerUpdateData(playerid, "pWarnTime", PlayerInfo[playerid][pWarnTime]);
	                PlayerInfo[playerid][pGcoin] -= 8;
	                PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
					sendinfo(playerid,"Tkven Moixsenit Gafrtxileba | Fasi : 8 G-COIN");
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Moixsna Gafrtxileba | Fasi : 8 G-COIN", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				case 6:
				{
				    if(PlayerInfo[playerid][pGcoin] < 2) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 2 G-COIN");
   					format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Moixsna Mute | {3399FF}Fasi : 2 G-COIN",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
     				PlayerInfo[playerid][pMuteTime] = 0;
     				PlayerUpdateData(playerid, "pMuteTime", PlayerInfo[playerid][pMuteTime]);
	                PlayerInfo[playerid][pMute] = 0;
	                PlayerUpdateData(playerid, "pMute", PlayerInfo[playerid][pMute]);
	                PlayerInfo[playerid][pGcoin] -= 2;
	                PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
					sendinfo(playerid,"Tkven Moixsenit Mute | Fasi : 2 G-COIN");
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Moixsna Mute | Fasi : 2 G-COIN", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				case 7:
				{
				    if(PlayerInfo[playerid][pCash] < 50000) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 50.000$");
   					format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Sheidzina 1 G-COIN | Fasi : 50.000$ ",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
	                PlayerInfo[playerid][pCash] -= 50000;
	                PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	                PlayerInfo[playerid][pGcoin] += 1;
	                PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
					sendinfo(playerid,"Tkven Sheidzinet G-COIN | Fasi : 50.000$ G-COIN");
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Sheidzina 1 G-COIN | Fasi : 50.000$", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				case 8:
				{
        			if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
					{
						new rouletstrr[256];
						format(rouletstrr,sizeof(rouletstrr), "%d", PlayerInfo[playerid][pGcoin]);
						PlayerTextDrawSetString(playerid, Roulette_PTD[playerid][10], rouletstrr);
					 	for(new t; t != 13; t++) TextDrawShowForPlayer(playerid, Roulette_TD[t]);
					  	for(new k; k != 11; k++) PlayerTextDrawShow(playerid, Roulette_PTD[playerid][k]);
					  	RouletON[playerid] = true;
					  	for(new i = 0; i < 72; i ++) TextDrawHideForPlayer(playerid, telephoneSamsung[i]);
						IphoneON[playerid] = false;
					  	SelectTextDraw(playerid,3362303);
						return true;
					}
				}

			}
			return true;
		}
		case 778:
		{
	    	if(!response) return true;
	    	switch(listitem)
	    	{
	    	case 0:
	    	{
	    	}
	    	case 1:
	    	{
	    	    if(PlayerInfo[playerid][pGcoin] < 5) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 5 G-COIN Cixidan Gamosasvlelad");
                PlayerInfo[playerid][pGcoin] -= 5;
                PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
			    PlayerInfo[playerid][pPrison] = 0;
			    PlayerUpdateData(playerid, "pPrison", PlayerInfo[playerid][pPrison]);
				PlayerInfo[playerid][pPrisonTime] = 0;
				PlayerUpdateData(playerid, "pPrisonTime", PlayerInfo[playerid][pPrisonTime]);
				TogglePlayerControllable(playerid, 1);
				SpawnPlayer(playerid);
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Gamovida Cixidan | {3399FF}Fasi : 5 G-COIN",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Gamovida Cixidan | Fasi : 5 G-COIN", Name(playerid));
				CreateLog("Roulette", log_str);
			}
	    	case 2:
	    	{
	    	    if(PlayerInfo[playerid][pCash] < 250000) return senderror(playerid,"Tkven Ar Gakvt Sakmarisi 250.000$ Cixidan Gamosasvlelad");
                PlayerInfo[playerid][pCash] -= 250000;
                PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
			    PlayerInfo[playerid][pPrison] = 0;
			    PlayerUpdateData(playerid, "pPrison", PlayerInfo[playerid][pPrison]);
				PlayerInfo[playerid][pPrisonTime] = 0;
				PlayerUpdateData(playerid, "pPrisonTime", PlayerInfo[playerid][pPrisonTime]);
				TogglePlayerControllable(playerid, 1);
				SpawnPlayer(playerid);
				format(YCMDstr, sizeof(YCMDstr), "[G-COIN SHOP] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Gamovida Cixidan | {3399FF}Fasi : 250.000$",Name(playerid));
				SendClientMessageToAll(0x3399FFAA, YCMDstr);
				format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Gamovida Cixidan | Fasi : 250.000$", Name(playerid));
				CreateLog("Roulette", log_str);
	    	}

			}
			return true;
		}
    	case 7777:
		{
		    new anticheat[200];
	    	if(!response) return DeletePVar(playerid, "Capture"), AntiDialog[playerid] = false;
		    if(strval(inputtext) == GetPVarInt(playerid, "Capture"))
		    {
		        if(AutoTimer[playerid] == false)
		        {
		            if(AntiDialog[playerid] == true)
		            {
			            if(GetPVarInt(playerid, "CaptTime") > gettime()) return sendinfo(playerid, "Am Funkciis Gamoyeneba Shesadzlebelia Yovel 5 Wamshi Ertxel");
			            if(strval(inputtext) < 10000000 || strval(inputtext) > 99999999)
						{
						    senderror(playerid, "Tkvens Mier Sheyvanili Kodi Arasworia!");
						    SetPVarInt(playerid, "CaptTime", gettime()+5);
						    return false;
						}
						if(!IsAGang(playerid)) return sendinfo(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
						if(ghettoon == 0) return sendinfo(playerid, "Capture Gamortulia Administraciis Mier");
						if(!startcapture) return sendinfo(playerid, "Am Momentshi Capture Daushvebelia!");
						if(FrakCD[PlayerInfo[playerid][pMember]] != 0) return sendinfo(playerid, "Tqvenma Bandam Ukve Dacapta Am Saatshi");
						if(!IsInAllowed(playerid)) return sendinfo(playerid, "Am CMD's Gamosayeneblad Sachiroa 7Rank!");
				  		for(new i = 0; i < 130; i++)
				  		{
            				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != PlayerInfo[playerid][pMember] && ZoneOnBattle[i]==0)
							{
								new playerss = 0;
								new playeri = 0;
								foreach(new m:Player)
								{
									if(PlayerInfo[m][pMember] == GZInfo[i][gFrakVlad]) playerss++;
									if(PlayerInfo[m][pMember] == PlayerInfo[playerid][pMember]) playeri++;
								}
								if(playeri < 1) return SendClientMessage(playerid,COLOR_GREY,"Ver Daipyrobt Teritorias, Tkven Bandashi Unda Iyos Minimum 2 Kaci Rom Daipyrot Teritoria");
								if(playerss < 1) return SendClientMessage(playerid,COLOR_GREY,"Ver Daipyrobt Teritorias, Mowinaagmdegis Bandashi Unda Iyos Minimum 2 Kaci Rom Daipyrot Teritoria");
								if(FrakCD[GZInfo[i][gFrakVlad]] != 0) return SendClientMessage(playerid,COLOR_GREY,"Romel Bandasac Tqven Captavt Man Am Saatshi Ukve Dakarga/Dacapta Teritoria");
								if(FrakCD[GZInfo[i][gFrakVlad]] != 0) return SendClientMessage(playerid,COLOR_GREY,"Romel Bandasac Tqven Captavt Man Am Saatshi Ukve Dakarga/Dacapta Teritoria");
                                if(MorozSystem[PlayerInfo[playerid][pMember]]) return sendinfo(playerid, "Am Momentshi Ver Dacaptavt!");
                                if(MorozSystem[GZInfo[i][gFrakVlad]]) return sendinfo(playerid, "Am Momentshi Ver Dacaptavt!");
								FrakCD[GZInfo[i][gFrakVlad]] = 1;
								FrakCD[PlayerInfo[playerid][pMember]] = 1;
								GZSafeTime[i] = 901;
								GZInfo[i][gNapad] = PlayerInfo[playerid][pMember];
								ZoneOnBattle[i] = 1;
								captures++;
								format(gstr, 256, "[GINFO] Banda: \"%s{FFFFFF}\" Ucxadebs Oms Teritoriistvis Bandas: \"%s{FFFFFF}\" | Iniciatori: %s", GetGangName(GZInfo[i][gNapad]), GetGangName(GZInfo[i][gFrakVlad]), Name(playerid));
								SendGangMessage(gstr);
								SendAdminMessage(COLOR_WHITE, gstr);
								GangZoneFlashForAll(GZInfo[i][gID],GetGZColorF(PlayerInfo[playerid][pMember]));
								SetPVarInt(playerid, "Capture", 50);
								AntiDialog[playerid] = false;
								if(GzCheckOn == 0)
								{
									GzCheckTimer = SetTimer("GzCheck", 1000,1);
									GzCheckOn = 1;
								}
							}
						}
				    }
				    else
				    {
				        format(anticheat, sizeof(anticheat), "{82BA70}[AntiCheat] {4FB64F} Motamashe: %s Shesadzloa Iyenebdes Capture Dialog Hiders's | /recon [%d]", Name(playerid), playerid);
     					SendAdminMessage(COLOR_WHITE, anticheat);
				    }
				}
		        else if(AutoTimer[playerid] == true)
		        {
		            senderror(playerid, "Tkveni Pasuxi Uaryofilia! Scadet Xelaxla");
		            SetPVarInt(playerid, "CaptTime", gettime()+5);
		            SetPVarInt(playerid, "Capture", 50);
		            AntiDialog[playerid] = false;
		        }
		    }
		    else
		    {
		        senderror(playerid, "Tkvens Mier Sheyvanili Kodi Arasworia!");
		        SetPVarInt(playerid, "CaptTime", gettime()+5);
		        SetPVarInt(playerid, "Capture", 50);
		        AntiDialog[playerid] = false;
		    }
		}
		case 3111:
		{
  			if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarInt(playerid,"pDmGun",24);
		                SetPVarInt(playerid,"pDmGun1",25);
               			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
						GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
					}
					case 1:
					{
     					SetPVarInt(playerid,"pDmGun",24);
		                SetPVarInt(playerid,"pDmGun1",31);
               			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
						GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
					}
					case 2:
					{
     					SetPVarInt(playerid,"pDmGun",24);
		                SetPVarInt(playerid,"pDmGun1",34);
               			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
						GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
					}
				}
				return true;
			}
		}
		case 3222:
		{
			if(response)
			{
   				new vw = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 3222, DIALOG_STYLE_INPUT, "{FF9900}DeathMatch{FFFFFF} | Choose VirtualWorld", "{FFFFFF}Miutitet Tkventvis Sasurveli VirtualWorld\nMinimum: {FF9900}1\n{FFFFFF}Maxsimum: {FF9900}100", "Shemdeg", "Daxurva");
				if(vw < 1 || vw > 100)
				{
					ShowPlayerDialog(playerid, 3222, DIALOG_STYLE_INPUT, "{FF9900}DeathMatch{FFFFFF} | Choose VirtualWorld", "{FFFFFF}Miutitet Tkventvis Sasurveli VirtualWorld\nMinimum: {FF9900}1\n{FFFFFF}Maxsimum: {FF9900}100", "Shemdeg", "Daxurva");
					return 1;
				}
				DMVirtual[playerid] = vw;
				SetPlayerVirtualWorld(playerid, DMVirtual[playerid]);
				ShowPlayerDialog(playerid,3111,DIALOG_STYLE_LIST,"{C2A2DA}Airchiet Iaragi","Desert Eagle + Shotgun\nDesert Eagle + M4\n\nDesert Eagle + Rifle", "Select","");
                PlayerTextDrawShow(playerid, DMTXT[playerid]);
			}
	    }
    	case 8586:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    SetPlayerVirtualWorld(playerid,DMVirtual[playerid]);
			 			SetPlayerColor(playerid,0x5A5C5CFF);
			 			ShowPlayerDialog(playerid, 3222, DIALOG_STYLE_INPUT, "{FF9900}DeathMatch{FFFFFF} | Choose VirtualWorld", "{FFFFFF}Miutitet Tkventvis Sasurveli VirtualWorld\nMinimum: {FF9900}1\n{FFFFFF}Maxsimum: {FF9900}100", "Shemdeg", "Daxurva");
			            DMArea[playerid] = 1;
			            SpawnPlayer(playerid);
			            GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
			            GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
			            SendClientMessage(playerid, COLOR_WHITE, "Tqven Shexvedit DeathMatch Arenaze, Gamosasvlelad Sheiyvanet: {4FB64F}/exitdm ");
	                }
	                case 1:
	                {
	                    SetPlayerVirtualWorld(playerid,DMVirtual[playerid]);
			 			SetPlayerColor(playerid,0x5A5C5CFF);
			 			ShowPlayerDialog(playerid, 3222, DIALOG_STYLE_INPUT, "{FF9900}DeathMatch{FFFFFF} | Choose VirtualWorld", "{FFFFFF}Miutitet Tkventvis Sasurveli VirtualWorld\nMinimum: {FF9900}1\n{FFFFFF}Maxsimum: {FF9900}100", "Shemdeg", "Daxurva");
			            DMArea[playerid] = 2;
			            SpawnPlayer(playerid);
			            GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
			            GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
			            SendClientMessage(playerid, COLOR_WHITE, "Tqven Shexvedit DeathMatch Arenaze, Gamosasvlelad Sheiyvanet: {4FB64F}/exitdm ");
	                }
	            }
			}
		}
		case 100:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowPlayerDialog(playerid, 101, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", "{ffffff}[1] Los Santos CityHall\n[2] Los Santos Bank\n[3] San Fierro AutoSalon\n[4] Los Santos Tuning\n[5] Los Santos Casino\n[6] Los Santos AutoSchool\n[7] Los Santos SkinShop\n[8] Los Santos Guns", "Select", "Back");
		            case 1: ShowPlayerDialog(playerid, 102, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", "{ffffff}[1] Los Santos Police\n[2] Los Santos FBI\n[3] Los Santos ARMY\n[4] Los Santos Hospital\n[5] Los Santos CityHall\n[6] Los Santos News\n[7] La Cosa Nostra\n[8] Yakuza\n[9] Russian Maffia\n[10] The Ballas Gang\n[11] The Vagos Gang\n[12] The Grove Gang\n[13] The Azteca Gang\n[14] The Rifa Gang", "Select", "Back");
		            case 2: ShowPlayerDialog(playerid, 103, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", "{ffffff}[1] Ferma\n[2] Planis Plantacia\n[3] Iaragebis Qarxana\n[4] Taxi Park\n[5] Shaxta", "Select", "Back");
		            case 3: ShowPlayerDialog(playerid, 104, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", "{ffffff}[1] DeathMatch", "Archeva", "Back");
      				case 4:
					{
						new count_items = 1;
						new string[1092];
						string[0] = EOS;
						for(new h = 1; h <= TotalBizz; h++)
						{
							format(string, sizeof(string), "%s%d. %s\n", string, count_items, BizzInfo[h][bName]);
							count_items++;
						}
						if(count_items == 1) senderror2(playerid, "Biznesebi Ver Moizebna");
						else ShowPlayerDialog(playerid, 105, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", string, "Select", "Back");
					}
				}
		    }
		}
		case 101:
		{
		    if(response)
		    {
		        new LocalName[32], Float:LocalPos[3];
		        switch(listitem)
		        {
		            case 0: LocalPos[0] = 1481.1276, LocalPos[1] = -1739.4862, LocalPos[2] = 13.5469, LocalName = "Los Santos CityHall";
					case 1: LocalPos[0] = 1495.8862, LocalPos[1] = -1286.5081, LocalPos[2] = 14.0627, LocalName = "Los Santos Bank";
					case 2: LocalPos[0] = -1638.3789, LocalPos[1] = 1201.9602, LocalPos[2] = 7.2177, LocalName = "San Fierro AutoSalon";
					case 3: LocalPos[0] = 1026.9370, LocalPos[1] = -1442.9214, LocalPos[2] = 13.5546, LocalName = "Los Santos Tuning";
					case 4: LocalPos[0] = 1421.6217, LocalPos[1] = -1623.7426, LocalPos[2] = 13.5469, LocalName = "Los Santos Casino";
					case 5: LocalPos[0] = 1125.8068, LocalPos[1] = -1680.5803, LocalPos[2] = 13.3575, LocalName = "Los Santos AutoSchool";
					case 6: LocalPos[0] = 687.2944, LocalPos[1] = -1594.2246, LocalPos[2] = 14.1101, LocalName = "Los Santos SkinShop";
  					case 7: LocalPos[0] = 1363.8843, LocalPos[1] = -1279.3359, LocalPos[2] = 13.5469, LocalName = "Los Santos Guns";
				}
				SetPlayerGPS(playerid, LocalName, true, LocalPos[0], LocalPos[1], LocalPos[2]);
			}
		    else ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", GPSMenu, "Select", "Close");
		}
		case 102:
		{
		    if(response)
		    {
		        new LocalName[32], Float:LocalPos[3];
		        switch(listitem)
		        {
		            case 0: LocalPos[0] = 1538.8654, LocalPos[1] = -1675.4054, LocalPos[2] = 13.5469, LocalName = "Los Santos Police";
		            case 1: LocalPos[0] = 925.8281, LocalPos[1] = -1746.3199, LocalPos[2] = 13.5469, LocalName = "Los Santos FBI";
		            case 2: LocalPos[0] = 2712.7742, LocalPos[1] = -2405.2214, LocalPos[2] = 13.4889, LocalName = "Los Santos ARMY";
		            case 3: LocalPos[0] = 1187.6023, LocalPos[1] = -1323.3373, LocalPos[2] = 13.5590, LocalName = "Los Santos Hospital";
		            case 4: LocalPos[0] = 1481.1276, LocalPos[1] = -1739.4862, LocalPos[2] = 13.5469, LocalName = "Los Santos CityHall";
		            case 5: LocalPos[0] = 1631.8243, LocalPos[1] = -1709.0880, LocalPos[2] = 13.3393, LocalName = "Los Santos News";
		            case 6: LocalPos[0] = 2487.0391, LocalPos[1] = 1531.4510, LocalPos[2] = 10.8190, LocalName = "La Cosa Nostra";
		            case 7: LocalPos[0] = 1461.1992, LocalPos[1] = 2773.9856, LocalPos[2] = 10.8203, LocalName = "Yakuza";
		            case 8: LocalPos[0] = 942.3170, LocalPos[1] = 1733.2195, LocalPos[2] = 8.8516, LocalName = "Russian Maffia";
		            case 9: LocalPos[0] = 2648.2839, LocalPos[1] = -2002.7177, LocalPos[2] = 13.3828, LocalName = "The Ballas Gang";
		            case 10: LocalPos[0] = 2737.5078, LocalPos[1] = -1177.6736, LocalPos[2] = 69.2385, LocalName = "The Vagos Gang";
		            case 11: LocalPos[0] = 2494.2053, LocalPos[1] = -1673.3802, LocalPos[2] = 13.3359, LocalName = "The Grove Gang";
		            case 12: LocalPos[0] = 1684.5173, LocalPos[1] = -2112.7832, LocalPos[2] = 13.4849, LocalName = "The Azteca Gang";
		            case 13: LocalPos[0] = 2185.0454, LocalPos[1] = -1793.1410, LocalPos[2] = 13.36679, LocalName = "The Rifa Gang";
				}
			 	SetPlayerGPS(playerid, LocalName, true, LocalPos[0], LocalPos[1], LocalPos[2]);
			}
		    else ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", GPSMenu, "Select", "Close");
		}
		case 103:
		{
		    if(response)
		    {
		        new LocalName[32], Float:LocalPos[3];
		        switch(listitem)
		        {
		            case 0: LocalPos[0] = -245.3335, LocalPos[1] = -1381.2814, LocalPos[2] = 10.1277, LocalName = "Ferma";
					case 1: LocalPos[0] = -572.5425, LocalPos[1] = -1508.8892, LocalPos[2] = 9.5471, LocalName = "Planis Plantacia";
					case 2: LocalPos[0] = 1327.9579, LocalPos[1] = -1272.1331, LocalPos[2] = 13.5469, LocalName = "Iaragebis Qarxana";
					case 3: LocalPos[0] = 1079.5858, LocalPos[1] = -1760.8446, LocalPos[2] = 13.0355, LocalName = "Taxi Park";
					case 4: LocalPos[0] = 1275.1602, LocalPos[1] = -1272.8470, LocalPos[2] = 13.5378, LocalName = "Shaxta";
				}
				SetPlayerGPS(playerid, LocalName, true, LocalPos[0], LocalPos[1], LocalPos[2]);
			}
		    else ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", GPSMenu, "Select", "Close");
		}
	   	case 105:
  		{
			if(!response) return ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", GPSMenu, "Select", "Close");
			new bizzid = listitem+1;
			SetPlayerGPS(playerid, BizzInfo[bizzid][bName], true, BizzInfo[bizzid][bEnterPos][0], BizzInfo[bizzid][bEnterPos][1], BizzInfo[bizzid][bEnterPos][2]);
		}
		case DIALOG_SET_PIN:
        {
            if (strlen(inputtext) != 6 || !IsNumeric(inputtext))
            {
                senderror2(playerid, "PIN Unda Shedgebodes Minimum 6 Cifrisgan, Scadet Tavidan.");
                return 1;
            }
			PlayerInfo[playerid][pPIN] = strval(inputtext);
            SavePlayerData(playerid);
            new string[128];
			format(string, sizeof(string), "[Information]{ffffff}: Dgheidan Tkveni PIN Code Aris {4FB64F}[%s]", inputtext);
			SendClientMessage(playerid, COLOR_GREEN, string);
			sendinfo(playerid, "Tkven Ver Isargeblebt Sabanko Momsaxureobit Tu PIN Codes Arasworad Sheiyvant");
            return true;
        }
        case DIALOG_ENTER_PIN:
        {
            if (PlayerInfo[playerid][pPIN] == strval(inputtext))
            {
                Has_Player_Entered_Pin[playerid] = 1;
                sendinfo(playerid, "Tkven Warmatebit Sheiyvanet PIN Code");
                sendinfo(playerid, "Tkven Axla Shegidzliat Isargeblot Bankit");
            }
            else
            {
                senderror2(playerid, "Araswori PIN Code, Gtxovt Scadot Tavidan");
            }
            return true;
        }

        case EXIT_DIALOG:
        {
            if(!response) return true;
            new stolid = GetPVarInt(playerid,"GameStol");
            if(StolInfo[stolid][GameStart] != 0) return senderror2(playerid, "Tamashi Dawkebulia");
            StolInfo[stolid][Bank]-=GetPVarInt(playerid, "Stavka");
            TextDrawHideForPlayer(playerid,KostiBox[stolid]);
            TextDrawHideForPlayer(playerid,TableName[stolid]);
            TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
            TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
            TextDrawHideForPlayer(playerid,KostiKeyExit);
            TextDrawHideForPlayer(playerid,KostiKeyDone);
            TextDrawHideForPlayer(playerid,KostiKeyStavka);
            SetPVarInt(playerid,"GameStol",88);
            SetPVarInt(playerid,"StolReg",88);
            TogglePlayerControllable(playerid,1);
            CancelSelectTextDraw(playerid);
            DelName(playerid,stolid);
            SetPVarInt(playerid,"Ochki",88);
            PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "Stavka");
            PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
            format(log_str, sizeof(log_str), "%s'm(a) moigo kazinoshi tanxa - %d", Name(playerid),GetPVarInt(playerid, "Stavka"));
	   		CreateLog("Money", log_str);
            SetPVarInt(playerid, "Stavka", 0);
            CasinoDuty[playerid] = false;
        }
        case DIALOG_PAY:
        {
            if(!response) return true;
            new s = GetPVarInt(playerid,"GameStol");
            if(StolInfo[s][Stavka] != 0) return senderror2(playerid, "Fsoni Ukve Gaketebulia");
            new stavka = strval(inputtext);
            if(stavka < MIN_STAVKA) return senderror2(playerid, "Minimaluri Fsoni 5.000$");
            if(stavka > MAX_STAVKA) return senderror2(playerid, "Maximaluri Fsoni 500.000.000$");
            if(StolInfo[s][GameStart] != 0) return senderror2(playerid, "Fsons Ver Shecvlit Tamashis Dros");
            StolInfo[s][Stavka] = stavka;
            SendClientMessage(playerid, COLOR_INDIGO, "Fsoni Dayenebulia");
            new str[144];
            format(str,sizeof(str),"Fsoni: %d ~g~$~n~~w~Bank: 0 ~g~$",stavka);
            TextDrawSetString(KostiGameInfo[s],str);
            UpdateCasino2();
        }
		case 7799:
		{
			if(response)
			{
			    if(PlayerInfo[playerid][pLicense][LICENSE_CAR]) return SendClientMessage(playerid, COLOR_FIRST, "Tkven Ukve Flobt Martvis Mowmobas");
				if(listitem == 0)
				{
	        		if(Player_Passed_Exam[playerid] != 0) return SendClientMessage(playerid, COLOR_FIRST, "Tkven Ukve Chabarebuli Gaqvt Teoriuli Gamocda!");
    				PlayerScore[playerid] = 0;
				    PlayerIncorrectAnswers[playerid] = 0;
        			MakeQuestionsRandomized(playerid);
				    ShowQuestion(playerid, 0);
				}
				if(listitem == 1)
				{
	        		if(Player_Passed_Exam[playerid] == 0) return SendClientMessage(playerid, COLOR_FIRST, "Tkven Jer Unda Chaabarot Teoriis Gamocda!");
					ShowPlayerDialog(playerid, 23, DIALOG_STYLE_MSGBOX, "{FFFFFF}AutoSchool", "{FFFFFF}\nGnebavt Praktikis Gamocdis Dawkeba?", "Start", "Exit");
				}
		    }
		}
		case DIALOG_GUNSHOP:
		{
	        if (response)
	        {
	            if(PlayerInfo[playerid][pLicense][LICENSE_GUN] == 0) return senderror2(playerid, "Tkven Ar Gakvt Iaragis Licenzia! Ris Gamoc Ver Sheidzent Iarags");
            	if (listitem >= 0 && listitem < sizeof(GunData))
	            {
	                selectedGun[playerid] = listitem;
	                ShowPlayerDialog(playerid, DIALOG_BULLET_QUANTITY, DIALOG_STYLE_INPUT, "Los Santos Guns", "\n{FFFFFF}Miutitet Tyviebis Raodenoba:", "Buy", "Cancel");
	            }
	        }
		}
		case DIALOG_BULLET_QUANTITY:
		{
			if (response)
	        {
	            new quantity = strval(inputtext);
	            if (quantity > 0)
	            {
                	new price = GunData[selectedGun[playerid]][GunPrice] * quantity;

	                if (PlayerInfo[playerid][pCash] >= price)
	                {
	                    PlayerInfo[playerid][pCash] -= price;
	                    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                    	GivePlayerWeapon(playerid, GunData[selectedGun[playerid]][GunID], quantity);

	                    new msg[128];
	                    format(msg, sizeof(msg), "[Information]: {ffffff}Tkven Iyidet %d %s('is) Tyvia. Sapasuri: $%d", quantity, GunData[selectedGun[playerid]][GunName], price);
	                    SendClientMessage(playerid, COLOR_GREEN, msg);
	                }
	                else
	                {
	                    senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Fuli Iaraghis Shesadzenad");
	                }
	            }
	            else
	            {
             		senderror2(playerid, "Araswori Raodenoba, Unda Iyidot Minimum 1 Tyvia");
	            }
	        }
		}
        case 1000..1009:
        {
            new questionid = dialogid - 1000;

            if (!response)
            {
                senderror2(playerid, "Tkven Uari Tkvit Gamocdis Dasrulebaze");
                return true;
            }

            if (listitem == RandomizedQuestions[playerid][questionid][CORRECT_ANSWER])
            {
                PlayerScore[playerid]++;
            }
            else
            {
                PlayerIncorrectAnswers[playerid]++;
            }

            if (questionid + 1 < MAX_QUESTIONS)
            {
                ShowQuestion(playerid, questionid + 1);
            }
            else
            {
		        if (PlayerIncorrectAnswers[playerid] > 2)
		        {
		       		Player_Passed_Exam[playerid] = 0;
		            senderror2(playerid, "Samwuxarod, Tkven Ver Chaabaret Teoriuli Gamocda");
		            senderror2(playerid, "Yurebi Ar Chamoyaro, Shegidzlia Tavidan Scado");
		        }
		        else
		        {
		        	Player_Passed_Exam[playerid] = 1;
		            sendinfo(playerid, "Gilocavt, Tkven Warmatebit Chaabaret Teoriis Gamocda");
		            sendinfo(playerid, "Tkven Axla Win Gelodebat Praqtikuli Gamocda, Warmatebebi");
		        }
            }
            return 1;
        }
        case 4523:
		{
  			if(response)
		    {
			    switch(listitem)
			    {
    				case 0:
			        {
						sendinfo(playerid, "Tvqne Airchiet Produqtebis Gadatana , Adgili Monishnulia Mapze !");
						sendinfo(playerid, "Misabmelis Gareshe Tvirti Ar Chairtveba, Tvirtis Misatanad Gedzlevat 10 Wuti !");
			            Aigotvirti[playerid] = true;
                        TvirtisSaxeoba[playerid] = 1;
                        SetPlayerCheckpoint(playerid,1338.7609,-857.5486,39.3473,8);
                        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
                        TrailerLimit += 1;
                        SetTimer("TrailerTime", 600000, 0);
					}
 					case 1:
			        {
						sendinfo(playerid, "Tvqne Airchiet Naxshiris Gadatana , Adgili Monishnulia Mapze !");
						sendinfo(playerid, "Misabmelis Gareshe Tvirti Ar Chairtveba, Tvirtis Misatanad Gedzlevat 10 Wuti !");
			            Aigotvirti[playerid] = true;
                        TvirtisSaxeoba[playerid] = 2;
                        SetPlayerCheckpoint(playerid,327.4458,865.4194,20.4063,8);
                        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
                        TrailerLimit += 1;
                        SetTimer("TrailerTime", 600000, 0);
					}
					case 2:
			        {
						sendinfo(playerid, "Tvqne Airchiet Benzinis Gadatana , Adgili Monishnulia Mapze !");
						sendinfo(playerid, "Misabmelis Gareshe Tvirti Ar Chairtveba, Tvirtis Misatanad Gedzlevat 10 Wuti !");
			            Aigotvirti[playerid] = true;
                        TvirtisSaxeoba[playerid] = 3;
                        SetPlayerCheckpoint(playerid,2790.9324,-2093.3979,11.4421,8);
                        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "", "", "", "");
                        TrailerLimit += 1;
                        SetTimer("TrailerTime", 600000, 0);
					}
				}
			}
		}
/*		case 7011:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowPlayerDialog(playerid, 7012, DIALOG_STYLE_INPUT, "{FF9900}Tyviebis Ageba", "{FFFFFF}Miutitet Tkventvis Sasurveli Tyviebis Raodenoba\nGaitvaliswinet, Tyviebis Maxsimaluri Raodenoba Aris: {FF9900}600", "Shemdeg", "Daxurva");
                    case 1: ShowPlayerDialog(playerid, 7013, DIALOG_STYLE_INPUT, "{FF9900}Tyviebis Chadeba", "{FFFFFF}Miutitet Tkventvis Sasurveli Tyviebis Raodenoba\nGaitvaliswinet, Tyviebis Maxsimaluri Raodenoba Aris: {FF9900}600", "Shemdeg", "Daxurva");
                    case 2: ShowPlayerDialog(playerid, 7014, DIALOG_STYLE_INPUT, "{FF9900}Medikamentebis Yidva", "{FFFFFF}Miutitet Tkventvis Sasurveli Medikamentebis Raodenoba\n{FF9900}1{FFFFFF}Medikamenti = {FF9900}1.000{FFFFFF}$\nGaitvaliswinet, Medikamentebis Maxsimaluri Raodenoba Aris: {FF9900}10", "Shemdeg", "Daxurva");
				}
			}
		}
		case 7012:
		{
			if(response)
			{
			    new g_str[150];
   				new tyvia = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7012, DIALOG_STYLE_INPUT, "{FF9900}Tyviebis Ageba", "{FFFFFF}Miutitet Tkventvis Sasurveli Tyviebis Raodenoba\nGaitvaliswinet, Tyviebis Maxsimaluri Raodenoba Aris: {FF9900}600", "Shemdeg", "Daxurva");
				if(tyvia < 1 || tyvia > 600)
				{
				    sendinfo(playerid, "Tyviebis Raodenoba Unda Shedgebodes: 100'dan 600'mde");
					ShowPlayerDialog(playerid, 7012, DIALOG_STYLE_INPUT, "{FF9900}Tyviebis Ageba", "{FFFFFF}Miutitet Tkventvis Sasurveli Tyviebis Raodenoba\nGaitvaliswinet, Tyviebis Maxsimaluri Raodenoba Aris: {FF9900}600", "Shemdeg", "Daxurva");
					return 1;
				}
	   		    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
				{
				    if(BallasMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
	     			if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
					PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					BallasMat -= tyvia;
					GhettoTextUPDATE();
					SaveWH();
				}
				else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
				{
				    if(VagosMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
					if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			VagosMat -= tyvia;
	     			GhettoTextUPDATE();
	     			SaveWH();
	     		}
	     		else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
				{
					if(GroveMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
					if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			GroveMat -= tyvia;
	     			GhettoTextUPDATE();
	     			SaveWH();
	     		}
	     		else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
				{
					if(AztecaMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
	     			if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			AztecaMat -= tyvia;
	     			GhettoTextUPDATE();
	     			SaveWH();
	     		}
	     		else if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
				{
				    if(RifaMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
	     			if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			RifaMat -= tyvia;
	     			GhettoTextUPDATE();
	     			SaveWH();
	     		}
	     		else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
				{
				    if(LCNMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
	     			if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Maffiis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			LCNMat -= tyvia;
	     			MaffiaTextUPDATE();
	     			SaveWH();
	     		}
	     		else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
				{
				    if(YakuzaMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
	     			if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Maffiis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			YakuzaMat -= tyvia;
	     			MaffiaTextUPDATE();
	     			SaveWH();
	     		}
	     		else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
				{
				    if(RMMat < tyvia) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
	     			if(PlayerInfo[playerid][pMaterial]+tyvia > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
	     			PlayerInfo[playerid][pMaterial] += tyvia;
	     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Maffiis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, tyvia);
					ProxDetector(20.0, playerid, g_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	     			RMMat -= tyvia;
	     			MaffiaTextUPDATE();
	     			SaveWH();
				}
			}
		}*/
    }
   	if(dialogid == 3316)
	{
	    if(response)
	    {
	        sendinfo(playerid, "Tqven Gaxdit Traileris Mdzgoli.");
	        TrailerJob[playerid] = true;
	    }
	    else
	    {
	        sendinfo(playerid, "Tkven Daasrulet Mushaoba");
	        TrailerJob[playerid] = false;
	        DisablePlayerCheckpoint(playerid);
			RemovePlayerAttachedObject(playerid,0);
			RemovePlayerAttachedObject(playerid,1);
			RemovePlayerAttachedObject(playerid,2);
			SetPlayerSpecialAction(playerid, 0);
		}
		return true;
	}
	if(dialogid == 1090)
    {
        if(response)
        {
            if(!strval(inputtext)) return true;
            if(strval(inputtext) < 500 || strval(inputtext) > 50000) return true;
			if(PlayerInfo[playerid][pCash] < strval(inputtext)) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			JetXBet[playerid] = strval(inputtext);
  			UpdatePlayerJetX(playerid);
		}
	    return true;
    }
	if(dialogid == 1092)
	{
		if(MedicCallTime <= 0)
		{
		    new Float:x, Float:y, Float:z;
		    GetPlayerPos(playerid, x, y, z);
		    format(gstr, sizeof(gstr), "[Hospital]{ffffff} Motamashes %s's Chirdeba Saswrafo Daxmareba, Igi Monishnulia Rukaze Witlad",Name(playerid));
		    MedicCallTime = 30;
		    foreach(new i:Player)
		    {
		        if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pForm] != 0)
		        {
					SetPVarInt(i, "MedicCall", 1);
					SetPlayerCheckpoint(i, x, y, z, 3);
					SendClientMessage(i, 0xEC7063FF, gstr);
		        }
		    }
		}
	    return true;
	}
	if(dialogid == 3343)
	{
	    if(response)
	    {
	        new elections[200];
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(PlayerInfo[playerid][pElections] != 0) return sendinfo(playerid, "Tkven Ukve Miecit Archevnebshi Xma!");
	                ElectionInfo[0][eVoices] += 1;
					PlayerInfo[playerid][pElections] = 1;
	                PlayerUpdateData(playerid, "pElections", PlayerInfo[playerid][pElections]);
	                format(elections, sizeof(elections), "Tkven Miecit Saarchevno Xma: {0099CC}%s{FFFFFF}'s / Partia: {0099CC}%s {FFFFFF}[»{0099CC}%d{FFFFFF}]", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
	                SendClientMessage(playerid, COLOR_WHITE, elections);
				}
				case 1:
	            {
	                if(PlayerInfo[playerid][pElections] != 0) return sendinfo(playerid, "Tkven Ukve Miecit Archevnebshi Xma!");
	                ElectionInfo[1][eVoices] += 1;
					PlayerInfo[playerid][pElections] = 1;
	                PlayerUpdateData(playerid, "pElections", PlayerInfo[playerid][pElections]);
	                format(elections, sizeof(elections), "Tkven Miecit Saarchevno Xma: {0099CC}%s{FFFFFF}'s / Partia: {0099CC}%s {FFFFFF}[»{0099CC}%d{FFFFFF}]", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
	                SendClientMessage(playerid, COLOR_WHITE, elections);
				}
				case 2:
	            {
	                if(PlayerInfo[playerid][pElections] != 0) return sendinfo(playerid, "Tkven Ukve Miecit Archevnebshi Xma!");
	                ElectionInfo[2][eVoices] += 1;
					PlayerInfo[playerid][pElections] = 1;
	                PlayerUpdateData(playerid, "pElections", PlayerInfo[playerid][pElections]);
	                format(elections, sizeof(elections), "Tkven Miecit Saarchevno Xma: {0099CC}%s{FFFFFF}'s / Partia: {0099CC}%s {FFFFFF}[{0099CC}»%d{FFFFFF}]", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
	                SendClientMessage(playerid, COLOR_WHITE, elections);
				}
	        }
	    }
	}
	if(dialogid == 3342)
	{
	    new namestr[300];
	    if(response)
    	{
			new number = strval(inputtext);
			if(!strval(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
				ShowPlayerDialog(playerid, 3342, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(number < 1 || number > 100)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
				ShowPlayerDialog(playerid, 3342, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
				return false;
			}
			ElectionInfo[2][eNumber] = number;
			PC_EmulateCommand(playerid, "/archevnebi");
		}
		else
		{
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
			ShowPlayerDialog(playerid, 3336, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
	}
	if(dialogid == 3341)
	{
	    new namestr[300];
	    if(response)
    	{
			new number = strval(inputtext);
			if(!strval(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
				ShowPlayerDialog(playerid, 3341, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Daxurva");
			    return false;
			}
			if(number < 1 || number > 100)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
				ShowPlayerDialog(playerid, 3341, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Daxurva");
				return false;
			}
			ElectionInfo[1][eNumber] = number;
			PC_EmulateCommand(playerid, "/archevnebi");
		}
		else
		{
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
			ShowPlayerDialog(playerid, 3338, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Daxurva");
		}
	}
	if(dialogid == 3340)
	{
	    new namestr[300];
	    if(response)
    	{
			new number = strval(inputtext);
			if(!strval(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
				ShowPlayerDialog(playerid, 3340, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(number < 1 || number > 100)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
				ShowPlayerDialog(playerid, 3340, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
				return false;
			}
			ElectionInfo[0][eNumber] = number;
			PC_EmulateCommand(playerid, "/archevnebi");
		}
		else
		{
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
			ShowPlayerDialog(playerid, 3337, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
	}
	if(dialogid == 3339)
	{
	    new namestr[300];
	    if(response)
	    {
	        if(!strlen(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
				ShowPlayerDialog(playerid, 3339, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 20)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
				ShowPlayerDialog(playerid, 3339, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			format(ElectionInfo[2][eParty], 24, inputtext);
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
			ShowPlayerDialog(playerid, 3342, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
		}
		else
		{
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
			ShowPlayerDialog(playerid, 3336, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
	}
	if(dialogid == 3338)
	{
	    new namestr[300];
	    if(response)
	    {
	        if(!strlen(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
				ShowPlayerDialog(playerid, 3338, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 20)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
				ShowPlayerDialog(playerid, 3338, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			format(ElectionInfo[1][eParty], 24, inputtext);
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
			ShowPlayerDialog(playerid, 3341, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
		}
		else
		{
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
			ShowPlayerDialog(playerid, 3335, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
	}
	if(dialogid == 3337)
	{
	    new namestr[300];
	    if(response)
	    {
	        if(!strlen(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
				ShowPlayerDialog(playerid, 3337, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 20)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Saxeli\nPartiis Saxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
				ShowPlayerDialog(playerid, 3337, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			format(ElectionInfo[0][eParty], 24, inputtext);
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Nomeri\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}1\n\t- {FFFFFF}Maxsimum: {EC6240}100\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {00FF00}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
			ShowPlayerDialog(playerid, 3340, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Number", namestr, "Shemdeg", "Ukan");
		}
		else
		{
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
			ShowPlayerDialog(playerid, 3334, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
	}
	if(dialogid == 3336)
	{
	    new namestr[300];
	    if(response)
	    {
	        if(!strlen(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
				ShowPlayerDialog(playerid, 3336, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 20)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
				ShowPlayerDialog(playerid, 3336, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			format(ElectionInfo[2][eName], 24, inputtext);
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Partiis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
			ShowPlayerDialog(playerid, 3339, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
		else
		{
		    PC_EmulateCommand(playerid, "/archevnebi");
		}
	}
	if(dialogid == 3335)
	{
	    new namestr[300];
	    if(response)
	    {
	        if(!strlen(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
				ShowPlayerDialog(playerid, 3335, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 20)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
				ShowPlayerDialog(playerid, 3335, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			format(ElectionInfo[1][eName], 24, inputtext);
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Partiis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
			ShowPlayerDialog(playerid, 3338, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
		else
		{
		    PC_EmulateCommand(playerid, "/archevnebi");
		}
	}
	if(dialogid == 3334)
	{
	    new namestr[300];
	    if(response)
	    {
	        if(!strlen(inputtext))
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
				ShowPlayerDialog(playerid, 3334, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 20)
			{
				format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
				ShowPlayerDialog(playerid, 3334, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
			    return false;
			}
			format(ElectionInfo[0][eName], 24, inputtext);
			format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Partiis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {00FF00}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
			ShowPlayerDialog(playerid, 3337, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
		}
		else
		{
		    PC_EmulateCommand(playerid, "/archevnebi");
		}
	}
	if(dialogid == 3333)
	{
	    if(response)
	    {
	        new namestr[300];
	        switch(listitem)
	        {
	        	case 0:
				{
				    if(ElectionON == 1) return sendinfo(playerid, "Archevnebi Ukve Dawyebulia!");
					format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Pirveli Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eNumber]);
					ShowPlayerDialog(playerid, 3334, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
				}
				case 1:
				{
				    if(ElectionON == 1) return sendinfo(playerid, "Archevnebi Ukve Dawyebulia!");
					format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Meore Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eNumber]);
					ShowPlayerDialog(playerid, 3335, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
				}
                case 2:
                {
                    if(ElectionON == 1) return sendinfo(playerid, "Archevnebi Ukve Dawyebulia!");
					format(namestr, sizeof(namestr), "{FFFFFF}Miutitet Los Santos Merobis Mesame Kandidatis Saxeli\nSaxeli Unda Shedgebodes\n\t{EC6240}- {FFFFFF}Minimum: {EC6240}5\n\t- {FFFFFF}Maxsimum: {EC6240}15{FFFFFF}Simbolosgan\n{FFFFFF}Kandidati: {FF0000}%s\n{FFFFFF}Partia: {FF0000}%s\n{FFFFFF}»: {FF0000}%d", ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eNumber]);
					ShowPlayerDialog(playerid, 3336, DIALOG_STYLE_INPUT, "{EC6240}Elections{FFFFFF} | Enter A Name", namestr, "Shemdeg", "Ukan");
				}
			}
		}
	}
    return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(!AntiC[playerid] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(PRESSED(KEY_FIRE))
		{
			switch(GetPlayerWeapon(playerid))
			{
				case WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SNIPER:
				{
					OldShoot[playerid] = gettime()+1;
				}
			}
		}
		else if(PRESSED(KEY_CROUCH))
		{
			/*if(OldShoot[playerid] > gettime() && IsAMafia(playerid))
			{
				TogglePlayerControllable(playerid, false);
				AntiC[playerid] = true;
				SetTimerEx("CBugFreezeOver", 1000, false, "i", playerid);
			}*/
		}
	}
    if(CANCELKEYS(newkeys))
    {
    	if(TakingPicture[playerid] == 1)
        {
            StopAnimation(playerid);
            SetCameraBehindPlayer(playerid);
            TakingPicture[playerid] = 0;
            PhoneMove(playerid, true);
            return true;
        }
    }
   	if((newkeys & 40 == 40 && 40 != oldkeys & 40) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(TireBurnout[playerid] == 0)
		{
			TireBurnout[playerid] = 1;
			if(BurnoutTimer[playerid] != -1) KillTimer(BurnoutTimer[playerid]);
			BurnoutTimer[playerid] = SetTimerEx("BurnoutTire", 10000, false, "i", playerid);
		}
	}
	else
	{
	    if(BurnoutTimer[playerid] != -1) KillTimer(BurnoutTimer[playerid]);
		TireBurnout[playerid] = 0;
	}
	if(newkeys == 128 || newkeys == 16)
	{
		if(GetPlayerCameraMode(playerid) == 184)
		{
			format(kick_str, sizeof(kick_str), "{FFFFFF}Server: {FF4949}"SERVER_SHORT_NAME"\n{FFFFFF}Name: {FF4949}%s\n{FFFFFF}Ping: {FF4949}%d\n{FFFFFF}Code: {FF4949}#028\n{FFFFFF}Mizezi: {FF4949}Cheat\n\n{FFFFFF}Tu Tvlit, Rom Serveridan Arasworad Gavardit Aucileblad Gaasachivret Jgufshi", Name(playerid), GetPlayerPing(playerid));
			ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{8FD73F}You Left The Server", kick_str, "Daxurva", "");
			Kick(playerid);
			printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [Code #028]", Name(playerid));
		}
	}
 	if(newkeys == 4)
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && SpeedVehicle(playerid) < 5)
        {
            PC_EmulateCommand(playerid, "/lights");
		}
	}
	if(PRESSED(KEY_FIRE) || newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
	    if(GetPlayerVirtualWorld(playerid) == 35 &&
		(IsPlayerInRangeOfPoint(playerid, 4.0, 768.3909, -3.1853, 1000.7210) || IsPlayerInRangeOfPoint(playerid, 5.0, 760.5793, 11.5848, 1001.1639) || IsPlayerInRangeOfPoint(playerid, 4.0, 770.0669,14.3171,1000.6979)))
		{
		    new string[128];
			switch(LearningFight[playerid])
			{
				case 1:
				{
				    if(IsPlayerInRangeOfPoint(playerid, 3.0, 768.3909, -3.1853, 1000.7210))
					{
	    				if(PlayerInfo[playerid][pFightSkill][LearningFight[playerid] - 1] >= MAX_FIGHT_SKILL)
					    {
					        DisablePlayerCheckpoint(playerid);
	        				SetPlayerSkinEx(playerid);
	     			    	LearningFight[playerid] = 0;
	                        SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Tkven Sheiswavlet Axali Chxubis Stili");
	                        SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Chxubis Stilis Dasakeneblad Daweret: /fstyle");
							return 1;
					    }
					    PlayerInfo[playerid][pFightSkill][LearningFight[playerid] - 1] ++;
						format(string, sizeof(string), "~w~+ %d / %d BOX", PlayerInfo[playerid][pFightSkill][LearningFight[playerid]-1],MAX_FIGHT_SKILL);
						GameTextForPlayer(playerid, string, 2000, 3);
					}
				}
				case 2:
				{
				    if(IsPlayerInRangeOfPoint(playerid, 4.0, 760.5793, 11.5848, 1001.1639))
					{
					    if(PlayerInfo[playerid][pFightSkill][LearningFight[playerid] - 1] >= MAX_FIGHT_SKILL)
					    {
					        DisablePlayerCheckpoint(playerid);
	        				SetPlayerSkinEx(playerid);
	     			    	LearningFight[playerid] = 0;
	                        SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Tkven Sheiswavlet Axali Chxubis Stili");
	                        SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Chxubis Stilis Dasakeneblad Daweret: /fstyle");
							return 1;
					    }
				     	PlayerInfo[playerid][pFightSkill][LearningFight[playerid] - 1] ++;
						format(string, sizeof(string), "~w~+ %d / %d KICK-BOX", PlayerInfo[playerid][pFightSkill][LearningFight[playerid]-1],MAX_FIGHT_SKILL);
						GameTextForPlayer(playerid, string, 2000, 3);
					}
				}
				case 3:
				{
				    if(IsPlayerInRangeOfPoint(playerid, 3.0, 770.0669,14.3171,1000.6979))
					{
	    				if(PlayerInfo[playerid][pFightSkill][LearningFight[playerid] - 1] >= MAX_FIGHT_SKILL)
					    {
					        DisablePlayerCheckpoint(playerid);
					        SetPlayerSkinEx(playerid);
	     			    	LearningFight[playerid] = 0;
	                        SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Tkven Sheiswavlet Axali Chxubis Stili");
	                        SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Chxubis Stilis Dasakeneblad Daweret: /fstyle");
							return 1;
					    }
					    PlayerInfo[playerid][pFightSkill][LearningFight[playerid] - 1] ++;
						format(string, sizeof(string), "~w~+ %d / %d KUNG-FU", PlayerInfo[playerid][pFightSkill][LearningFight[playerid]-1],MAX_FIGHT_SKILL);
						GameTextForPlayer(playerid, string, 2000, 3);
					}
				}
				default:
				{
					if(FightOpponent[playerid] == -1) SendClientMessage(playerid, COLOR_ORANGE, "[G.Y.M.]{ffffff} Tkven Ar Xart Chawerili Varjishze");
					return 1;
				}
			}
		}
	    return 1;
	}
 	if((newkeys & KEY_FIRE  || (newkeys & KEY_SPRINT && newkeys & KEY_FIRE)) || (newkeys & KEY_SPRINT && newkeys & KEY_SECONDARY_ATTACK))
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
		    if(IsPlayerInRangeOfPoint(playerid, 90.0, -35.9508, 153.6344, 999.0569)
	 		|| IsPlayerInRangeOfPoint(playerid, 60.0, 1131.3826, -4.4951, 1000.6797))
		    {
      			SetPlayerArmedWeapon(playerid, 0);
                ApplyAnimation(playerid, "FAT", "IDLE_tired", 4.0, 1, 0, 0, 0, 0, 1);
                SetTimerEx("StopAnimation", 3000, false, "d", playerid);
				return true;
		    }
		    if(IsPlayerInGreenZone(playerid))
		    {
	            if(GetPlayerAnimationIndex(playerid) != 471)
	            {
	                SetPlayerArmedWeapon(playerid, 0);
	                ApplyAnimation(playerid, "FAT", "IDLE_tired", 4.0, 1, 0, 0, 0, 0, 1);
	                SetTimerEx("StopAnimation", 3000, false, "d", playerid);
            	}
            }
			return true;
		}
	}
 	if(newkeys == KEY_CTRL_BACK) // Key [H]
    {
        if(isAlogged[playerid])
        {
			ShowReports(playerid);
        }
    }
    if(newkeys == KEY_CROUCH || newkeys == KEY_CTRL_BACK) // Open Gates
    {
        if(IsPlayerInRangeOfPoint(playerid, 20.0, 1595.93640, -1638.10168, 14.75460))
	    {
	        if(IsAGov(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
	        {
		    	MoveObject(lspdgate, 1603.17639, -1638.10168, 14.75460, 3);
				SetTimer("LSPDCloseGate", 10000, 0);
			}
		}
        if(IsPlayerInRangeOfPoint(playerid, 20.0, 2720.16040, -2399.64966, 15.26770))
		{
		    if(IsAGov(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            MoveObject(armygates[0], 2720.16040, -2389.71362, 15.26770, 3);
				SetTimer("ArmyCloseGate1", 10000, 0);
	        }
		}
		if(IsPlayerInRangeOfPoint(playerid, 20.0, 2720.20361, -2498.23486, 15.26770))
		{
		    if(IsAGov(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            MoveObject(armygates[1], 2720.20361, -2488.14697, 15.26770, 3);
				SetTimer("ArmyCloseGate2", 10000, 0);
	        }
		}
		if(IsPlayerInRangeOfPoint(playerid, 15.0, 1544.68933, -1630.89624, 13.07590))
	    {
	        if(IsAGov(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
	        {
		    	MoveObject(PoliceGate, 1544.68933, -1630.80420, 13.01190, 0.1, 0.00000, 0.00000, 90.00000);
				SetTimer("PoliceGateMove", 10000, 0);
	        }
		}
    }
    if(newkeys == 16) // Key (Return) [F or Enter]
    {
		if(Animation[playerid])
		{
            Animation[playerid] = false;
            StopAnimation(playerid);
	    	TextDrawHideForPlayer(playerid, StopAnimationTD);
		}

  		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        {
	    	if(IsNearJetMachine(playerid) != -1)
		    {
		        JetXMoveToPlayer(playerid, !JetXStatus[playerid]);
		        return true;
		    }
        }

        new s = GetPVarInt(playerid,"GameStol");
   		new stolid = IsPlayerNearStol(playerid);
   		new g = KazinoDuty[playerid];
   		if(stolid == -1) return true;
   		if(StolInfo[stolid][Igrokov] >= 5 && g == 0) return SendClientMessage(playerid,COLOR_GREY,"Es Magida Savsea Shesabamisad Ver Dajdebit Am Magidaze");
   		if(g > 0 && StolInfo[stolid][Crupe] != INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Tqven Ar Shegidzliat Am Magidaze Idilerot, Aq Ukve Mushaobs Dileri");
   		if(s != 88) return SendClientMessage(playerid,COLOR_GREY,"Tqven Ukve Tamashobt Sxva Magidaze, Shesabamisad Ver Itamashebt Jer Am Magidaze");
   		if(StolInfo[stolid][Crupe] == INVALID_PLAYER_ID && g == 0) return SendClientMessage(playerid,COLOR_GREY,"Es Magida Ar Mushaobs Amitomac, Gadabrdzandit Sxva Magidaze");
   		TextDrawShowForPlayer(playerid,KostiBox[stolid]);
   		TextDrawShowForPlayer(playerid,TableName[stolid]);
   		TextDrawShowForPlayer(playerid,KostiInfo[stolid]);
   		TextDrawShowForPlayer(playerid,KostiGameInfo[stolid]);
   		TextDrawShowForPlayer(playerid,KostiKeyExit);
   		TextDrawShowForPlayer(playerid,KostiKeyDone);
   		TextDrawShowForPlayer(playerid,KostiKeyStavka);
   		SetPVarInt(playerid,"GameStol",stolid);
   		TogglePlayerControllable(playerid,0);
   		SelectTextDraw(playerid,0x4169e1FF);
		SetNameStol(playerid,stolid);
   		if(g > 0) StolInfo[stolid][Crupe] = playerid;
   		UpdateCasino2();
   		CasinoDuty[playerid] = true;
        return true;
    }
    if(newkeys == KEY_NO) // Key (N)
    {
    	if(FightOffer[playerid] != -1)
        {
            if(!IsPlayerConnected(FightOffer[playerid]))
            {
                FightOffer[FightOffer[playerid]] = -1;
                FightOffer[playerid] = -1;
                return true;
            }
            new string[128];
            format(string, sizeof(string), "{ffffff}Tkven Uari Tkvit Chxubze");
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "{ffffff}Motamashem {EC7063}%s{ffffff} Uari Tkva Chxubze !",Name(playerid));
            SendClientMessage(FightOffer[playerid], COLOR_WHITE, string);
            FightOffer[FightOffer[playerid]] = -1;
            FightOffer[playerid] = -1;
            return true;
        }
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
        {
	        for(new i = 0; i < TotalBankomat; i ++)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 4.0, BankomatInfo[i][BankomatPosX], BankomatInfo[i][BankomatPosY], BankomatInfo[i][BankomatPosZ]))
	            {
	                new bankid = i;
					if(RobbingStarted[playerid]) return true;
					if(BankomatInfo[bankid][BankomatRobbed]) return senderror(playerid, "Bankomati Ukve Gadzarcvulia!");
					if(PlayerInfo[playerid][pAlreadyRobbed] == 1) return senderror(playerid, "Tkven Ukve Gadzarcvet Bankomati Am Saatshi");
					if(!RobbingTools[playerid]) return senderror(playerid, "Tkven Ar Gakvt Xelsawyoebi!");
		            TogglePlayerControllable(playerid, 0);
					ApplyAnimation(playerid, "CAR_CHAT", "CAR_Sc4_BL", 4.1, 1, 1, 1, 0, 0);
					PlayerInfo[playerid][pAlreadyRobbed] = 1;
					RobbingStarted[playerid] = true;
					RobbingTools[playerid] = false;
					BankomatInfo[bankid][BankomatRobbed] = true;
					GameTextForPlayer(playerid, "Mimdinareobs ...", 45000, 1);
					SetPlayerAttachedObject(playerid, 1, 18635, 6);
					SetTimerEx("BankTimer", 45000, false, "i", playerid);
					SetTimerEx("Signalizacia", 13500, false, "i", playerid);
	                return true;
	            }
	        }
        }
   		if(InviteStatus[playerid] == true && InviterID[playerid] != -1)
		{
			new invitestr[200];
		    format(invitestr, sizeof(invitestr), "Family - %s%s{FFFFFF} | Motamashem: %s%s{FFFFFF} Uari Tkva Tkvens Familyshi Gawevrianda", FamilyColors[FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fColor]], FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fName], Name(playerid));
		    SendClientMessage(InviterID[playerid], COLOR_WHITE, invitestr);
		    format(invitestr, sizeof(invitestr), "Family - %s%s{FFFFFF} | Tkven Uari Tkvit Familyshi Gawevrianebaze: %s%s", FamilyColors[FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fColor]], FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fName], Name(InviterID[playerid]));
		    SendClientMessage(playerid, COLOR_WHITE, invitestr);

		    InviteStatus[playerid] = false;
		    InviterID[playerid] = -1;
			return true;
		}
    	new inviterid = -1;
        foreach(new i:Player)
        {
            if(InviteID[i] == playerid)
            {
                inviterid = i;
                break;
            }
        }
        if(inviterid != -1)
        {
            new string[128];
            format(string, sizeof(string), "{ffffff}Tkven Uari Tkvit Frakciashi Gawevrianebaze");
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "{ffffff}Motamashem {FF8282}%s{ffffff} Uari Tkva Frakciashi Gawevrianebaze !",Name(playerid));
            SendClientMessage(inviterid, COLOR_WHITE, string);
            InviteID[inviterid] = -1;
            InviteID[playerid] = -1;
            return true;
        }
        return true;
    }
    if(newkeys == KEY_YES) // Key (Y)
    {
        if(FightOffer[playerid] != -1)
        {
            if(!IsPlayerConnected(FightOffer[playerid]))
            {
                FightOffer[FightOffer[playerid]] = -1;
                FightOffer[playerid] = -1;
                return true;
            }
            StartFight(playerid, FightOffer[playerid]);
            FightOffer[FightOffer[playerid]] = -1;
            FightOffer[playerid] = -1;
            return true;
        }
        new open_inv = -1;
        new inviterid = -1;
        foreach(new i:Player)
        {
            if(InviteID[i] == playerid)
            {
                inviterid = i;
                break;
            }
        }
        if(inviterid != -1)
        {
            new p_fam_id = PlayerInfo[inviterid][pMember];
            new string[128];
            format(string, sizeof(string), "{ffffff}Tkven Gawevriandit %s Frakciashi",FractionNames[p_fam_id]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            PlayerInfo[playerid][pMember] = p_fam_id;
            PlayerInfo[playerid][pRank] = 1;
            PlayerInfo[playerid][pModel] = FractionSkins[p_fam_id][0];
            PlayerInfo[playerid][pForm] = PlayerInfo[playerid][pMember];
            format(string, sizeof(string), "{ffffff}Motamashe {FF8282}%s{ffffff} Gawevrianda Frakciashi",Name(playerid));
            SendClientMessage(inviterid, COLOR_WHITE, string);
            SavePlayerData(playerid);
            InviteID[inviterid] = -1;
            InviteID[playerid] = -1;
            open_inv++;
            SetPlayerSkinEx(playerid);

            SvAttachListenerToStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	        WalkieTalkieFractionStatus[playerid] = 1;
	        SavePlayerData(playerid);
			SetPlayerQuest(playerid, QUEST_FRAC);
            return true;
        }
		if(InviteStatus[playerid] == true && InviterID[playerid] != -1)
		{
			new invitestr[200];
		    format(invitestr, sizeof(invitestr), "Family - %s%s{FFFFFF} | Motamashe: %s%s{FFFFFF} Gawevrianda Tkvens Familyshi", FamilyColors[FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fColor]], FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fName], Name(playerid));
		    SendClientMessage(InviterID[playerid], COLOR_WHITE, invitestr);
		    format(invitestr, sizeof(invitestr), "Family - %s%s{FFFFFF} | Tkven Daetanxmet Familyshi Gawevrianebaze: %s%s", FamilyColors[FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fColor]], FamilyInfo[PlayerInfo[InviterID[playerid]][pFamilyMember]][fName], Name(InviterID[playerid]));
		    SendClientMessage(playerid, COLOR_WHITE, invitestr);
		    
 		   	PlayerInfo[playerid][pFamilyMember] = PlayerInfo[InviterID[playerid]][pFamilyMember];
		    PlayerUpdateData(playerid, "pFamilyMember", PlayerInfo[playerid][pFamilyMember]);
		    PlayerInfo[playerid][pFamilyRank] = 1;
		    PlayerUpdateData(playerid, "pFamilyRank", PlayerInfo[playerid][pFamilyRank]);
		    SetPlayerFamilyStatus(playerid);

		    InviteStatus[playerid] = false;
		    InviterID[playerid] = -1;
		    SetPlayerQuest(playerid, QUEST_FAM);
			return true;
		}
		if(!ContainerStatusPlayer[playerid])
		{
	        for(new i = 0; i < sizeof(ContainerPositions); i ++)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 3.0, ContainerPositions[i][0], ContainerPositions[i][1], ContainerPositions[i][2]))
	            {
	                if(ContainerStatus[i] == 1)
	                {
						senderror2(playerid, "Konteineri Ukve Gaxsnilia");
	                    return true;
	                }
	                TogglePlayerControllable(playerid, false);
	               	InterpolateCameraPos(playerid, ContainerPositions[i][0]+10, ContainerPositions[i][1], ContainerPositions[i][2]+2, ContainerInsidePositions[i][0]+3, ContainerInsidePositions[i][1], ContainerInsidePositions[i][2]+1, 6000);
	            	InterpolateCameraLookAt(playerid, ContainerInsidePositions[i][0]-5, ContainerInsidePositions[i][1], ContainerInsidePositions[i][2]+3, ContainerInsidePositions[i][0]-6, ContainerInsidePositions[i][1], ContainerInsidePositions[i][2]-2, 6000);
					SetTimerEx("ContainerGates", 2000, false, "i", i);
					SetPlayerContainerPrize(playerid, i, random(4));
					SetPlayerPos(playerid, ContainerPositions[i][0]+5, ContainerPositions[i][1]+5, ContainerPositions[i][2]);
					ContainerStatusPlayer[playerid] = true;
                    ContainerStatus[i] = 1;
					return true;
	            }
	        }
        }
 		for(new i = 0; i < MAX_BOOMBOX; i ++)
		{
			if(!BoomBoxData[i][bb_Busy]) continue;
			if(IsPlayerInRangeOfPoint(playerid, 3.0, BoomBoxData[i][bb_Position][0], BoomBoxData[i][bb_Position][1], BoomBoxData[i][bb_Position][2]))
			{
			    if(BoomBoxData[i][bb_Player] == playerid)
			    {
	                DestroyBoomBox(i);
					GivePlayerItem(playerid, GetItemModelById(ITEM_BOOMBOX));
				}
				else
				{
				    senderror2(playerid, "BoomBoxi Ar Gekutvnit Tkven");
				}
				open_inv++;
			    return true;
			}
		}

        for(new i = 1; i <= TotalBizz; i ++)
        {
            if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2])) continue;
            if(GetPlayerVirtualWorld(playerid) == i+22)
            {
                ShowPlayerMarket(playerid, i, BizzInfo[i][bType]);
                return true;
            }
            open_inv++;
        }
        if(GetPVarInt(playerid,"GameStol") != 88) open_inv++;
        if(open_inv == -1 && TakingPicture[playerid] == 0 && !phoneOpen[playerid])
        {
            ShowPlayerInventory(playerid);
        }
        return true;
    }
    if(newkeys == KEY_SUBMISSION) // Key (2)
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
            PC_EmulateCommand(playerid, "/engine");
        }
        return true;
    }
    if(newkeys == KEY_WALK) // Key (ALT)
    {
  		if(IsPlayerInRangeOfPoint(playerid, 3, 686.4847, -1609.5450, 14.5957))
		{
			ShowModelSelectionMenu(playerid, Accessorie_Selection, "Accessories");
			return true;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2, 1169.9048,-1329.8494,1221.6130))
		{
			ShowPlayerDialog(playerid,7799,DIALOG_STYLE_LIST, "{FFFFFF}AutoSchool", "{F0A45D}1. {FFFFFF}Teoria\n{F0A45D}2. {FFFFFF}Praqtika", "Select", "Exit");
		}
    	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetNearestVehicle(playerid) == caridhouse[playerid] && caridhouse[playerid] != -1)
        {
            PC_EmulateCommand(playerid, "/lock");
            return true;
        }
        if(IsPlayerInRangeOfPoint(playerid, 5.0, -1657.7375, 1210.2341, 7.2500))
        {
            if(GetPlayerVirtualWorld(playerid) == 0)
            {
                if(CountPlayerHouses(playerid) == 0) return senderror2(playerid, "Ar Gakvt Saxli");
                ShowPlayerDialog(playerid, 97, DIALOG_STYLE_LIST, "{4FB64F} Auto Salon", "{4FB64F}1.{ffffff} SA-MP'is Mankanebi\n{4FB64F}2.{ffffff} Launcher'is Mankanebi", "Select", "Close");
            	//ShowAutoSalon(playerid);
			}
            return true;
        }
 		if(IsPlayerInRangeOfPoint(playerid, 1.2, 321.1270,1117.0868,1083.8828) && GetPlayerVirtualWorld(playerid) == FractionInfo[FRACTION_BALLAS][frac_VirtualWorld])
	    {
	    	if(PlayerInfo[playerid][pMember] == FRACTION_BALLAS && IsALeader(playerid))
	        {
	        	if(obshiaki[2] == 1) return sendinfo(playerid, "Sawyobi Daketilia Leaderis Mier!");
				ShowPlayerDialog(playerid, 7011, DIALOG_STYLE_LIST, "{FF9900}Gang Warehouse", "[1] Tyviebis Ageba\n[2] Tyviebis Chadeba\n[3] Medikamentebis Yidva\n[4] Narkotikis Ageba\n[5] Narkotikis Chadeba", "Archeva", "Daxurva");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.2, 321.1270,1117.0868,1083.8828) && GetPlayerVirtualWorld(playerid) == FractionInfo[FRACTION_VAGOS][frac_VirtualWorld])
	    {
			if(PlayerInfo[playerid][pMember] == FRACTION_VAGOS && IsALeader(playerid))
	        {
	        	if(obshiaki[3] == 1) return sendinfo(playerid, "Sawyobi Daketilia Leaderis Mier!");
				ShowPlayerDialog(playerid, 7011, DIALOG_STYLE_LIST, "{FF9900}Gang Warehouse", "[1] Tyviebis Ageba\n[2] Tyviebis Chadeba\n[3] Medikamentebis Yidva\n[4] Narkotikis Ageba\n[5] Narkotikis Chadeba", "Archeva", "Daxurva");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.2, 321.1270,1117.0868,1083.8828) && GetPlayerVirtualWorld(playerid) == FractionInfo[FRACTION_GROVE][frac_VirtualWorld])
	    {
   			if(PlayerInfo[playerid][pMember] == FRACTION_GROVE && IsALeader(playerid))
	        {
	        	if(obshiaki[5] == 1) return sendinfo(playerid, "Sawyobi Daketilia Leaderis Mier!");
				ShowPlayerDialog(playerid, 7011, DIALOG_STYLE_LIST, "{FF9900}Gang Warehouse", "[1] Tyviebis Ageba\n[2] Tyviebis Chadeba\n[3] Medikamentebis Yidva\n[4] Narkotikis Ageba\n[5] Narkotikis Chadeba", "Archeva", "Daxurva");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.2, 321.1270,1117.0868,1083.8828) && GetPlayerVirtualWorld(playerid) == FractionInfo[FRACTION_AZTEC][frac_VirtualWorld])
	    {
			if(PlayerInfo[playerid][pMember] == FRACTION_AZTEC && IsALeader(playerid))
	        {
	        	if(obshiaki[6] == 1) return sendinfo(playerid, "Sawyobi Daketilia Leaderis Mier!");
				ShowPlayerDialog(playerid, 7011, DIALOG_STYLE_LIST, "{FF9900}Gang Warehouse", "[1] Tyviebis Ageba\n[2] Tyviebis Chadeba\n[3] Medikamentebis Yidva\n[4] Narkotikis Ageba\n[5] Narkotikis Chadeba", "Archeva", "Daxurva");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.2, 321.1270,1117.0868,1083.8828) && GetPlayerVirtualWorld(playerid) == FractionInfo[FRACTION_RIFA][frac_VirtualWorld])
	    {
			if(PlayerInfo[playerid][pMember] == FRACTION_RIFA && IsALeader(playerid))
	        {
	        	if(obshiaki[7] == 1) return sendinfo(playerid, "Sawyobi Daketilia Leaderis Mier!");
				ShowPlayerDialog(playerid, 7011, DIALOG_STYLE_LIST, "{FF9900}Gang Warehouse", "[1] Tyviebis Ageba\n[2] Tyviebis Chadeba\n[3] Medikamentebis Yidva\n[4] Narkotikis Ageba\n[5] Narkotikis Chadeba", "Archeva", "Daxurva");
		    }
		}
 		if(IsPlayerInRangeOfPoint(playerid, 70.0, 2126.3506, 1398.5797, 10.5287))
	    {
			for(new c = 0; c <= TotalCar; c++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, CarInfo[c][CarPosX], CarInfo[c][CarPosY], CarInfo[c][CarPosZ]) && CarInfo[c][CarStatus] == 1)
			    {
			        format(Salon_String, sizeof(Salon_String), "{FFFFFF}Mflobeli: {3399FF}%s\n{FFFFFF}Model: {3399FF}%s\n{FFFFFF}Fasi: {3399FF}%d$\n\n{FFFFFF}Tu Gsurt Am Transportis Shedzena Daachiret: {3399FF}'Shemdeg'{FFFFFF}s", CarInfo[c][CarOwner], GetVehicleName(CarInfo[c][CarID]), CarInfo[c][CarPrice]);
			        ShowPlayerDialog(playerid, 113, DIALOG_STYLE_MSGBOX, "{3399FF}AutoSalon", Salon_String, "Shemdeg", "Daxurva");
			        SetPVarInt(playerid, "CarPosID", c);
				}
			}
		}
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 2367.7505,2757.2661,10.8203) && TrailerJob[playerid] == true && !GetVehicleTrailer(GetPlayerVehicleID(playerid)) && Aigotvirti[playerid] == false)
		{
			new string[128];
			if(TrailerLimit <= 12)
			{
			    if(Aigotvirti[playerid] == false)
			    {
	 				format(string, sizeof(string), "{8FD73F}Trailers Complany{FFFFFF}");
	 				ShowPlayerDialog(playerid, 4523, DIALOG_STYLE_LIST, string, "[1] Produqtebi[2.000.000$]\n[2] Naxshiri[1.000.000$]\n[3] Benzini[2.000.000$]", "Archeva", "Daxurva");
				}
				else
				{
					sendinfo(playerid,"Tqven Gaauqmet Shekveta");
     				TvirtisSaxeoba[playerid] = 0;
     			 	Aigotvirti[playerid] = false;
        			DisablePlayerCheckpoint(playerid);
        			TrailerLimit -= 1;

				}
			}
			else
			{
			    senderror(playerid,"Jer Kvela Shekveta Agebulia Daelodet Axals");
			}
		}
   		if(InvData[playerid][i_Near] != -1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        {
            new near = InvData[playerid][i_Near];
            GivePlayerItem(playerid, DropInfo[near][d_Model]);
            ApplyAnimation(playerid, "BOMBER", "BOM_PLANT_LOOP", 4.1, 0, 0, 0, 0, 0, 0);
            DestroyDrop(near);
            InvData[playerid][i_Near] = -1;
			return true;
        }
        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        {
            for(new i = 0; i < MAX_FARM_OBJECT; i ++)
            {
                if(IsPlayerInRangeOfPoint(playerid, 3.0, FarmObjectInfo[i][cPosX], FarmObjectInfo[i][cPosY], FarmObjectInfo[i][cPosZ]))
                {
                    if(jobID[playerid] != JOB_FARM) return senderror(playerid, "Tkven Ar Mushaobt Fermashi !");
                    if(FarmObjectInfo[i][cStatusTimer]) return 1;
                    if(GetPVarInt(playerid,"farmwork") == 0)
                    {
                        SetPVarInt(playerid,"farmwork",1);
                        TogglePlayerControllable(playerid, 0);
                        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 1, 1, 0, 0);
                        FarmTimer[playerid] = SetTimerEx("FarmStatusNone", 10000, false, "i", playerid);
                        FermaStarted[playerid] = true;
                    }
					return true;
                }
            }
			if(PlantationWork[playerid] == true)
			{
		 	    if(jobID[playerid] == JOB_PLANTATION)
			    {
		            if(IsPlayerInRangeOfPoint(playerid, 2.0, -547.5245,-1505.4020,9.4470) || IsPlayerInRangeOfPoint(playerid, 2.0, -553.4600,-1505.5466,9.2455)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -559.8534,-1505.5948,9.1550) || IsPlayerInRangeOfPoint(playerid, 2.0, -565.3953,-1505.3407,9.2807)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -566.0205,-1513.7706,9.2901) || IsPlayerInRangeOfPoint(playerid, 2.0, -559.1902,-1513.7227,9.1537)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -553.4681,-1513.5579,9.1944) || IsPlayerInRangeOfPoint(playerid, 2.0, -547.7300,-1513.4281,9.2832)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -548.6917,-1524.8661,9.1692) || IsPlayerInRangeOfPoint(playerid, 2.0, -549.0232,-1529.3276,8.9809)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -549.6715,-1533.7283,8.7953) || IsPlayerInRangeOfPoint(playerid, 2.0, -558.9280,-1533.8259,8.8202)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -558.4121,-1528.9303,9.0045) || IsPlayerInRangeOfPoint(playerid, 2.0, -558.2546,-1524.2130,9.1527)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -566.2296,-1524.4420,9.3431) || IsPlayerInRangeOfPoint(playerid, 2.0, -566.6364,-1528.4276,9.4423)
					|| IsPlayerInRangeOfPoint(playerid, 2.0, -566.4801,-1533.8185,9.2719))
		            {
			  			if(GetPVarInt(playerid,"mushaobs") == 0)
						{
							SetPVarInt(playerid,"mushaobs",1);
							TogglePlayerControllable(playerid, 0);
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 1, 1, 0, 0);
							PlantationTimer[playerid] = SetTimerEx("WorkTimer", 15000, false, "i", playerid);
							qPlantation[playerid]++;
							if(qPlantation[playerid] == 10) QuestChecker(playerid);
						}
					}
					return true;
				}
			}
        }
        if(IsAGov(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
        {
            for(new i = 0; i < sizeof(InteractDoorLSPD_Positions); i ++)
            {
				if(!!LSPDDoors[i][dl_Stattus]) continue;
				if(IsPlayerInRangeOfPoint(playerid, 3.0, InteractDoorLSPD_Positions[i][0], InteractDoorLSPD_Positions[i][1], InteractDoorLSPD_Positions[i][2]))
				{
					LSPDDoors[i][dl_Stattus] = true;
					MoveDynamicObject(LSPDDoors[i][dl_DoorObject], InteractDoorLSPD_Positions[i][3], InteractDoorLSPD_Positions[i][4], InteractDoorLSPD_Positions[i][5], 3);
					SetTimerEx("InteractDoorLSPD_Timer", 3000, false, "i", i);
				    return true;
				}
            }
        }
   		for(new i = 0; i < sizeof(DrugObj); i ++)
		{
		    new Float:x, Float:y, Float:z;
		    GetDynamicObjectPos(DrugObj[i], x, y, z);
		    if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
			{
			    if(marixuana[playerid] == 0)
			    {
					new Float:health;
					GetPlayerHealth(playerid, health);
					if(health <= 90.0)
					{
					    SetPlayerHealth(playerid, health+10);
					}
					SetPlayerTime(playerid, 23,0);
					SetPlayerWeather(playerid, -67);
					SetPlayerDrunkLevel(playerid, 40000);
					ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1);
					SetTimerEx("AddictionTimer", 20000, false, "d", playerid);
					marixuana[playerid] = 1;
				}
				return true;
			}
		}
        for(new i = 0; i < TotalBankomat; i ++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 4.0, BankomatInfo[i][BankomatPosX], BankomatInfo[i][BankomatPosY], BankomatInfo[i][BankomatPosZ]))
            {
                if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return false;
                if(BankomatInfo[i][BankomatMoney] <= 0)
                {
                    senderror(playerid, "Es Bankomati Ar Mushaobs !");
                    return true;
                }
                ShowPlayerATMDialog(playerid);
                SetPVarInt(playerid, "BankomatID", i);
                //ShowBankomat(playerid, i);
                return true;
            }
        }
        return true;
    }
    if(newkeys == KEY_CROUCH)
    {
		if(IsPlayerInRangeOfPoint(playerid, 70.0, 2126.3506, 1398.5797, 10.5287))
	    {
	        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			for(new c = 0; c <= TotalCar; c++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, CarInfo[c][CarPosX], CarInfo[c][CarPosY], CarInfo[c][CarPosZ]))
			    {
		    	    if(caridhouse[playerid] == -1) return senderror(playerid, "Tkven Ar Gyavt Transporti!");
					new query[128];
					format(query, sizeof(query),"SELECT * FROM `cars` WHERE Owner = '%s' AND `ForSale` = 1", Name(playerid));
					mysql_query(connect, query);
					new rows;
					cache_get_row_count(rows);
					if(rows) return senderror(playerid, "Tkveni Transporti Ukve Dgas Gasayidad!");
                    if(CarInfo[c][CarStatus] == 1) return senderror(playerid, "Es Adgili Dakavebulia!");
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
					{
					    format(Salon_String, sizeof(Salon_String), "{FFFFFF}Model: {3399FF}%s\n{FFFFFF}Sadgomis Fasi: {3399FF}5.000$\n{FFFFFF}Tkveni Transporti Gayidvashi Ikneba: {3399FF}1{FFFFFF}Saati\n\n{FFFFFF}Miutitet Transportis Fasi Da Daachiret: {3399FF}'Shemdeg'{FFFFFF}s", GetVehicleName(GetVehicleModel(caridhouse[playerid])));
					    ShowPlayerDialog(playerid, 112, DIALOG_STYLE_INPUT, "{3399FF}AutoSalon", Salon_String, "Shemdeg", "Daxurva");
					}
					SetPVarInt(playerid, "CarPosID", c);
				}
			}
		}
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 1372.3453,-1771.2546,14.0603)
		|| IsPlayerInRangeOfPoint(playerid, 10.0, 1394.7490,-1163.4434,23.6495)
		|| IsPlayerInRangeOfPoint(playerid, 10.0, 1009.9204,-1357.5983,13.2453))
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	        {
		    	new Float: VehicleHP;
				GetVehicleHealth(GetPlayerVehicleID(playerid), VehicleHP);
				if(VehicleHP == 999) return sendinfo(playerid, "Tkveni Transporti Ar Sachiroebs Sheketebas");
		        if(PlayerInfo[playerid][pCash] < RepairPrice) return format(gstr, sizeof(gstr), "{FF4545}[Shecdoma] {FFFFFF}Tkven Ar Gakvt Sakmarisi Raodenobis Tanxa, Sachiroa: %d$", RepairPrice), SendClientMessage(playerid, COLOR_WHITE, gstr);
		        PlayerInfo[playerid][pCash] -= RepairPrice;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				format(gstr, sizeof(gstr), "~r~-%d$", RepairPrice);
				GameTextForPlayer(playerid, gstr, 1000, 1);
				RepairVehicle(GetPlayerVehicleID(playerid));
				SetVehicleHealth(GetPlayerVehicleID(playerid), 999.0);
				PlayerPlaySound(playerid, SOUND_REPAIR, 0.0, 0.0, 0.0);
				format(log_str, sizeof(log_str), "%s'm(a) Sheaketa Transporti Da Gadaixada: %d$", Name(playerid), RepairPrice);
				CreateLog("Money", log_str);
				return true;
				//CityHallBank += RepairPrice / 5;
				//SaveFracBank();
			}
	    }
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			if(IsPlayerInRangeOfPoint(playerid, 7.0, TUNE_ENTER_POSITION))
			{
				if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return senderror2(playerid, "Tkven Ar Zixart Tkvens Transportshi");
				SendPlayerToTune(playerid);
			    return true;
			}
	    }
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsPlayerInRangeOfPoint(playerid, 9.0, 2346.9575, 789.8443, 1009.4282))
	    {
	     	for(new i = 1; i <= TotalHouse; i ++)
		    {
				if(GetPlayerVirtualWorld(playerid) == i+11)
				{
				    new vehicleid = GetPlayerVehicleID(playerid);
				    SetVehiclePos(vehicleid, HouseInfo[i][hCarPosition][0], HouseInfo[i][hCarPosition][1], HouseInfo[i][hCarPosition][2]);
				    SetVehicleZAngle(vehicleid, HouseInfo[i][hCarPosition][3]);
				    SetPlayerInterior(playerid, 0);
				    SetPlayerVirtualWorld(playerid, 0);
   			 		LinkVehicleToInterior(vehicleid, 0);
			 		SetVehicleVirtualWorld(vehicleid, 0);
		            return true;
	            }
		    }
	    }
        return true;
    }
    return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(DelayPickup[playerid] > gettime()) return true;
    DelayPickup[playerid] = gettime()+3;
	if(pickupid == TrailerInvite)
	{
	    if(PlayerInfo[playerid][pJob] != 3) return senderror(playerid,"Trailer Company - Tkven Ar Gakvt Lienzia Mushaobis , Aiget Meriashi Licenzia !");
 		new ylesstr[150];
		format(ylesstr, sizeof(ylesstr), "Tkven Iwkebt Mushaobas Trailers Company'shi , Sadac Mogiwevt\nGadazidot Sxvadasxva Tvirtebi Qalaqidan Qalaqshi\nAm Kvelafrit Miigebt Shesabamis Nazgaurebas !\nTanaxma Xart Rom Daiwkot Mushaoba?!", Name(playerid));
		ShowPlayerDialog(playerid, 3316, DIALOG_STYLE_MSGBOX, "{8FD73F}Trailers {FFFFFF}Company", ylesstr, "Diax", "Ara");
		return true;
	}
	if(pickupid == CreateFamilyPic)
	{
		if(lastDialogID[playerid] == -1)
		{
	    	if(PlayerInfo[playerid][pFamilyMember] > 0) return sendinfo(playerid, "Tkven Ukve Imyofebit Family'shi!");
			new familystr[400];
			format(familystr, sizeof(familystr), "{FFFFFF}Mogesalmebit, Chven Dagexmarebit Family's Shekmnashi\nMiutitet Tkventvis Misagebi Family Name\n\n\t{FF9900}-{FFFFFF} Fasi: 500.000$\n\t{FF9900}-{FFFFFF} Minimum: 6Simbolo\n\t{FF9900}-{FFFFFF} Maxsimum: 16Simbolo\n\t{FF9900}-{FFFFFF} Tkvens Mier Sheyvanili Saxeli Sheicavs Ucxo Simboloebs");
			ShowPlayerDialog(playerid, 9922, DIALOG_STYLE_INPUT, "{FF9900}Family Registration", familystr, "Shemdeg", "Daxurva");
		}
		return true;
	}
	if(pickupid == hospitalHP)
	{
	    if(GetPVarInt(playerid, "Surgery") == 1) return true;
		new Float:hp;
		GetPlayerHealth(playerid, hp);
		if(hp > 90) return senderror(playerid, "Tkven Ar Gchirdebat Mkurnaloba");
		SetPVarInt(playerid, "Surgery", 1);
		PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	    return true;
	}
	if(pickupid == lspdlift[0])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 1200.1445,1335.7585,3014.4912, 1500);
		SetPlayerFacingAngle(playerid, 269.9536);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == lspdlift[1])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 1196.8384,1335.8418,3011.0005, 1500);
		SetPlayerFacingAngle(playerid, 265.4648);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	//Meore Sartuli Lift
	if(pickupid == lspdlift[2])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 654.2930,1389.3125,3020.8884, 1500);
		SetPlayerFacingAngle(playerid, 179.5016);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == lspdlift[3])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 1217.5311,1335.7070,3014.4912, 1500);
		SetPlayerFacingAngle(playerid, 88.7199);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	//Iaragebis Pickup
	if(pickupid == lspdlift[4])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 1221.0658,1349.9437,3011.0005, 1500);
		SetPlayerFacingAngle(playerid, 276.7579);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == lspdlift[5])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 1219.2732,1344.8951,3011.0005, 1500);
		SetPlayerFacingAngle(playerid, 176.7644);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == lspdEx[0])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerPosEx(playerid, 1209.8638,1334.2909,3011.0005, 1500);
		SetPlayerFacingAngle(playerid, 357.5855);
		SetPlayerVirtualWorld(playerid, 5);
        SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == lspdEx[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPosEx(playerid, 1552.8159, -1675.4498, 16.1953, 1500);
		SetPlayerFacingAngle(playerid, 90);
		SetPlayerVirtualWorld(playerid, 0);
        SetCameraBehindPlayer(playerid);
		return true;
	}
    if(pickupid == fbiEx[0])
	{
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid, 941.3560, -1744.0297, 13.5469, 1000);
		SetPlayerFacingAngle(playerid, 125.0);
        SetCameraBehindPlayer(playerid);
        return true;
	}
    if(pickupid == fbiEx[1])
	{
        SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 4);
		SetPlayerPosEx(playerid, 1473.3756, 256.4043, 1000.9760, 2000);
		SetPlayerFacingAngle(playerid, 0.0);
        SetCameraBehindPlayer(playerid);
        return true;
	}
 	if(pickupid == fbiLift[0])
	{
		SetPlayerPosEx(playerid, 1477.7710, 267.5779, 1013.5150, 1000);
		SetPlayerFacingAngle(playerid, 125.0);
        SetCameraBehindPlayer(playerid);
        return true;
	}
	if(pickupid == fbiLift[1])
	{
		SetPlayerPosEx(playerid, 1475.5759, 267.9344, 1000.9760, 1000);
		SetPlayerFacingAngle(playerid, 140.0);
        SetCameraBehindPlayer(playerid);
        return true;
	}
    if(pickupid == armyEx[0])
    {
		SetPlayerPosEx(playerid, 2731.1416, -2451.4807, 17.5937, 1500);
		SetPlayerFacingAngle(playerid, 272.3384);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
        SetCameraBehindPlayer(playerid);
        return true;
    }
    if(pickupid == armyEx[1])
    {
		SetPlayerPosEx(playerid, 316.3024, -168.2386, 999.5938, 2000);
		SetPlayerFacingAngle(playerid, 1.1695);
		SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid, 3);
        SetCameraBehindPlayer(playerid);
        return true;
	}
	if(pickupid == medicss[0])
	{
		SetPlayerInterior(playerid, 9);
		SetPlayerPosEx(playerid, -50.8487, 155.6024, 999.0569, 2000);
		SetPlayerFacingAngle(playerid, 180.0);
		SetPlayerVirtualWorld(playerid, 15);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	else if(pickupid == medicss[1])
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
		if(PlayerInfo[playerid][pForm] != FRACTION_MEDIC && hp < 95) return SendClientMessage(playerid, COLOR_GREEN, "[Hospital]{BDBDBD} Tkven Ar Xart Sakmarisad Janmrteli Rom Datovot Savaadmkofo");
		SetPlayerInterior(playerid, 0);
		SetPlayerPosEx(playerid, 1176.2983, -1323.4597, 14.0144, 1000);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
    if(pickupid == autoschoolEx[0])
    {
		SetPlayerPosEx(playerid,1168.7798,-1321.9189,1221.6130, 1000);
		SetPlayerFacingAngle(playerid, 271.0335);
	    SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerInterior(playerid, 3);
	    SetPVarInt(playerid, "AntiBreik", 1);
	    SetCameraBehindPlayer(playerid);
        return true;
    }
    if(pickupid == autoschoolEx[1])
    {
		SetPlayerPosEx(playerid, 1109.4069,-1677.9524,13.6528, 1000);
		SetPlayerFacingAngle(playerid, 271.9317);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
        return true;
    }
    if(pickupid == parashuti)
	{
	    GivePlayerWeapon(playerid, 46, 1);
		SetPlayerPos(playerid, 1963.6796, -2273.9431, 13.5469+500);
        return true;
	}
	if(pickupid == BankSafePic)
	{
		if(BankInfo[doorDestroyed] == false) return SpawnPlayer(playerid);
		if(BankInfo[isRobbed] == true) return senderror(playerid, "Bankis Sacavi Ukve Gatanilia!");
		SetPlayerAttachedObject(playerid, 8, 1550, 1, 0,-0.25,0,0,45,0);
		SendClientMessage(playerid, COLOR_WHITE, "Tkven Aiget Fuli Bankidan");
		IsBag[playerid] = 1;
		BagTimer[playerid] = SetTimerEx("GiveBankCash" , 120000, false, "d", playerid);
		BankInfo[isRobbed] = true;
	}
    if(pickupid == clothes4dr)
	{
		if(KazinoDuty[playerid] == 0)
		{
  			if(PlayerInfo[playerid][pSex]== 1)
     		{
				SetPlayerSkin(playerid, 171);
              	KazinoDuty[playerid] = 1;
         	}
          	else
           	{
				SetPlayerSkin(playerid, 11);
             	KazinoDuty[playerid] = 1;
            }
     	}
     	else
      	{
       		KazinoDuty[playerid] = 0;
         	SetPlayerSkinEx(playerid);
       	}
        return true;
	}
	if(pickupid == marenter)
	{
		SetPlayerPosEx(playerid, 1417.0626, -35.6385, 1000.9170, 2500);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 40);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == marexit)
	{
		SetPlayerPosEx(playerid, 1480.5494, -1769.8845, 18.7958, 1000);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == bankPic[0])
	{
		SetPlayerPosEx(playerid, 1495.4050, -1282.3689, 14.5568, 700);
		SetPlayerFacingAngle(playerid, 180.0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == bankPic[1])
	{
		SetPlayerPos(playerid,1398.0267,-1674.0280,39.5649);
		SetPlayerFacingAngle(playerid, 180.7531);
		//SetPlayerPosEx(playerid, 1319.3981 ,12.4927, 2068.5129, 1500);
		//SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerInterior(playerid, 1);
		//SetPlayerVirtualWorld(playerid, 41);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == gunPic[0])
	{
		SetPlayerPosEx(playerid, 1363.8843,-1279.3359,13.5469, 700);
		SetPlayerFacingAngle(playerid, 90.6517);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == gunPic[1])
	{
	    if(PlayerInfo[playerid][pLicense][LICENSE_GUN] == 0) return senderror2(playerid, "Tkven Ar Gakvt Iaragis Licenzia! Ris Gamoc Ver Shexvalt Iaragebis Magaziashi");
		SetPlayerPosEx(playerid,-727.7147,1449.3077,-90.5046, 1000);
		SetPlayerFacingAngle(playerid, 267.7227);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == sacavi[0])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 43);
		SetPlayerPosEx(playerid, 1993.7693, 1827.2533, 1003.9677, 1500);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
 	if(pickupid == sacavi[1])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 41);
		SetPlayerPosEx(playerid, 1313.4269, 16.3058, 2068.5205, 1500);
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
 	if(pickupid == WFPickupEx[0])
    {
        SetPlayerInterior(playerid, 2);
        SetPlayerVirtualWorld(playerid, 5);
        SetPlayerPosEx(playerid, 2575.3992, -1290.1184, 1044.1250);
        SetPlayerFacingAngle(playerid, 175.0);
        SetCameraBehindPlayer(playerid);
        return true;
    }
    if(pickupid == WFPickupEx[1])
    {
		if(jobID[playerid] != JOB_NONE) return senderror(playerid, "Gamoicvalet Samushao Forma !");
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerPosEx(playerid, 1327.9768, -1272.9449, 13.5469, 1000);
        SetPlayerFacingAngle(playerid, 180.0);
        SetCameraBehindPlayer(playerid);
        return true;
    }
    if(WFTake[0] <= pickupid <= WFTake[5])
    {
        if(jobID[playerid] == JOB_WEAPON_FACTORY && GetPVarInt(playerid, "WeaponFactory") == 0)
        {
            SetPlayerAttachedObject(playerid, 0, 18644, 5,0.078999, 0.042999, -0.012999, -3.299995, 0.000000, 0.000000);
		    SetPVarInt(playerid, "WeaponFactory", 1);
        }
        return true;
    }
 	if(pickupid == ballaspic[0])
    {
		SetPlayerPosEx(playerid, 2648.5203,-2021.9779,13.5469);
		SetPlayerFacingAngle(playerid, 91.6560);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return true;
    }
    if(pickupid == ballaspic[1])
    {
        if(PlayerInfo[playerid][pMember] == FRACTION_BALLAS)
		{
			SetPlayerPosEx(playerid, 318.5459,1116.8138,1083.8828);
			SetPlayerFacingAngle(playerid, 0.9487);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 10);
		}
		else sendinfo(playerid, "Karebi Chaketilia");
		return true;
	}
	if(pickupid == vagospic[0])
    {
		SetPlayerPosEx(playerid, 2756.2783,-1180.8395,69.3954);
		SetPlayerFacingAngle(playerid, 0.5747);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return true;
    }
    if(pickupid == vagospic[1])
    {
        if(PlayerInfo[playerid][pMember] == FRACTION_VAGOS)
		{
			SetPlayerPosEx(playerid, 318.5459,1116.8138,1083.8828);
			SetPlayerFacingAngle(playerid, 0.9487);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 11);
		}
		else sendinfo(playerid, "Karebi Chaketilia");
		return true;
	}
	if(pickupid == grovepic[0])
    {
		SetPlayerPosEx(playerid, 2495.1333,-1687.2347,13.5148);
		SetPlayerFacingAngle(playerid, 4.4213);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return true;
    }
   	if(pickupid == aztecapic[0])
    {
		SetPlayerPosEx(playerid, 1667.5074,-2108.9812,13.5469);
		SetPlayerFacingAngle(playerid, 181.5165);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return true;
    }
    if(pickupid == aztecapic[1])
    {
        if(PlayerInfo[playerid][pMember] == FRACTION_AZTEC)
		{
			SetPlayerPosEx(playerid, 318.5459,1116.8138,1083.8828);
			SetPlayerFacingAngle(playerid, 0.9487);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 12);
		}
		else sendinfo(playerid, "Karebi Chaketilia");
		return true;
	}
    if(pickupid == grovepic[1])
    {
        if(PlayerInfo[playerid][pMember] == FRACTION_GROVE)
		{
			SetPlayerPosEx(playerid, 318.5459,1116.8138,1083.8828);
			SetPlayerFacingAngle(playerid, 0.9487);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 13);
		}
		else sendinfo(playerid, "Karebi Chaketilia");
		return true;
	}
	if(pickupid == rifapic[0])
    {
		SetPlayerPosEx(playerid, 2185.6870,-1812.8878,13.5573);
		SetPlayerFacingAngle(playerid, 2.5831);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return true;
    }
    if(pickupid == rifapic[1])
    {
        if(PlayerInfo[playerid][pMember] == FRACTION_RIFA)
		{
			SetPlayerPosEx(playerid, 318.5459,1116.8138,1083.8828);
			SetPlayerFacingAngle(playerid, 0.9487);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 14);
		}
		else sendinfo(playerid, "Karebi Chaketilia");
		return true;
	}
 	if(pickupid == lcnpic[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2483.6985, 1527.4386, 11.1531);
		SetPlayerFacingAngle(playerid, 325.7496);
		SetPlayerVirtualWorld(playerid, 0);
		SetPVarInt(playerid, "AntiCheatMessageTimer", 2);
	}
	if(pickupid == lcnpic[1])
	{
	   	if(PlayerInfo[playerid][pMember] == FRACTION_LCN)
		{
			SetPlayerInterior(playerid, 8);
			SetPlayerPosEx(playerid, -42.5222,1407.6021,1084.4297);
			SetPlayerFacingAngle(playerid, 359.9034);
			SetPlayerVirtualWorld(playerid, FractionInfo[FRACTION_LCN][frac_VirtualWorld]);
		}
		else sendinfo(playerid, "Karebi Chaketilia");
		return true;
	}
    if(pickupid == yakuzapic[1])
	{
		if(PlayerInfo[playerid][pMember] == FRACTION_YAKUZA)
		{
			SetPlayerInterior(playerid, 8);
			SetPlayerVirtualWorld(playerid, FractionInfo[FRACTION_YAKUZA][frac_VirtualWorld]);
			SetPlayerPosEx(playerid, -42.5222,1407.6021,1084.4297);
			SetPlayerFacingAngle(playerid, 359.9034);
		}
		else sendinfo(playerid, "Karebi Daketilia");
		return true;
	}
	if(pickupid == yakuzapic[0])
	{
	    SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1460.4700, 2773.7063, 10.8203);
		SetPlayerFacingAngle(playerid, 263.4767);
		return true;
	}
	if(pickupid == rmpic[1])
	{
	   	if(PlayerInfo[playerid][pMember] == FRACTION_RM)
		{
			SetPlayerInterior(playerid, 8);
			SetPlayerPosEx(playerid, -42.5222,1407.6021,1084.4297);
			SetPlayerFacingAngle(playerid, 359.9034);
			SetPlayerVirtualWorld(playerid, FractionInfo[FRACTION_RM][frac_VirtualWorld]);
		}
		else sendinfo(playerid, "Karebi Daketilia");
		return true;
	}
 	if(pickupid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,941.3911,1732.9049,8.8516);
		SetPlayerFacingAngle(playerid, 270.8087);
		SetPlayerVirtualWorld(playerid,0);
		return true;
	}
 	if(pickupid == hamcvhod)
	{
		SetPlayerInterior(playerid, 11);
		SetPlayerVirtualWorld(playerid, 16);
		SetPlayerPosEx(playerid, 502.0615,-70.1586,998.7578, 1000);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
 	if(pickupid == hamcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPosEx(playerid, 681.4176,-476.4924,16.3359, 1000);
		SetPlayerFacingAngle(playerid, 180.0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
 	if(pickupid == lspic[0])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPosEx(playerid, 2830.6372, 1671.4347, 2001.0859, 1000);
		SetPlayerFacingAngle(playerid, 179.6393);
		SetPlayerVirtualWorld(playerid, 17);
		SetCameraBehindPlayer(playerid);
		return true;
	}
 	if(pickupid == lspic[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPosEx(playerid, 734.7272, -1349.0743, 13.5084, 500);
		SetPlayerFacingAngle(playerid, 270.0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(pickupid == Learn_Fighting)
	{
	    ShowPlayerDialog(playerid, 67, DIALOG_STYLE_LIST, "{ffffff}G.Y.M.","{ffffff}[1] - Stop Learning\n[2] - Learn Box\n[3] - Learn Kick-Boxing\n[4] - Learn Kung-Fu", "Select", "Exit");
	    return true;
	}
	if(pickupid == GYMPickup[0])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPosEx(playerid, 772.1135, -3.4835, 1000.7291, 1000);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerVirtualWorld(playerid, 35);
		SetCameraBehindPlayer(playerid);
		DisablePlayerCheckpoint(playerid);
		return true;
	}
	if(pickupid == GYMPickup[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPosEx(playerid, 2227.6135, -1722.7098, 13.5546, 1000);
		SetPlayerFacingAngle(playerid, 120.0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		DisablePlayerCheckpoint(playerid);
		return true;
	}
 	/*if(pickupid == AutoSackPickup)
    {
        if(CountPlayerHouses(playerid) == 0) return senderror(playerid, "Ar Gakvt Saxli !");
        TogglePlayerControllable(playerid, false);
        RenewAutoSalon(playerid);
        new Float:x, Float:y, Float:z;
        GetVehiclePos(AutoSalonCar[0], x, y, z);
        SetPlayerCameraPos(playerid, x + 7, y, z + 1);
        SetPlayerCameraLookAt(playerid, x, y, z);
        AS_select[playerid] = 0;
        SetPlayerPos(playerid, 2154.3245,-1129.5869,25.6330);
        for(new i = 0; i < 9; i ++) {
            TextDrawShowForPlayer(playerid, Buy_TD[i]);
            if(i < 2) PlayerTextDrawShow(playerid, Buy_PTD[playerid][i]);
        }
        SelectTextDraw(playerid, C_blue);
        AutoSalon[playerid] = true;
        return true;
    }*/
    if(pickupid == ElectionPick || pickupid == ElectionPickX)
	{
	    if(lastDialogID[playerid] == -1)
	    {
	        if(ElectionON == 0) return sendinfo(playerid, "Am Droistvis Ar Mimdinareobs Archevnebi!");
	        if(PlayerInfo[playerid][pLevel] < 15) return sendinfo(playerid, "Archevnebshi Monawileobis Misagebad Sachiro Aris Minimum: 15Level");
	        new teststr[350];
			format(teststr, sizeof(teststr), "{FFFFFF}?\t{FFFFFF}Saxeli\t{FFFFFF}Partia\n%d\t%s\t%s\n%d\t%s\t%s\n%d\t%s\t%s", ElectionInfo[0][eNumber], ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[1][eNumber], ElectionInfo[1][eName], ElectionInfo[1][eParty],
			ElectionInfo[2][eNumber], ElectionInfo[2][eName], ElectionInfo[2][eParty]);
			ShowPlayerDialog(playerid, 3343, DIALOG_STYLE_TABLIST_HEADERS, "{8FD73F}Election{FFFFFF} | Choose Candidate", teststr, "Archeva", "Daxurva");
		}
		return true;
	}
    for(new i = 1; i <= TotalHouse; i ++)
    {
        if(pickupid == HouseInfo[i][hPickup])
        {
            new house_string[300];
            if(HouseInfo[i][hOwned] == 0)
            {
                format(house_string, sizeof(house_string), color_house"\n{369B5A}House ID:{ffffff} %d\n"color_house"Owner:{ffffff} %s\n"color_house"Price:{ffffff} %d$\n"color_house"Tax:{ffffff} %d$\n"color_house"Door:{ffffff} %s\n{819FF7}Class:{ffffff} %s\n"color_house"Garage:{ffffff} %s\n",HouseInfo[i][hID],HouseInfo[i][hOwner],HouseInfo[i][hPrice],HouseInfo[i][hTax],(HouseInfo[i][hLock]? ("Locked") : ("Opened")),GetClassName(HouseInfo[i][hClass]),(HouseInfo[i][hGarage]? ("Akvs") : ("Ar Akvs")));
                ShowPlayerDialog(playerid, 6, DIALOG_STYLE_MSGBOX, "House", house_string, "Buy", "Close");
            }
            else
            {
                format(house_string, sizeof(house_string), color_house"\n{369B5A}House ID:{ffffff} %d\n"color_house"Owner:{ffffff} %s\n"color_house"Price:{ffffff} %d$\n"color_house"Tax:{ffffff} %d$\n"color_house"Door:{ffffff} %s\n{819FF7}Class:{ffffff} %s\n"color_house"Garage:{ffffff} %s\n",HouseInfo[i][hID],HouseInfo[i][hOwner],HouseInfo[i][hPrice],HouseInfo[i][hTax],(HouseInfo[i][hLock]? ("Locked") : ("Opened")),GetClassName(HouseInfo[i][hClass]),(HouseInfo[i][hGarage]? ("Akvs") : ("Ar Akvs")));
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "House", house_string, "Enter", "Close");
            }
            return true;
        }
        if(pickupid == HouseInfo[i][hGaragePickup])
        {
			if(GetPlayerVirtualWorld(playerid) == i+11)
			{
	        	SetPlayerPosEx(playerid, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2], 2000);
	            SetPlayerInterior(playerid, HouseInfo[i][hInterior]);
	            SetPlayerVirtualWorld(playerid, i+11);
	            SetPVarInt(playerid, "HouseID", i);
	            SetTimerEx("FindHouseBug", 1000, false, "i", playerid);
	            DelayPickup[playerid] = gettime()+5;
	            return true;
            }
        }
        if(pickupid == HouseInfo[i][hInsidePickup])
        {
		//	ShowPlayerDialog(playerid, 84, DIALOG_STYLE_LIST, "House", "{f5b041}[1]{ffffff} Gasvla Quchashi", "Next", "Close");
			ShowPlayerDialog(playerid, 84, DIALOG_STYLE_LIST, "House", "{f5b041}[1]{ffffff} Gasvla Quchashi\n{f5b041}[2]{ffffff} Shesvla Garajshi", "Next", "Close");
            return true;
        }
    }
    for(new i = 1; i <= TotalBizz; i ++)
    {
        if(pickupid == BizzInfo[i][bPickup])
        {
            SetPVarInt(playerid, "bizid", i);
            new biz_str[128];
            if(!BizzInfo[i][bOwned])
            {
                format(biz_str, sizeof(biz_str), color_bizz"[1]{ffffff} Interieris Naxva\n"color_bizz"[2]{ffffff} Biznesis Shedzena %d$",BizzInfo[i][bPrice]);
                ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "Bussiness", biz_str, "Action", "Exit");
                return true;
            }
            else
            {
                if(BizzInfo[i][bLock] == 1 && PlayerInfo[playerid][pBizz] != i)
                {
                    GameTextForPlayer(playerid, "~r~locked", 3000, 1);
                    return true;
                }
                if(BizzInfo[i][bType] == 1) // 24/7
                {
                    SetPlayerPosEx(playerid, BizzInfo[i][bEnteredPos][0], BizzInfo[i][bEnteredPos][1], BizzInfo[i][bEnteredPos][2], 2000);
                    SetPlayerInterior(playerid, BizzInfo[i][bInterior]);
                    SetPlayerVirtualWorld(playerid, i+22);
                    SetPlayerFacingAngle(playerid, BizzInfo[i][bEnteredAngle]);
                    SetCameraBehindPlayer(playerid);
                    SetTimerEx("FindBizzBug", 1000, false, "i", playerid);
                    return true;
                }
                if(EnterBizz[playerid] == i)
                {
                    SetPlayerPosEx(playerid, BizzInfo[i][bEnteredPos][0], BizzInfo[i][bEnteredPos][1], BizzInfo[i][bEnteredPos][2], 2000);
                    SetPlayerInterior(playerid, BizzInfo[i][bInterior]);
                    SetPlayerVirtualWorld(playerid, i+22);
                    SetPlayerFacingAngle(playerid, BizzInfo[i][bEnteredAngle]);
                    SetCameraBehindPlayer(playerid);
                    SetTimerEx("FindBizzBug", 1000, false, "i", playerid);
                }
                if(EnterBizz[playerid] == i) continue;
                if(PlayerInfo[playerid][pBizz] != i)
                {
                    format(biz_str, sizeof(biz_str), "Shesvlis Fasia: "color_bizz"%d$",BizzInfo[i][bEnterPrice]);
                    ShowPlayerDialog(playerid, 15, DIALOG_STYLE_MSGBOX, "Bussiness", biz_str, "Enter", "Close");
                    return true;
                }
            }
            return true;
        }
        if(pickupid == BizzInfo[i][bExitPickup])
        {
            SetPlayerPosEx(playerid, BizzInfo[i][bExitedPos][0], BizzInfo[i][bExitedPos][1], BizzInfo[i][bExitedPos][2], 2000);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerFacingAngle(playerid, BizzInfo[i][bExitedAngle]);
            SetCameraBehindPlayer(playerid);
            return true;
        }
        if(pickupid == BizzInfo[i][bBarPickup])
        {
            if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2])) continue;
            switch(BizzInfo[i][bType])
            {
                case 2: GameTextForPlayer(playerid, ":~g~\"/eat\"", 5000, 3);
                case 3: GameTextForPlayer(playerid, ":~g~\"/drink\"", 5000, 3);
            }
            return true;
        }
    }
    for(new i = 1; i < MAX_MANSION; i ++)
    {
		if(MansionInfo[i][mID] == 0) continue;
        if(pickupid == MansionInfo[i][mEnterPickup])
        {
            if(MansionInfo[i][mOwned])
            {
				if(p_family_id != MansionInfo[i][mFamily])
				{
				    if(MansionInfo[i][mLock] == 1)
				    {
				        senderror2(playerid, "Karebi Daketilia");
				    	GameTextForPlayer(playerid, "~r~locked", 3000, 1);
				        return true;
				    }
				}
 			    SetPlayerPosEx(playerid, MansionInfo[i][mExitPos][0], MansionInfo[i][mExitPos][1], MansionInfo[i][mExitPos][2], 2000);
			    SetPlayerFacingAngle(playerid, MansionInfo[i][mExitPos][3]);
			    SetPlayerVirtualWorld(playerid, i+55);
			    SetPlayerInterior(playerid, 1);
			    SetCameraBehindPlayer(playerid);
            }
            else
            {
  		        new mansion_str[250];
		        format(mansion_str, sizeof(mansion_str), "\n{FFFFFF}Mansion ID{48c9b0}%d\n{FFFFFF}Price: {48c9b0}%d$\n\n{FFFFFF}Mansionis Shesadzenad Sachiroa Flobdet Family's\nAdgilis Shedzenis Shemtxvevashi Tkven Shedzlebt Family'stvis {48c9b0}%d{FFFFFF}Transportis Shedzenas\n", MansionInfo[i][mID], MansionInfo[i][mPrice], MAX_MANSION_CAR);
		    	ShowPlayerDialog(playerid, 92, DIALOG_STYLE_MSGBOX, "{48c9b0}Mansion{FFFFFF} | Buy", mansion_str, "Buy", "Close");
				SetPVarInt(playerid, "MansionID", i);
            }
            return true;
        }
        if(pickupid == MansionInfo[i][mExitPickup])
        {
		    SetPlayerPosEx(playerid, MansionInfo[i][mEnterPos][0], MansionInfo[i][mEnterPos][1], MansionInfo[i][mEnterPos][2], 2000);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPlayerInterior(playerid, 0);
		    SetCameraBehindPlayer(playerid);
            return true;
        }
    }
    return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid == meriajobs)
	{
		ShowPlayerDialog(playerid, 55, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Vacations", "{ffffff}Job:\t{ffffff}Level:\n"color_bizz"[1]{ffffff} Samushaos Datoveba\n"color_bizz"[2]{ffffff} Farm\t1 LVL\n"color_bizz"[2]{ffffff} Taxi\t2 LVL\n"color_bizz"[3]{ffffff} Trailer\t5 LVL", "Start", "Exit");
		return true;
	}
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(WFTables[0] <= areaid <= WFTables[9])
	{
	    if(jobID[playerid] == JOB_WEAPON_FACTORY && jobStatus[playerid] == 0 && GetPVarInt(playerid, "WeaponFactory") == 1)
	    {
			TogglePlayerControllable(playerid, false);
			RemovePlayerAttachedObject(playerid, 2);
			ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.0,1,1,1,0,6000,0);
			SetPlayerAttachedObject(playerid,0,18644,5,0.078999,0.042999,-0.012999,-3.299995,0.000000,0.000000);
			SetPlayerAttachedObject(playerid,1,18635,6);
			SetTimerEx("WFTime", 5000 + Random(1000, 2000), false, "i", playerid);
            jobStatus[playerid] = 1;
            Animation[playerid] = true;
		}
	}
	for(new i = 1; i <= TotalRadar; i++)
	{
		if(areaid == RadarInfo[i][RadarArea])
		{
			if(GetPlayerState(playerid) == 2 && GetVehicleSpeed(GetPlayerVehicleID(playerid)) > RadarInfo[i][RadarSpeed] && !IsAGov(playerid))
			{
			    new SpeedCounter = 0, RadarSpeedCounter = 0, RadarPenalty = 0;
				SpeedCounter = GetVehicleSpeed(GetPlayerVehicleID(playerid));
				RadarSpeedCounter = RadarInfo[i][RadarSpeed];
				RadarPenalty = SpeedCounter-RadarSpeedCounter;
				if(PlayerInfo[playerid][pCash] >= RadarPenalty*RadarPrice)
				{
				    PlayerInfo[playerid][pCash] -= RadarPenalty*RadarPrice;
				    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				    format(other_string, sizeof(other_string), "{3399FF}[Police Camera] {FFFFFF}Tkven Gadaacharbet Sichkares: {DA3A3A}%d{FFFFFF}KM/H / {63BD4E}%d{FFFFFF}KM/H", GetVehicleSpeed(GetPlayerVehicleID(playerid)), RadarInfo[i][RadarSpeed]);
				    SendClientMessage(playerid, COLOR_WHITE, other_string);
				    format(other_string, sizeof(other_string), "{3399FF}[Police Camera] {FFFFFF}Ris Gamoc Dajarimdit Da Chamogechrat: {3399FF}%d$", RadarPenalty*RadarPrice);
				    SendClientMessage(playerid, COLOR_WHITE, other_string);
				    format(s_string, sizeof(s_string), "~r~-%d$", RadarPenalty*RadarPrice);
					GameTextForPlayer(playerid, s_string, 1000, 1);
					RadarMoney += RadarPenalty*RadarPrice;
					//CityHallBank += RadarPenalty*RadarPrice / 5;
					//SaveFracBank();
				}
				else if(PlayerInfo[playerid][pBank] >= RadarPenalty*RadarPrice)
				{
				    PlayerInfo[playerid][pBank] -= RadarPenalty*8;
				    PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
				    format(other_string, sizeof(other_string), "{3399FF}[Police Camera] {FFFFFF}Tkven Gadaacharbet Sichkares: {DA3A3A}%d{FFFFFF}KM/H / {63BD4E}%d{FFFFFF}KM/H", GetVehicleSpeed(GetPlayerVehicleID(playerid)), RadarInfo[i][RadarSpeed]);
				    SendClientMessage(playerid, COLOR_WHITE, other_string);
				    format(other_string, sizeof(other_string), "{3399FF}[Police Camera] {FFFFFF}Ris Gamoc Dajarimdit Da Chamogechrat Sabanko Angarishidan: {3399FF}%d$", RadarPenalty*RadarPrice);
				    SendClientMessage(playerid, COLOR_WHITE, other_string);
				    format(s_string, sizeof(s_string), "~r~-%d$", RadarPenalty*RadarPrice);
					GameTextForPlayer(playerid, s_string, 1000, 1);
					RadarMoney += RadarPenalty*RadarPrice;
					//CityHallBank += RadarPenalty*RadarPrice / 5;
					//SaveFracBank();
				}
			}
		}
	}
	if(ShaftArea[0] <= areaid <= ShaftArea[2])
	{
	    if(jobID[playerid] == JOB_SHAFT && GetPVarInt(playerid, "ShaftWork") == 0)
	    {
	        SetPVarInt(playerid, "ShaftWork", 1);
	        TogglePlayerControllable(playerid, false);
	        ApplyAnimation(playerid, "SWORD", "sword_4", 4.1, 1, 1, 1, 0, 0);
	        SetTimerEx("ShaftTimer", 6000+Random(100, 1500), false, "i", playerid);
	        Animation[playerid] = true;
		}
	}
	new state_ship = GetPlayerState(playerid), state_vehicle = GetPlayerVehicleID(playerid);
	foreach(new x:Player)
	{
		if(areaid == GetPVarInt(x,"Ships") && state_ship == PLAYER_STATE_DRIVER)
		{
			new panels, tires;
			GetVehicleDamageStatus(state_vehicle, panels, doorss, lightss, tires);
			UpdateVehicleDamageStatus(state_vehicle, panels, doorss, lightss, 15);
			GameTextForPlayer(playerid, "~r~stalling", 1000, 6);
			break;
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) return true;
	new Float:preview[4];
    for(new i = 0; i < MAX_DROP_ITEM; i ++)
    {
        if(DropInfo[i][d_Status] == 0) continue;
        if(areaid == DropInfo[i][d_Sphere])
        {
            new objid = GetItemIdByModel(DropInfo[i][d_Model]), str[32];
			switch(DropInfo[i][d_Model])
			{
			    case 1..311,12000..14939:
			    {
			    	format(str, 32, "Skin: %d", DropInfo[i][d_Model]);
				    PlayerTextDrawSetString(playerid, Pick_PTD[playerid][2], str);

		   			preview[0] = 0;
					preview[1] = 0;
					preview[2] = 0;
					preview[3] = 1;
			    }
				default:
				{
					if(objid && objid != -1)
					{
					    format(str, 32, "%s", GetItemName(DropInfo[i][d_Model]));
					    PlayerTextDrawSetString(playerid, Pick_PTD[playerid][2], str);

			   			preview[0] = ItemInfo[objid][item_preview][0];
						preview[1] = ItemInfo[objid][item_preview][1];
						preview[2] = ItemInfo[objid][item_preview][2];
						preview[3] = ItemInfo[objid][item_preview][3];
					}
				}
			}
			if(preview[3] == 0.0) preview[3] = 1.0;
			PlayerTextDrawSetPreviewRot(playerid, Pick_PTD[playerid][1], preview[0], preview[1], preview[2], preview[3]);
            PlayerTextDrawSetPreviewModel(playerid, Pick_PTD[playerid][1], DropInfo[i][d_Model]);
            for(new j = 0; j < 4; j ++)
            {
             	PlayerTextDrawShow(playerid, Pick_PTD[playerid][j]);
            }
            InvData[playerid][i_Near] = i;
        }
    }
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	InvData[playerid][i_Near] = -1;
    for(new j = 0; j < 4; j ++)
    {
    	PlayerTextDrawHide(playerid, Pick_PTD[playerid][j]);
    }
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
   	if(GetPVarInt(playerid, "MedicCall") == 1)
	{
 		foreach(new i:Player)
   		{
     		if(GetPVarInt(i, "MedicCall") == 1)
       		{
				SetPVarInt(i, "MedicCall", 0);
				DisablePlayerCheckpoint(i);
				return true;
    		}
    	}
	}
    switch(gCheckpoint[playerid])
    {
        case CHECKPOINT_NONE: return true;
        case CHECKPOINT_HOME:
        {
            gCheckpoint[playerid] = CHECKPOINT_NONE;
            DisablePlayerCheckpoint(playerid);
            GameTextForPlayer(playerid, "~g~~h~house reached", 5000, 1);
            if(GPS[playerid])
            {
                GPS[playerid] = false;
				if(gpsTimer[playerid] != -1)
				{
	   				KillTimer(gpsTimer[playerid]);
			   		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
				}
			}
            return true;
        }
        case CHECKPOINT_PRACTICE:
		{
		    return true;
		}
		case CHECKPOINT_GPS:
		{
		    GPS[playerid] = false;
            gCheckpoint[playerid] = CHECKPOINT_NONE;
            DisablePlayerCheckpoint(playerid);
            GameTextForPlayer(playerid, "~g~~h~location reached", 5000, 1);
			if(gpsTimer[playerid] != -1)
			{
   				KillTimer(gpsTimer[playerid]);
		   		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
			}
            return true;
		}
		case CHECKPOINT_WF:
		{
		    new str[100];
  			if(jobStatus[playerid] == 1)
	        {
	            new paying = Random(1000, 5000);
	            format(str, sizeof(str), "~g~~h~+%d$",paying);
	            GameTextForPlayer(playerid, str, 5000, 1);
	            jobCash[playerid] += paying*Boost2X;
	            jobAmount[playerid] ++;
	            jobStatus[playerid] = 0;
	            gCheckpoint[playerid] = CHECKPOINT_NONE;
	            DisablePlayerCheckpoint(playerid);
	            TogglePlayerControllable(playerid, true);
	            ClearAnimations(playerid);
	            SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
	            RemovePlayerAttachedObject(playerid, 0);
	            RemovePlayerAttachedObject(playerid, 1);
	            RemovePlayerAttachedObject(playerid, 2);
	            RemovePlayerAttachedObject(playerid, 3);
	            ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
	            format(str, sizeof(str), "[Weapon Factory]:{ffffff} Gadatanilia: %d",jobAmount[playerid]);
	            SendClientMessage(playerid, 0x8099B5FF, str);
	            SetPVarInt(playerid, "WeaponFactory", 0);
	            qFactory[playerid] ++;
	            if(qFactory[playerid] == 10) QuestChecker(playerid);
				PlayerInfo[playerid][pCashAmount] = jobAmount[playerid];
				PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
	        }
            return true;
		}
		case CHECKPOINT_TAXI:
		{
		    gCheckpoint[playerid] = CHECKPOINT_NONE;
		    TaxiPassenger[playerid] = -1;
		    DisablePlayerCheckpoint(playerid);
		    GameTextForPlayer(playerid, "~g~~h~passenger reached", 5000, 1);
		    return true;
		}
		case CHECKPOINT_SHAFT:
		{
		    new str[100];
		    if(GetPVarInt(playerid, "ShaftWork") == 2 && jobStatus[playerid] == 1)
		    {
	            new paying = Random(1000, 15000);
	            format(str, sizeof(str), "~g~~h~+%d$",paying);
	            GameTextForPlayer(playerid, str, 5000, 1);
	            jobCash[playerid] += paying*Boost2X;
	            jobAmount[playerid] ++;
	            jobStatus[playerid] = 0;
	            gCheckpoint[playerid] = CHECKPOINT_NONE;
	            DisablePlayerCheckpoint(playerid);
	            TogglePlayerControllable(playerid, true);
	            ClearAnimations(playerid);
	            SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
	            RemovePlayerAttachedObject(playerid, 0);
	            RemovePlayerAttachedObject(playerid, 1);
	            RemovePlayerAttachedObject(playerid, 2);
	            RemovePlayerAttachedObject(playerid, 3);
	            ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
	            format(str, sizeof(str), "[Shaft]:{ffffff} Gadatanilia: %d",jobAmount[playerid]);
	            SendClientMessage(playerid, 0x8099B5FF, str);
				qShaft[playerid] ++;
				if(qShaft[playerid] == 10) QuestChecker(playerid);
	            DisablePlayerCheckpoint(playerid);
				SetPVarInt(playerid, "ShaftWork", 0);
				PlayerInfo[playerid][pCashAmount] = jobAmount[playerid];
				PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
	        }
		}
		case CHECKPOINT_FINDHOUSE:
		{
  			gCheckpoint[playerid] = CHECKPOINT_NONE;
            DisablePlayerCheckpoint(playerid);
            GameTextForPlayer(playerid, "~g~~h~house reached", 5000, 1);
            if(GPS[playerid])
            {
                GPS[playerid] = false;
				if(gpsTimer[playerid] != -1)
				{
	   				KillTimer(gpsTimer[playerid]);
			   		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
				}
			}
            return true;
		}
		case CHECKPOINT_FINDBIZZ:
		{
  			gCheckpoint[playerid] = CHECKPOINT_NONE;
            DisablePlayerCheckpoint(playerid);
            GameTextForPlayer(playerid, "~g~~h~bussiness reached", 5000, 1);
            if(GPS[playerid])
            {
                GPS[playerid] = false;
				if(gpsTimer[playerid] != -1)
				{
	   				KillTimer(gpsTimer[playerid]);
			   		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
				}
			}
            return true;
		}
		case CHECKPOINT_FINDMANSION:
		{
			gCheckpoint[playerid] = CHECKPOINT_NONE;
            DisablePlayerCheckpoint(playerid);
            GameTextForPlayer(playerid, "~g~~h~mansion reached", 5000, 1);
            if(GPS[playerid])
            {
                GPS[playerid] = false;
				if(gpsTimer[playerid] != -1)
				{
	   				KillTimer(gpsTimer[playerid]);
			   		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
				}
			}
		    return true;
		}
    }
    return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
    switch(gCheckpoint[playerid])
    {
        case CHECKPOINT_PRACTICE:
        {
            AutoSchoolStatus[playerid] ++;
            if(AutoSchoolStatus[playerid] == sizeof(AutoSchoolPositions)-1)
            {
                AutoSchoolStatus[playerid] = -1;
                SetVehicleToRespawn(AutoSchoolCar[playerid]);
                SetVehicleHealth(AutoSchoolCar[playerid], 999);
                RepairVehicle(AutoSchoolCar[playerid]);
                AutoSchoolCar[playerid] = -1;
                SendClientMessage(playerid, COLOR_GREEN, "Tkven Warmatebit Aiget Martvis Mowmoba");
                DisablePlayerRaceCheckpoint(playerid);
				PlayerInfo[playerid][pLicense][LICENSE_CAR] = 1;
				PlayerUpdateData(playerid, "pLicenseCar", PlayerInfo[playerid][pLicense][LICENSE_CAR]);
				SetPlayerQuest(playerid, QUEST_CARLIC);
                return true;
            }
            SetPlayerAutoSchool(playerid, AutoSchoolStatus[playerid]);
            return true;
        }
    }
    return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(!isLogged[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
	    if(InvData[playerid][i_Usement])
	    {
	        HideInventoryUsement(playerid);
	        SelectTextDraw(playerid, 0xEC7063FF);
	        return true;
	    }
	    if(InvData[playerid][i_Opened])
	    {
			HidePlayerInventory(playerid);
	        return true;
	    }
        if(RentCarStatus[playerid])
        {
            HideRentCarMenu(playerid);
            return true;
        }
        if(SelectingCase[playerid])
	    {
			SelectCaseMove(playerid, false);
	        return true;
	    }
        if(SkinShopStatus[playerid])
        {
            RemovePlayerFromSkinShop(playerid);
            return true;
        }
        if(ReconInfo[playerid][rec_Player] != -1)
        {
            SelectTextDraw(playerid, COLOR_BLUE);
            return true;
        }
        if(SpawnStatus[playerid])
        {
            SendClientMessage(playerid, 0x0080C0FF, "[Shecdoma]:{ffffff} Airchiet Gachenis Adgili");
            SelectTextDraw(playerid, 0x0080C0FF);
            return true;
        }
        if(phoneOpen[playerid])
        {
			PhoneMove(playerid, false);
            return true;
        }
        if(JetXStatus[playerid])
	    {
	        JetXMoveToPlayer(playerid, false);
	        return true;
	    }
  		if(ReportOpen[playerid])
	    {
			HideReports(playerid);
			return true;
		}
  		/*if(AutoSalon[playerid] == true)
	    {
	        SelectTextDraw(playerid, C_blue);
	        return true;
	    }*/
	    if(TuneHasOn[playerid])
	    {
	        InvokePlayerFromTune(playerid);
			return true;
	    }
       	/*if(TakingPicture[playerid] == 1)
        {
            StopAnimation(playerid);
            SetCameraBehindPlayer(playerid);
            TakingPicture[playerid] = 0;
            PhoneMove(playerid, true);
            return true;
        }*/
        return true;
    }
    if(clickedid == car_TD[9]) HideAutoSalon(playerid);
	if(clickedid == car_TD[10])
	{
		if(isLogged[playerid])
		{
			if(PlayerInfo[playerid][pLevel] < 2)
			{
  			    senderror(playerid, "Transportis Shesadzenad Sachiro Aris 2 Level , Gamoikenet /quest!");
				return true;
  			}
    		if(CountPlayerHouses(playerid) == 0)
    		{
    		    senderror(playerid, "Tkven Ar Gakvt Saxli");
				
    		    return true;
    		}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "CarPrice")) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa Xelze!"), RemovePlayerFromVehicleEx(playerid);
			if(CountPlayerCars(playerid) >= 15) return senderror(playerid, "Tkven Ukve Gkavt Sakmarisi Mankanebi");
			if(GetModelCount(GetPVarInt(playerid, "CarID")) <= 0) return sendinfo(playerid, "Archeuli Transportis Limiti Amowurulia");
            SetCameraBehindPlayer(playerid);
            TogglePlayerControllable(playerid, true);
            AS_select[playerid] = 0;
			HideAutoSalon(playerid);
            //ResetVehicleComponents(playerid, listitem);
            CancelSelectTextDraw(playerid);
            GivePlayerCar(playerid, GetPVarInt(playerid, "CarID"));
            PlayerInfo[playerid][pCash] -= GetPVarInt(playerid, "CarPrice");
            caridhouse[playerid] = CreateVehicle(GetPVarInt(playerid, "CarID"), -1642.8579, 1224.2946, 6.7659, 314, 0, 0, 0, -1);
            SetVehicleHealth(caridhouse[playerid], 999.0);
            PutPlayerInVehicleEx(playerid, caridhouse[playerid], 0);
            SavePlayerData(playerid);
            //AutoSalon[playerid] = false;
			format(gstr, sizeof(gstr), "{63BD4E}[AutoSalon] {FFFFFF}Gilocavt! Tkven Sheidzinet: {63BD4E}%s{FFFFFF} / Fasi: {63BD4E}%d$", GetVehicleName(GetPVarInt(playerid, "CarID")), GetPVarInt(playerid, "CarPrice"));
			SendClientMessage(playerid, 0x63BD4EFF, gstr);
			GivePlayerExp(playerid, 2);
			format(log_str, sizeof(log_str), "%s'm(a) sheidzina avtoskolidan mankana %s - fasi %d", Name(playerid),GetVehicleName(GetPVarInt(playerid, "CarID")), GetPVarInt(playerid, "CarPrice"));
			CreateLog("Money", log_str);
			SetModelCount(GetPVarInt(playerid, "CarID"), 0);
		}
	    /*CarID[playerid] = AS_cars[AS_select[playerid]][0];
	    if(GetVehicleMoney(CarID[playerid]) > PlayerInfo[playerid][pCash]) return SendServerMessage(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
	   	format(YCMDstr, sizeof(YCMDstr), "[1] %s\n[2] %s\n[3] %s\n[4] %s",VehicleNames[PlayerInfo[playerid][pCar][0]-400],VehicleNames[PlayerInfo[playerid][pCar][1]-400],VehicleNames[PlayerInfo[playerid][pCar][2]-400],VehicleNames[PlayerInfo[playerid][pCar][3]-400]);
		ShowPlayerDialog(playerid, 7023, DIALOG_STYLE_LIST, "{ff0000}Buy Car{ffffff} | Choose", YCMDstr, "Buy", "Exit");
		PlayerInfo[playerid][pCash] -= GetVehicleMoney(CarID[playerid]);*/
		return true;
	}
	if(clickedid == car_TD[8])
	{
	    //AS_client[playerid]?sizeof(AS_cars_launcher):sizeof(AS_cars)-1
	    if(AS_car[playerid] != -1) DestroyVehicle(AS_car[playerid]);
	    new str[100];
		PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		if(AS_client[playerid])
		{
			if(AS_select[playerid] == sizeof(AS_cars_launcher)-1) AS_select[playerid] = 0;
			else AS_select[playerid] ++;
		}
		else
		{
			if(AS_select[playerid] == sizeof(AS_cars)-1) AS_select[playerid] = 0;
			else AS_select[playerid] ++;
		}
		format(str, sizeof(str), "%i/15", AS_select[playerid]);
		PlayerTextDrawSetString(playerid, car_PTD[playerid][4], str);
		AS_car[playerid] = -1;
		AS_car[playerid] = CreateVehicle(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], -1659.5378, 1215.1702, 13.3930, 233.0450, 1, 1, 1);
		format(str, sizeof(str), "%s",GetVehicleName(GetVehicleModel(AS_car[playerid])));
		PlayerTextDrawSetString(playerid, car_PTD[playerid][0], str);
		format(str, sizeof(str), "%i$", GetCarPrice(GetVehicleModel(AS_car[playerid])));
		PlayerTextDrawSetString(playerid, car_PTD[playerid][3], str);
		SetVehicleVirtualWorld(AS_car[playerid], GetPlayerVirtualWorld(playerid));
		PlayerTextDrawHide(playerid, car_PTD[playerid][1]);
		PlayerTextDrawTextSize(playerid, car_PTD[playerid][1], GetVehicleStatus(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], 0), 8.0000);
        PlayerTextDrawShow(playerid, car_PTD[playerid][1]);
       	PlayerTextDrawHide(playerid, car_PTD[playerid][2]);
		PlayerTextDrawTextSize(playerid, car_PTD[playerid][2], GetVehicleStatus(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], 1), 8.0000);
        PlayerTextDrawShow(playerid, car_PTD[playerid][2]);
        SetPVarInt(playerid, "CarID", AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0]);
        SetPVarInt(playerid, "CarPrice", GetCarPrice(GetVehicleModel(AS_car[playerid])));
        return true;
	}
	if(clickedid == car_TD[7])
	{
	    if(AS_car[playerid] != -1) DestroyVehicle(AS_car[playerid]);
 		new str[100];
		PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		
		if(AS_client[playerid])
		{
			if(AS_select[playerid] == 0) AS_select[playerid] = sizeof(AS_cars_launcher)-1;
			else AS_select[playerid] --;
		}
		else
		{
			if(AS_select[playerid] == 0) AS_select[playerid] = sizeof(AS_cars)-1;
			else AS_select[playerid] --;
		}
		format(str, sizeof(str), "%i/15", AS_select[playerid],sizeof(AS_cars));
		PlayerTextDrawSetString(playerid, car_PTD[playerid][4], str);
		AS_car[playerid] = -1;
		AS_car[playerid] = CreateVehicle(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], -1659.5378, 1215.1702, 13.3930, 233.0450, 1, 1, 1);
		format(str, sizeof(str), "%s",GetVehicleName(GetVehicleModel(AS_car[playerid])));
		PlayerTextDrawSetString(playerid, car_PTD[playerid][0], str);
		format(str, sizeof(str), "%i$", GetCarPrice(GetVehicleModel(AS_car[playerid])));
		PlayerTextDrawSetString(playerid, car_PTD[playerid][3], str);
		SetVehicleVirtualWorld(AS_car[playerid], GetPlayerVirtualWorld(playerid));
		PlayerTextDrawHide(playerid, car_PTD[playerid][1]);
		PlayerTextDrawTextSize(playerid, car_PTD[playerid][1], GetVehicleStatus(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], 0), 8.0000);
        PlayerTextDrawShow(playerid, car_PTD[playerid][1]);
       	PlayerTextDrawHide(playerid, car_PTD[playerid][2]);
		PlayerTextDrawTextSize(playerid, car_PTD[playerid][2], GetVehicleStatus(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], 1), 8.0000);
        PlayerTextDrawShow(playerid, car_PTD[playerid][2]);
        SetPVarInt(playerid, "CarID", AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0]);
        SetPVarInt(playerid, "CarPrice", GetCarPrice(GetVehicleModel(AS_car[playerid])));
        return true;
	}
    if(clickedid == Roulette_TD[5])
	{
     	if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
	    {
		    if(RollStatus[playerid] == true) return senderror(playerid, "Daelodet Ruletkis Dasrulebas");
		    SilverRL[playerid] = false;
		    GoldRL[playerid] = false;
			BronzeRL[playerid] = true;
			ClearRoulette(playerid);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][0], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][1], 1277);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][2], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][3], 120);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][4], 19941);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][5], 506);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][6], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][7], 471);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][8], 1277);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][9], 19941);
			for(new k; k != 11; k++) PlayerTextDrawShow(playerid, Roulette_PTD[playerid][k]);
			SetPVarInt(playerid,"TrualPrice", 5);
			Roll_Cell[playerid][0] = 1550;
			Roll_Cell[playerid][1] = 1277;
			Roll_Cell[playerid][2] = 1550;
			Roll_Cell[playerid][3] = 295;
			Roll_Cell[playerid][4] = 19941;
			Roll_Cell[playerid][5] = 506;
			Roll_Cell[playerid][6] = 1550;
			Roll_Cell[playerid][7] = 471;
			Roll_Cell[playerid][8] = 1277;
			Roll_Cell[playerid][9] = 19941;
		}
	}
	if(clickedid == Roulette_TD[7])
	{
		if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
	    {
			if(RollStatus[playerid] == true) return senderror(playerid, "Daelodet Ruletkis Dasrulebas");
	 		SilverRL[playerid] = true;
		    GoldRL[playerid] = false;
			BronzeRL[playerid] = false;
			ClearRoulette(playerid);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][0], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][1], 1277);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][2], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][3], 120);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][4], 19941);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][5], 468);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][6], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][7], 522);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][8], 1277);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][9], 19941);
			for(new k; k != 11; k++) PlayerTextDrawShow(playerid, Roulette_PTD[playerid][k]);
			SetPVarInt(playerid,"TrualPrice", 10);
			Roll_Cell[playerid][0] = 1550;
			Roll_Cell[playerid][1] = 1277;
			Roll_Cell[playerid][2] = 1550;
			Roll_Cell[playerid][3] = 110;
			Roll_Cell[playerid][4] = 19941;
			Roll_Cell[playerid][5] = 468;
			Roll_Cell[playerid][6] = 1550;
			Roll_Cell[playerid][7] = 522;
			Roll_Cell[playerid][8] = 1277;
			Roll_Cell[playerid][9] = 19941;
		}
		return true;
	}
	if(clickedid == Roulette_TD[8])
	{
		if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		{
			if(RollStatus[playerid] == true) return senderror(playerid, "Daelodet Ruletkis Dasrulebas");
	 		SilverRL[playerid] = false;
		    GoldRL[playerid] = true;
			BronzeRL[playerid] = false;
			ClearRoulette(playerid);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][0], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][1], 1277);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][2], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][3], 120);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][4], 19941);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][5], 12304);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][6], 1550);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][7], 12300);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][8], 1277);
			PlayerTextDrawSetPreviewModel(playerid, Roulette_PTD[playerid][9], 19941);
			for(new k; k != 11; k++) PlayerTextDrawShow(playerid, Roulette_PTD[playerid][k]);
			SetPVarInt(playerid,"TrualPrice", 15);
			Roll_Cell[playerid][0] = 1550;
			Roll_Cell[playerid][1] = 1277;
			Roll_Cell[playerid][2] = 1550;
			Roll_Cell[playerid][3] = 120;
			Roll_Cell[playerid][4] = 19941;
			Roll_Cell[playerid][5] = 12304;
			Roll_Cell[playerid][6] = 1550;
			Roll_Cell[playerid][7] = 463;
			Roll_Cell[playerid][8] = 12300;
			Roll_Cell[playerid][9] = 19941;
		}
		return true;
	}
    if(clickedid == Roulette_TD[12])
	{
		if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		{
			if(RollStatus[playerid] == true) return senderror(playerid, "Daelodet Ruletkis Dasrulebas");
			if(PlayerInfo[playerid][pGcoin] < GetPVarInt(playerid,"TrualPrice")) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Raodenobis G-COIN!");
	        if(Roll_Cell[playerid][0] == 0) return senderror(playerid, "Miutitet Ruletkis Tipi !");
	        Roll_Random[playerid] = 10 + random(15);
	        Roll_Count[playerid] = 0;
	        Roll_Time[playerid] = 0;
	        Roll_Timer[playerid] = SetTimerEx("Update_Roulette", 500, true, "ii", playerid, 1);
	        RollStatus[playerid] = true;
	        PlayerInfo[playerid][pGcoin] -= GetPVarInt(playerid,"TrualPrice");
	        PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
			GetAcces[playerid] = false;
		}
		return true;
	}
	if(clickedid == Roulette_TD[3])
	{
	    if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
	    {
			if(RollStatus[playerid] == true) return senderror(playerid, "Daelodet Ruletkis Dasrulebas");
		 	for(new t; t != 13; t++) TextDrawHideForPlayer(playerid, Roulette_TD[t]);
		  	for(new k; k != 11; k++) PlayerTextDrawHide(playerid, Roulette_PTD[playerid][k]);
		  	RouletON[playerid] = false;
		  	CancelSelectTextDraw(playerid);
		}
		return true;
	}
	if(_:clickedid == INVALID_TEXT_DRAW && RouletON[playerid] == true)
	{
		SelectTextDraw(playerid, 0x00FF00FF);
		return true;
	}
    if(clickedid == caseselect_TD[14] || clickedid == caseselect_TD[5])
    {
        if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
        //if(PlayerInfo[playerid][pLogin] == 0) return senderror(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia!");
		SelectCaseMove(playerid, false);
		SetTimerEx("ShowCaseMenu", 500, false, "ii", playerid, CASE_TYPE_SILVER);
        return true;
    }
    if(clickedid == caseselect_TD[15] || clickedid == caseselect_TD[6])
    {
        if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
        //if(PlayerInfo[playerid][pLogin] == 0) return senderror(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia!");
		SelectCaseMove(playerid, false);
		SetTimerEx("ShowCaseMenu", 500, false, "ii", playerid, CASE_TYPE_MAGIC);
        return true;
	}
 	if(clickedid == caseselect_TD[16] || clickedid == caseselect_TD[7])
    {
        if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
        //if(PlayerInfo[playerid][pLogin] == 0) return senderror(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia!");
		SelectCaseMove(playerid, false);
		SetTimerEx("ShowCaseMenu", 500, false, "ii", playerid, CASE_TYPE_TITANY);
        return true;
    }
    if(clickedid == cases_TD[7])
    {
        if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
        //if(PlayerInfo[playerid][pLogin] == 0) return senderror(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia!");
        if(!CaseRolling[playerid])
        {
        	ShowCaseMenu(playerid, -1);
        }
        return true;
    }
    if(clickedid == cases_TD[15])
    {
        if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
        //if(PlayerInfo[playerid][pLogin] == 0) return senderror(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia!");
		if(CaseRolling[playerid]) return true;
		if(PlayerInfo[playerid][pCases][SelectedCase[playerid]] <= 0)
		{
			format(YCMDstr, sizeof(YCMDstr), "[Case]{ffffff} Ar Gakvt %s Case",GetCaseName(SelectedCase[playerid]));
			SendClientMessage(playerid, 0x008040FF, YCMDstr);
			return true;
		}
        PlayerInfo[playerid][pCases][SelectedCase[playerid]] --;
		CaseRolling[playerid] = true;
		CaseRoll[playerid] ++;
		CaseRandomRoll[playerid] = Random(10, 25);
		SetTimerEx("CaseRollTime", CaseRoll[playerid]*100, false, "i", playerid);
		PlayerTextDrawHide(playerid, cases_PTD[playerid][9]);
		//SavePlayerAll(playerid);
        return true;
    }
   	if(clickedid == report_TD[3]) // Clear
    {
        if(PlayerInfo[playerid][pAdmin] < 10) return senderror2(playerid, "Tkven Ar Gakvt Amis Ufleba !");
		for(new i = 0; i < MAX_REPORT; i ++)
		{
			if(ReportInfo[i][rID] != -1)
			{
				DeleteReport(i);
			}
		}
		SendClientMessage(playerid, C_blue, "[Report]:{ffffff} Yvela Reporti Waishala");
        return true;
    }
    for(new i = 0; i < MAX_REPORT; i ++)
    {
		if(clickedid == reports_TD[i])
		{
		    if(ReportInfo[i][rID] == -1)
		    {
				senderror2(playerid, "Mititebul Slotshi Araa Reporti");
		        break;
		    }
		    new rep_str[256];
		    format(rep_str, sizeof(rep_str), c_blue"\nName:{ffffff} %s[%d]:\n\n"c_blue"Report:{ffffff}\n%s\n\nAnswer:",Name(ReportInfo[i][rID]),ReportInfo[i][rID],ReportInfo[i][rText]);
		    ShowPlayerDialog(playerid, 70, DIALOG_STYLE_INPUT, "{ffffff}Report Anweser", rep_str, "Answer", "Close");
		    ReportID[playerid] = ReportInfo[i][rID];
		    DeleteReport(i);
		    HideReports(playerid);
			return true;
		}
    }
    if(isAlogged[playerid] && ReconInfo[playerid][rec_Status])
    {
		if(clickedid == REC_RENEWLOOK) return StartSpectate(playerid, ReconInfo[playerid][rec_Player]);
		if(clickedid == REC_STATISTIC) return ShowStats(playerid, ReconInfo[playerid][rec_Player]);
		if(clickedid == REC_MUTEPLAYER)
		{
		    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "{ffffff}Mute Reason", "Miutitet Chatis Banis Dadebis Mizezi", "Mute", "Close");
		    SetPVarInt(playerid, "AcitonID", ReconInfo[playerid][rec_Player]);
		    return true;
		}
		if(clickedid == REC_PRISONPLAYER)
		{
			ShowPlayerDialog(playerid, 13, DIALOG_STYLE_INPUT, "{ffffff}Prison Reason", "Miutitet Cixeshi Chasmis Mizezi", "Prison", "Close");
            SetPVarInt(playerid, "AcitonID", ReconInfo[playerid][rec_Player]);
			return true;
		}
		if(clickedid == REC_SLAPPLAYER)
		{
			new Float:x, Float:y, Float:z;
	        GetPlayerPos(ReconInfo[playerid][rec_Player], x, y, z);
	        SetPlayerPos(ReconInfo[playerid][rec_Player], x, y, z + 5);
	        PlayerPlaySound(ReconInfo[playerid][rec_Player], 1130, 0, 0, 0);
		    return true;
		}
		if(clickedid == REC_GETIP)
		{
			new str[256], ip[16];
            GetPlayerIp(ReconInfo[playerid][rec_Player], ip, 16);
			format(str, sizeof(str), "%s(%d) - [RegIP:{ffffff} %s"color_admin"] | [LastIP: {ffffff}%s"color_admin"] | [CurrentIP: {ffffff}%s"color_admin"]",Name(ReconInfo[playerid][rec_Player]),ReconInfo[playerid][rec_Player],PlayerInfo[ReconInfo[playerid][rec_Player]][pRegIP],PlayerInfo[ReconInfo[playerid][rec_Player]][pLastIP],ip);
			SendClientMessage(playerid, COLOR_ADMIN, str);
		    return true;
		}
		if(clickedid == REC_RECONOFF) return StopSpectate(playerid);
    }
    if(clickedid == RentTD_G[2]) // Right
    {
        if(CurrentRentCar[playerid] == sizeof(gRentCars)-1) CurrentRentCar[playerid] = 0;
        else CurrentRentCar[playerid] ++;
        RenewRentCarMenu(playerid, CurrentRentCar[playerid]);
        return true;
    }
    if(clickedid == RentTD_G[3]) // Left
    {
        if(CurrentRentCar[playerid] == 0) CurrentRentCar[playerid] = sizeof(gRentCars)-1;
        else CurrentRentCar[playerid] --;
        RenewRentCarMenu(playerid, CurrentRentCar[playerid]);
        return true;
    }
    if(clickedid == RentTD_G[0]) // Rent
    {
        new currentid = CurrentRentCar[playerid];
        if(RentCarID[playerid] != -1) return senderror(playerid, "Tkven Ukve Gyavt Naqiravebi Transporti");
        if(PlayerInfo[playerid][pCash] < gRentCars[currentid][1]) return senderror(playerid, "Ar Gakvt Sakmarisi Tanxa");
        PlayerInfo[playerid][pCash] -= gRentCars[currentid][1];
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        //CreateVehicle(gRentCars[currentid][0], 1157.8960, -1732.3580, 13.3731, 180, 0, 0, -1); // oldmap
        switch(random(2))
        {
        /*
        AddStaticVehicleEx(560,1120.6106,-1669.4675,13.3578,180.0781, 1, 1, VEHICLE_RESPAWN);
        */
            case 0: RentCarID[playerid] = AddStaticVehicleEx(gRentCars[currentid][0], 1173.7356, -1724.2191, 13.5859, 0, 0, 0, VEHICLE_RESPAWN);
            case 1: RentCarID[playerid] = AddStaticVehicleEx(gRentCars[currentid][0], 1173.5747, -1742.0822, 13.3916, 0, 0, 0, VEHICLE_RESPAWN);
        }
        SetVehicleHealth(RentCarID[playerid], 999.0);
        PutPlayerInVehicleEx(playerid, RentCarID[playerid], 0);
        SendClientMessage(playerid, COLOR_GREEN, "[RentCar]{ffffff} - Tkven Iqiravet Transporti, Gasauqmelad Gamoiyenet Brdzaneba: /unrent");
        HideRentCarMenu(playerid);
        SetVehicleNumberPlate(RentCarID[playerid], "RentCar");
        return true;
    }
    if(clickedid == SpawnMenu_TD[6]) // Server Spawn
	{
        HideSpawnMenu(playerid);
        SpawnType[playerid] = 1;
        SpawnPlayer(playerid);
        SpawnStatus[playerid] = false;
	    return true;
	}
    if(clickedid == SpawnMenu_TD[7]) // House Spawn
	{
	    if(!CountPlayerHouses(playerid)) return SendClientMessage(playerid, 0x0080C0FF, "[Shecdoma]:{ffffff} Tkven Ar Gakvt Saxli");
        if(CountPlayerHouses(playerid) == 1)
        {
            HideSpawnMenu(playerid);
            SpawnType[playerid] = 2;
            for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
            {
                if(PlayerInfo[playerid][pHouse][i] != 0)
                {
                    SpawnHouseID[playerid] = PlayerInfo[playerid][pHouse][i];
                    break;
                }
            }
            SpawnPlayer(playerid);
            SpawnStatus[playerid] = false;
        }
        else
        {
            format(gstr, sizeof(gstr), "{ffffff}[1] HouseID: %d\n[2] HouseID: %d\n[3] HouseID: %d",PlayerInfo[playerid][pHouse][0],PlayerInfo[playerid][pHouse][1],PlayerInfo[playerid][pHouse][2]);
            ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "{ffffff}- Spawn House", gstr, "Spawn", "Close");
        }
	    return true;
	}
    if(clickedid == SpawnMenu_TD[8]) // Fraction Spawn
	{
	    if(PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid, 0x0080C0FF, "[Shecdoma]:{ffffff} Tkven Ar Xart Arcert Frakciashi");
	    if(PlayerInfo[playerid][pForm] == 0) return SendClientMessage(playerid, 0x0080C0FF, "[Shecdoma]:{ffffff} Tkven Ar Gacviat Samushao Forma");
        HideSpawnMenu(playerid);
        SpawnType[playerid] = 3;
        SpawnPlayer(playerid);
        SpawnStatus[playerid] = false;
	    return true;
	}
	if(clickedid == SpawnMenu_TD[9]) // Last Position Spawn
	{
	    if(PlayerInfo[playerid][pLastPos][0] == 0
		&& PlayerInfo[playerid][pLastPos][1] == 0) return SendClientMessage(playerid, 0x0080C0FF, "[Shecdoma]:{ffffff} Tkveni Bolo Pozicia Araa Shenaxuli");
        HideSpawnMenu(playerid);
        SpawnType[playerid] = 4;
        SpawnPlayer(playerid);
        SpawnStatus[playerid] = false;
	    return true;
	}
	if(clickedid == Inv_TD[45])
	{
		HidePlayerInventory(playerid);
   		return true;
	}
	if(clickedid == Inv_TD[50])
	{
	    if(InvData[playerid][i_Page] == 0) {
			return true;
		}
		if(InvData[playerid][i_Usement]) HideInventoryUsement(playerid);
	    InvData[playerid][i_Page] = 0;
	    RenewPlayerInventory(playerid);
	    return true;
	}
	if(clickedid == Inv_TD[51])
	{
 		if(InvData[playerid][i_Page] == INV_MAX_SLOTS) {
			return true;
		}
		if(InvData[playerid][i_Usement]) HideInventoryUsement(playerid);
	    InvData[playerid][i_Page] = INV_MAX_SLOTS;
	    RenewPlayerInventory(playerid);
	    return true;
	}
	if(clickedid == Inv_TD[27])
	{
	    ShowCommands(playerid);
	    return true;
	}
	if(clickedid == Inv_TD[28])
	{
	    ShowReportDialog(playerid);
	    return true;
	}
	if(clickedid == Inv_TD[29])
	{
	    ShowDonateDialog(playerid);
	    return true;
	}
	if(clickedid == Inv_TD[30])
	{
	    ShowStats(playerid, playerid);
	    return true;
	}
	if(clickedid == Inv_TD[31])
	{
        ShowPromoCodeDialog(playerid);
	    return true;
	}
	if(clickedid == Inv_TD[32])
	{
        if(p_family_id == 0) return senderror2(playerid, "Ar Xart Arcert Family'shi");
        if(!GetString(FamilyInfo[p_family_id][fLeader], Name(playerid))) return senderror2(playerid, "Ar Xart Family Lideri");
        PC_EmulateCommand(playerid, "/fmenu");
	    return true;
	}
	if(clickedid == Inv_TD[33])
	{
	    ShowSettings(playerid);
	    return true;
	}
    if(clickedid == KostiKeyExit)
    {
     	new g = KazinoDuty[playerid];
   		new stolid = GetPVarInt(playerid,"GameStol");
    	if(StolInfo[stolid][GameStart] == 1) return senderror(playerid, "Tamashis Momentshi Ver Gaxvalt");
   		if(GetPVarInt(playerid,"StolReg") != 88) return ShowPlayerDialog(playerid, EXIT_DIALOG, 0, "Casino", "Sashishroebis Qves Dgas Tqveni Fsoni.\nNamdvilad Gnebavt Dasruleba?","Exit","Close");
   		if(StolInfo[stolid][Stavka] > 0 && g > 0 && StolInfo[stolid][Igrokov] >= MIN_IGROKOV) return senderror(playerid, "Tamashis Momentshi Ver Gaxvalt !");
		TextDrawHideForPlayer(playerid,KostiBox[stolid]);
   		TextDrawHideForPlayer(playerid,TableName[stolid]);
   		TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
   		TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
   		TextDrawHideForPlayer(playerid,KostiKeyExit);
   		TextDrawHideForPlayer(playerid,KostiKeyDone);
   		TextDrawHideForPlayer(playerid,KostiKeyStavka);
   		SetPVarInt(playerid,"GameStol",88);
   		SetPVarInt(playerid,"StolReg",88);
   		TogglePlayerControllable(playerid,1);
   		CancelSelectTextDraw(playerid);
   		DelName(playerid,stolid);
   		CasinoDuty[playerid] = false;
   		SetPVarInt(playerid,"Ochki",88);
   		if(g == 1)
  		{
   			StolInfo[stolid][Crupe] = INVALID_PLAYER_ID;
   			StolInfo[stolid][Stavka] = 0;
   		}
   		UpdateCasino2();
        return true;
    }
    if(clickedid == KostiKeyStavka)
    {
  		new stolid = GetPVarInt(playerid,"GameStol");
  		new g = KazinoDuty[playerid];
  		if(StolInfo[stolid][GameStart] == 1) return senderror(playerid, "Tamashi Ukve Daiwko");
    	if(stolid == GetPVarInt(playerid,"StolReg")) return senderror(playerid, "Fsoni Ukve Devs");
    	if(g == 0 && StolInfo[stolid][Stavka] == 0) return senderror(playerid, "Daelodet Dileris Mititeblas");
    	if(g == 0 && PlayerInfo[playerid][pCash] < StolInfo[stolid][Stavka]) return senderror(playerid, "Kqven Ar Gaqvt Sakmarisi Tanxa");
    	new str[144];
		if(g > 0 && StolInfo[stolid][Stavka] != 0) return sendinfo(playerid, "Fsoni Dakenebulia");
    	format(str,sizeof(str),"{ffffff}Fsoni Unda Iyos Minimum %d$\nMaqsimum %d$. Miutitet Tanxa:",MIN_STAVKA,MAX_STAVKA);
   		if(g > 0) return ShowPlayerDialog(playerid, DIALOG_PAY, 1, "Cash:", str, "Bet","Close");
    	PlayerInfo[playerid][pCash]-=StolInfo[stolid][Stavka];
    	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
    	StolInfo[stolid][Bank] += StolInfo[stolid][Stavka];
    	SetPVarInt(playerid,"Stavka",StolInfo[stolid][Stavka]);
    	SetPVarInt(playerid,"StolReg",stolid);
    	format(log_str, sizeof(log_str), "%s'm(a) dado kazinoshi stavka - %d", Name(playerid),StolInfo[stolid][Stavka]);
	   	CreateLog("Money", log_str);
    	UpdateCasino2();
        return true;
    }
    if(clickedid == KostiKeyDone)
    {
    	new stolid = GetPVarInt(playerid,"GameStol");
    	new g = KazinoDuty[playerid];
    	new test2 = 0;
		if(g > 0)
		{
			if(StolInfo[stolid][Igrokov] >= MIN_IGROKOV)
			{
			    foreach(new i:Player)
				{
					if(GetPVarInt(i,"StolReg") == stolid) test2++;
				}
				if(test2 < MIN_IGROKOV) return SendClientMessage(playerid, COLOR_GREY, "Motamasheebs Ar Gauketebiat Fsonebi");
   				if(StolInfo[stolid][GameStart] == 1) return SendClientMessage(playerid, COLOR_GREY, "Tamashi Ukve Dawkebulia");
				TimeStavka[stolid] = 30; StolInfo[stolid][GameStart] = 1; UpdateCasino2();
			}
			else SendClientMessage(playerid,COLOR_GREY, "Magidaze Ar Tamashobs Sakmarisi Motamashe");
			return true;
		}
  		else
		{
		    if(stolid != GetPVarInt(playerid,"StolReg")) return senderror(playerid, "Tqven Ar Gagiketebiat Fsoni");
		    if(StolInfo[stolid][GameStart] == 0) return senderror(playerid, "Tamashi Ar Dawkebulia !");
	  		if(GetPVarInt(playerid,"Ochki") != 88) return true;
			new vip5 = Random(2,13);
			SetPVarInt(playerid,"Ochki",vip5);
			new test = 0;
			UpdateCasino2();
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
				if(GetPVarInt(i,"StolReg") == GetPVarInt(playerid,"StolReg") && GetPVarInt(i,"Ochki") == 88 && KazinoDuty[i] == 0) test++;
			}
			if(test == 0) TimeStavka[GetPVarInt(playerid,"StolReg")] = 5;
		}
		SetPVarInt(playerid,"Stavka",0);
        return true;
    }
   	if(clickedid == telephoneSamsung[33]) // Roulette
   	{
   	    //if(PlayerInfo[playerid][pLogin] == 0) return senderror(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia!");
        PhoneMove(playerid, false);
        SetTimerEx("SelectCaseMove", 200, false, "ib", playerid, true);
	    return true;
   	}
	if(clickedid == telephoneSamsung[6]) // Weapon
	{
	    if(DelayClick[playerid] > gettime()) return true;
	    ShowStats(playerid, playerid);
	    DelayClick[playerid] = gettime()+2;
	    return true;
	}
	if(clickedid == telephoneSamsung[10]) // Top Rich
	{
		if(!isLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
		{
    		ShowPlayerDialog(playerid, 777, DIALOG_STYLE_LIST, "G-COIN | SHOP", "{89C1A4}- Rashi Gamovikenot G-COIN?!\n{FFFFFF}[1] {3399FF}GOLD VIP {FFFFFF}| 7 G-COIN{FFFFFF}\n{FFFFFF}[2] {3399FF}SILVER VIP {FFFFFF}| 5 G-COIN{FFFFFF}\n{FFFFFF}[3] {3399FF}BRONZE VIP {FFFFFF}| 2 G-COIN{FFFFFF}\n{FFFFFF}[4] {3399FF}Cixidan Gamosvla{FFFFFF}\n{FFFFFF}[5] {3399FF}Gafrtxilebis Moxsna (Warn) {FFFFFF}| 8 G-COIN{FFFFFF}\n{FFFFFF}[6] {3399FF}Mute's Moxsna{FFFFFF} {FFFFFF}| 2 G-COIN\n{FFFFFF}[7] {3399FF}+1 G-COIN{FFFFFF} {FFFFFF}| 50.000$\n{FFFFFF}[8] {3399FF}Ruletka{FFFFFF} | SPIN Roulette", "Archeva", "Daxurva");
		}
	    return true;
	}
	if(clickedid == telephoneSamsung[21]) // Advertisement
	{
        if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	    if(DelayClick[playerid] > gettime()) return true;
	    ShowPlayerDialog(playerid, 50, DIALOG_STYLE_INPUT, "{ffffff}Advertisement", "\n{ffffff}- Tkven Agzavnit Reklamas Serverze\n-Fasi: {FF6347} 150.000$\n\n{ffffff}Chaweret Reklamis Teqsti:", "Send", "Close");
        DelayClick[playerid] = gettime()+2;
		return true;
	}
	if(clickedid == telephoneSamsung[22]) // Picture
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Tranportshi Ver Gamoikenebt Kameras");
        PhoneMove(playerid, false);
        TakingPicture[playerid] = 1;
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		GetXYInFrontOfPlayer(playerid, x, y, 1.7);
		SetPlayerCameraPos(playerid, x, y, z+0.8);
		GetPlayerPos(playerid, x, y, z);
		SetPlayerCameraLookAt(playerid, x, y, z+0.5);
		ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
		//SelectTextDraw(playerid, -1); // tu amas chasva takingpicture chamoitane kvemot !
		IphoneON[playerid] = false;
	    return true;
	}
	if(clickedid == telephoneSamsung[32]) // Call Page
	{
 		Ppnumber[playerid] = CreatePlayerTextDraw(playerid, 88.366341, 194.110031, "_");
        PlayerTextDrawLetterSize(playerid, Ppnumber[playerid], 0.192331, 1.583407);
        PlayerTextDrawTextSize(playerid, Ppnumber[playerid], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, Ppnumber[playerid], 2);
        PlayerTextDrawColor(playerid, Ppnumber[playerid], 0x282828FF);
        PlayerTextDrawUseBox(playerid, Ppnumber[playerid], 0);
        PlayerTextDrawBoxColor(playerid, Ppnumber[playerid], 0x80808080);
        PlayerTextDrawSetShadow(playerid, Ppnumber[playerid], 0);
        PlayerTextDrawSetOutline(playerid, Ppnumber[playerid], 0);
        PlayerTextDrawBackgroundColor(playerid, Ppnumber[playerid], 0x000000FF);
        PlayerTextDrawFont(playerid, Ppnumber[playerid], 2);
        PlayerTextDrawSetProportional(playerid, Ppnumber[playerid], 1);
        PlayerTextDrawSetSelectable(playerid, Ppnumber[playerid], 0);
        PlayerTextDrawShow(playerid, Ppnumber[playerid]);
	    for(new i = 0; i < 34; i ++) TextDrawShowForPlayer(playerid, PnumberSamsung[i]);
	    return true;
	}
	if(clickedid == telephoneSamsung[33]) return senderror(playerid, "7");
	if(clickedid == PnumberSamsung[12])
	{
	    Callstr[playerid][0] = EOS;
	    PlayerTextDrawDestroy(playerid, Ppnumber[playerid]);
		for(new i = 0; i < 34; i ++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
		return true;
	}
	new strr[16];
	if(clickedid == PnumberSamsung[11])
	{
		if(!strcmp(Callstr[playerid], "-")) return true;
		SetTimerEx("MobileCall", 2000, false, "ds[16]", playerid, Callstr[playerid]);
		PlayerPlaySound(playerid, 20600, 0.0, 0.0, 0.0);
		isCalling[playerid] = true;
	    return true;
	}
	if(clickedid == PnumberSamsung[28])
	{
		strdel(Callstr[playerid], strlen(Callstr[playerid])-1, strlen(Callstr[playerid]));
  		PlayerTextDrawSetString(playerid, Ppnumber[playerid], Callstr[playerid]);
		return true;
	}
	for(new i = 1; i < 11; i ++)
	{
		if(clickedid == PnumberSamsung[i])
		{
			if(strlen(Callstr[playerid]) > 9) return true;
		    if(i == 10) i = 0;
		    format(strr, sizeof(strr), "%d", i);
			strcat(Callstr[playerid], strr);
		    PlayerTextDrawSetString(playerid, Ppnumber[playerid], Callstr[playerid]);
		    PlayerPlaySound(playerid, 17006, 0.0, 0.0, 0.0);
			return true;
		}
	}
 	/*if(clickedid == Buy_TD[4]) // Left
    {
        if(GetPVarInt(playerid, "AntiNextFlood") > gettime()) return true;
        PlayerPlaySound(playerid, SOUND_SELECTING, 0, 0, 0);
        if(AS_select[playerid] <= 0) return true;
        new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
        GetVehiclePos(AutoSalonCar[AS_select[playerid]], x, y, z);
        AS_select[playerid] --;
        GetVehiclePos(AutoSalonCar[AS_select[playerid]], x2, y2, z2);
        SetPlayerCameraPos(playerid, x + 7, y, z + 1);
        SetPlayerCameraLookAt(playerid, x, y, z);
        InterpolateCameraPos(playerid, x + 7, y, z + 1, x2 + 7, y2, z2 + 1, 3000);
        SetTimerEx("RenewAutoSalon", 2900, false, "d", playerid);
        SetPVarInt(playerid, "AntiNextFlood", gettime() + 4);
        return true;

    }
    if(clickedid == Buy_TD[3]) // Right
    {
        if(GetPVarInt(playerid, "AntiNextFlood") > gettime()) return true;
        PlayerPlaySound(playerid, SOUND_SELECTING, 0, 0, 0);
        if(AS_select[playerid] == sizeof(AutoSalonCar) - 1) return true;
        new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
        GetVehiclePos(AutoSalonCar[AS_select[playerid]], x, y, z);
        AS_select[playerid] ++;
        GetVehiclePos(AutoSalonCar[AS_select[playerid]], x2, y2, z2);
        SetPlayerCameraPos(playerid, x + 7, y, z + 1);
        SetPlayerCameraLookAt(playerid, x, y, z);
        InterpolateCameraPos(playerid, x + 7, y, z + 1, x2 + 7, y2, z2 + 1, 3000);
        SetTimerEx("RenewAutoSalon", 2900, false, "d", playerid);
        SetPVarInt(playerid, "AntiNextFlood", gettime() + 4);
        return true;
    }
    if(clickedid == Buy_TD[5])
    {
        //if(GetPVarInt(playerid, "SkinSelect") == 1) return EndPlayerInSkinShop(playerid);
        //if(GetPVarInt(playerid, "SkinSelect") == 2) return EndPlayerInAccesShop(playerid);
        SetCameraBehindPlayer(playerid);
        TogglePlayerControllable(playerid, true);
        AS_select[playerid] = 0;
        for(new i = 0; i < 9; i ++) {
            TextDrawHideForPlayer(playerid, Buy_TD[i]);
            if(i < 2) PlayerTextDrawHide(playerid, Buy_PTD[playerid][i]);
        }
        CancelSelectTextDraw(playerid);
        AutoSalon[playerid] = false;
        return true;
    }
    if(clickedid == Buy_TD[6])
    {
        {
			if(IsPlayerConnected(playerid))
			{
				if(isLogged[playerid])
				{
   					if(PlayerInfo[playerid][pLevel] < 2)
    				{
          			    senderror(playerid, "Transportis Shesadzenad Sachiro Aris 2 Level , Gamoikenet /quest!");
          			    RemovePlayerFromVehicleEx(playerid);
						return true;
          			}
		    		if(CountPlayerHouses(playerid) == 0)
		    		{
		    		    senderror(playerid, "Tkven Ar Gakvt Saxli");
						RemovePlayerFromVehicleEx(playerid);
		    		    return true;
		    		}
					if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "CarPrice")) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa Xelze!"), RemovePlayerFromVehicleEx(playerid);
					if(CountPlayerCars(playerid) >= 10) return senderror(playerid, "Tkven Ukve Gkavt Sakmarisi Mankanebi");
					if(GetModelCount(GetPVarInt(playerid, "CarID")) <= 0) return sendinfo(playerid, "Archeuli Transportis Limiti Amowurulia");
		            SetCameraBehindPlayer(playerid);
		            TogglePlayerControllable(playerid, true);
		            AS_select[playerid] = 0;
		            for(new i = 0; i < 9; i ++) {
		                TextDrawHideForPlayer(playerid, Buy_TD[i]);
		                if(i < 2) PlayerTextDrawHide(playerid, Buy_PTD[playerid][i]);
		            }
		            if(caridhouse[playerid] != -1) {
		                DestroyVehicle(caridhouse[playerid]);
		                caridhouse[playerid] = -1;
		            }
		            //ResetVehicleComponents(playerid, listitem);
		            CancelSelectTextDraw(playerid);
		            GivePlayerCar(playerid, GetPVarInt(playerid, "CarID"));
		            PlayerInfo[playerid][pCash] -= GetPVarInt(playerid, "CarPrice");
		            caridhouse[playerid] = CreateVehicle(GetPVarInt(playerid, "CarID"), 2128.7839, -1119.5281, 25.0950, 90, 1, 1, 0, -1);
		            SetVehicleHealth(caridhouse[playerid], 999.0);
		            PutPlayerInVehicleEx(playerid, caridhouse[playerid], 0);
		            SavePlayerData(playerid);
		            AutoSalon[playerid] = false;
					format(gstr, sizeof(gstr), "{63BD4E}[AutoSalon] {FFFFFF}Gilocavt! Tkven Sheidzinet: {63BD4E}%s{FFFFFF} / Fasi: {63BD4E}%d$", GetVehicleName(GetPVarInt(playerid, "CarID")), GetPVarInt(playerid, "CarPrice"));
					SendClientMessage(playerid, 0x63BD4EFF, gstr);
					GivePlayerExp(playerid, 2);
					format(log_str, sizeof(log_str), "%s'm(a) sheidzina avtoskolidan mankana %s - fasi %d", Name(playerid),GetVehicleName(GetPVarInt(playerid, "CarID")), GetPVarInt(playerid, "CarPrice"));
	   				CreateLog("Money", log_str);
					SetModelCount(GetPVarInt(playerid, "CarID"), 0);
				}
			}
		}
        return true;
    }*/
   	if(clickedid == Jetx_TD[4])
    {
        JetXMoveToPlayer(playerid, false);
        PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
        return true;
    }
    if(clickedid == Jetx_TD[16])
    {
        if(JetData[x_Exploded] == true) return true;
        if(JetXBet[playerid] == 0) return senderror2(playerid,"Tkven Ar Gakvt Mititebuli Tanxa");
        new string[128];
        if(JetXPlaying[playerid])
        {
            new Float: multiple_money = float(JetXBet[playerid])*JetData[x_Mutli];
            if(JetData[x_Start])
            {
                PlayerInfo[playerid][pCash] += floatround(multiple_money, floatround_round);
                PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
                format(log_str, sizeof(log_str), "%s'm(a) jet x - motamashem moxsna tanxa %i", Name(playerid),floatround(multiple_money, floatround_round));
	   			CreateLog("Money", log_str);
                format(string, sizeof(string), "JetX - {ffffff}Tkven Moxsenit: {4FB64F}%i$",floatround(multiple_money, floatround_round));
                SendClientMessage(playerid,0xD84848AA,string);
                //format(log_str, sizeof(log_str), "%s'm(a) Moigo JETX'Shi %i$", Name(playerid),floatround(multiple_money, floatround_round));
				//CreateLog("Money", log_str);
                JetXPlaying[playerid] = false;
                UpdatePlayerJetX(playerid);
                PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
                return true;
            }

            PlayerInfo[playerid][pCash] += JetXBet[playerid];


            PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
            format(log_str, sizeof(log_str), "%s'm(a) jet x - motamashem moxsna tanxa %i", Name(playerid),JetXBet[playerid]);
	   		CreateLog("Money", log_str);
            JetXPlaying[playerid] = false;
            UpdatePlayerJetX(playerid);
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
            return true;
        }
        else
        {
            if(JetData[x_Start]) return SendClientMessage(playerid, 0xD84848AA, "JetX -{ffffff} Tamashi Ukve Dackebulia");
            if(PlayerInfo[playerid][pCash] < JetXBet[playerid]) return SendClientMessage(playerid, 0xD84848AA, "JetX -{ffffff} Ar Gakvt Sakmarisi Tanxa");
            JetXPlaying[playerid] = true;
            PlayerInfo[playerid][pCash] -= JetXBet[playerid];
            PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
            format(log_str, sizeof(log_str), "%s'm(a) dado stavka %d", Name(playerid),JetXBet[playerid]);
	   		CreateLog("Money", log_str);
            UpdatePlayerJetX(playerid);
            PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
        }
        return true;
    }
    if(clickedid == Jetx_TD[17])
    {
		if(JetXPlaying[playerid] == false)
		{
		    ShowPlayerDialog(playerid, 1090, DIALOG_STYLE_INPUT, "JetX", "{ffffff}Miutitet Tanxis Raodenoba Bet'is Dasadebad\nMinimum 500$ - Maximum 50.000$", "Mititeba", "Daxurva");
		    PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		}
		else
		{
		    SendClientMessage(playerid, 0xD84848AA, "JetX -{ffffff} Tkven Ukve Gaketebuli Gakvt Fsoni");
		}
        return true;
    }
    return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(!isLogged[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
    if(playertextid == select_PTD[playerid][5]) // Right
    {
		switch(SelectSystemID[playerid])
		{
		    case 1: // SkinShop
		    {
		        if(SelectChar[playerid] == sizeof(TheSkins)-1) SelectChar[playerid] = 0;
		        else SelectChar[playerid] ++;
		        RenewSkinShop(playerid);
		        return true;
			}
			case 2: // Tune
			{
				switch(TuneSelectID[playerid])
				{
				    case 0: // Color 1
				    {
	       				if(TuneSelectPlace[playerid] == sizeof(CarTune_Colors)-1) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				    case 1: // Color 2
				    {
	       				if(TuneSelectPlace[playerid] == sizeof(CarTune_Colors)-1) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				    case 3: // Wheels
				    {
	       				if(TuneSelectPlace[playerid] == sizeof(CarTune_Wheels)-1) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				    case 4: // Spoiler
				    {
	       				if(TuneSelectPlace[playerid] == 2) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				    case 5: // Wheels
				    {
	       				if(TuneSelectPlace[playerid] == sizeof(CarTune_Paintjobs)-1) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				    case 7: // Rear Bumper
				    {
	       				if(TuneSelectPlace[playerid] == 1) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				    case 8: // Front Bumper
				    {
	       				if(TuneSelectPlace[playerid] == 1) TuneSelectPlace[playerid] = 0;
		        		else TuneSelectPlace[playerid] ++;
						RenewTuneMenu(playerid);
				    }
				}
			}
        }
        return true;
    }
    if(playertextid == select_PTD[playerid][3]) // Left
    {
  		switch(SelectSystemID[playerid])
		{
		    case 1: // SkinShop
		    {
		        if(SelectChar[playerid] == 0) SelectChar[playerid] = sizeof(TheSkins)-1;
		        else SelectChar[playerid] --;
		        RenewSkinShop(playerid);
           		return true;
			}
			case 2: // Tune
			{
				switch(TuneSelectID[playerid])
				{
				    case 0: // Color 1
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = sizeof(CarTune_Colors)-1;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
				    case 1: // Color 2
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = sizeof(CarTune_Colors)-1;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
  				  	case 3: // Wheels
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = sizeof(CarTune_Wheels)-1;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
 				  	case 4: // Spoiler
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = 2;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
 				  	case 5: // Wheels
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = sizeof(CarTune_Paintjobs)-1;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
 				  	case 7: // Rear Bumper
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = 1;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
 				  	case 8: // Front Bumper
				    {
        				if(TuneSelectPlace[playerid] == 0) TuneSelectPlace[playerid] = 1;
				        else TuneSelectPlace[playerid] --;
						RenewTuneMenu(playerid);
				    }
				}
			}
		}
        return true;
    }
    if(playertextid == select_PTD[playerid][4]) // Select
    {
  		switch(SelectSystemID[playerid])
		{
		    case 1: // SkinShop
		    {
		        new charid = SelectChar[playerid];
		        if(PlayerInfo[playerid][pCash] < TheSkins[charid][2]) return senderror(playerid, "Ar Gakvt Sakmarisi Tanxa");
		        if(GetModelCount(TheSkins[charid][PlayerInfo[playerid][pSex]-1]) <= 0) return sendinfo(playerid, "Archeuli Skinis Limiti Amowurulia");
		        PlayerInfo[playerid][pCash] -= TheSkins[charid][2];
		        format(gstr, sizeof(gstr), "~r~-%d$",TheSkins[charid][2]);
				GameTextForPlayer(playerid, gstr, 2000, 1);
		        PlayerInfo[playerid][pSkin] = TheSkins[charid][PlayerInfo[playerid][pSex]-1];
		        SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		        RemovePlayerFromSkinShop(playerid);
		        SetPlayerQuest(playerid, QUEST_SKIN);
		        SetModelCount(TheSkins[charid][PlayerInfo[playerid][pSex]-1], 0);
		        return true;
			}
			case 2: // Tune
			{
			    new carid = GetPVarInt(playerid, "MyCarID");
				switch(TuneSelectID[playerid])
				{
				    case 0: // Color 1
				    {
				        if(PlayerInfo[playerid][pCash] < CarTune_Colors[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Colors[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
						MyCarTune[playerid][carid][CARTUNE_COLOR1] = CarTune_Colors[TuneSelectPlace[playerid]][0];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "ColorFirst", MyCarTune[playerid][carid][CARTUNE_COLOR1]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_PAINT, 0.0, 0.0, 0.0);
				    }
				    case 1: // Color 2
				    {
				        if(PlayerInfo[playerid][pCash] < CarTune_Colors[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Colors[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
						MyCarTune[playerid][carid][CARTUNE_COLOR2] = CarTune_Colors[TuneSelectPlace[playerid]][0];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "ColorSecond", MyCarTune[playerid][carid][CARTUNE_COLOR2]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_PAINT, 0.0, 0.0, 0.0);
				    }
 				  	case 3: // Wheels
				    {
				        if(PlayerInfo[playerid][pCash] < CarTune_Wheels[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Wheels[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				       	MyCarTune[playerid][carid][CARTUNE_WHEEL] = CarTune_Wheels[TuneSelectPlace[playerid]][0];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "Wheel", MyCarTune[playerid][carid][CARTUNE_WHEEL]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
				    }
				    case 4: // Spoiler
				    {
	       				new c = caridhouse[playerid], tunes[3];
			     		if(GetVehicleModel(c) == 562) tunes[0] = 1146, tunes[1] = 1147, tunes[2] = 1023;
						else if(GetVehicleModel(c) == 560) tunes[0] = 1138, tunes[1] = 1139, tunes[2] = 1023;
						else if(GetVehicleModel(c) == 565) tunes[0] = 1049, tunes[1] = 1050, tunes[2] = 1023;
						else if(GetVehicleModel(c) == 561) tunes[0] = 1058, tunes[1] = 1060, tunes[2] = 1023;
						else if(GetVehicleModel(c) == 559) tunes[0] = 1158, tunes[1] = 1162, tunes[2] = 1023;
						else if(GetVehicleModel(c) == 558) tunes[0] = 1063, tunes[1] = 1064, tunes[2] = 1023;
				        if(PlayerInfo[playerid][pCash] < CarTune_Spoilers[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Spoilers[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				       	MyCarTune[playerid][carid][CARTUNE_SPOILER] = tunes[TuneSelectPlace[playerid]];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "Spoiler", MyCarTune[playerid][carid][CARTUNE_SPOILER]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
				    }
 				  	case 5: // PaintJobs
				    {
				        if(PlayerInfo[playerid][pCash] < CarTune_Paintjobs[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Paintjobs[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				       	MyCarTune[playerid][carid][CARTUNE_PJ] = CarTune_Paintjobs[TuneSelectPlace[playerid]][0];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "PaintJob", MyCarTune[playerid][carid][CARTUNE_PJ]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
				    }
				   	case 7: // Rear Bumper
				    {
  	     				new c = caridhouse[playerid], tunes[2];
			    		if(GetVehicleModel(c) == 562) tunes[0] = 1148, tunes[1] = 1149;
						else if(GetVehicleModel(c) == 560) tunes[0] = 1140, tunes[1] = 1141;
						else if(GetVehicleModel(c) == 575) tunes[0] = 1176, tunes[1] = 1177;
						else if(GetVehicleModel(c) == 565) tunes[0] = 1150, tunes[1] = 1151;
						else if(GetVehicleModel(c) == 561) tunes[0] = 1154, tunes[1] = 1156;
						else if(GetVehicleModel(c) == 559) tunes[0] = 1159, tunes[1] = 1161;
						else if(GetVehicleModel(c) == 558) tunes[0] = 1167, tunes[1] = 1168;
						else if(GetVehicleModel(c) == 534) tunes[0] = 1178, tunes[1] = 1180;
						else if(GetVehicleModel(c) == 536) tunes[0] = 1183, tunes[1] = 1184;
						else if(GetVehicleModel(c) == 535) tunes[0] = 1186, tunes[1] = 1187;
						else if(GetVehicleModel(c) == 576) tunes[0] = 1192, tunes[1] = 1193;
				        if(PlayerInfo[playerid][pCash] < CarTune_Bumpers[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Bumpers[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				       	MyCarTune[playerid][carid][CARTUNE_BUMPERR] = tunes[TuneSelectPlace[playerid]];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "RearBumper", MyCarTune[playerid][carid][CARTUNE_BUMPERR]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
				    }
				   	case 8: // Front Bumper
				    {
   	    				new c = caridhouse[playerid], tunes[2];
						if(GetVehicleModel(c) == 562) tunes[0] = 1171, tunes[1] = 1172;
						else if(GetVehicleModel(c) == 560) tunes[0] = 1169, tunes[1] = 1170;
						else if(GetVehicleModel(c) == 575) tunes[0] = 1174, tunes[1] = 1175;
						else if(GetVehicleModel(c) == 565) tunes[0] = 1152, tunes[1] = 1153;
						else if(GetVehicleModel(c) == 561) tunes[0] = 1155, tunes[1] = 1157;
						else if(GetVehicleModel(c) == 559) tunes[0] = 1160, tunes[1] = 1173;
						else if(GetVehicleModel(c) == 558) tunes[0] = 1165, tunes[1] = 1166;
						else if(GetVehicleModel(c) == 534) tunes[0] = 1179, tunes[1] = 1185;
						else if(GetVehicleModel(c) == 536) tunes[0] = 1181, tunes[1] = 1182;
						else if(GetVehicleModel(c) == 535) tunes[0] = 1188, tunes[1] = 1189;
						else if(GetVehicleModel(c) == 576) tunes[0] = 1190, tunes[1] = 1191;
				        if(PlayerInfo[playerid][pCash] < CarTune_Bumpers[TuneSelectPlace[playerid]][1]) return senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
				        PlayerInfo[playerid][pCash] -= CarTune_Bumpers[TuneSelectPlace[playerid]][1];
				        PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				       	MyCarTune[playerid][carid][CARTUNE_BUMPERF] = tunes[TuneSelectPlace[playerid]];
						UpdatePlayerCar(MyCarInsertID[playerid][carid], "FrontBumper", MyCarTune[playerid][carid][CARTUNE_BUMPERF]);
						RenewTuneMenu(playerid);
						ShowTuneDialog(playerid);
						PlayerPlaySound(playerid, SOUND_TUNE, 0.0, 0.0, 0.0);
					}
				}
			}
        }
        return true;
    }
   	if(playertextid == Inv_PTD[playerid][3])
	{
	    if(InvData[playerid][i_Skin] > 0)
	    {
	        InvData[playerid][i_Skin] = 0;
			PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][3], 19382);
			PlayerTextDrawHide(playerid, Inv_PTD[playerid][3]);
			PlayerTextDrawShow(playerid, Inv_PTD[playerid][3]);
			PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][0], GetPlayerSkin(playerid));
			PlayerTextDrawHide(playerid, Inv_PTD[playerid][0]);
			PlayerTextDrawShow(playerid, Inv_PTD[playerid][0]);
	        SetPlayerSkinEx(playerid);
	    }
		return true;
	}
    if(playertextid == Inv_PTD[playerid][6])
	{
	    if(InvData[playerid][i_Index] == -1) {
	        return true;
	    }
	    new index = InvData[playerid][i_Index], page = InvData[playerid][i_Page];
	    UseInventoryItem(playerid, InvData[playerid][i_Items][index+page]);
	    HideInventoryUsement(playerid);
	    return true;
	}
 	if(playertextid == Inv_PTD[playerid][7])
	{
	    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "Interiershi Ver Dadropavt Aksesuars");
 		if(InvData[playerid][i_Near] != -1) return SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Axlos Ukve Aris Dagdebuli Aksesuari");
        new nearr = -1;
        for(new i = 0; i < MAX_DROP_ITEM; i ++)
        {
            if(DropInfo[i][d_Status] == 0) continue;
            new Float:x, Float:y, Float:z;
            GetDynamicObjectPos(DropInfo[i][d_Object], x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
            {
                nearr++;
                break;
            }
        }
        if(nearr != -1) return SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Axlos Ukve Aris Dagdebuli Aksesuari");
		new page = InvData[playerid][i_Page];
        new index = InvData[playerid][i_Index]+page;
        if(index == -1) return true;
        if(InvData[playerid][i_Items][index] == 0 || InvData[playerid][i_Items][index] == 19382)
        {
            return true;
        }
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        GetXYInFrontOfPlayer(playerid, x, y, 1.2);
        DropItem(InvData[playerid][i_Items][index], x, y, z);
        InvData[playerid][i_Items][index] = 19382;
		HidePlayerInventory(playerid);
		GetPlayerPos(playerid, x, y, z);
		GetXYInBackOfPlayer(playerid, x, y, 0.1);
		SetPlayerPos(playerid, x, y, z);
        ApplyAnimation(playerid, "GRENADE", "WEAPON_throwu", 4.0, 0, 0, 1, 0, 0);
        InvData[playerid][i_Index] = -1;
        InvData[playerid][i_Near] = -1;
	    return true;
	}
	if(playertextid == Inv_PTD[playerid][8])
	{
	    HideInventoryUsement(playerid);
	    return true;
	}
	for(new i = 0; i < INV_MAX_SLOTS; i ++)
	{
		if(playertextid == Index_PTD[playerid][i])
		{
			new page = InvData[playerid][i_Page];
		    if(InvData[playerid][i_Items][i+page] == 19382) {
				break;
		    }
		    ShowInventoryUsement(playerid, i);
		    return true;
		}
		if(i < INV_MAX_ACCS)
		{
		    if(playertextid == UsedItems_PTD[playerid][i])
		    {
		        if(InvData[playerid][i_UsedItems][i] != 19382) {
		        	RemovePlayerAttachedObjectEx(playerid, i);
				}
		        return true;
		    }
		}
	}
    return 1;
}
public OnPlayerStreamIn(playerid, forplayerid)
{
    if(maskOn[playerid])
    {
        ShowPlayerNameTagForPlayer(forplayerid, playerid, false);
    }
    else
    {
        ShowPlayerNameTagForPlayer(forplayerid, playerid, true);
    }
    return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(isAlogged[playerid])
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        SendClientMessage(playerid, COLOR_WHITE, "- Tkven Gadateleportirdit Rukaze Monishnul Adgilas");
		SetPlayerPos(playerid, fX, fY, fZ);
  		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	return 1;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(hittype == 0 && weaponid > 39) return BanEx(playerid, "NEW CRASHER");
    if(hittype != 0 && hittype != 1 && hittype != 2 && hittype != 3 && hittype != 4)
    {
		ACKick(playerid, "005", "Weapon Hack");
        return false;
    }
	if(hittype == 1 && (BadFloat(fX) || BadFloat(fY) || BadFloat(fZ)))
	{
		ACKick(playerid, "006", "Weapon Hack");
	    return false;
	}
	/*new weapon = GetWeaponSlot(weaponid);
	if(GunAmmo[playerid][weapon] < GetPlayerAmmo(playerid)-2)
	{
	    ACKick(playerid, "008", "Ammo Hack");
	}
	else GunAmmo[playerid][weapon] --;*/
	if((GetPlayerAmmo(playerid) < -1 || GetPlayerAmmo(playerid) > 99999) && (weaponid != 0 && weaponid != 38))
	{
	    ACKick(playerid, "009", "Infinite Ammo");
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		ACKick(playerid, "020", "Drive By");
	}
    return 1;
}
public OnRconCommand(cmd[])
{
	return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{
    printf("OnRconLoginAttempt(%s, %s, %d)",ip,password,success);
    new myip[16];
	foreach(new i:Player)
	{
		GetPlayerIp(i, myip, 16);
		if(!strcmp(myip, ip))
		{
		    if(KINKLA(i)) continue;
			format(gstr, sizeof(gstr), "- %s[%d] Rcon Login Attempt (Kicked)",Name(i),i);
			SendAdminMessage(COLOR_WHITE, gstr, 9);
			Kick(i);
			return true;
		}
	}
	return 1;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
    new model = GetVehicleModel(vehicleid);

	if(!(400 <= model <= 611))
	{
	    if(GetLauncherStatus(forplayerid))
	    {
     		DestroyDynamic3DTextLabel(LauncherVehicleText[forplayerid][vehicleid]);

     		LauncherVehicleTextCreated[forplayerid][vehicleid] = false;
	    }
	    else
	    {
     		DestroyDynamic3DTextLabel(LauncherVehicleText[forplayerid][vehicleid]);

       		other_string[0] = EOS;
			format(other_string, sizeof(other_string), "{7CFA81}Model: {FFFFFF}%s\n{FFFFFF}Xelmisawvdomia {7CFA81}Launcher{FFFFFF}'idan", GetVehicleName(model));

			LauncherVehicleText[forplayerid][vehicleid] = CreateDynamic3DTextLabel(other_string, 0x85BB65FF, 0.0000, 0.0000, 0.0000, 10.0000,
				INVALID_PLAYER_ID, vehicleid, 0, -1, -1, forplayerid);

			LauncherVehicleTextCreated[forplayerid][vehicleid] = true;
	    }
	}
	else
	{
	    if(!GetLauncherStatus(forplayerid))
	    {
	        DestroyDynamic3DTextLabel(LauncherVehicleText[forplayerid][vehicleid]);

			LauncherVehicleTextCreated[forplayerid][vehicleid] = false;
	    }
	}
	return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid)
{
	new model = GetVehicleModel(vehicleid);
	if(model > 611 && !GetLauncherStatus(forplayerid) && LauncherVehicleTextCreated[forplayerid][vehicleid])
	{
		DestroyDynamic3DTextLabel(LauncherVehicleText[forplayerid][vehicleid]);
		LauncherVehicleTextCreated[forplayerid][vehicleid] = false;
	}
	return 1;
}
public OnVehicleSpawn(vehicleid)
{
    SetVehicleHealth(vehicleid, 999.0);
    if(IsAdminVehicle[vehicleid] == 1)
    {
        SetVehicleNumberPlate(vehicleid, "Admin Car");
    }
    else
    {
        SetVehicleNumberPlate(vehicleid, "Genuine-RP");
    }
    chabmuli[vehicleid] = -1;
	chabmulia[vehicleid] = 0;
    if(IsABmx(vehicleid))
    {
        GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
        SetVehicleParamsEx(vehicleid, 1, lightss, alarms, doorss, bonnets, boots, objectives);
        UnLockCar(vehicleid);
    }
    foreach(new i:Player)
    {
        if(vehicleid == caridhouse[i])
        {
            SetVehicleNumberPlate(vehicleid, "Genuine");
            LockCar(vehicleid);
        }
    }
	return 1;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
	new model = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(model, componentid);
	if(!modok)
	{
		ACKick(playerid, "010", "Tune Hack");
		RemoveVehicleComponent(vehicleid, componentid);
	}
 	if(!IsCompatible(GetVehicleModel(vehicleid), componentid))
	{
        ACKick(playerid, "016", "Tune Hack");
        return true;
	}
	return true;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	RepairVehicle(vehicleid);
	SetVehicleHealth(vehicleid, 999.0);
	return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	RepairVehicle(vehicleid);
	SetVehicleHealth(vehicleid, 999.0);
	return 1;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(AutoSchoolStatus[playerid] >= 0)
    {
		new Float: vhp;
  		GetVehicleHealth(vehicleid, vhp);
  		if(vhp <= 900)
  		{
    		DisablePlayerRaceCheckpoint(playerid);
      		SetVehicleToRespawn(AutoSchoolCar[playerid]);
      		AutoSchoolCar[playerid] = -1;
      		AutoSchoolStatus[playerid] = -1;
        	SendClientMessage(playerid, COLOR_RED, "Tkven Chaicherit Praktikis Gamocdashi !");
        }
    }
	return 1;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	if(GetVehicleDistanceFromPoint(vehicleid, new_x, new_y, new_z) > 2.0)
	{
		printf("OnUnoccupiedVehicleUpdate %s Tries to crash players", Name(playerid));
		return false;
	}
	
	if(function8(new_x, new_x) || function8(new_y, new_y) || function8(new_z, new_z)) return 0;
	if(GetVehicleDistanceFromPoint(vehicleid, new_x, new_y, new_z) > 50.0) return 0;

	static
		Float:distance,
		Float:pos_x,
		Float:pos_y,
		Float:pos_z,
		Float:angle;

	GetVehiclePos(vehicleid, pos_x, pos_y, pos_z);
	GetVehicleZAngle(vehicleid, angle);
	distance = VectorSize(pos_x - new_x, pos_y - new_y, pos_z - new_z);

	if (distance > 75.0 && pos_z > -75.0) {
		SetVehiclePos(vehicleid, pos_x, pos_y, pos_z);
		SetVehicleZAngle(vehicleid, angle);

		format(gstr, sizeof gstr, "» AntiCheat »{ffffff} Motamashe %s(%d) Shesadzloa Yrides Manqanebs", Name(playerid), playerid);
		SendAdminMessage(0x5D6D7EFF, gstr);
		return 0;
	}

	new Float:cxa,Float:cya,Float:cza;
	GetVehiclePos(vehicleid, cxa,cya,cza);
   	if(!IsPlayerInRangeOfPoint(playerid, 5, cxa, cya, cza) && PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pLevel] < 20)
    {
        SetVehicleToRespawn(vehicleid);
    }

	return true;
}
public PC_OnInit()
{
	// Short Commands
    PC_RegAlias("spawnchange", "changespawn");
    PC_RegAlias("animlist", "anims");
    PC_RegAlias("setleader", "makeleader");
    PC_RegAlias("adminzone", "az");
    PC_RegAlias("chatclear", "cc");
    PC_RegAlias("jetpack", "jt", "jp");
    PC_RegAlias("goto", "g");
    PC_RegAlias("admin", "a");
    PC_RegAlias("spawn", "sp");
    PC_RegAlias("teleport", "tp");
    PC_RegAlias("recon", "re");
    PC_RegAlias("reconoff", "reoff");
    PC_RegAlias("shout", "s");
    PC_RegAlias("racia", "r");
	PC_RegAlias("family", "f");
	PC_RegAlias("engine", "en");
	PC_RegAlias("megaphone", "m");
	PC_RegAlias("whisper", "w");
	PC_RegAlias("quest", "quests");
	PC_RegAlias("suspect", "su");
	PC_RegAlias("directory", "dir");
	PC_RegAlias("departaments", "d");
	PC_RegAlias("showlicenses", "showlic");
	PC_RegAlias("prisonlist", "jaillist");
	PC_RegAlias("fightstyle", "fstyle");
	PC_RegAlias("uval", "auninvite");
	PC_RegAlias("findbiz", "biz");
	PC_RegAlias("goevent", "tpevent");
	PC_RegAlias("mainmenu", "mm");
	return 1;
}
/*public OnDynamicObjectMoved(objectid)
{
	new Float:x, Float:y, Float:z;
    for(new i = 0; i < MAX_DROP_ITEM; i ++)
    {
        if(DropInfo[i][d_Status] == 1)
        {
			if(objectid == DropInfo[i][d_Object])
			{
			    GetDynamicObjectPos(objectid, x, y, z);
			    DropInfo[i][d_Text] = Create3DTextLabel("{ffffff}Press:"color_mm" (ALT)", COLOR_WHITE, x, y, z, 20.0, 43);
			    return true;
			}
        }
    }
	return true;
}*/
public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &WEAPON:weapon, &bodypart)
{
    if(weapon == 4 || weapon == 37/* || weapon == 41*/) return false;
	if(AdminDuty[playerid]) return false;
    if(GetPVarInt(playerid, "AFK_Time") > 15) return false;
    if(InvData[playerid][i_Opened])
    {
    	new Float: f_data, data_str[16];
		GetPlayerHealth(playerid, f_data);
		format(data_str, 16, "%.0f", f_data);
		PlayerTextDrawSetString(playerid, Inv_PTD[playerid][1], data_str);
		GetPlayerArmour(playerid, f_data);
		format(data_str, 16, "%.0f", f_data);
		PlayerTextDrawSetString(playerid, Inv_PTD[playerid][2], data_str);
    }
	if((playerid != INVALID_PLAYER_ID && issuerid != INVALID_PLAYER_ID))
	{
	    if(PlayerInfo[issuerid][pLevel] <= 1)
	    {
			SendClientMessage(issuerid, 0x52BE80FF, "[Genuine-RP]:{ffffff} Sxva Motamasheebs Ver Miakenebt Zians");
	        return false;
	    }
	    if((PlayerInfo[playerid][pMember] != 0) && (PlayerInfo[issuerid][pMember] == PlayerInfo[playerid][pMember]) && PlayerEvent[playerid] == false && DMArea[playerid] == 0)
	    {
			GameTextForPlayer(issuerid, "~r~Anti TK", 1200, 1);
			return false;
		}
		if(Tazer[issuerid] && weapon == TAZE_WEAPON)
		{
			if(!(Tazed[playerid] && IsPlayerInAnyVehicle(playerid)))
			{
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
				StopAnimation(playerid);
				ApplyAnimation(playerid, "PED", "KO_skid_front", 4.1, 0, 1, 1, 1, 0);
				SetTimerEx("TazedRemove", 10000, 0, "i", playerid);
   				Tazer[issuerid] = false;
       			Tazed[playerid] = true;
			}
		}
	}
    /*if(GetLauncherStatus(playerid))
    {
        new Float:hp, Float:armor;
		cef_emit_event(playerid, "data:pool:health", CEFFLOAT(GetPlayerHealth(playerid, hp)));
		cef_emit_event(playerid, "data:pool:armor", CEFFLOAT(GetPlayerArmour(playerid, armor)));
    }*/
	return true;
}
public OnPlayerTrollCar(playerid, vehicleid)
{
	new string[80];
    format(string, sizeof(string), "{2E2E2E}< Anti Troll >{ffffff} %s{2E2E2E} Kicked For Car Trolling !");
	SendAdminMessage(0x2E2E2EFF, string);
	Kick(playerid);
	return 1;
}
public SV_VOID:OnPlayerActivationKeyPress(SV_UINT:playerid, SV_UINT:keyid)
{
	if (keyid == 0x5A && LStream[playerid]) SvAttachSpeakerToStream(LStream[playerid], playerid);
	if (keyid == 0x42 && AStream && isAlogged[playerid]) SvAttachSpeakerToStream(AStream, playerid);
 	if (keyid == 0x58 && PlayerInfo[playerid][pMember] > 0 && WalkieTalkieFractionStatus[playerid] == 1)
	{
 		SvAttachSpeakerToStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	}
}
public SV_VOID:OnPlayerActivationKeyRelease(SV_UINT:playerid, SV_UINT:keyid)
{
	if (keyid == 0x5A && LStream[playerid]) SvDetachSpeakerFromStream(LStream[playerid], playerid);
	if (keyid == 0x42 && AStream && isAlogged[playerid]) SvDetachSpeakerFromStream(AStream, playerid);
	if (keyid == 0x58 && PlayerInfo[playerid][pMember] > 0)
 	{
	 	SvDetachSpeakerFromStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	}
}
public OnPlayerInteract(playerid, interactid)
{
    new string[256];
    new member = PlayerInfo[playerid][pMember], form = PlayerInfo[playerid][pForm];
    if(interactid == rentcarEx) return ShowRentCarMenu(playerid);
    if(interactid == skinshopEx) return PutPlayerInSkinShop(playerid);
    if(interactid == FractionFormPickup[member])
    {
        new nearForm = GetNearestFormPickup(playerid);
        if(nearForm != FRACTION_NONE && nearForm == member)
        {
            if(form)
            {
                format(string, sizeof(string), "\n{ffffff}Fraction:{5DADE2} %s\n{ffffff}Rank:{5DADE2} %s\n\n{ffffff}- Gnebavt Shvebulebashi Gasvla ?",FractionNames[member],FractionRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]);
                ShowPlayerDialog(playerid, 21, DIALOG_STYLE_MSGBOX, "{ffffff}- Uniform", string, "Action", "Close");
                return true;
            }
            if(!form)
            {
                format(string, sizeof(string), "\n{ffffff}Fraction:{5DADE2} %s\n{ffffff}Rank:{5DADE2} %s\n\n{ffffff}- Gnebavt Samsaxurshi Dabruneba ?",FractionNames[member],FractionRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]);
                ShowPlayerDialog(playerid, 21, DIALOG_STYLE_MSGBOX, "{ffffff}- Uniform", string, "Action", "Close");
                return true;
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Ar Xart Am Frakciashi !");
        }
        return true;
    }
    if(interactid == farmEx)
    {
        if(PlayerInfo[playerid][pLicense][LICENSE_PASS] == 0) return senderror2(playerid, "Tkven Ar Gakvt Piradomis Mowmoba, Misi Ageba Shegidzliat Meriashi");
        if(jobID[playerid] != JOB_FARM) ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Farm Job", !"\n     {8099B5}Farm Job Information\n\n{FFFFFF}Rata Daickot Fermashi Mushaoba Tkven Unda Sheidzinot Xelsacko\n{FFFFFF}Tito Mosavlis Agebaze Aigebt Tanxas Randomulad {8099B5}15.000{FFFFFF}-Dan {8099B5}100.000{FFFFFF}-Mde", !"Start", !"Close");
        else ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Farm Job", !"\n     {8099B5}Farm Job Information\n\n{FFFFFF}Rata Daickot Fermashi Mushaoba Tkven Unda Sheidzinot Xelsacko\n{FFFFFF}Tito Mosavlis Agebaze Aigebt Tanxas Randomulad {8099B5}15.000{FFFFFF}-Dan {8099B5}100.000{FFFFFF}-Mde", !"End", !"Close");
        return true;
    }
    if(interactid == lspdGuns || interactid == armyEx[2] || interactid == fbiGuns)
    {
        if(IsAGov(playerid))
		{
			ShowGovWeapons(playerid);
		}
        return true;
    }
    if(interactid == pasportEx)
    {
    	ShowPlayerDialog(playerid, 51, DIALOG_STYLE_MSGBOX, "Piradobis Mowmoba", "Piradobis Mowmoba - Piradobis Mowmoba Agebis Shemdeg Tqven Gaxdebit Shtatis Srul Uflebiani Wevri.", "Take", "Close");
		return true;
    }
    if(interactid == houseSales)
    {
		mysql_tquery(connect, "SELECT * FROM `house` WHERE `hOwned` = '0' LIMIT 15", "ShowSaleHouses", "i", playerid);
        return true;
    }
    if(interactid == WFStart)
    {
		if(PlayerInfo[playerid][pLicense][LICENSE_PASS] == 0) return senderror2(playerid, "Tkven Ar Gakvt Piradomis Mowmoba, Misi Ageba Shegidzliat Meriashi");
        if(jobID[playerid] != JOB_WEAPON_FACTORY)
        {
			format(gstr, sizeof(gstr), "\n{8099B5}Job:{ffffff} Weapon Factory\n{8099B5}Sallary:{ffffff} 10.000$\n\n{ffffff}- Do You Want To Start?");
			ShowPlayerDialog(playerid, 53, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Weapon Factory", gstr, "Start", "Close");
        }
        else
		{
			format(gstr, sizeof(gstr), "\n{8099B5}Job:{ffffff} Weapon Factory\n{8099B5}You Got:{ffffff} %d$\n\n{ffffff}- Do You Want To End?",jobCash[playerid]);
			ShowPlayerDialog(playerid, 53, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Weapon Factory", gstr, "End", "Close");
		}
		return true;
    }
    if(interactid == PlantationForm)
	{
		if(jobID[playerid] != JOB_PLANTATION)
		{
		   	format(gstr, sizeof(gstr), "\n{8099B5}Job:{ffffff} Plantation Farm\n{8099B5}Sallary:{ffffff} 15.000$\n\n{ffffff}- Do You Want To Start?");
			ShowPlayerDialog(playerid, 54, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Plantation Farm", gstr, "Start", "Close");
		}
		else
		{
			format(gstr, sizeof(gstr), "\n{8099B5}Job:{ffffff} Plantation Farm\n{8099B5}You Got:{ffffff} %d$\n\n{ffffff}- Do You Want To End?",jobCash[playerid]);
			ShowPlayerDialog(playerid, 54, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Plantation Farm", gstr, "End", "Close");
		}
		return true;
	}
	if(interactid == ShaftPickup)
	{
		if(jobID[playerid] != JOB_SHAFT)
		{
		   	format(gstr, sizeof(gstr), "\n{8099B5}Job:{ffffff} Shaft\n{8099B5}Sallary:{ffffff} 15.000$\n\n{ffffff}- Do You Want To Start?");
			ShowPlayerDialog(playerid, 72, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Shaft", gstr, "Start", "Close");
		}
		else
		{
			format(gstr, sizeof(gstr), "\n{8099B5}Job:{ffffff} Shaft\n{8099B5}You Got:{ffffff} %d$\n\n{ffffff}- Do You Want To End?",jobCash[playerid]);
			ShowPlayerDialog(playerid, 72, DIALOG_STYLE_MSGBOX, !"{8099B5}Genuine{FFFFFF} | Shaft", gstr, "End", "Close");
		}
	    return true;
	}
	if(interactid == merialicenses)
	{
		format(gstr, sizeof(gstr), "{F8C471}[1] -{ffffff} %s\t{F8C471}50.000$\n{F8C471}[2] -{ffffff} %s\t{F8C471}65.000$",GetLicenseName(LICENSE_BIZZ),GetLicenseName(LICENSE_GUN));
		ShowPlayerDialog(playerid, 74, DIALOG_STYLE_LIST, "{F8C471}Buy |{ffffff} Licenses", gstr, "Buy", "Close");
	    return true;
	}
    return true;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
	printf("OnPlayerCommandReceived - %s / %s",Name(playerid),cmd);
    if(!isLogged[playerid]) return false;
    if(SpawnStatus[playerid] == true) return false;
    if(isProceted[playerid] == true) return false;
    if(lastDialogID[playerid] != -1)
    {
        senderror(playerid, "Brdzanebis Gamosakeneblad Sachiroa Daxurot Dialogi");
        return false;
    }
    if(!PC_CommandExists(cmd)) return invalidcmd(playerid);
    return true;
}
function OnCheatDetected(playerid, ip_address[], type, code)
{
    if(type == AC_GLOBAL_TRIGGER_TYPE_PLAYER)
    {
        switch(code)
        {
            case 5, 6, 11, 22: return 1;
            case 32: // CarJack
            {
                new Float:x, Float:y, Float:z;
                AntiCheatGetPos(playerid, x, y, z);
                return SetPlayerPos(playerid, x, y, z);
            }
            case 40: // Sandbox
            {
                SendClientMessage(playerid, -1, MAX_CONNECTS_MSG);
                return AntiCheatKickWithDesync(playerid, code);
            }
            case 41: // Invalid Version
            {
                SendClientMessage(playerid, -1, UNKNOWN_CLIENT_MSG);
                return AntiCheatKickWithDesync(playerid, code);
            }
            default:
            {
                if(gettime() - pAntiCheatLastCodeTriggerTime[playerid][code] < AC_TRIGGER_ANTIFLOOD_TIME)
                    return 1;
                pAntiCheatLastCodeTriggerTime[playerid][code] = gettime();
                AC_CODE_TRIGGERED_COUNT[code]++;

				new
    				string[88 - 10 + MAX_PLAYER_NAME + 5 + AC_MAX_CODE_NAME_LENGTH + AC_MAX_CODE_LENGTH],
	                trigger_type = AC_CODE_TRIGGER_TYPE[code];

				if(trigger_type == AC_CODE_TRIGGER_TYPE_WARNING)
	            {
           			format(string, sizeof(string), c_ac"» [AntiCheat] » {FFFFFF}Motamashe: %s[%d] Shesadzloa Ikenebs : "c_ac"%s[#%03d]", Name(playerid), playerid, AC_CODE_NAME[code], code);
              		SendAdminMessage(COLOR_LIGHTRED, string);
     			}
        		else
	            {
	            	format(string, sizeof(string), c_ac"» AntiCheat » {FFFFFF}%s[%d] Gaikicka Serveridan Cheterobis Gamo: "c_ac"%s", Name(playerid), playerid, AC_CODE_NAME[code], code);
	            	SendAdminMessage(0x5D6D7EFF, string);
			    	format(string, sizeof(string), "#%03d", code);
					ACKick(playerid, AC_CODE_NAME[code], string);
					printf("[AntiCheat] Motamashe: %s[%d] Gaikicka Serveridan, Mizezi: "c_ac"%s",Name(playerid), playerid, AC_CODE_NAME[code], code);

	            	AntiCheatKickWithDesync(playerid, code);
				}
            }
        }
    }
    else
    {
        AC_CODE_TRIGGERED_COUNT[code]++;

        new
            string[58 - 8 + 16 + AC_MAX_CODE_NAME_LENGTH + AC_MAX_CODE_LENGTH];

        format(string, sizeof(string), "{4FB64F}[AntiCheat] {FFFFFF} IP Address %s Daibloka, Mizezi: %s [Code: #%03d].", ip_address, AC_CODE_NAME[code], code);
        SendAdminMessage(0xD2B88FFF, string);

        BlockIpAddress(ip_address, 0);
    }
    return 1;
}
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == Accessorie_Selection)
	{
	    if(response)
	    {
			for(new i = 0; i < sizeof(AccessorieSelect); i ++)
			{
			    if(GetItemModelById(AccessorieSelect[i][0]) == modelid)
			    {
			        Accessorie_Price[playerid] = AccessorieSelect[i][1];
					break;
			    }
			}
			Accessorie_Model[playerid] = modelid;

			new string[156];
		    format(string, sizeof(string), "\n{FFFFFF}Aqsesuari's ID:{8099B5} %d\n{FFFFFF}Aqsesuari:{8099B5} %s\n{FFFFFF}Aqsesuaris Fasi:{8099B5} %d$\n\n{FFFFFF}Namdvilad Gsurt Misi Shedzena\n",modelid,GetItemName(GetItemID(modelid)),Accessorie_Price[playerid]);
			ShowPlayerDialog(playerid, 4415, DIALOG_STYLE_MSGBOX, "{8099B5}Accessories{FFFFFF} | Genuine", string, "Buy", "Cancel");
	    }
	}
	return 1;
}
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
	if(21 < weaponid < 39)
	{
	    if(weaponid != INVALID_OBJECT_ID)
	    {
			for(new i = 0; i < MAX_DROP_ITEM; i ++)
			{
			    if(DropInfo[i][d_Status] == 0) continue;
			    if(objectid == DropInfo[i][d_Object])
				{
                    DropInfo[i][d_Health] -= 30;
                    if(DropInfo[i][d_Health] < 0)
                    {
                        DestroyDrop(i);
                    }
				    return true;
				}
			}
		}
	}
	return 1;
}

/* ========================== << [ Forwards ] >> ============================ */
function SearchForAccount(playerid)
{
    InterpolateCameraPos(playerid, 1423.9124,-918.8848,88.2670, 1582.6022,-1017.7712,108.1349, 9000);
    InterpolateCameraLookAt(playerid, 1411.4543,-799.1210,83.4391, 1645.6919,-1125.4489,70.7875, 9000);
    if(cache_num_rows())
    {
        ShowAuthorization(playerid);
    }
    else
    {
        ShowRegistration(playerid);
    }
    LoginTime[playerid] = SetTimerEx("LoginTimer", 25000, false, "i", playerid);
	SelectTextDraw(playerid, COLOR_WHITE);
}
function LoadPlayerData(playerid)
{
    new fstring[256];
    if(cache_num_rows())
    {
        cache_get_value_name(0, "Password", PlayerInfo[playerid][Password], 64);
        cache_get_value_name_int(0, "pSex", PlayerInfo[playerid][pSex]);
        cache_get_value_name_int(0, "pLevel", PlayerInfo[playerid][pLevel]);
        cache_get_value_name_int(0, "pExp", PlayerInfo[playerid][pExp]);
        cache_get_value_name_int(0, "pSkin", PlayerInfo[playerid][pSkin]);
        cache_get_value_name_int(0, "pCash", PlayerInfo[playerid][pCash]);
        cache_get_value_name_int(0, "pAdmin", PlayerInfo[playerid][pAdmin]);
        cache_get_value_name(0, "pAlogin", PlayerInfo[playerid][pAlogin], 32);
        cache_get_value_name_int(0, "pBank", PlayerInfo[playerid][pBank]);
        cache_get_value_name_int(0, "pText", PlayerInfo[playerid][pText]);
        cache_get_value_name_int(0, "pMute", PlayerInfo[playerid][pMute]);
        cache_get_value_name_int(0, "pMuteTime", PlayerInfo[playerid][pMuteTime]);
        cache_get_value_name_int(0, "pPrison", PlayerInfo[playerid][pPrison]);
        cache_get_value_name_int(0, "pPrisonTime", PlayerInfo[playerid][pPrisonTime]);
        cache_get_value_name(0, "pRegIP", PlayerInfo[playerid][pRegIP], 32);
        cache_get_value_name(0, "pLastIP", PlayerInfo[playerid][pLastIP], 32);
        cache_get_value_name_int(0, "pHouse1", PlayerInfo[playerid][pHouse][0]);
        cache_get_value_name_int(0, "pHouse2", PlayerInfo[playerid][pHouse][1]);
        cache_get_value_name_int(0, "pHouse3", PlayerInfo[playerid][pHouse][2]);
        cache_get_value_name_int(0, "pBizz", PlayerInfo[playerid][pBizz]);
        cache_get_value_name_int(0, "pMobile", PlayerInfo[playerid][pMobile]);
        //cache_get_value_name_int(0, "pPhone", PlayerInfo[playerid][pPhone]);
        //cache_get_value_name_int(0, "pSIM", PlayerInfo[playerid][pSIM]);
        cache_get_value_name_int(0, "pNumber", PlayerInfo[playerid][pNumber]);
        cache_get_value_name_int(0, "pWatch", PlayerInfo[playerid][pWatch]);
        cache_get_value_name_int(0, "pMask", PlayerInfo[playerid][pMask]);
        cache_get_value_name_int(0, "pMember", PlayerInfo[playerid][pMember]);
        cache_get_value_name_int(0, "pRank", PlayerInfo[playerid][pRank]);
        cache_get_value_name_int(0, "pForm", PlayerInfo[playerid][pForm]);
        cache_get_value_name_int(0, "pModel", PlayerInfo[playerid][pModel]);
        cache_get_value_name_int(0, "pLicensePass", PlayerInfo[playerid][pLicense][LICENSE_PASS]);
        cache_get_value_name_int(0, "pLicenseCar", PlayerInfo[playerid][pLicense][LICENSE_CAR]);
        cache_get_value_name_int(0, "pLicenseBizz", PlayerInfo[playerid][pLicense][LICENSE_BIZZ]);
        cache_get_value_name_float(0, "pLastPosX", PlayerInfo[playerid][pLastPos][0]);
        cache_get_value_name_float(0, "pLastPosY", PlayerInfo[playerid][pLastPos][1]);
        cache_get_value_name_float(0, "pLastPosZ", PlayerInfo[playerid][pLastPos][2]);
        cache_get_value_name_int(0, "pLastInterior", PlayerInfo[playerid][pLastInterior]);
        cache_get_value_name_int(0, "pLastVirtualWorld", PlayerInfo[playerid][pLastVirtualWorld]);
        cache_get_value_name_int(0, "pArmyTicket", PlayerInfo[playerid][pArmyTicket]);
        cache_get_value_name_int(0, "pArmySkill", PlayerInfo[playerid][pArmySkill]);
        cache_get_value_name_int(0, "pPromouse", PlayerInfo[playerid][pPromouse]);
        cache_get_value_name_int(0, "pPromouse", PlayerInfo[playerid][pPromouse]);
        cache_get_value_name_int(0, "pProtection", PlayerInfo[playerid][pProtection]);
        cache_get_value_name(0, "pIPKey", PlayerInfo[playerid][pIPKey], 32);
        cache_get_value_name_int(0, "pGcoin", PlayerInfo[playerid][pGcoin]);
        cache_get_value_name_int(0, "pWanted", PlayerInfo[playerid][pWanted]);
        cache_get_value_name_int(0, "pDrug", PlayerInfo[playerid][pDrug]);
        cache_get_value_name_int(0, "pAddict", PlayerInfo[playerid][pAddict]);
        cache_get_value_name_int(0, "pJob", PlayerInfo[playerid][pJob]);
        cache_get_value_name_int(0, "pWarn", PlayerInfo[playerid][pWarn]);
        cache_get_value_name_int(0, "pWarnTime", PlayerInfo[playerid][pWarnTime]);
        cache_get_value_name_int(0, "pRope", PlayerInfo[playerid][pRope]);
        cache_get_value_name_int(0, "pFamilyMember", PlayerInfo[playerid][pFamilyMember]);
		cache_get_value_name_int(0, "pFamilyRank", PlayerInfo[playerid][pFamilyRank]);
		cache_get_value_name_int(0, "pPayday", PlayerInfo[playerid][pPayday]);
		cache_get_value_name_int(0, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
		cache_get_value_name_int(0, "pVipTime", PlayerInfo[playerid][pVipTime]);
		cache_get_value_name_int(0, "pKills", PlayerInfo[playerid][pKills]);
		cache_get_value_name_int(0, "pDeaths", PlayerInfo[playerid][pDeaths]);
		cache_get_value_name_int(0, "pDirectory", PlayerInfo[playerid][pDirectory]);
  		cache_get_value_name_int(0, "pFightSkillFirst", PlayerInfo[playerid][pFightSkill][0]);
        cache_get_value_name_int(0, "pFightSkillSecond", PlayerInfo[playerid][pFightSkill][1]);
        cache_get_value_name_int(0, "pFightSkillThird", PlayerInfo[playerid][pFightSkill][2]);
        cache_get_value_name_int(0, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
        cache_get_value_name_int(0, "pPIN", PlayerInfo[playerid][pPIN]);
        cache_get_value_name_int(0, "pElections", PlayerInfo[playerid][pElections]);
        cache_get_value_name(0, "pMarry", PlayerInfo[playerid][pMarry], MAX_PLAYER_NAME);
        cache_get_value_name_int(0, "pBitcoin", PlayerInfo[playerid][pBitcoin]);
        cache_get_value_name_int(0, "pAdmin_PlayedTime", PlayerInfo[playerid][pAdmin_PlayedTime]);
        cache_get_value_name_int(0, "pAdmin_Mute", PlayerInfo[playerid][pAdmin_Mute]);
        cache_get_value_name_int(0, "pAdmin_Prison", PlayerInfo[playerid][pAdmin_Prison]);
        cache_get_value_name_int(0, "pAdmin_Warn", PlayerInfo[playerid][pAdmin_Warn]);
        cache_get_value_name_int(0, "pAdmin_Ban", PlayerInfo[playerid][pAdmin_Ban]);
        cache_get_value_name_int(0, "pAdmin_ReportAnswer", PlayerInfo[playerid][pAdmin_ReportAnswer]);
        cache_get_value_name_int(0, "pAdmin_Kick", PlayerInfo[playerid][pAdmin_Kick]);
        cache_get_value_name_int(0, "pAdminWarning", PlayerInfo[playerid][pAdminWarning]);
        cache_get_value_name_int(0, "pTrailerJob", PlayerInfo[playerid][pTrailerJob]);
        cache_get_value_name_int(0, "pCasinoBlock", PlayerInfo[playerid][pCasinoBlock]);
        cache_get_value_name_int(0, "CaseSilver", PlayerInfo[playerid][pCases][CASE_TYPE_SILVER]);
		cache_get_value_name_int(0, "CaseMagic", PlayerInfo[playerid][pCases][CASE_TYPE_MAGIC]);
		cache_get_value_name_int(0, "CaseTitany", PlayerInfo[playerid][pCases][CASE_TYPE_TITANY]);
		cache_get_value_name_int(0, "pGiftTime", PlayerInfo[playerid][pGiftTime]);
        cache_get_value_name_int(0, "pAlreadyRobbed", PlayerInfo[playerid][pAlreadyRobbed]);
        cache_get_value_name_int(0, "pMaterial", PlayerInfo[playerid][pMaterial]);
        for(new i = 0; i < MAX_QUEST; i ++)
        {
            format(fstring, sizeof(fstring), "pQuest%d", i);
            cache_get_value_name_int(0, fstring, PlayerInfo[playerid][pQuest][i]);
        }
        for(new i = 0; i < MAX_VIDEO_CARDS; i ++)
        {
            format(fstring, sizeof(fstring), "pVideoCardType%d", i);
            cache_get_value_name_int(0, fstring, PlayerInfo[playerid][pVideoCardType][i]);
            format(fstring, sizeof(fstring), "pVideoCardStatus%d", i);
            cache_get_value_name_int(0, fstring, PlayerInfo[playerid][pVideoCardStatus][i]);
            format(fstring, sizeof(fstring), "pVideoCardWorked%d", i);
            cache_get_value_name_int(0, fstring, PlayerInfo[playerid][pVideoCardWorked][i]);
            
            if(PlayerInfo[playerid][pVideoCardStatus] < VIDEO_CARD_TYPE_NONE) {
                PlayerInfo[playerid][pVideoCardStatus] = VIDEO_CARD_STATUS_NONE;
            }
        }
        isLogged[playerid] = true;

        if(LoginTime[playerid] != -1)
        {
            KillTimer(LoginTime[playerid]);
            LoginTime[playerid] = -1;
        }

        new name[MAX_PLAYER_NAME];
        GetPlayerName(playerid, name, MAX_PLAYER_NAME);
        format(fstring, sizeof(fstring), "SELECT * FROM `bans` WHERE Name = '%s'",name);
        mysql_tquery(connect, fstring, "OnBannedPlayerLogin", "i", playerid);

		new ip[16];
		GetPlayerIp(playerid, ip, 16);
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(!AdminIP(ip) && !KINKLA(playerid))
			{
				format(fstring, sizeof(fstring),"[Security] %s'm(a){ffffff} Ver Gaiara Admin IP Shemowmeba !",Name(playerid));
				SendAdminMessage(COLOR_INFO, fstring);
			    SendClientMessage(playerid, COLOR_INFO, "[Security]{ffffff} Tkven Ver Gaiaret Admin IP Shemowmeba !");
			    Kick(playerid);
			    return true;
			}

		    // [ Succes Enter ]
			SendClientMessage(playerid, COLOR_INFO, "[Security]{ffffff} Tkven Warmatebit Gaiaret Admin IP Shemowmeba !");
		}

		if(PlayerInfo[playerid][pProtection] == 1 && strcmp(ip, PlayerInfo[playerid][pLastIP])
  												&& strcmp("-", PlayerInfo[playerid][pIPKey]))
		{
		    ShowProtection(playerid);
		    isLogged[playerid] = false;
		    isProceted[playerid] = true;
		}

        format(fstring, sizeof(fstring), "» {FFFFFF}Tkven Warmatebit Gaiaret Avtorizaia | Username - {EA5151}%s",Name(playerid));
        SendClientMessage(playerid, COLOR_ADMIN, fstring);
        if(GetLauncherStatus(playerid))
		{
			cef_create_browser(playerid, 1, "https://genuine-rp.ge/interface/index.html", false, false);
	  		cef_subscribe("grp:hud", "CefInterface");
			cef_always_listen_keys(playerid, 1, bool:KEY_YES);
			cef_hide_browser(playerid, 1, false);
			cef_focus_browser(playerid, 1, false);
		}
		else
		{
			for(new i = 0; i < 20; i ++) TextDrawShowForPlayer(playerid, gift_TD[i]);
			PlayerTextDrawShow(playerid, gift_PTD[playerid][0]);
		}
		if(PlayerInfo[playerid][pGiftTime] <= 0) PlayerInfo[playerid][pGiftTime] = GIFT_HOURS * 60;
		isPlayerActive[playerid] = true;
		DisplayTime(playerid);
		if(GetLauncherStatus(playerid))
		{
    		cef_always_listen_keys(playerid, 1, bool:KEY_YES);
			cef_hide_browser(playerid, 1, false);
		}

        switch(PlayerInfo[playerid][pText])
        {
            case 1: SendClientMessage(playerid, 0xFAAC58FF, "[Offline]{ffffff} - Tkven Gamogagdes Saxlidan Gadauxdelobis Gamo");
			case 2: SendClientMessage(playerid, 0xFAAC58FF, "[Offline]{ffffff} - Tkven Gagekidat Biznesi Gadauxdelobis Gamo");
		}
        PlayerInfo[playerid][pText] = 0;
        PlayerUpdateData(playerid, "pText", PlayerInfo[playerid][pText]);

		if(PlayerInfo[playerid][pCashAmount] > 0)
		{
			SendClientMessage(playerid, 0x8099B5FF, "[Payment]{ffffff} - Tkven Datovet Serveri Mushaobis Dros !");
			format(gstr, sizeof(gstr), "Tkven Gadmogecat Samushaos Anazgaureba: {FAAC58}%d$",PlayerInfo[playerid][pCashAmount]);
			SendClientMessage(playerid, 0xFAAC58FF, gstr);
			PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pCashAmount];
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
			format(log_str, sizeof(log_str), "%s'm(a) tkven gadmogecat samushaos anazgaureba - %d", Name(playerid),PlayerInfo[playerid][pCashAmount]);
	   		CreateLog("Money", log_str);
			PlayerInfo[playerid][pCashAmount] = 0;
			PlayerUpdateData(playerid, "pCashAmount", PlayerInfo[playerid][pCashAmount]);
		}

        if(EventInfo[event_On] == true)
        {
            StartPlayerEvent(playerid);
        }

        // Spawn Menu
		if(!isProceted[playerid])
		{
        	ShowSpawnMenu(playerid);
		}

        if(PlayerInfo[playerid][pCash] < 0) PlayerInfo[playerid][pCash] = 0;
        if(PlayerInfo[playerid][pBank] < 0) PlayerInfo[playerid][pBank] = 0;
        if(PlayerInfo[playerid][pRank] > 0 && PlayerInfo[playerid][pMember] == 0) PlayerInfo[playerid][pRank] = 0;
        if(PlayerInfo[playerid][pForm] > 0 && PlayerInfo[playerid][pMember] != PlayerInfo[playerid][pForm]) PlayerInfo[playerid][pForm] = PlayerInfo[playerid][pMember];
        if(GetPlayerItem(playerid, GetItemModelById(ITEM_SIMCARD)) && PlayerInfo[playerid][pNumber] == 0) PlayerInfo[playerid][pNumber] = Random(10000, 99999);
		if(PlayerInfo[playerid][pMember] > 0)
		{
	        SvAttachListenerToStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	        WalkieTalkieFractionStatus[playerid] = 1;
		}
		if(PlayerInfo[playerid][pWanted] > 0)
		{
		    WantedTime[playerid] = PlayerInfo[playerid][pWanted]*120;
		}
		if(PlayerInfo[playerid][pSex] <= 0) PlayerInfo[playerid][pSex] = 1;
		if(!strcmp(PlayerInfo[playerid][pMarry], "")) SetString(PlayerInfo[playerid][pMarry], "-");

		for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
        {
            new house = PlayerInfo[playerid][pHouse][i];
            if(house == 0) continue;
            if(HouseInfo[house][hOwned] == 0)
            {
                PlayerInfo[playerid][pHouse][i] = 0;
            }
        }
        //
        SetPlayerScoreEx(playerid);
		//
		if(PlayerInfo[playerid][pDonateRank] > 0)
		{
			SendClientMessage(playerid, 0xFEBC41AA, "Tkven Xart VIP Momxmarebeli");
		}
		new current = getdate(), hj = PlayerInfo[playerid][pVipTime]-current;
		if(hj > 300)
		{
			PlayerInfo[playerid][pVipTime] = hj-365;
	        PlayerUpdateData(playerid, "pVipTime", PlayerInfo[playerid][pVipTime]);
		}
		if(PlayerInfo[playerid][pVipTime] > current && PlayerInfo[playerid][pDonateRank] > 0)
		{
		    format(fstring, sizeof(fstring), "VIP Moxmarebis Dro: {4FB64F}%d {FFFFFF}Dge",PlayerInfo[playerid][pVipTime]-current);
		    SendClientMessage(playerid, COLOR_WHITE, fstring);
		}
		else if(PlayerInfo[playerid][pVipTime] <= current && PlayerInfo[playerid][pDonateRank] > 0)
		{
	 		SendClientMessage(playerid, COLOR_LIGHTRED, "Tqven VIP Status Amoewura Vada");
	 		PlayerInfo[playerid][pDonateRank] = 0;
	 		PlayerUpdateData(playerid, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
	 		PlayerInfo[playerid][pVipTime] = 0;
	        PlayerUpdateData(playerid, "pVipTime", PlayerInfo[playerid][pVipTime]);
		}


        format(fstring, sizeof(fstring), "SELECT * FROM `inventory` WHERE Name = '%s'",Name(playerid));
        mysql_tquery(connect, fstring, "LoadInventory", "i", playerid);
    }
    else
    {
        if(-- WrongPassword[playerid] <= 0)
        {
            SendClientMessage(playerid, COLOR_FIRST, "Gasasvlelad Daweret: /q(uit)");
            Kick(playerid);
            return true;
        }
		format(fstring, sizeof(fstring), "Tkven Dagrchat %d Cda, Tu Sworad Ar Miutitebt Parols Gaikikebit",WrongPassword[playerid]);
		SendClientMessage(playerid, COLOR_FIRST, fstring);
        ShowAuthorization(playerid);
    }
    return true;
}
function SavePlayerData(playerid)
{
    if(!IsPlayerConnected(playerid)) return false;
    if(!isLogged[playerid]) return true;
    new query[2409], string[250];
    query = "UPDATE `accounts` SET ";
    /* ================================================================== */
    acc_int_strcat(query, sizeof(query), "pSex", PlayerInfo[playerid][pSex]);
    acc_int_strcat(query, sizeof(query), "pLevel", PlayerInfo[playerid][pLevel]);
    acc_int_strcat(query, sizeof(query), "pExp", PlayerInfo[playerid][pExp]);
    acc_int_strcat(query, sizeof(query), "pSkin", PlayerInfo[playerid][pSkin]);
    acc_int_strcat(query, sizeof(query), "pCash", PlayerInfo[playerid][pCash]);
    acc_int_strcat(query, sizeof(query), "pAdmin", PlayerInfo[playerid][pAdmin]);
    acc_str_strcat(query, sizeof(query), "pAlogin", PlayerInfo[playerid][pAlogin]);
    acc_int_strcat(query, sizeof(query), "pBank", PlayerInfo[playerid][pBank]);
    acc_int_strcat(query, sizeof(query), "pText", PlayerInfo[playerid][pText]);
    acc_int_strcat(query, sizeof(query), "pMute", PlayerInfo[playerid][pMute]);
    acc_int_strcat(query, sizeof(query), "pMuteTime", PlayerInfo[playerid][pMuteTime]);
    acc_int_strcat(query, sizeof(query), "pPrison", PlayerInfo[playerid][pPrison]);
    acc_int_strcat(query, sizeof(query), "pPrisonTime", PlayerInfo[playerid][pPrisonTime]);
    acc_str_strcat(query, sizeof(query), "pLastIP", PlayerInfo[playerid][pLastIP]);
    acc_int_strcat(query, sizeof(query), "pHouse1", PlayerInfo[playerid][pHouse][0]);
    acc_int_strcat(query, sizeof(query), "pHouse2", PlayerInfo[playerid][pHouse][1]);
    acc_int_strcat(query, sizeof(query), "pHouse3", PlayerInfo[playerid][pHouse][2]);
    acc_int_strcat(query, sizeof(query), "pBizz", PlayerInfo[playerid][pBizz]);
    acc_int_strcat(query, sizeof(query), "pMobile", PlayerInfo[playerid][pMobile]);
    //acc_int_strcat(query, sizeof(query), "pPhone", PlayerInfo[playerid][pPhone]);
    //acc_int_strcat(query, sizeof(query), "pSIM", PlayerInfo[playerid][pSIM]);
    acc_int_strcat(query, sizeof(query), "pNumber", PlayerInfo[playerid][pNumber]);
    acc_int_strcat(query, sizeof(query), "pWatch", PlayerInfo[playerid][pWatch]);
    acc_int_strcat(query, sizeof(query), "pMask", PlayerInfo[playerid][pMask]);
    acc_int_strcat(query, sizeof(query), "pMember", PlayerInfo[playerid][pMember]);
    acc_int_strcat(query, sizeof(query), "pRank", PlayerInfo[playerid][pRank]);
    acc_int_strcat(query, sizeof(query), "pForm", PlayerInfo[playerid][pForm]);
    acc_int_strcat(query, sizeof(query), "pModel", PlayerInfo[playerid][pModel]);
    acc_int_strcat(query, sizeof(query), "pLicensePass", PlayerInfo[playerid][pLicense][LICENSE_PASS]);
    acc_int_strcat(query, sizeof(query), "pLicenseCar", PlayerInfo[playerid][pLicense][LICENSE_CAR]);
    acc_float_strcat(query, sizeof(query), "pLastPosX", PlayerInfo[playerid][pLastPos][0]);
	acc_float_strcat(query, sizeof(query), "pLastPosY", PlayerInfo[playerid][pLastPos][1]);
	acc_float_strcat(query, sizeof(query), "pLastPosZ", PlayerInfo[playerid][pLastPos][2]);
    acc_int_strcat(query, sizeof(query), "pLastInterior", PlayerInfo[playerid][pLastInterior]);
    acc_int_strcat(query, sizeof(query), "pLastVirtualWorld", PlayerInfo[playerid][pLastVirtualWorld]);
    acc_int_strcat(query, sizeof(query), "pArmyTicket", PlayerInfo[playerid][pArmyTicket]);
    acc_int_strcat(query, sizeof(query), "pArmySkill", PlayerInfo[playerid][pArmySkill]);
    acc_int_strcat(query, sizeof(query), "pPromouse", PlayerInfo[playerid][pPromouse]);
    acc_int_strcat(query, sizeof(query), "pProtection", PlayerInfo[playerid][pProtection]);
    acc_str_strcat(query, sizeof(query), "pIPKey", PlayerInfo[playerid][pIPKey]);
    acc_int_strcat(query, sizeof(query), "pGcoin", PlayerInfo[playerid][pGcoin]);
    acc_int_strcat(query, sizeof(query), "pWanted", PlayerInfo[playerid][pWanted]);
    acc_int_strcat(query, sizeof(query), "pDrug", PlayerInfo[playerid][pDrug]);
    acc_int_strcat(query, sizeof(query), "pAddict", PlayerInfo[playerid][pAddict]);
    acc_int_strcat(query, sizeof(query), "pJob", PlayerInfo[playerid][pJob]);
    acc_int_strcat(query, sizeof(query), "pWarn", PlayerInfo[playerid][pWarn]);
    acc_int_strcat(query, sizeof(query), "pWarnTime", PlayerInfo[playerid][pWarnTime]);
    acc_int_strcat(query, sizeof(query), "pRope", PlayerInfo[playerid][pRope]);
	acc_int_strcat(query, sizeof(query), "pFamilyMember", PlayerInfo[playerid][pFamilyMember]);
	acc_int_strcat(query, sizeof(query), "pFamilyRank", PlayerInfo[playerid][pFamilyRank]);
	acc_int_strcat(query, sizeof(query), "pPayday", PlayerInfo[playerid][pPayday]);
	acc_int_strcat(query, sizeof(query), "pDonateRank", PlayerInfo[playerid][pDonateRank]);
	acc_int_strcat(query, sizeof(query), "pVipTime", PlayerInfo[playerid][pVipTime]);
	acc_int_strcat(query, sizeof(query), "pKills", PlayerInfo[playerid][pKills]);
	acc_int_strcat(query, sizeof(query), "pDeaths", PlayerInfo[playerid][pDeaths]);
	acc_int_strcat(query, sizeof(query), "pDirectory", PlayerInfo[playerid][pDirectory]);
	acc_int_strcat(query, sizeof(query), "pFightSkillFirst", PlayerInfo[playerid][pFightSkill][0]);
	acc_int_strcat(query, sizeof(query), "pFightSkillSecond", PlayerInfo[playerid][pFightSkill][1]);
	acc_int_strcat(query, sizeof(query), "pFightSkillThird", PlayerInfo[playerid][pFightSkill][2]);
	acc_int_strcat(query, sizeof(query), "pCashAmount", PlayerInfo[playerid][pCashAmount]);
	acc_int_strcat(query, sizeof(query), "pPIN", PlayerInfo[playerid][pPIN]);
	acc_int_strcat(query, sizeof(query), "pElections", PlayerInfo[playerid][pElections]);
    acc_str_strcat(query, sizeof(query), "pMarry", PlayerInfo[playerid][pMarry]);
    acc_int_strcat(query, sizeof(query), "pBitcoin", PlayerInfo[playerid][pBitcoin]);
    acc_int_strcat(query, sizeof(query), "pAdmin_PlayedTime", PlayerInfo[playerid][pAdmin_PlayedTime]);
    acc_int_strcat(query, sizeof(query), "pAdmin_Mute", PlayerInfo[playerid][pAdmin_Mute]);
    acc_int_strcat(query, sizeof(query), "pAdmin_Prison", PlayerInfo[playerid][pAdmin_Prison]);
    acc_int_strcat(query, sizeof(query), "pAdmin_Warn", PlayerInfo[playerid][pAdmin_Warn]);
    acc_int_strcat(query, sizeof(query), "pAdmin_Ban", PlayerInfo[playerid][pAdmin_Ban]);
    acc_int_strcat(query, sizeof(query), "pAdmin_ReportAnswer", PlayerInfo[playerid][pAdmin_ReportAnswer]);
    acc_int_strcat(query, sizeof(query), "pAdmin_Kick", PlayerInfo[playerid][pAdmin_Kick]);
    acc_int_strcat(query, sizeof(query), "pAdminWarning", PlayerInfo[playerid][pAdminWarning]);
    acc_int_strcat(query, sizeof(query), "pTrailerJob", PlayerInfo[playerid][pTrailerJob]);
    acc_int_strcat(query, sizeof(query), "pCasinoBlock", PlayerInfo[playerid][pCasinoBlock]);
    acc_int_strcat(query, sizeof(query), "CaseSilver", PlayerInfo[playerid][pCases][CASE_TYPE_SILVER]);
	acc_int_strcat(query, sizeof(query), "CaseMagic", PlayerInfo[playerid][pCases][CASE_TYPE_MAGIC]);
	acc_int_strcat(query, sizeof(query), "CaseTitany", PlayerInfo[playerid][pCases][CASE_TYPE_TITANY]);
    acc_int_strcat(query, sizeof(query), "pAlreadyRobbed", PlayerInfo[playerid][pAlreadyRobbed]);
    acc_int_strcat(query, sizeof(query), "pMaterial", PlayerInfo[playerid][pMaterial]);
    for(new i = 0; i < MAX_QUEST; i ++)
    {
    	format(string, sizeof(string), "pQuest%d", i);
    	acc_int_strcat(query, sizeof(query), string, PlayerInfo[playerid][pQuest][i]);
    }
    for(new i = 0; i < MAX_VIDEO_CARDS; i ++)
    {
       	format(string, sizeof(string), "pVideoCardType%d", i);
    	acc_int_strcat(query, sizeof(query), string, PlayerInfo[playerid][pVideoCardType][i]);
    	format(string, sizeof(string), "pVideoCardStatus%d", i);
    	acc_int_strcat(query, sizeof(query), string, PlayerInfo[playerid][pVideoCardStatus][i]);
	    format(string, sizeof(string), "pVideoCardWorked%d", i);
    	acc_int_strcat(query, sizeof(query), string, PlayerInfo[playerid][pVideoCardWorked][i]);
    }
    /* ================================================================== */
	new year, month, day;
	getdate(year, month, day);
	new hour,minuite,second;
  	gettime(hour,minuite,second);
	format(string,sizeof(string), "%d/%d/%d, %d:%d",day,month,year,hour,minuite);
	acc_str_strcat(query, sizeof(query), "pOnline", string);
    /* ================================================================== */

    strdel(query, strlen(query)-1, strlen(query));
    stringclear(string);

    // Get Correct Name
    new my_name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, my_name, sizeof(my_name));

    // Inventory
    SaveInventory(my_name);

    // SQL Active
	format(string,sizeof(string)," WHERE `Name` = '%s'",my_name);
	strcat(query, string);
	mysql_query(connect, query);
    return true;
}
function RegisterPlayerData(playerid)
{
    PlayerInfo[playerid][pLevel] = 1;
    PlayerInfo[playerid][pExp] = 1;
    PlayerInfo[playerid][pSkin] = HomelessSkins[random(sizeof(HomelessSkins))][PlayerInfo[playerid][pSex]-1];
    PlayerInfo[playerid][pCash] = 500;
    PlayerInfo[playerid][pAdmin] = 0;
    SetString(PlayerInfo[playerid][pAlogin], GeneratePassword(6));
    new ip[16];
	GetPlayerIp(playerid, ip, 16);
	SetString(PlayerInfo[playerid][pRegIP], ip);
	PlayerUpdateDataString(playerid, "pRegIP", PlayerInfo[playerid][pRegIP]);
	SetString(PlayerInfo[playerid][pIPKey], "-");
	PlayerUpdateDataString(playerid, "pIPKey", PlayerInfo[playerid][pIPKey]);
	SetString(PlayerInfo[playerid][pMarry], "-");
	PlayerUpdateDataString(playerid, "pMarry", PlayerInfo[playerid][pMarry]);
 	/* ================================================================== */
	new year, month, day, string[100];
	getdate(year, month, day);
	new hour,minuite,second;
  	gettime(hour,minuite,second);
	format(string,sizeof(string), "%d/%d/%d, %d:%d",day,month,year,hour,minuite);
	PlayerUpdateDataString(playerid, "pRegDate", string);
    /* ================================================================== */
    SavePlayerData(playerid);
    return true;
}
function LoadHouseData()
{
    new hstr[300];
    new rows, pingtime = GetTickCount(), j = -1;
	cache_get_row_count(rows);
	if(rows)
	{
		for (new i = 1; i <= rows; i ++)
		{
            j = i-1;
		    cache_get_value_name_int(j, "hID", HouseInfo[i][hID]);
            //
            cache_get_value_name_float(j, "hPosition0", HouseInfo[i][hPosition][0]);
            cache_get_value_name_float(j, "hPosition1", HouseInfo[i][hPosition][1]);
            cache_get_value_name_float(j, "hPosition2", HouseInfo[i][hPosition][2]);
            //
            cache_get_value_name_float(j, "hExitPosition0", HouseInfo[i][hExitPosition][0]);
            cache_get_value_name_float(j, "hExitPosition1", HouseInfo[i][hExitPosition][1]);
            cache_get_value_name_float(j, "hExitPosition2", HouseInfo[i][hExitPosition][2]);
            //
            cache_get_value_name_float(j, "hCarPosition0", HouseInfo[i][hCarPosition][0]);
            cache_get_value_name_float(j, "hCarPosition1", HouseInfo[i][hCarPosition][1]);
            cache_get_value_name_float(j, "hCarPosition2", HouseInfo[i][hCarPosition][2]);
            cache_get_value_name_float(j, "hCarPosition3", HouseInfo[i][hCarPosition][3]);
            //
            cache_get_value_name_float(j, "hFacingAngle", HouseInfo[i][hFacingAngle]);
            cache_get_value_name_int(j, "hClass", HouseInfo[i][hClass]);
            cache_get_value_name_int(j, "hPrice", HouseInfo[i][hPrice]);
            cache_get_value_name(j, "hOwner", HouseInfo[i][hOwner], MAX_PLAYER_NAME);
            cache_get_value_name_int(j, "hOwned", HouseInfo[i][hOwned]);
            cache_get_value_name_int(j, "hBalance", HouseInfo[i][hBalance]);
            cache_get_value_name_int(j, "hTax", HouseInfo[i][hTax]);
            cache_get_value_name_int(j, "hInterior", HouseInfo[i][hInterior]);
            cache_get_value_name_int(j, "hLock", HouseInfo[i][hLock]);
            cache_get_value_name_int(j, "hGarage", HouseInfo[i][hGarage]);
            //
            TotalHouse ++;
            if(HouseInfo[i][hOwned])
            {
                HouseInfo[i][hPickup] = CreateDynamicPickup(19522,23, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2]);
            }
            else
            {
                HouseInfo[i][hPickup] = CreateDynamicPickup(1273,23, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2]);
            }
            HouseInfo[i][hInsidePickup] = CreateDynamicPickup(1239,23, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2], i+11);
			HouseInfo[i][hGaragePickup] = CreateDynamicPickup(1272,23, 2372.8267, 793.5201, 1013.4380, i+11);
            format(hstr, 300, "{369B5A}House ID: {ffffff}%d\n{85c1e9}Owner:{ffffff} %s\n{85c1e9}Price:{ffffff} %d$\n"color_house"Door:{ffffff} %s\n{819FF7}Class:{ffffff} %s\n"color_house"Garage:{ffffff} %s",HouseInfo[i][hID],HouseInfo[i][hOwner],HouseInfo[i][hPrice],(HouseInfo[i][hLock]? ("Locked") : ("Opened")),GetClassName(HouseInfo[i][hClass]),(HouseInfo[i][hGarage]? ("Akvs") : ("Ar Akvs")));
            HouseInfo[i][hText] = CreateDynamic3DTextLabel(hstr, COLOR_WHITE, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2], 5.0);
		}
        printf("<LoadingMode> House Loaded <%d>. ping: <%d ms>.", TotalHouse, GetTickCount() - pingtime);
	}
}
function SaveHouseData(houseid)
{
    new query[700], string[150];
    query = "UPDATE `house` SET ";
    //
    acc_int_strcat(query, sizeof(query), "hID", HouseInfo[houseid][hID]);
    acc_float_strcat(query, sizeof(query), "hPosition0", HouseInfo[houseid][hPosition][0]);
    acc_float_strcat(query, sizeof(query), "hPosition1", HouseInfo[houseid][hPosition][1]);
    acc_float_strcat(query, sizeof(query), "hPosition2", HouseInfo[houseid][hPosition][2]);
    //
    acc_float_strcat(query, sizeof(query), "hExitPosition0", HouseInfo[houseid][hExitPosition][0]);
    acc_float_strcat(query, sizeof(query), "hExitPosition1", HouseInfo[houseid][hExitPosition][1]);
    acc_float_strcat(query, sizeof(query), "hExitPosition2", HouseInfo[houseid][hExitPosition][2]);
    //
    acc_float_strcat(query, sizeof(query), "hCarPosition0", HouseInfo[houseid][hCarPosition][0]);
    acc_float_strcat(query, sizeof(query), "hCarPosition1", HouseInfo[houseid][hCarPosition][1]);
    acc_float_strcat(query, sizeof(query), "hCarPosition2", HouseInfo[houseid][hCarPosition][2]);
    acc_float_strcat(query, sizeof(query), "hCarPosition3", HouseInfo[houseid][hCarPosition][3]);
    //
    acc_float_strcat(query, sizeof(query), "hFacingAngle", HouseInfo[houseid][hFacingAngle]);
    //
    acc_int_strcat(query, sizeof(query), "hClass", HouseInfo[houseid][hClass]);
    acc_int_strcat(query, sizeof(query), "hPrice", HouseInfo[houseid][hPrice]);
    acc_str_strcat(query, sizeof(query), "hOwner", HouseInfo[houseid][hOwner]);
    acc_int_strcat(query, sizeof(query), "hOwned", HouseInfo[houseid][hOwned]);
    acc_int_strcat(query, sizeof(query), "hBalance", HouseInfo[houseid][hBalance]);
    acc_int_strcat(query, sizeof(query), "hTax", HouseInfo[houseid][hTax]);
    acc_int_strcat(query, sizeof(query), "hInterior", HouseInfo[houseid][hInterior]);
    acc_int_strcat(query, sizeof(query), "hLock", HouseInfo[houseid][hLock]);
    acc_int_strcat(query, sizeof(query), "hGarage", HouseInfo[houseid][hGarage]);
    //
    strdel(query, strlen(query)-1, strlen(query));
    // SQL Active
	format(string,sizeof(string)," WHERE `hID` = '%d'",HouseInfo[houseid][hID]);
	strcat(query, string);
	mysql_query(connect, query);
    return true;
}
function LoadBizzData()
{
    new rows, pingtime = GetTickCount(), j = -1;
	cache_get_row_count(rows);
	if(rows)
	{
		for (new i = 1; i <= rows; i ++)
		{
            j = i-1;
		    cache_get_value_name_int(j, "bID", BizzInfo[i][bID]);
            //
            cache_get_value_name_float(j, "bEnterPos0", BizzInfo[i][bEnterPos][0]);
            cache_get_value_name_float(j, "bEnterPos1", BizzInfo[i][bEnterPos][1]);
            cache_get_value_name_float(j, "bEnterPos2", BizzInfo[i][bEnterPos][2]);
            cache_get_value_name_float(j, "bExitPos0", BizzInfo[i][bExitPos][0]);
            cache_get_value_name_float(j, "bExitPos1", BizzInfo[i][bExitPos][1]);
            cache_get_value_name_float(j, "bExitPos2", BizzInfo[i][bExitPos][2]);
            cache_get_value_name_float(j, "bEnteredPos0", BizzInfo[i][bEnteredPos][0]);
            cache_get_value_name_float(j, "bEnteredPos1", BizzInfo[i][bEnteredPos][1]);
            cache_get_value_name_float(j, "bEnteredPos2", BizzInfo[i][bEnteredPos][2]);
            cache_get_value_name_float(j, "bExitedPos0", BizzInfo[i][bExitedPos][0]);
            cache_get_value_name_float(j, "bExitedPos1", BizzInfo[i][bExitedPos][1]);
            cache_get_value_name_float(j, "bExitedPos2", BizzInfo[i][bExitedPos][2]);
            cache_get_value_name_float(j, "bBar0", BizzInfo[i][bBar][0]);
            cache_get_value_name_float(j, "bBar1", BizzInfo[i][bBar][1]);
            cache_get_value_name_float(j, "bBar2", BizzInfo[i][bBar][2]);
            cache_get_value_name_float(j, "bEnteredAngle", BizzInfo[i][bEnteredAngle]);
            cache_get_value_name_float(j, "bExitedAngle", BizzInfo[i][bExitedAngle]);
            //
            cache_get_value_name_int(j, "bType", BizzInfo[i][bType]);
            cache_get_value_name_int(j, "bPrice", BizzInfo[i][bPrice]);
            cache_get_value_name(j, "bName", BizzInfo[i][bName], 32);
            cache_get_value_name(j, "bOwner", BizzInfo[i][bOwner], MAX_PLAYER_NAME);
            cache_get_value_name_int(j, "bOwned", BizzInfo[i][bOwned]);
            cache_get_value_name_int(j, "bSafe", BizzInfo[i][bSafe]);
            cache_get_value_name_int(j, "bTax", BizzInfo[i][bTax]);
            cache_get_value_name_int(j, "bLock", BizzInfo[i][bLock]);
            cache_get_value_name_int(j, "bProducts", BizzInfo[i][bProducts]);
            cache_get_value_name_int(j, "bProductPrice", BizzInfo[i][bProductPrice]);
            cache_get_value_name_int(j, "bEnterPrice", BizzInfo[i][bEnterPrice]);
            cache_get_value_name_int(j, "bPickupid", BizzInfo[i][bPickupid]);
            cache_get_value_name_int(j, "bInterior", BizzInfo[i][bInterior]);
            //
            TotalBizz ++;
            BizzInfo[i][bPickup] = CreateDynamicPickup(BizzInfo[i][bPickupid],23, BizzInfo[i][bEnterPos][0], BizzInfo[i][bEnterPos][1], BizzInfo[i][bEnterPos][2], 0);
            BizzInfo[i][bExitPickup] = CreateDynamicPickup(1318,23, BizzInfo[i][bExitPos][0], BizzInfo[i][bExitPos][1], BizzInfo[i][bExitPos][2], i+22);
            format(gstr, sizeof(gstr), color_bizz"Name:{ffffff} %s\n"color_bizz"Enter Price:{ffffff} %d$\n"color_bizz"Owner:{ffffff} %s",BizzInfo[i][bName],BizzInfo[i][bEnterPrice],BizzInfo[i][bOwner]);
            BizzInfo[i][bText] = CreateDynamic3DTextLabel(gstr, COLOR_WHITE, BizzInfo[i][bEnterPos][0], BizzInfo[i][bEnterPos][1], BizzInfo[i][bEnterPos][2], 7.0);
            CreateDynamic3DTextLabel("{ffffff}Press "color_bizz"Y", COLOR_WHITE, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2], 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, i+22);

            new pickup_id = 1239;
            switch(BizzInfo[i][bType])
            {
                case 1:
				{
					pickup_id = 19592;
					CreateDynamicMapIcon(BizzInfo[i][bEnterPos][0], BizzInfo[i][bEnterPos][1], BizzInfo[i][bEnterPos][2], 17, 0, -1, -1, -1, 300);
				}
                case 2:
                {
                    CreateDynamicMapIcon(BizzInfo[i][bEnterPos][0], BizzInfo[i][bEnterPos][1], BizzInfo[i][bEnterPos][2], 29, 0, -1, -1, -1, 300);
                }
            }
            if(!strcmp(BizzInfo[i][bName], "Casino"))
            {
                CreateDynamicMapIcon(BizzInfo[i][bEnterPos][0], BizzInfo[i][bEnterPos][1], BizzInfo[i][bEnterPos][2], 25, 0, -1, -1, -1, 300); // Casino
            }
            // type | 1 - Market | 2 - Restourant | 3 - Club
            BizzInfo[i][bBarPickup] = CreateDynamicPickup(pickup_id,23, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2], i+22);
		}
        printf("<LoadingMode> Bussiness Loaded <%d>. ping: <%d ms>.", TotalBizz, GetTickCount() - pingtime);
	}
}
function SaveBizzData(bizzid)
{
    new query[800], string[150];
    query = "UPDATE `bizz` SET ";
    //
    acc_int_strcat(query, sizeof(query), "bID", BizzInfo[bizzid][bID]);
    //
    acc_float_strcat(query, sizeof(query), "bEnterPos0", BizzInfo[bizzid][bEnterPos][0]);
    acc_float_strcat(query, sizeof(query), "bEnterPos1", BizzInfo[bizzid][bEnterPos][1]);
    acc_float_strcat(query, sizeof(query), "bEnterPos2", BizzInfo[bizzid][bEnterPos][2]);
    acc_float_strcat(query, sizeof(query), "bExitPos0", BizzInfo[bizzid][bExitPos][0]);
    acc_float_strcat(query, sizeof(query), "bExitPos1", BizzInfo[bizzid][bExitPos][1]);
    acc_float_strcat(query, sizeof(query), "bExitPos2", BizzInfo[bizzid][bExitPos][2]);
    acc_float_strcat(query, sizeof(query), "bEnteredPos0", BizzInfo[bizzid][bEnteredPos][0]);
    acc_float_strcat(query, sizeof(query), "bEnteredPos1", BizzInfo[bizzid][bEnteredPos][1]);
    acc_float_strcat(query, sizeof(query), "bEnteredPos2", BizzInfo[bizzid][bEnteredPos][2]);
    acc_float_strcat(query, sizeof(query), "bExitedPos0", BizzInfo[bizzid][bExitedPos][0]);
    acc_float_strcat(query, sizeof(query), "bExitedPos1", BizzInfo[bizzid][bExitedPos][1]);
    acc_float_strcat(query, sizeof(query), "bExitedPos2", BizzInfo[bizzid][bExitedPos][2]);
    acc_float_strcat(query, sizeof(query), "bBar0", BizzInfo[bizzid][bBar][0]);
    acc_float_strcat(query, sizeof(query), "bBar1", BizzInfo[bizzid][bBar][1]);
    acc_float_strcat(query, sizeof(query), "bBar2", BizzInfo[bizzid][bBar][2]);
    acc_float_strcat(query, sizeof(query), "bEnteredAngle", BizzInfo[bizzid][bEnteredAngle]);
    acc_float_strcat(query, sizeof(query), "bExitedAngle", BizzInfo[bizzid][bExitedAngle]);
    //
    acc_int_strcat(query, sizeof(query), "bType", BizzInfo[bizzid][bType]);
    acc_int_strcat(query, sizeof(query), "bPrice", BizzInfo[bizzid][bPrice]);
    acc_str_strcat(query, sizeof(query), "bName", BizzInfo[bizzid][bName]);
    acc_str_strcat(query, sizeof(query), "bOwner", BizzInfo[bizzid][bOwner]);
    acc_int_strcat(query, sizeof(query), "bOwned", BizzInfo[bizzid][bOwned]);
    acc_int_strcat(query, sizeof(query), "bSafe", BizzInfo[bizzid][bSafe]);
    acc_int_strcat(query, sizeof(query), "bTax", BizzInfo[bizzid][bTax]);
    acc_int_strcat(query, sizeof(query), "bLock", BizzInfo[bizzid][bLock]);
    acc_int_strcat(query, sizeof(query), "bProducts", BizzInfo[bizzid][bProducts]);
    acc_int_strcat(query, sizeof(query), "bProductPrice", BizzInfo[bizzid][bProductPrice]);
    acc_int_strcat(query, sizeof(query), "bEnterPrice", BizzInfo[bizzid][bEnterPrice]);
    acc_int_strcat(query, sizeof(query), "bPickupid", BizzInfo[bizzid][bPickupid]);
    acc_int_strcat(query, sizeof(query), "bInterior", BizzInfo[bizzid][bInterior]);
    //
    strdel(query, strlen(query)-1, strlen(query));
    // SQL Active
	format(string,sizeof(string)," WHERE `bID` = '%d'",BizzInfo[bizzid][bID]);
	strcat(query, string);
	mysql_query(connect, query);
    return true;
}
function LoadZones()
{
    new pingtime = GetTickCount();
    new rows, j;
	cache_get_row_count(rows);
	if(rows)
	{
	    for(new i = 1; i <= rows; i++)
		{
		   	j = i-1;
		   	TotalZone ++;
		    cache_get_value_name_int(j, "ZoneID", ZoneInfo[TotalZone][ZoneID]);
		    cache_get_value_name(j, "ZoneName", ZoneInfo[TotalZone][ZoneName], 32);
		    cache_get_value_name_float(j, "ZonePosX", ZoneInfo[TotalZone][ZonePosX]);
			cache_get_value_name_float(j, "ZonePosY", ZoneInfo[TotalZone][ZonePosY]);
			cache_get_value_name_float(j, "ZonePosZ", ZoneInfo[TotalZone][ZonePosZ]);
			cache_get_value_name_float(j, "ZoneDistance", ZoneInfo[TotalZone][ZoneDistance]);
			cache_get_value_name_int(j, "ZoneVirtualWorld", ZoneInfo[TotalZone][ZoneVirtualWorld]);
        }
        printf("<LoadingMode> Zones Loaded <%d>. ping: <%d ms>.", TotalZone, GetTickCount() - pingtime);
    }
	return true;
}
function LoadAutoSalon()
{
    new time = GetTickCount();
	if(!cache_num_rows()) return printf("[Function LoadAutoSalon] AutoSalon Chatvirtva Ver Moxerxda!");
	for(new i = 0 ; i != cache_num_rows(); i ++)
	{
	    cache_get_value_name_int(i, "ID", CarInfo[i][ID]);
	    cache_get_value_name_float(i, "CarPosX", CarInfo[i][CarPosX]);
		cache_get_value_name_float(i, "CarPosY", CarInfo[i][CarPosY]);
		cache_get_value_name_float(i, "CarPosZ", CarInfo[i][CarPosZ]);
		cache_get_value_name_float(i, "CarPosC", CarInfo[i][CarPosC]);
		cache_get_value_name(i, "CarOwner", CarInfo[i][CarOwner], 32);
		cache_get_value_name_int(i,"CarID", CarInfo[i][CarID]);
		cache_get_value_name_int(i, "CarPrice", CarInfo[i][CarPrice]);
		cache_get_value_name_int(i, "CarStatus", CarInfo[i][CarStatus]);
		cache_get_value_name_int(i, "CarSlot", CarInfo[i][CarSlot]);
		cache_get_value_name_int(i, "CarTime", CarInfo[i][CarTime]);
		if(CarInfo[i][CarStatus] == 0) format(Salon_String, sizeof(Salon_String), "?{3399FF}%d\n{FFFFFF}Adgili: {3399FF}Tavisufalia\n{FFFFFF}Fasi: {3399FF}5.000$\n{FFFFFF}Daachiret: {3399FF}H{FFFFFF}'s", CarInfo[i][ID]);
		else if(CarInfo[i][CarStatus] == 1)
		{
		    format(Salon_String, sizeof(Salon_String), "?{3399FF}%d\n{FFFFFF}Adgili: {3399FF}Dakavebulia\n{FFFFFF}Dro: {3399FF}%d {FFFFFF}Saati\n{FFFFFF}Mflobeli: {3399FF}%s\n{FFFFFF}Model: {3399FF}%s\n{FFFFFF}Fasi: {3399FF}%d$\n{FFFFFF}Daachiret: {3399FF}ALT{FFFFFF}'s", CarInfo[i][ID], CarInfo[i][CarTime], CarInfo[i][CarOwner], GetVehicleName(CarInfo[i][CarID]), CarInfo[i][CarPrice]);
			CarInfo[i][CarIDInfo] = CreateVehicle(CarInfo[i][CarID], CarInfo[i][CarPosX], CarInfo[i][CarPosY], CarInfo[i][CarPosZ], CarInfo[i][CarPosC], 0, 0, 1800);
		  	GetVehicleParamsEx(CarInfo[i][CarIDInfo], engines,lightss,alarms,doorss,bonnets,boots,objectives);
			SetVehicleParamsEx(CarInfo[i][CarIDInfo], 0,lightss,alarms,1,bonnets,boots,objectives);
		}
		CarInfo[i][CarText] = CreateDynamic3DTextLabel(Salon_String, COLOR_WHITE, CarInfo[i][CarPosX], CarInfo[i][CarPosY], CarInfo[i][CarPosZ], 10.0);
		TotalCar += 1;
    }
	printf("[Cars Loaded]: <%i>. TIME: <%i ms>.", TotalCar, GetTickCount() - time);
	return true;
}
function SaveFracBank()
{
	new query[700];
	query = "UPDATE `FracBank` SET ";
	acc_int_strcat(query, sizeof(query), "BallasBank",BallasBank);
	acc_int_strcat(query, sizeof(query), "VagosBank",VagosBank);
	acc_int_strcat(query, sizeof(query), "GroveBank",GroveBank);
	acc_int_strcat(query, sizeof(query), "AztecaBank",AztecaBank);
	acc_int_strcat(query, sizeof(query), "RifaBank",RifaBank);
	//acc_int_strcat(query, sizeof(query), "CityHallBank",CityHallBank);
	strdel(query, strlen(query)-1, strlen(query));
	mysql_tquery(connect, query, "", "");
	return 1;
}
function LoadFracBank()
{
	new rows;
	cache_get_row_count(rows);
	cache_get_value_name_int(0, "BallasBank",BallasBank);
	cache_get_value_name_int(0, "VagosBank",VagosBank);
	cache_get_value_name_int(0, "GroveBank",GroveBank);
	cache_get_value_name_int(0, "AztecaBank",AztecaBank);
	cache_get_value_name_int(0, "RifaBank",RifaBank);
	//cache_get_value_name_int(0, "CityHallBank",CityHallBank);
	return 1;
}
function SaveWH()
{
	new query[700];
	query = "UPDATE `FracWH` SET ";
	acc_int_strcat(query, sizeof(query), "BallasMat",BallasMat);
	acc_int_strcat(query, sizeof(query), "VagosMat",VagosMat);
	acc_int_strcat(query, sizeof(query), "GroveMat",GroveMat);
	acc_int_strcat(query, sizeof(query), "AztecaMat",AztecaMat);
	acc_int_strcat(query, sizeof(query), "RifaMat",RifaMat);
	/*acc_int_strcat(query, sizeof(query), "BallasDrugs",BallasDrugs);
	acc_int_strcat(query, sizeof(query), "VagosDrugs",VagosDrugs);
	acc_int_strcat(query, sizeof(query), "GroveDrugs",GroveDrugs);
	acc_int_strcat(query, sizeof(query), "AztecaDrugs",AztecaDrugs);
	acc_int_strcat(query, sizeof(query), "RifaDrugs",RifaDrugs);
	acc_int_strcat(query, sizeof(query), "YakuzaMat",YakuzaMat);
	acc_int_strcat(query, sizeof(query), "LCNMat",LCNMat);
	acc_int_strcat(query, sizeof(query), "RMMat",RMMat);*/
	strdel(query, strlen(query)-1, strlen(query));
	mysql_tquery(connect, query, "", "");
	return 1;
}
function LoadWH()
{
	new rows;
	cache_get_row_count(rows);
	cache_get_value_name_int(0, "BallasMat",BallasMat);
	cache_get_value_name_int(0, "VagosMat",VagosMat);
	cache_get_value_name_int(0, "GroveMat",GroveMat);
	cache_get_value_name_int(0, "AztecaMat",AztecaMat);
	cache_get_value_name_int(0, "RifaMat",RifaMat);
	/*cache_get_value_name_int(0, "BallasDrugs",BallasDrugs);
	cache_get_value_name_int(0, "VagosDrugs",VagosDrugs);
	cache_get_value_name_int(0, "GroveDrugs",GroveDrugs);
	cache_get_value_name_int(0, "AztecaDrugs",AztecaDrugs);
	cache_get_value_name_int(0, "RifaDrugs",RifaDrugs);*/
	return 1;
}
function StopAnimation(playerid)
{
    if(Animation[playerid]) Animation[playerid] = false;
    if(ChatAnim[playerid]) ChatAnim[playerid] = false;
    if(Tazed[playerid] == false)
    {
    	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
	}
    return true;
}
function TazedRemove(playerid)
{
	TogglePlayerControllable(playerid, true);
 	ClearAnimations(playerid);
  	Tazed[playerid] = false;
   	return true;
}
function UnFreezePlayer(playerid)
{
    return TogglePlayerControllable(playerid, true);
}
function LoginTimer(playerid)
{
    if(!isLogged[playerid])
    {
        SendClientMessage(playerid, COLOR_FIRST, "Avtorizaciis Dro Amoiwura, Scadet Tavidan");
        Kick(playerid);
        KillTimer(LoginTime[playerid]);
        LoginTime[playerid] = -1;
    }
    return true;
}
function IsAMafia(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case FRACTION_LCN, FRACTION_YAKUZA, FRACTION_RM: return true;
	}
	return false;
}
function SaveMZ()
{
	new string[400];
	new mfilea = ini_openFile("gamefiles/mafiazone.ini");
	new l[10];
	for(new i =0;i<sizeof(McInfo);i++)
	{
		format(l,sizeof(l), "Zone%d",i);
		format(string,sizeof(string), "%f|%f|%f|%f|%d",McInfo[i][Coords][0], McInfo[i][Coords][1],McInfo[i][Coords][2],McInfo[i][Coords][3],McInfo[i][FrakVlad]);
		ini_setString(mfilea,l,string);
	}
	ini_closeFile(mfilea);
}
function LoadMZ()
{
	new string[50];
	new mfilea = ini_openFile("gamefiles/mafiazone.ini");
	new l[1500];
	new asd[5][10];
	for(new i =0;i<sizeof(McInfo);i++)
	{
		format(string,sizeof(string), "Zone%d",i);
		new x = ini_getString(mfilea,string,l);
		if(x < 0)
		{
            print("[Maffia KV] Kvadratebis Chatvirtva Ver Moxerxda");
		}
		else
		{
			split(l,asd,'|');
			McInfo[i][Coords][0] = floatstr(asd[0]);
			McInfo[i][Coords][1] = floatstr(asd[1]);
			McInfo[i][Coords][2] = floatstr(asd[2]);
			McInfo[i][Coords][3] = floatstr(asd[3]);
		}
		McInfo[i][FrakVlad] = strval(asd[4]);
		McInfo[i][ID] = GangZoneCreate(McInfo[i][Coords][0],McInfo[i][Coords][1],McInfo[i][Coords][2],McInfo[i][Coords][3]);
		ZoneOnMBattle[i] = 0;
		MSafeTime[i] = 0;
	}
	ini_closeFile(mfilea);
}
function MfCheck()
{
	for(new i = 0; i < sizeof(McInfo); i++)
	{
		if(ZoneOnMBattle[i] == 1)
		{
			if(MSafeTime[i] > 0) MSafeTime[i] --;
            foreach(new x:Player)
 			{
 			    if(!isLogged[x]) continue;
				new captstr2[150];
				new y = PlayerInfo[x][pMember];
				if(y == McInfo[i][Napad] || y == McInfo[i][FrakVlad])
				{
					if(MFCaptOn[x] == 0)
					{
					    switch(McInfo[i][Napad])
						{
							case FRACTION_LCN:
							{
								PlayerTextDrawColor(x,MaffiaTXT[x][7], -8256257);
							}
							case FRACTION_YAKUZA:
							{
								PlayerTextDrawColor(x,MaffiaTXT[x][7], -13816321);
							}
							case FRACTION_RM:
							{
								PlayerTextDrawColor(x,MaffiaTXT[x][7], -2139062017);
							}
						}
						switch(McInfo[i][FrakVlad])
						{
							case FRACTION_LCN:
							{
								PlayerTextDrawColor(x,MaffiaTXT[x][8], -8256257);
							}
							case FRACTION_YAKUZA:
							{
								PlayerTextDrawColor(x,MaffiaTXT[x][8], -13816321);
							}
							case FRACTION_RM:
							{
								PlayerTextDrawColor(x,MaffiaTXT[x][8], -2139062017);
				            }
				        }
						for(new k; k != 11; k++) PlayerTextDrawShow(x, MaffiaTXT[x][k]);
						MFCaptOn[x] = 1;
					}
					if(MSafeTime[i] > 0) format(captstr2,sizeof(captstr2),"%s",Convert(MSafeTime[i]));
					PlayerTextDrawSetString(x,MaffiaTXT[x][5],captstr2);

					format(captstr2,sizeof(captstr2),"%d", CountOnMFZone[McInfo[i][FrakVlad]]);
					PlayerTextDrawSetString(x, MaffiaTXT[x][6], captstr2);
					format(captstr2,sizeof(captstr2),"%d", CountOnMFZone[McInfo[i][Napad]]);
					PlayerTextDrawSetString(x, MaffiaTXT[x][4], captstr2);

					new highscore = -1;
					new highscoreowner = INVALID_PLAYER_ID;
					foreach(new p:Player)
					{
					    new g = PlayerInfo[p][pMember];
						if(g == McInfo[i][Napad] || g == McInfo[i][FrakVlad])
						{
							if(MKillCounter[p] > highscore)
							{
								highscore = MKillCounter[p];
								highscoreowner = p;
							}
						}
					}
					format(captstr2,sizeof(captstr2),"%s", Name(highscoreowner));
					PlayerTextDrawSetString(x, MaffiaTXT[x][10], captstr2);
				}
			}
			if(MSafeTime[i] <= 0)
			{
				if(CountOnMFZone[McInfo[i][FrakVlad]] > CountOnMFZone[McInfo[i][Napad]])
				{
				    foreach(new x:Player)
				    {
				        new y = PlayerInfo[x][pMember];
						if(y == McInfo[i][Napad] || y == McInfo[i][FrakVlad])
						{
							MFCaptOn[x] = 0;
                            for(new k; k != 11; k++) PlayerTextDrawHide(x, MaffiaTXT[x][k]);
						}
					}
					SendFractionMessage(0x7ADF30AA, "[ZONE INFO] {ffffff}Gilocavt, Tkven Sheinarchunet Tkveni Teritoria", McInfo[i][FrakVlad]);
					SendFractionMessage(0x7ADF30AA, "[ZONE INFO] {ffffff}Samwuxarod Tqven Dakarget Teritoriaze Kontroli", McInfo[i][Napad]);
					CountOnMFZone[McInfo[i][FrakVlad]] = 0;
					CountOnMFZone[McInfo[i][Napad]] = 0;
				}
				else if(CountOnMFZone[McInfo[i][FrakVlad]] < CountOnMFZone[McInfo[i][Napad]])
				{
				    foreach(new x:Player)
				    {
				        new y = PlayerInfo[x][pMember];
						if(y == McInfo[i][Napad] || y == McInfo[i][FrakVlad])
						{
							MFCaptOn[x] = 0;
							for(new k; k != 11; k++) PlayerTextDrawHide(x, MaffiaTXT[x][k]);
						}
					}
					CountOnMFZone[McInfo[i][FrakVlad]] = 0;
					CountOnMFZone[McInfo[i][Napad]] = 0;
					SendFractionMessage(0x7ADF30AA, "[ZONE INFO] {ffffff}Gilocavt, Tqven Daipyarit Axali Teritoria", McInfo[i][Napad]);
					SendFractionMessage(0x7ADF30AA, "[ZONE INFO] {ffffff}Samwuxarod Tqven Dakarget Teritoriaze Kontroli", McInfo[i][FrakVlad]);
					McInfo[i][FrakVlad] = McInfo[i][Napad];
					McInfo[i][Napad] = 0;
				}
				else if(CountOnMFZone[McInfo[i][FrakVlad]] == CountOnMFZone[McInfo[i][Napad]])
				{

				    foreach(new x:Player)
				    {
				        new y = PlayerInfo[x][pMember];
						if(y == McInfo[i][Napad] || y == McInfo[i][FrakVlad])
						{
							MFCaptOn[x] = 0;
							for(new k; k != 11; k++) PlayerTextDrawHide(x, MaffiaTXT[x][k]);
						}
					}
					CountOnMFZone[McInfo[i][FrakVlad]] = 0;
					CountOnMFZone[McInfo[i][Napad]] = 0;
					SendFractionMessage(0x7ADF30AA, "[ZONE INFO] {ffffff}Gilocavt, Tqven Daipyarit Axali Teritoria", McInfo[i][Napad]);
					SendFractionMessage(0x7ADF30AA, "[ZONE INFO] {ffffff}Samwuxarod Tqven Dakarget Teritoriaze Kontroli", McInfo[i][FrakVlad]);
					McInfo[i][FrakVlad] = McInfo[i][Napad];
					McInfo[i][Napad] = 0;
				}
    			ZoneOnMBattle[i] = 0;
				GangZoneStopFlashForAll(McInfo[i][ID]);
				GangZoneHideForAll(McInfo[i][ID]);
				SaveMZ();
				MaffiaTextUPDATE();
				GangZoneShowForAll(McInfo[i][ID],GetMafiaZoneColor(i));
				if(capturesm == 0) KillTimer(MfCheckTimer), MfCheckOn = 0;
				break;
			}
		}
	}
	return true;
}
function AntiCheat(playerid)
{
 	if(GetPlayerMoney(playerid) != PlayerInfo[playerid][pCash])
    {
    	if(GetLauncherStatus(playerid))
		{
			cef_emit_event(playerid, "data:pool:shimshili", CEFINT(100));
			cef_emit_event(playerid, "data:pool:bankmoney", CEFINT(PlayerInfo[playerid][pBank]));
			cef_emit_event(playerid, "data:pool:cashmoney", CEFINT(PlayerInfo[playerid][pCash]));
		}
        ResetPlayerMoney(playerid);
        GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
    }
	if(!isAlogged[playerid]) return false;
	new g_i;
	if(PlayerInfo[playerid][pAdmin] <= 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
		{
			ACKick(playerid, "001", "Cheat");

		}
		if(IsBadWeapon(GetPlayerWeapon(playerid)))
		{
		    ACKick(playerid, "004", "Weapon Hack");
		}
		if((!P_Sync[playerid][s_controllable]) && (g_i = GetPlayerSpeed(playerid)) && g_i > 40)
		{
		    ACKick(playerid, "030", "Unfreeze");
		}
	}
	/*if(IsPlayerInWater(playerid) && (g_i = GetPlayerSpeed(playerid)) && (g_i > 100))
	{
	    ACKick(playerid, "014", "Speed Hack");
	}*/
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
   		if(IsPlayerInRangeOfPoint(playerid, 60.0, 1131.3826, -4.4951, 1000.6797))
		{
		    if(GetPlayerAnimationIndex(playerid) == 1136 || GetPlayerAnimationIndex(playerid) == 504 || GetPlayerAnimationIndex(playerid) == 1140)
		    {
		        SetPlayerVirtualWorld(playerid, 0);
		        SetPlayerInterior(playerid, 0);
		    	SetPlayerPosEx(playerid, 1421.3289, -1623.9585, 13.5469, 1000);
		    	SetCameraBehindPlayer(playerid);
			}
	 	}
    }
    if(IsPlayerInAnyVehicle(playerid))
    {
  		new Float:carhp;
		GetVehicleHealth(GetPlayerVehicleID(playerid), carhp);
		if(carhp >= 1000.0)
		{
		    //ACKick(playerid, "028", "Vehicle Repair");
		}
    }
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    SpeedLimiter(playerid);
	    new vehicleid = GetPlayerVehicleID(playerid), model = GetVehicleModel(vehicleid);
		if((400 <= model <= 611))
		{
		    if(SpeedVehicle(playerid) > 200 && !IsAPlane(vehicleid))
		    {
		    	ACKick(playerid, "002", "Speed Hack");
		    }
			if((max_car_speed(GetVehicleModel(GetPlayerVehicleID(playerid))) + 30) < SpeedVehicle(playerid))
			{
                ACKick(playerid, "019", "Speed Hack");
			}
	 		if(SpeedVehicle(playerid) > 150 && model == 462)
		    {
	 		  	ACKick(playerid, "003", "Speed Hack");
		    }
		}
	}
	return true;
}
function FreshTime()
{
    new stringF[100];
    new hour, minute, second;
	gettime(hour, minute, second);
	FixHour(hour);
	hour = shifthour;
	if(telephoneSamsung[50] != Text:INVALID_TEXT_DRAW && telephoneSamsung[29] != Text:INVALID_TEXT_DRAW)
	{
	    format(stringF, sizeof(stringF), "%02d:%02d", hour, minute);
	    TextDrawSetString(telephoneSamsung[50], stringF);
	    TextDrawSetString(telephoneSamsung[29], stringF);
	}
 	if ((hour > ghour) || (hour == 0 && ghour == 23))
    {
   		if(realtime)
	    {
	        new gminute, gsecond;
	        gettime(ghour, gminute, gsecond);
	        FixHour(ghour);
	        ghour = shifthour;
	        SetWorldTime(shifthour);
	    }
        ResetBank();
        ghour = hour;
        PayDay();
        for(new i = 1; i <= TotalHouse; i ++) SaveHouseData(i);
        for(new i = 1; i <= TotalBizz; i ++) SaveBizzData(i);
        foreach(new i:Player)
        {
            SavePlayerData(i);
        }
	}
    if(EventInfo[event_On] == true && EventInfo[event_Time] > 0)
    {
        EventInfo[event_Time] --;
        UpdateEvent();
    }
    else if(EventInfo[event_On] == true && EventInfo[event_Time] <= 0)
    {
        EventInfo[event_Time] = 0;
        EventInfo[event_On] = false;
        SetString(EventInfo[event_Name], "");
        EndEvent();
    }
	if(miwera > 0) miwera -= 1;
	new Float:cefhp, Float:cefarmor;
    foreach(new i:Player)
    {
        if(IsPlayerNPC(i)) continue;
        if(!isLogged[i]) continue;
        AntiCheat(i);
        /**************************** CEF System *******************************/
        if(GetLauncherStatus(i))
		{
			cef_emit_event(i, "data:pool:shimshili", CEFINT(0));
			cef_emit_event(i, "data:pool:bankmoney", CEFINT(PlayerInfo[i][pBank]));
			cef_emit_event(i, "data:pool:cashmoney", CEFINT(PlayerInfo[i][pCash]));
			cef_emit_event(i, "data:pool:wantedlevel", CEFINT(PlayerInfo[i][pWanted]));
			if(IsPlayerInGreenZone(i))
			{
				if(GetPVarInt(i, "cef_gz") == 0) {
				    cef_emit_event(i, "data:pool:greenzone", CEFINT(1));
					SetPVarInt(i, "cef_gz", 1);
				}
			}
			else
			{
				if(GetPVarInt(i, "cef_gz") == 1) {
				    cef_emit_event(i, "data:pool:greenzone", CEFINT(0));
					SetPVarInt(i, "cef_gz", 0);
				}
			}
            GetPlayerHealth(i, cefhp);
            GetPlayerArmour(i, cefarmor);
			cef_emit_event(i, "data:pool:health", CEFINT(floatround(cefhp)));
			cef_emit_event(i, "data:pool:armor", CEFINT(floatround(cefarmor)));
		}
		else
		{
  			if(IsPlayerInGreenZone(i))
			{
			    if(TD_Fixer_gz[i] == 0)
			    {
			        TD_Fixer_gz[i] = 1;
		            for(new j = 0; j < 16; j ++)
		            {
			 			TextDrawShowForPlayer(i, greenzone_TD[j]);
					}
				}
			}
		    else
			{
			    if(TD_Fixer_gz[i] == 1)
			    {
			        TD_Fixer_gz[i] = 0;
		            for(new j = 0; j < 16; j ++)
		            {
			 			TextDrawHideForPlayer(i, greenzone_TD[j]);
					}
				}
			}
		}
        /**************************** AFK System *******************************/
        if(GetPVarInt(i,"AFK_Tick") > 10000) SetPVarInt(i,"AFK_Tick",1), SetPVarInt(i,"AFK_Check",0);
        if(GetPVarInt(i,"AFK_Check") < GetPVarInt(i,"AFK_Tick") && GetPlayerState(i)) SetPVarInt(i,"AFK_Check",GetPVarInt(i,"AFK_Tick")), SetPVarInt(i,"AFK_Time",0);
        if(GetPVarInt(i,"AFK_Check") == GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
        {
            SetPVarInt(i,"AFK_Time",GetPVarInt(i,"AFK_Time") + 1);
            if(GetPVarInt(i, "AFK_Time") > 2)
            {
                format(stringF,sizeof(stringF), "{4FB64F}[AFK] : {ffffff}%s",Convert(GetPVarInt(i,"AFK_Time")-2));
                SetPlayerChatBubble(i, stringF, COLOR_RED, 30.0, 1200);
            }
            if(PlayerInfo[i][pAdmin] == 0 && GetPVarInt(i, "AFK_Time") >= MAX_AFK_TIME)
            {
				SendClientMessage(i, 0xFE642EFF, "Tkven Gakiket Serveridan{ffffff} (#024)");
                Kick(i);
            }
        }
        if(RobbingStarted[i]) ApplyAnimation(i, "CAR_CHAT", "CAR_Sc4_BL", 4.1, 1, 1, 1, 0, 0);
        if(MedicReviveTime[i]) MedicReviveTime[i] --;

        if(PlayerInfo[i][pMute] == 1 && PlayerInfo[i][pMuteTime] > 0) PlayerInfo[i][pMuteTime] --;
        else if(PlayerInfo[i][pMute] == 1 && PlayerInfo[i][pMuteTime] <= 0)
        {
            SvMutePlayerDisable(i);
            GameTextForPlayer(i, "~g~unmute", 3000, 1);
            PlayerInfo[i][pMute] = 0;
            PlayerUpdateData(i, "pMute", PlayerInfo[i][pMute]);
        	PlayerInfo[i][pMuteTime] = 0;
            PlayerUpdateData(i, "pMuteTime", PlayerInfo[i][pMuteTime]);
        }
        if(PlayerInfo[i][pPrison] >= 1 && PlayerInfo[i][pPrisonTime] > 0)
		{
		    format(stringF, sizeof(stringF), "%s", Convert(PlayerInfo[i][pPrisonTime]));
			PlayerTextDrawSetString(i, Timer_PTD[i], stringF);
			PlayerInfo[i][pPrisonTime] --;
		}
        else if(PlayerInfo[i][pPrison] >= 1 && PlayerInfo[i][pPrisonTime] <= 0)
        {
            GameTextForPlayer(i, "~g~unprison", 3000, 1);
            PlayerInfo[i][pPrison] = 0;
            PlayerUpdateData(i, "pPrison", PlayerInfo[i][pPrison]);
        	PlayerInfo[i][pPrisonTime] = 0;
            PlayerUpdateData(i, "pPrisonTime", PlayerInfo[i][pPrisonTime]);
            SpawnPlayer(i);
            SendClientMessage(i, COLOR_YELLOW, "Tkven Moixadet Sasjeli");
			PlayerTextDrawShow(i, Timer_PTD[i]);
        }
       	if(PlayerInfo[i][pPrison] == 1 && !IsPlayerInRangeOfPoint(i, 80.0, 5512.5005, 1245.4078, 23.1886))
		{
		    if(++CheatInDemorgan[i] > 3) Kick(i);
		    SpawnPlayer(i);
		}
		if(PlayerInfo[i][pPrison] == 2 && !IsPlayerInRangeOfPoint(i, 50.0, 1230.6383, 1346.2228, 3011.0005))
		{
		   	if(++CheatInDemorgan[i] > 3) Kick(i);
		    SpawnPlayer(i);
			SvMutePlayerEnable(i);
		}
		if(PlayerInfo[i][pWanted] > 0 && WantedTime[i] > 0) WantedTime[i] --;
		else if(PlayerInfo[i][pWanted] > 0 && WantedTime[i] <= 0)
		{
		    WantedTime[i] = 0;
		    PlayerInfo[i][pWanted] = 0;
		    PlayerUpdateData(i, "pWanted", PlayerInfo[i][pWanted]);
		    GameTextForPlayer(i, "~y~unwanted", 3000, 1);
		    SetPlayerWantedLevelEx(i);
		}
        //
        if(gotome[i] != -1)
        {
   	    	new Float:x, Float:y, Float:z;
  			GetPlayerPos(gotome[i], x, y, z);
     		if(!IsPlayerInRangeOfPoint(i, 10.0, x, y, z))
            {
                if(GetPlayerAnimationIndex(i) == 1228) ClearAnimations(i), StopAnimation(i);
                SetPlayerPos(i, x, y+1, z+0.1);
                SetPlayerFacingAngleToPlayer(i, gotome[i]);
            }
            if(!IsPlayerInRangeOfPoint(i, 3.0, x, y, z))
            {
                SetPlayerFacingAngleToPlayer(i, gotome[i]);
                if(GetPlayerAnimationIndex(i) != 1228) ApplyAnimation(i, "PED", "run_gang1", 4.1, 1, 1, 1, 1, 1, 1);
            }
            if(IsPlayerInRangeOfPoint(i, 3, x, y, z))
            {
                ClearAnimations(i);
                StopAnimation(i);
            }
			SetPlayerInterior(i, GetPlayerInterior(gotome[i]));
			SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(gotome[i]));
        }
        if(GetPVarInt(i, "Surgery") >= 1)
        {
            new Float:hp;
			GetPlayerHealth(i, hp);
			SetPlayerHealth(i, hp+3);
			if(hp >= 100)
			{
			    GameTextForPlayer(i,"~y~you ended surgery",2500,4);
			    SendClientMessage(i, COLOR_GREEN, "[Hospital]{BDBDBD} Tkven Warmatebit Morchit Mkurnalobas");
			    SetPVarInt(i, "Surgery", 0);
			    SetPlayerHealth(i, 100.0);
			}
			else
			{
			    GameTextForPlayer(i,"~g~+3 hp",900,4);
			}
        }
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
		    new vehicleid = GetPlayerVehicleID(i);
   			if(gFuel[vehicleid] <= 1)
			{
				gFuel[vehicleid] = 0;
				GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
				SetVehicleParamsEx(vehicleid, 0, lightss, alarms, doorss, bonnets, boots, objectives);
				GameTextForPlayer(i,"~r~~h~FUEL HAS ENDED", 5000, 3);
			}
			
			if(SpeedVehicle(i) > 90 && PlayerInfo[i][pAdmin] == 0 && TrailerJob[i] == true && IsTrailerAttachedToVehicle(vehicleid))
			{
			    new model = GetVehicleModel(vehicleid);
				if(model == 515)
				{
				    DetachTrailerFromVehicle(vehicleid);
				    sendinfo(i,"Misabmeli Ar Aris Gatvlili Amxela Siswrafeze, Iare Nela!");
				}
	       	}
		}
		if(KnockStatus[i] == true)
		{
			if(!IsPlayerInRangeOfPoint(i, 3.0, KnockPos[i][0], KnockPos[i][1], KnockPos[i][2]))
			{
			    SetPlayerPos(i, KnockPos[i][0], KnockPos[i][1], KnockPos[i][2]);
			    SetPlayerFacingAngle(i, KnockPos[i][3]);
			}
			if(GetPlayerAnimationIndex(i) != 1537) ApplyAnimation(i, "SWEET", "SWEET_INJUREDLOOP", 4.1, 1, 0, 0, 0, 0, 1);
			new Float:hp;
			GetPlayerHealth(i, hp);
			SetPlayerHealth(i, hp-1.0);
		}
		if(eAddict[i] == 1 && PlayerInfo[i][pAddict] > 400)
		{
			SendClientMessage(i, COLOR_WHITE, "(( Narkotikis Misagebad: /usedrugs   ||   Mis Mosashoreblad Mimartet Eqims! ))");
			eAddict[i] = 2;
		}
		if(eAddict[i] >= 2)
	 	{
	 	    switch(random(2))
	 	    {
	 	        case 0: ApplyAnimation(i, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1);
	 	        case 1: ApplyAnimation(i, "CRACK", "crckdeth3", 4.0, 0, 0, 1, 1, 1);
	 	    }
		}
		if(hour >= 12 && minute == 10 && second == 0) eAddict[i] = 1;
        if(IsSmoking[i] > 0)
		{
			IsSmoking[i] --;
			if(IsSmoking[i] == 1)
	        {
	            format(gstr, sizeof(gstr), "%s'(s) Chaewva Sigareti", Name(i));
	            SendNearText(i, gstr, 15.0, COLOR_PURPLE);
	            SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
	            IsSmoking[i] = 0;
	        }
	        if(IsSmoking[i] == 51 || IsSmoking[i] == 41 || IsSmoking[i] == 31 || IsSmoking[i] == 11)
	        {
	            format(gstr, sizeof(gstr), "%s Eweva", Name(i));
	            SendNearText(i, gstr, 15.0, COLOR_PURPLE);
	        }
		}
        PlayedTime[i] ++;
        if(PlayerInfo[i][pAdmin] > 0) PlayerInfo[i][pAdmin_PlayedTime] ++;
		GetPlayerPos(i, P_Sync[i][s_pos_x], P_Sync[i][s_pos_y], P_Sync[i][s_pos_z]);
    }
   	/*if(minute == 30 && second == 00)
    {
        new currenttime = GetTickCount();
        for(new i = 1; i <= TotalHouse; i ++) SaveHouseData(i);
        for(new i = 1; i <= TotalBizz; i ++) SaveBizzData(i);
        SaveGZ();
        foreach(new i:Player)
        {
            SavePlayerData(i);
        }
		printf("[SIX SAVE]: Server Saved | %d <%dms>",hour,GetTickCount()-currenttime);
	}*/
    UpdateCasino();
    return true;
}
function MinuteTimer()
{
	if(piarmessage >= 30)
	{
 		SendClientMessageToAll(0x369B5AAA, "___________________________________________________");
 		SendClientMessageToAll(0x369B5AAA, "");
	    SendClientMessageToAll(COLOR_INFO,"[G:RP INFO]: {FFFFFF}Serveris Officialuri Web Site » {369B5A}Genuine-RP.GE ");
	    SendClientMessageToAll(COLOR_INFO,"[G:RP INFO]: {FFFFFF}Gzis Gasakvlevad Gamoikenet » {369B5A}/gps ");
	    SendClientMessageToAll(COLOR_INFO,"[G:RP INFO]: {FFFFFF}Kitxva/Sachivristvis Gamoikenet » {369B5A}/report");
	    SendClientMessageToAll(COLOR_INFO,"[G:RP INFO]: {FFFFFF}Serverze Donaciistvis Gamoikenet » {369B5A}/donate");
	    SendClientMessageToAll(COLOR_INFO,"[G:RP INFO]: {FFFFFF}Sasiamovno Gartobas Gisurvebt Chvens Serverze");
	    SendClientMessageToAll(0x369B5AAA, "___________________________________________________");
        piarmessage = 0;
	}
	else
	{
	    piarmessage++;
	}
    new tominus = 0;
	for(new i = 0, j = GetVehiclePoolSize(); i <= j; i ++)
	{
		if(!IsValidVehicle(i)) continue;
	    switch(GetVehicleSpeed(i))
		{
		    case 0.2: tominus = 0;
		    case 3..40: tominus = 2;
		    case 41..90: tominus = 3;
		    case 91..999: tominus = 4;
		}
		if(gFuel[i] > 0) gFuel[i] -= tominus;
		new driver = GetVehicleDriver(i);
		if(driver != -1) speedometerChange[driver] = true;
	}
	new Float:health;
    foreach (new i:Player)
    {
 		if(!isLogged[i]) continue;
        QuestChecker(i);
		GetPlayerHealth(i, health);
		if(DMArea[i] == 0 && health <= 20.0) SendClientMessage(i, COLOR_YELLOW, "Tkven Dzalian Cudat Xart, Mimartet Eqims");
        if (IsPlayerConnected(i) && isPlayerActive[i])
        {
            PlayerInfo[i][pGiftTime]--;
            DisplayTime(i);

            if (PlayerInfo[i][pGiftTime] <= 0)
            {
		   		new randprize = Random(1,4);
				switch(randprize) {
					case 1: {
				   		PlayerInfo[i][pCases][CASE_TYPE_TITANY] += 1;
				   		PlayerUpdateData(i, "CaseTitany", PlayerInfo[i][pCases][CASE_TYPE_TITANY]);
				   		SendClientMessage(i, 0xEA5151AA, "GIFT PRIZE - Tkven Miighet Sachuqari [Titany Case]");
					}
					case 2:	{
		     			PlayerInfo[i][pGcoin] += 3;
						PlayerUpdateData(i, "pGcoin", PlayerInfo[i][pGcoin]);
				   		SendClientMessage(i, 0xEA5151AA, "GIFT PRIZE - Tkven Miighet Sachuqari [3 G-COIN]");
					}
					case 3 : {
		     			PlayerInfo[i][pCash] += 150000;
						PlayerUpdateData(i, "pCash", PlayerInfo[i][pCash]);
				   		SendClientMessage(i, 0xEA5151AA, "GIFT PRIZE - Tkven Miighet Sachuqari [150,000$]");
					}
					case 4 : {
						PlayerInfo[i][pDonateRank] = 3;
						PlayerInfo[i][pVipTime] = getdate()+5;
						PlayerUpdateData(i, "pDonateRank", PlayerInfo[i][pVipTime]);
						PlayerUpdateData(i, "pVipTime", PlayerInfo[i][pVipTime]);
				   		SendClientMessage(i, 0xEA5151AA, "GIFT PRIZE - Tkven Miighet Sachuqari [GOLD VIP For 5 Days]");
					}
				}
		        //format(log_str, sizeof(log_str), "%s's Gadaeca Sachuqrad Case + G-COIN 2", Name(i));
				//CreateLog("Sachuqari", log_str);
				PlayerInfo[i][pGiftTime] = GIFT_HOURS * 60;
				isPlayerActive[i] = true;
            }
			PlayerUpdateData(i, "pGiftTime", PlayerInfo[i][pGiftTime]);
        }
    }
    return 1;
}
function SalonTimer()
{
	new sql_str[256];
	for(new c = 0; c <= TotalCar; c++)
	{
	    if(CarInfo[c][CarStatus] == 1 && CarInfo[c][CarTime] >= 1)
	    {
	        CarInfo[c][CarTime] -= 1;
	        CarUpdateData(c, "CarTime", CarInfo[c][CarTime]);
	        if(CarInfo[c][CarStatus] == 1 && CarInfo[c][CarTime] <= 0)
		    {
		    	new target;
				target = ReturnUser(CarInfo[c][CarOwner]);
				if(target >= 0 && target != INVALID_PLAYER_ID)
				{
	       			format(sql_str, sizeof(sql_str), "UPDATE `cars` SET ForSale = '0' WHERE Name = '%s' AND ForSale = '1'", CarInfo[c][CarOwner]);
					mysql_query(connect, sql_str);
				}
				else
				{
	       			format(sql_str, sizeof(sql_str), "UPDATE `cars` SET ForSale = '0' WHERE Name = '%s' AND ForSale = '1'", CarInfo[c][CarOwner]);
					mysql_query(connect, sql_str);
				}
				CarInfo[c][CarID] = 462;
				CarUpdateData(c, "CarID", CarInfo[c][CarID]);
				CarInfo[c][CarPrice] = 0;
				CarUpdateData(c, "CarPrice", CarInfo[c][CarPrice]);
				CarInfo[c][CarStatus] = 0;
				CarUpdateData(c, "CarStatus", CarInfo[c][CarStatus]);
				CarInfo[c][CarSlot] = 0;
				CarUpdateData(c, "CarSlot", CarInfo[c][CarSlot]);
				strmid(CarInfo[c][CarOwner], "None", 0, strlen("None"), 20);
				CarUpdateDataString(c, "CarOwner", CarInfo[c][CarOwner]);
				CarUpdateText(c);
				if(CarInfo[c][CarIDInfo] != -1)
				{
					DestroyVehicle(CarInfo[c][CarIDInfo]);
					CarInfo[c][CarIDInfo] = -1;
				}
			}
	    }
	}
	return true;
}
function OptimizeLoad()
{
    for(new vehicleid = 0; vehicleid < MAX_VEHICLES; vehicleid ++)
    {
        SetVehicleNumberPlate(vehicleid, "Genuine-RP");
		SetVehicleHealth(vehicleid, 999.0);
        IsAdminVehicle[vehicleid] = 0;
        gFuel[vehicleid] = 100;
	}
    /*for(new i = 0; i < 21; i ++) araa sachiro
    {
        if (i < 7)     	SetVehicleNumberPlate(AutoSchoolCars[i], "AutoSchool");
        if (i < 19)     SetVehicleNumberPlate(lspdcar[i], "LS:PD");
        if (i < 9)     	SetVehicleNumberPlate(fbicar[i], "FBI");
        if (i < 20)     SetVehicleNumberPlate(armycar[i], "ARMY");
        if (i < 5)     	SetVehicleNumberPlate(lsnewscar[i], "LS News");
        if (i < 12)     SetVehicleNumberPlate(bikercar[i], "Biker Club");
    }*/
	for(new i = 0; i < sizeof(JetMachineCoord); i ++)
	{
		CreateDynamicObject(2779, JetMachineCoord[i][0], JetMachineCoord[i][1], JetMachineCoord[i][2],   0.00000, 0.00000, JetMachineCoord[i][3]);
	}
    ResetBank();
    new tabname[16];
    for(new i = 0; i < sizeof(StolCoor); i ++)
   	{
    	StolInfo[i][Crupe] = INVALID_PLAYER_ID;
    	for(new j = 0; j < 5; j ++) StolInfo[i][Gamer][j] = INVALID_PLAYER_ID;
    	StolInfo[i][GameStart] = 0;
    	//
		KostiBox[i] = TextDrawCreate(595.147888, 142.666656, "usebox");
		TextDrawLetterSize(KostiBox[i], 0.000000, 18.155559);
		TextDrawTextSize(KostiBox[i], 519.464111, 0.000000);
		TextDrawAlignment(KostiBox[i], 1);
		TextDrawColor(KostiBox[i], 0);
		TextDrawUseBox(KostiBox[i], true);
		TextDrawBoxColor(KostiBox[i], 1128481664);
		TextDrawSetShadow(KostiBox[i], 0);
		TextDrawSetOutline(KostiBox[i], 0);
		TextDrawBackgroundColor(KostiBox[i], -1751672960);
		TextDrawFont(KostiBox[i], 0);

	    format(tabname,sizeof(tabname),"Table %d",i+1);
		TableName[i] = TextDrawCreate(556.603332, 142.333358, tabname);
		TextDrawLetterSize(TableName[i], 0.491228, 1.524165);
		TextDrawAlignment(TableName[i], 2);
		TextDrawColor(TableName[i], 548012031);
		TextDrawUseBox(TableName[i], true);
		TextDrawBoxColor(TableName[i], 0);
		TextDrawSetShadow(TableName[i], 0);
		TextDrawSetOutline(TableName[i], 1);
		TextDrawBackgroundColor(TableName[i], 51);
		TextDrawFont(TableName[i], 0);
		TextDrawSetProportional(TableName[i], 1);

		KostiInfo[i] = TextDrawCreate(527.309020, 163.916000, "Name~n~Name~n~Name~n~Name~n~Name");
		TextDrawLetterSize(KostiInfo[i], 0.175188, 1.010665);
		TextDrawAlignment(KostiInfo[i], 1);
		TextDrawColor(KostiInfo[i], -1347440641);
		TextDrawUseBox(KostiInfo[i], true);
		TextDrawBoxColor(KostiInfo[i], 0);
		TextDrawSetShadow(KostiInfo[i], 0);
		TextDrawSetOutline(KostiInfo[i], 1);
		TextDrawBackgroundColor(KostiInfo[i], 51);
		TextDrawFont(KostiInfo[i], 1);
		TextDrawSetProportional(KostiInfo[i], 1);

		KostiGameInfo[i] = TextDrawCreate(527.086486, 214.666687, "Bet:_100000~n~Bank:_200000");
		TextDrawLetterSize(KostiGameInfo[i], 0.186432, 1.115664);
		TextDrawAlignment(KostiGameInfo[i], 1);
		TextDrawColor(KostiGameInfo[i], -1347440641);
		TextDrawSetShadow(KostiGameInfo[i], 0);
		TextDrawSetOutline(KostiGameInfo[i], 1);
		TextDrawBackgroundColor(KostiGameInfo[i], 51);
		TextDrawFont(KostiGameInfo[i], 1);
		TextDrawSetProportional(KostiGameInfo[i], 1);
	}
	KostiKeyStavka = TextDrawCreate(557.540405, 251.999969, "SET_BET");
	TextDrawLetterSize(KostiKeyStavka, 0.429852, 1.360828);
	TextDrawTextSize(KostiKeyStavka, 8.721603, 61.250003);
	TextDrawAlignment(KostiKeyStavka, 2);
	TextDrawColor(KostiKeyStavka, -1347440641);
	TextDrawUseBox(KostiKeyStavka, true);
	TextDrawBoxColor(KostiKeyStavka, 555819408);
	TextDrawSetShadow(KostiKeyStavka, 0);
	TextDrawSetOutline(KostiKeyStavka, 1);
	TextDrawBackgroundColor(KostiKeyStavka, 51);
	TextDrawFont(KostiKeyStavka, 3);
	TextDrawSetProportional(KostiKeyStavka, 1);
	TextDrawSetSelectable(KostiKeyStavka, 1);

	KostiKeyDone = TextDrawCreate(557.540710, 270.666656, "DICE");
	TextDrawLetterSize(KostiKeyDone, 0.429852, 1.360828);
	TextDrawTextSize(KostiKeyDone, 8.721603, 61.250003);
	TextDrawAlignment(KostiKeyDone, 2);
	TextDrawColor(KostiKeyDone, -1347440641);
	TextDrawUseBox(KostiKeyDone, true);
	TextDrawBoxColor(KostiKeyDone, 555819392);
	TextDrawSetShadow(KostiKeyDone, 0);
	TextDrawSetOutline(KostiKeyDone, 1);
	TextDrawBackgroundColor(KostiKeyDone, 51);
	TextDrawFont(KostiKeyDone, 3);
	TextDrawSetProportional(KostiKeyDone, 1);
	TextDrawSetSelectable(KostiKeyDone, 1);

	KostiKeyExit = TextDrawCreate(557.540283, 289.333312, "EXIT");
	TextDrawLetterSize(KostiKeyExit, 0.429852, 1.360828);
	TextDrawTextSize(KostiKeyExit, 8.721603, 61.250003);
	TextDrawAlignment(KostiKeyExit, 2);
	TextDrawColor(KostiKeyExit, -1347440641);
	TextDrawUseBox(KostiKeyExit, true);
	TextDrawBoxColor(KostiKeyExit, 555819392);
	TextDrawSetShadow(KostiKeyExit, 0);
	TextDrawSetOutline(KostiKeyExit, 1);
	TextDrawBackgroundColor(KostiKeyExit, 51);
	TextDrawFont(KostiKeyExit, 3);
	TextDrawSetProportional(KostiKeyExit, 1);
	TextDrawSetSelectable(KostiKeyExit, 1);
    //
    for(new i = 0; i <sizeof(StolCoor); i ++) CreateDynamicObject(1824, StolCoor[i][0], StolCoor[i][1], StolCoor[i][2], 0, 0, StolCoor[i][3]);
    //
    #if SERVER_PASSWORD_MODE == true
        SendRconCommand("password "SERVER_PASSWORD);
	#else
		SendRconCommand("password 0");
    #endif
    printf("[Genuine-RP] Gamemode Loaded | <%d ms>",GetTickCount()-ticktime-3000);
}
function LoadBankomats();
function LoadBankomats()
{
    new time = GetTickCount();
    new rows;
	cache_get_row_count(rows);
	if(rows)
    {
	    for(new i = 1; i <= rows; i ++)
        {
			new BankomatStatusStr[350];
		    cache_get_value_index_int(i-1, 0, BankomatInfo[i][BankomatID]);
		    cache_get_value_index_float(i-1, 1, BankomatInfo[i][BankomatPosX]);
			cache_get_value_index_float(i-1, 2, BankomatInfo[i][BankomatPosY]);
			cache_get_value_index_float(i-1, 3, BankomatInfo[i][BankomatPosZ]);
			cache_get_value_index_float(i-1, 4, BankomatInfo[i][BankomatPosC]);
			cache_get_value_index_int(i-1, 5, BankomatInfo[i][BankomatMoney]);

			if(BankomatInfo[i][BankomatMoney] == 0)
            {
				BankomatStatusStr = "{FFFFFF}Ar Mushaobs";
			}
			else if(BankomatInfo[i][BankomatMoney] > 0)
            {
				BankomatStatusStr = "{FFFFFF}Mushaobs";
			}

			BankomatInfo[i][BankomatObject] = CreateDynamicObject(2754, BankomatInfo[i][BankomatPosX], BankomatInfo[i][BankomatPosY], BankomatInfo[i][BankomatPosZ], 0, 0, BankomatInfo[i][BankomatPosC]);
	    	format(bh_string, sizeof(bh_string), "{46D5C1}[Bankomati]\n{46D5C1}Bankomati #: {FFFFFF}%d\n{46D5C1}Tanxa Bankomatshi: {FFFFFF}%d / 1000000$\n{46D5C1}Bankomatis Statusi: {A34E4E}%s\n{46D5C1}Press:{ffffff} ALT", i, BankomatInfo[i][BankomatMoney], BankomatStatusStr);
			BankomatInfo[i][BankomatText] = CreateDynamic3DTextLabel(bh_string, COLOR_WHITE, BankomatInfo[i][BankomatPosX], BankomatInfo[i][BankomatPosY], BankomatInfo[i][BankomatPosZ],15.0);
			TotalBankomat ++;
        }
        printf("<LoadingMode> ATM Loaded <%d>. ping: <%d ms>.", TotalBankomat, GetTickCount() - time);
    }
	return true;
}
function FindHouseBug(playerid)
{
    new Float:z, houseid = GetPVarInt(playerid, "HouseID");
    GetPlayerPos(playerid, z, z, z);
    if(z < 0)
    {
        FixHouse(houseid);
        SetPlayerPosEx(playerid, HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2]);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        DelayPickup[playerid] = gettime()+5;
        return true;
    }
    if(!IsPlayerInRangeOfPoint(playerid, 7.0, HouseInfo[houseid][hExitPosition][0], HouseInfo[houseid][hExitPosition][1], HouseInfo[houseid][hExitPosition][2]))
    {
        FixHouse(houseid);
        SetPlayerPosEx(playerid, HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2]);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        DelayPickup[playerid] = gettime()+5;
    }
    return true;
}
function FindBizzBug(playerid)
{
    new Float:z, bizzid = GetPVarInt(playerid, "bizid");
    GetPlayerPos(playerid, z, z, z);
    if(z < 0)
    {
        FixBizz(bizzid);
        SetPlayerPosEx(playerid, BizzInfo[bizzid][bExitedPos][0], BizzInfo[bizzid][bExitedPos][1], BizzInfo[bizzid][bExitedPos][2], 1500);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        DelayPickup[playerid] = gettime()+5;
        return true;
    }
    if(!IsPlayerInRangeOfPoint(playerid, 7.0, BizzInfo[bizzid][bEnteredPos][0], BizzInfo[bizzid][bEnteredPos][1], BizzInfo[bizzid][bEnteredPos][2]))
    {
        FixBizz(bizzid);
        SetPlayerPosEx(playerid, BizzInfo[bizzid][bExitedPos][0], BizzInfo[bizzid][bExitedPos][1], BizzInfo[bizzid][bExitedPos][2], 1500);
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        DelayPickup[playerid] = gettime()+5;
    }
    return true;
}
function RespawnCars()
{
	for(new i = 0, l = GetVehiclePoolSize(); i <= l; i ++)
	{
		if(!IsValidVehicle(i)) continue;
        if(IsVehicleOccupied(i)) continue;
        if(IsAdminVehicle[i] == 1)
        {
            DestroyVehicle(i);
            IsAdminVehicle[i] = 0;
            continue;
        }
        SetVehicleToRespawn(i);
        gFuel[i] = 100;
        foreach(new j:Player)
        {
            if(RentCarID[j] == i)
            {
                SendClientMessage(j, COLOR_GREEN, "[RentCar]{ffffff} - Tkven Agar Gkavt Naqiravebi Transporti");
                DestroyVehicle(i);
                RentCarID[j] = -1;
            }
        }
	}
}
function SearchForKey(playerid,ownerid)
{
	new string[128];
	new ownername[28], Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerName(ownerid,ownername,28);
	if(cache_num_rows())
	{
		format(string,sizeof(string),"Tqven Jdebit {FF9900}%s's {ffffff}Transportshi",ownername);
	}
	else
	{
	    format(string,sizeof(string),"Tqven Ar Gaqvt {FF9900}%s's {FFFFFF}Transportis Gasagebi",ownername);
     	SetPlayerPosEx(playerid, x, y, z, 500);
		ClearAnimations(playerid);
	}
	SendClientMessage(playerid, COLOR_WHITE, string);
	return true;
}
function AddictionTimer(playerid)
{
	new hour1,minuite1,second1;
 	gettime(hour1,minuite1,second1);
  	FixHour(hour1);
  	hour1 = shifthour;
  	SetPlayerTime(playerid, hour1, minuite1);
	SetPlayerWeather(playerid, 10);
	if(GetPlayerDrunkLevel(playerid) != 50000)
	{
	    SetPlayerDrunkLevel(playerid, 0);
	}
	marixuana[playerid] = 0;
	return 1;
}
function CheckBanIP(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		new gtp;
		new current = getdate();
		cache_get_value_name_int(0, "Dge", gtp);
		new dg = gtp-current;
		if(gtp > current)
		{
			SendMes(playerid, COLOR_WHITE, "{B40431}Tqven Gadevt IP Bani! Axsnamde Darchenlia: %i Dge", dg);
			Kick(playerid);
		}
		if(gtp <= current)
		{
		    new pup[16];
			GetPlayerIp(playerid, pup, sizeof(pup));
		    format(gstr, sizeof(gstr), "DELETE FROM `banip` WHERE `IP` = '%s'",pup);
			mysql_tquery(connect, gstr, "", "");
		}
	}
}
function LoadTopData(playerid,type)
{
	new string[1092],Data1;
	switch(type)
	{
	    case 1:
	    {
	    	string = "#\tName\tCash\tStatus";
	        for(new i; i < cache_num_rows(); i++)
	        {
	            new name[28];
	            cache_get_value_name(i,"Name", name, 28);
	            cache_get_value_name_int(i,"pCash",Data1);
				format(string,sizeof(string),"%s\n%d\t%s\t%d$\t%s\n",string,i+1,name,Data1,IsOnline(name) ? ("{009933}Online{FFFFFF}") : ("{FF4545}Offline{FFFFFF}"));
	            ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top 15 {00FF00}Rich", string, "{FF0000}X", "");
	        }
	    }
	    case 2:
	    {
	    	string = "#\tName\tBank Cash\tStatus";
	        for(new i; i < cache_num_rows(); i++)
	        {
	            new name[28];
	            cache_get_value_name(i,"Name", name, 28);
	            cache_get_value_name_int(i,"pBank",Data1);
				format(string,sizeof(string),"%s\n%d\t%s\t%d$\t%s\n",string,i+1,name,Data1,IsOnline(name) ? ("{009933}Online{FFFFFF}") : ("{FF4545}Offline{FFFFFF}"));
	            ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top 15 {00FF00}Bank", string, "{FF0000}X", "");
	        }
	    }
	}
	return true;
}
function BurnoutTire(playerid)
{
	new var0 = 0, var1 = 0, var2 = 0, var3 = 0;
	new var4 = GetPlayerVehicleID(playerid);
	if(TireBurnout[playerid] == 1)
	{
		GetVehicleDamageStatus(var4, var0, var1, var2, var3);
		UpdateVehicleDamageStatus(var4, var0, var1, var2, 5);
	}
	if(BurnoutTimer[playerid] != -1) KillTimer(BurnoutTimer[playerid]);
	return true;
}
function OffMembers(playerid)
{
    new rows,playername[24], rank;
	cache_get_row_count(rows);
	if(rows)
	{
	    new string[1092], list[150];
	    string = "{ffffff}Name\t{ffffff}Rank\n";
	  	for(new i; i < rows; i++)
	    {
	    	cache_get_value_name(i, "Name", playername);
	    	cache_get_value_name_int(i, "pRank", rank);
		  	format(list, sizeof(list), "Name\t%s\t%d\n", playername, rank);
		  	strcat(string, list);
	    }
	    ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, "{AAC5E3}OffMembers", string, "Exit", "");
	}
    return true;
}
function CheckPassword(playerid)
{
	new rows, PlayerName[128], gPassword[64], Security[64], SecurityStat, pass_str[240];
	cache_get_row_count(rows);
	if(rows)
	{
	  	for(new i; i < rows; i++)
	    {
	    	cache_get_value_name(i, "Name", PlayerName);
	    	cache_get_value_name(i, "Password", gPassword);
	    	cache_get_value_name(i, "pIPKey", Security);
	    	cache_get_value_name_int(i, "pProtection", SecurityStat);
	    	if(SecurityStat == 0) format(pass_str, sizeof(pass_str), "Account - {3399FF}%s{FFFFFF}, Password: {3399FF}%s{FFFFFF}, Dacvis Kodi: {3399FF}Ar Ayenia", PlayerName, gPassword);
	    	else if(SecurityStat == 1) format(pass_str, sizeof(pass_str), "Account - {3399FF}%s{FFFFFF}, Password: {3399FF}%s{FFFFFF}, Dacvis Kodi: {3399FF}%s", PlayerName, gPassword, Security);
	    	SendClientMessage(playerid, COLOR_WHITE, pass_str);
		}
	}
	else senderror(playerid, "Account Ver Moidzebna!");
	return true;
}
function ShowSaleHouses(playerid)
{
	if(!cache_num_rows()) return SendClientMessage(playerid, COLOR_GREY, "Tavisufali Saxlebi Araa");
	new list[90], dialogstr[1500], houseid, price, Float:dist = 400.0;
	dialogstr = "{ffffff}HouseID\t{ffffff}Location\t{ffffff}Meters Away\t{ffffff}Cost\n";
	for(new i = 0; i < cache_num_rows(); i ++)
	{
	    cache_get_value_name_int(i, "hID", houseid);
	    cache_get_value_name_int(i, "hPrice", price);
     	new Float:x, Float:y, Float:z, cityname[100];
      	x = HouseInfo[i][hPosition][0], y = HouseInfo[i][hPosition][1], z = HouseInfo[i][hPosition][2];
        for(new j = 0; j < sizeof(SanAndreasZones); j++)
        {
       		if(x >= SanAndreasZones[j][Zone_Area][0] && x <= SanAndreasZones[j][Zone_Area][3]
         	&& y >= SanAndreasZones[j][Zone_Area][1] && y <= SanAndreasZones[j][Zone_Area][4]
            && z >= SanAndreasZones[j][Zone_Area][2] && z <= SanAndreasZones[j][Zone_Area][5]) { SetString(cityname, SanAndreasZones[j][Zone_Name]); break; }
            else if(j == sizeof(SanAndreasZones) - 1) { SetString(cityname, "Unknown"); break; }
		}
	    dist = GetDistanceBetweenPoints(1481.2858, -1771.8811, 18.7958, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2]);
	    FreeHouses[playerid][i] = houseid;
		format(list, sizeof(list), "[%d] House %d\t%s\t%.2fm\t%d$\n",i+1,houseid,cityname,dist,price);
		strcat(dialogstr, list);
	}
	ShowPlayerDialog(playerid, 52, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Free Houses", dialogstr, "Find", "Close");
	return true;
}
function HealOFF(playerid)
{
    RemovePlayerAttachedObject(playerid, 9);
    antidouble[playerid] = false;
    Animation[playerid] = false;
	return true;
}
function drug_effect(playerid)
{
	new hour, minute;
	gettime(hour, minute);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerWeather(playerid, 10);
	SetPlayerDrunkLevel(playerid, 0);
	antidouble[playerid] = false;
    antidouble[playerid] = false;
    Animation[playerid] = false;
	return 1;
}
function WFTime(playerid)
{
	RemovePlayerAttachedObject(playerid, 0);
    RemovePlayerAttachedObject(playerid, 1);
    SetPlayerAttachedObject(playerid, 0, 2358, 6, 0.0, 0.10, -0.2, -110.0, 0.0, 78.0);
    SetPlayerCheckpoint(playerid, 2564.7598, -1292.7738, 1044.1250, 1.5);
   	gCheckpoint[playerid] = CHECKPOINT_WF;
    TogglePlayerControllable(playerid, true);
    ClearAnimations(playerid);
    SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
    Animation[playerid] = false;
    jobStatus[playerid] = 1;
    return true;
}
function WorkTimer(playerid)
{
    ClearAnimations(playerid);
	SetPVarInt(playerid,"mushaobs",0);
    TogglePlayerControllable(playerid, true);
	new money = Random(1000, 5000), drug = Random(1, 5), l_string[50];
	jobCash[playerid] += money*Boost2X;
	SetPVarInt(playerid, "PlantDrug", GetPVarInt(playerid, "PlantDrug")+drug);
	format(l_string, sizeof(l_string), "~g~+%d$ | %d drug",money,drug);
	GameTextForPlayer(playerid,l_string,2000,1);
}
function ShaftTimer(playerid)
{
	TogglePlayerControllable(playerid, true);
	StopAnimation(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	RemovePlayerAttachedObject(playerid, 3);
	SetPlayerAttachedObject(playerid, 1, 2060, 1,0.11,0.36,0.0,0.0,90.0);
	if(random(2) == 0) SetPlayerCheckpoint(playerid, 1241.6519, -1266.8007, 13.5005, 2);
	else SetPlayerCheckpoint(playerid, 1238.3699, -1265.7854, 13.5005, 2);
	SetPVarInt(playerid, "ShaftWork", 2);
	gCheckpoint[playerid] = CHECKPOINT_SHAFT;
	jobStatus[playerid] = 1;
	Animation[playerid] = false;
	return true;
}
function BankBombTime()
{
	if(BankInfo[bombTime] > 0) BankInfo[bombTime] --;
	new string[128];
    format(string, sizeof(string), "Bombi Afetqdeba\n%d Wamshi",BankInfo[bombTime]);
    Update3DTextLabelText(BankInfo[bankText], COLOR_WHITE, string);
    if(BankInfo[bombTime] == 0)
    {
        Delete3DTextLabel(BankInfo[bankText]);
        CreateExplosion(1989.97754, 1855.77234, 993.18683, 10, 5.0);
        DestroyObject(BankInfo[bombObject]);
        MoveObject(BankInfo[doorObject], 1990.19592, 1858.74597, 992.68481, 100.0,  90.00000, 0.00000, 180.00000);
        KillTimer(BankInfo[bombTimer]);
        //opn = 1;
	}
	return true;
}
function GiveBankCash(playerid)
{
	if(IsBag[playerid] == 1)
	{
	    new cash = Random(300000,500000);
	    PlayerInfo[playerid][pCash] += cash;
	    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	    format(log_str, sizeof(log_str), "%s'm(a) gadaeca bank cash - %d", Name(playerid),cash);
	   	CreateLog("Money", log_str);
	    new str[256];
		format(str, sizeof(str), "Tkven Gadmogecat: {63BD4E}%d${FFFFFF}", cash);
		SendClientMessage(playerid, COLOR_WHITE, str);
	    KillTimer(BagTimer[playerid]);
	    IsBag[playerid] = 0;
	    BagTimer[playerid] = -1;
	    RemovePlayerAttachedObject(playerid, 8);
	}
	return true;
}
function AlarmEnd()
{
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pForm] == FRACTION_ARMY)
		{
			PlayerPlaySound(i, 45824, 0.0, 0.0, 0.0);
		}
	}
}
function CBugFreezeOver(playerid)
{
	TogglePlayerControllable(playerid, true);
	AntiC[playerid] = false;
	return 1;
}
/*function RenewAutoSalon(playerid)
{
    new car_id = AS_select[playerid], str[60];
    format(str, sizeof(str), "%d$",AutoSalonCarPrices[car_id][0]);
    PlayerTextDrawSetString(playerid, Buy_PTD[playerid][0], str);
    format(str, sizeof(str), "%s",VehicleNames[GetVehicleModel(AutoSalonCar[car_id])-400]);
    PlayerTextDrawSetString(playerid, Buy_PTD[playerid][1], str);
    SetPVarInt(playerid, "CarPrice", AutoSalonCarPrices[car_id][0]);
    SetPVarInt(playerid, "CarID", GetVehicleModel(AutoSalonCar[car_id]));
    return true;
}*/
function SetPlayerCriminals(playerid, killerid[], reason[])
{
   	new string[128];
	if(PlayerInfo[playerid][pWanted] > 6)
	{
	    PlayerInfo[playerid][pWanted] = 6;
	}
	format(string,sizeof(string),"Tqven Chaidinet Danashauli: [%s]. Gvatyobinebs: %s.",reason, killerid);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pMember] == FRACTION_LSPD || PlayerInfo[i][pMember] == FRACTION_FBI)
		{
			format(string, sizeof(string), "Racia: Gvatyobinebs: %s. Danashauli: %s. Damnashave: %s. Dzebnis Done: %d",killerid,reason,Name(playerid),PlayerInfo[playerid][pWanted]);
			SendClientMessage(i, 0xFEBC41AA, string);
		}
	}
	return true;
}
function BankTimer(playerid)
{
	if(RobbingStarted[playerid])
	{
		new money = Random(5000, 15000);
		PlayerInfo[playerid][pCash] += money;
		PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		RobbingStarted[playerid] = false;
		ClearAnimations(playerid);
		new bankstr2[180];
		format(bankstr2, sizeof(bankstr2), "Tkven Gadzarcvet Bankomati: {63BD4E}%d {FFFFFF}/ Gadmogecat: {63BD4E}%d$", Random(1, 10), money);
		format(log_str, sizeof(log_str), "%s'm(a) gadzarcva bankomat da gadmogecat : %d", Name(playerid), money);
	   	CreateLog("Money", log_str);
		SendClientMessage(playerid, COLOR_WHITE, bankstr2);
		RemovePlayerAttachedObject(playerid, 1);
		TogglePlayerControllable(playerid, 1);
	}
	return true;
}
function Signalizacia(playerid)
{
	if(PlayerInfo[playerid][pWanted] < 6)
	{
	    PlayerInfo[playerid][pWanted] += 1;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
		SetPlayerWantedLevelEx(playerid);
	}
  	SetPlayerCriminals(playerid, "Police", "Bankomatis Dzarcva");
	return true;
}
function CureKnockPlayer(playerid, knocked)
{
    StopAnimation(playerid);
	KnockStatus[knocked] = false;
	StopAnimation(knocked);
	SetPlayerHealth(knocked, 50);
	if(KnockText[knocked] != Text3D:INVALID_3DTEXT_ID)
	{
	    Delete3DTextLabel(KnockText[knocked]);
	    KnockText[knocked] = Text3D:INVALID_3DTEXT_ID;
	}
	if(PlayerInfo[playerid][pMember] == FRACTION_MEDIC && PlayerInfo[playerid][pForm] != 0 && MedicReviveTime[playerid] <= 0)
	{
	    MedicReviveTime[playerid] = 30;
	    PlayerInfo[playerid][pCash] += 100;
	    format(log_str, sizeof(log_str), "%s'm(a) idk gadaeca makuti + 100%", Name(playerid));
	   	CreateLog("Money", log_str);
	    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
        GameTextForPlayer(playerid, "~g~+100$", 1000, 1);
	}
	return true;
}
function InteractDoorLSPD_Timer(doorid)
{
    LSPDDoors[doorid][dl_Stattus] = false;
	StopDynamicObject(LSPDDoors[doorid][dl_DoorObject]);
	MoveDynamicObject(LSPDDoors[doorid][dl_DoorObject], InteractDoorLSPD_Positions[doorid][0], InteractDoorLSPD_Positions[doorid][1], InteractDoorLSPD_Positions[doorid][2], 3);
}
function HideTimerTD(playerid) PlayerTextDrawHide(playerid, Timer_PTD[playerid]);
function LSPDCloseGate() MoveObject(lspdgate, 1595.93640, -1638.10168, 14.75460, 1);
function ArmyCloseGate1() MoveObject(armygates[0], 2720.16040, -2399.64966, 15.26770, 1);
function ArmyCloseGate2() MoveObject(armygates[1], 2720.20361, -2498.23486, 15.26770, 1);
function PoliceGateMove() MoveObject(PoliceGate, 1544.68933, -1630.89624, 13.07590, 0.1,  0.00000, 90.00000, 90.00000);
function AntiAuto(playerid) AutoTimer[playerid] = false;

/* ========================== << [ Commands ] >> ============================ */
CMD:alogin(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(isAlogged[playerid])
        {
            new string[128];
            format(string, sizeof(string), "<ALogin> %s'm(a) Datova AdminPanel.",Name(playerid));
            SendAdminMessage(0xF4B800AA, string);
            isAlogged[playerid] = false;
           	if(AStream)
			{
				SvDetachListenerFromStream(AStream, playerid);
			}
			UpdateReportTD();
			for(new i = 0; i < 4; i ++) TextDrawHideForPlayer(playerid, ReportTXT[i]);
			for(new i = 0; i < 53; i++)
			{
				EnableAntiCheatForPlayer(playerid, i, 1);
			}
        }
        else
        {
            ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, color_admin"Alogin", "{ffffff}Miutitet Tkveni "color_admin"Admin Paroli:", "Enter", "Close");
        }
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:adminkey(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, color_admin"Adminkey", "{ffffff}Miutitet Tkventvis Sasurveli "color_admin"Paroli", "Enter", "Close");
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:adminzone(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] < 1) return true;
	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	SetPlayerPos(playerid, 1269.3962, -835.2073, 1085.6328);
	sendinfo(playerid, "Tkven Gadateleportdit Admin Zona'shi");
	SetPlayerInterior(playerid, 5);
	SetPlayerVirtualWorld(playerid, 5);
	return true;
}
CMD:veh(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] < 5) return senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    if(sscanf(params, "ddd", params[0], params[1], params[2])) return sendusage(playerid, "/veh [Car ID] [Color First] [Color Second]");
    //if(!(400 <= params[0] <= 611)) return senderror(playerid, "Invalid Vehicle ID");
    if((!(400 <= params[0] <= 611)) && (!(12300 <= params[0]  <= 12380))) return senderror(playerid, "Tkven Miutitet Transportis Araswori ID!");
	//switch(params[0]) { case 400.611,12300..12380: {} default: return senderror(playerid, "Tkven Miutitet Transportis Araswori ID!"); }
    new Float:x, Float:y, Float:z, Float:a;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
    new vehid = CreateVehicle(params[0], x, y, z, a, params[1], params[2], -1);
    SetVehicleNumberPlate(vehid, "Admin's Car");
	SetVehicleHealth(vehid, 999.0);
    IsAdminVehicle[vehid] = 1;
    GetVehicleParamsEx(vehid,engines,lightss,alarms,doorss,bonnets,boots,objectives);
	SetVehicleParamsEx(vehid,1,lightss,alarms,doorss,bonnets,boots,objectives);
    PutPlayerInVehicleEx(playerid, vehid, 0);
    //SetVehicleNumberPlate(caridhouse[playerid], "Genuine");
    SetVehicleVirtualWorld(vehid, GetPlayerVirtualWorld(playerid));
    LinkVehicleToInterior(vehid, GetPlayerInterior(playerid));
	gFuel[vehid] = 100;
	format(YCMDstr, sizeof(YCMDstr), "Sheiqmna Admin Car | ID - %d | {EA5151}[%s]", params[0],GetVehicleName(params[0]));
	SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
    return true;
}
CMD:delveh(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] < 1) return senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    if(!IsPlayerInAnyVehicle(playerid)) return true;
    new vehid = GetPlayerVehicleID(playerid), cantdelete = 0;
    if(vehid == INVALID_VEHICLE_ID) return true;
    foreach(new i:Player)
    {
		if(vehid == caridhouse[i]) cantdelete++;
    }
    if(cantdelete == 1) return SendClientMessage(playerid, COLOR_GREY, "Am Transports Ver Washlit");
    if(IsAdminVehicle[vehid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Am Transports Ver Washlit");
    IsAdminVehicle[vehid] = 0;
    DestroyVehicle(vehid);
    SendClientMessage(playerid, COLOR_WHITE, "Mankana Waishala");
    return true;
}
CMD:delvehall(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] < 9) return senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    new vehs = 0;
	for(new i = 0, j = GetVehiclePoolSize(); i <= j; i ++)
    {
        if(!IsValidVehicle(i)) continue;
        if(IsVehicleOccupied(i) &&  PlayerInfo[GetVehicleDriver(i)][pAdmin] >= 1) continue;
        if(IsAdminVehicle[i] == 1)
        {
            IsAdminVehicle[i] = 0;
            DestroyVehicle(i);
            vehs ++;
        }
    }
    if(vehs == 0) return SendClientMessage(playerid, COLOR_WHITE, "Administratoris Mier Chamogdebuli Mankanebi Araa");
    SendClientMessage(playerid, COLOR_WHITE, "Adminisrator Vehicles Deleted");
    return true;
}
CMD:unrent(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(RentCarID[playerid] == -1) return senderror(playerid, "Ar Gakvt Naqiravebi Transporti");
    if(GetPlayerVehicleID(playerid) == RentCarID[playerid]) return senderror(playerid, "Transportshi Ver Gamoikenebt Am Brdzanebas");
    DestroyVehicle(RentCarID[playerid]);
    RentCarID[playerid] = -1;
    SendClientMessage(playerid, COLOR_GREEN, "[RentCar]{ffffff} - Tkven Gaauqmet Transportis Qiraoba");
    return true;
}
CMD:gotopos(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(!KINKLA(playerid)) return false;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	new Float:pos1, Float:pos2,int,vw;
	if(sscanf(params,"fffdd",floatstr(params),pos1,pos2,int,vw)) return sendusage(playerid,"/gotopos [x] [y] [z] [interiorid] [virtualworld]");
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetVehiclePos(GetPlayerVehicleID(playerid),floatstr(params), pos1, pos2);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), int);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), vw);
	}
	else
	{
		SetPlayerPos(playerid, floatstr(params), pos1, pos2);
		SetPlayerInterior(playerid, int);
        SetPlayerVirtualWorld(playerid, vw);
	}
	return 1;
}
CMD:addhouse(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(Mtavari(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "dd", params[0],params[1])) return sendusage(playerid, "/addhouse [Price] [Class 1 - 3]");
        if(!params[0] || params[0] > 15000000 || params[0] < 10000) return SendClientMessage(playerid, COLOR_GREY, "Saxlis Fasi Unda Ikos 10.000$ dan 15.000.000$ mde !");
        if(!params[1] || params[1] > 3 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Saxlis Klasi Unda Ikos 1 - 3 mde ! (A, B, C)");
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        CreateHouse(x, y, z, params[1], params[0]);
    }
    return true;
}
CMD:addbizz(playerid, params[])
{
    if(KINKLA(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "dds[32]", params[0],params[1],params[2])) return sendusage(playerid, "/addbizz [Price] [Type 1 - 2] [Name] (24/7 | Restourant)");
        if(!params[0] || params[0] > 15000000 || params[0] < 10000) return SendClientMessage(playerid, COLOR_GREY, "Biznesis Fasi Unda Ikos 10.000$ dan 15.000.000$ mde !");
        if(!params[1] || params[1] > 2 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Biznesis Tipi Unda Ikos 1 - 2 mde !");
        if(!strlen(params[2])) return false;
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        CreateBussiness(x, y, z, params[1], params[0], params[2]);
    }
    return true;
}
CMD:addzone(playerid, params[])
{
    if(Mtavari(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
   		new name[32], Float:distance;
		if(sscanf(params, "s[32]f", name, distance)) return sendusage(playerid, "/addzone [Name] [Range]");
		if(IsPlayerInGreenZone(playerid)) return senderror(playerid, "Am Adgilas Ukve Aris Green Zone");
  		if(TotalZone == MAX_ZONE) return true;
  		TotalZone ++;
		GetPlayerPos(playerid, ZoneInfo[TotalZone][ZonePosX], ZoneInfo[TotalZone][ZonePosY], ZoneInfo[TotalZone][ZonePosZ]);
		ZoneInfo[TotalZone][ZoneVirtualWorld] = GetPlayerVirtualWorld(playerid);
	 	SetString(ZoneInfo[TotalZone][ZoneName], name);
	 	ZoneInfo[TotalZone][ZoneID] = TotalZone;
	 	ZoneInfo[TotalZone][ZoneDistance] = distance;
		new query[512];
   		mysql_format(connect, query, sizeof(query), "INSERT INTO `greenzone` (`ZoneID`,`ZoneName`,`ZonePosX`,`ZonePosY`,`ZonePosZ`,`ZoneDistance`,`ZoneVirtualWorld`) VALUES\
	 		('%i','%s','%f','%f','%f','%f','%i')", TotalZone, name, ZoneInfo[TotalZone][ZonePosX], ZoneInfo[TotalZone][ZonePosY], ZoneInfo[TotalZone][ZonePosZ], distance, ZoneInfo[TotalZone][ZoneVirtualWorld]);
  		mysql_tquery(connect, query, "", "");
	}
	return true;
}
CMD:mafiacapt(playerid, params[])
{
    if(!IsAMafia(playerid)) return senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba");
    if(!startmcapture) return sendinfo(playerid, "Am Momentshi Capture Daushvebelia!");
    if(mafiaon == 0) return sendinfo(playerid, "Capture Gamortulia Administraciis Mier");
    if(FrakMF[PlayerInfo[playerid][pMember]] != 0) return senderror(playerid,"Tqvenma Mafiam Ukve Dacapta Am Saatshi.");
    new captis[256];
    new rand1 = Random(13,27), rand2 = Random(31,49);
	format(captis, sizeof(captis), "{FFFFFF}Teritoriistvis Brdzolis Dasawyebad Sachiroa Miutitot Swori Pasuxi\nShekitxva: Ramdeni Aris {FF9900}%d+%d?\n{FFFFFF}Brdzolas Daiwyebs Is Banda, Romelic Pirveli Moaswrebs Pasuxis Chaweras", rand1, rand2);
	SetPVarInt(playerid,"MCapture", rand1+rand2);
	ShowPlayerDialog(playerid, 668, DIALOG_STYLE_INPUT, "{FF9900}Capture{FFFFFF} | Enter The Answer", captis, "Shemdeg", "Daxurva");
	return 1;
}
CMD:minfo(playerid)
{
	new string[128];
	{
		if(IsAMafia(playerid))
		{
			ClearTotalMz();
			for(new i =0;i<sizeof(McInfo);i++)
			{
				if(McInfo[i][FrakVlad] == FRACTION_LCN) mafiakv[0]++;
				if(McInfo[i][FrakVlad] == FRACTION_YAKUZA) mafiakv[1]++;
				if(McInfo[i][FrakVlad] == FRACTION_RM) mafiakv[2]++;
			}
			switch(PlayerInfo[playerid][pMember])
			{
				case FRACTION_LCN:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Maffis Gankarugelbashia : {DBD604}%d Kvadrati",mafiakv[0]);
					ShowPlayerDialog(playerid,1042,DIALOG_STYLE_MSGBOX,"La Cosa Nostra",string, "Close", "");
				}
				case FRACTION_YAKUZA:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Maffis Gankarugelbashia : {DBD604}%d Kvadrati",mafiakv[1]);
					ShowPlayerDialog(playerid,1043,DIALOG_STYLE_MSGBOX,"Yakuza",string, "Close", "");
				}
			 	case FRACTION_RM:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Maffis Gankarugelbashia : {DBD604}%d Kvadrati",mafiakv[2]);
					ShowPlayerDialog(playerid,1045,DIALOG_STYLE_MSGBOX,"Russian Maffia",string, "Close", "");
				}
			}
			ClearTotalMz();
		}
	}
	return true;
}
CMD:mcaptureon(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] == 0) return senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	if(MafiaTester(playerid) ||PlayerInfo[playerid][pAdmin] >= 9)
	{
		if(mafiaon == 0)
		{
			mafiaon = 1;
			format(YCMDstr, sizeof(YCMDstr), "%s - Charto Mafia War",Name(playerid));
	        SendClientMessageToAll(COLOR_WHITE, YCMDstr);
		}
		else
		{
			mafiaon = 0;
			format(YCMDstr, sizeof(YCMDstr), "%s - Gamorto Mafia War",Name(playerid));
	        SendClientMessageToAll(COLOR_WHITE, YCMDstr);
		}
	}
	return true;
}
CMD:mzcolor(playerid, params[])
{
	if(MafiaTester(playerid) || Mtavari(playerid))
	{
	    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, -1, "/mzcolor [Mafia]");
	    if(params[0] != FRACTION_LCN && params[0] != FRACTION_YAKUZA && params[0] != FRACTION_RM) return senderror(playerid, "Tkven Miutitet Maffiis Araswori ID!");
		for(new i = 0; i < 30; i++)
		{
			if(PlayerToKvadrat(playerid,McInfo[i][Coords][0], McInfo[i][Coords][1],McInfo[i][Coords][2],McInfo[i][Coords][3]))
			{
				McInfo[i][FrakVlad] = params[0];
				GangZoneStopFlashForAll(McInfo[i][ID]);
				GangZoneHideForAll(McInfo[i][ID]);
				GangZoneShowForAll(McInfo[i][ID],GetMafiaZoneColor(i));
				SaveMZ();
				MaffiaTextUPDATE();
				return true;
			}
		}
	}
	return true;
}
CMD:givecase(playerid, params[])
{
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "udd", params[0], params[1], params[2])) return sendusage(playerid, "/givecase [Motamashis ID] [Case ID] [Amount]");
        if(params[0] == INVALID_PLAYER_ID) return senderror(playerid, "Motamashe Ver Moidzebna!");
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Gagivliat Avtorizacia");
		if(params[1] < 0 || params[1] > 2) return sendinfo(playerid, "Minimum: 0 / Maxsimum: 2 Case");
		PlayerInfo[params[0]][pCases][params[1]] += params[2];
		format(b_string, sizeof(b_string), "Tkven Gadaecit Motamashe: {3399FF}%s{FFFFFF}'s %s Case | %d Cali", Name(params[0]), GetCaseName(params[1]),  params[2]);
		SendClientMessage(playerid, COLOR_WHITE, b_string);
		//SavePlayerAll(params[0]);
		format(log_str, sizeof(log_str), "[GiveCase] %s'(m)a Misca %s's %s Case | %d Cali", Name(playerid), Name(params[0]), GetCaseName(params[1]), params[2]);
		CreateLog("Case", log_str);
	}
	else senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	return true;
}
CMD:getgun(playerid, params[])
{
    switch(PlayerInfo[playerid][pMember])
	{
		case FRACTION_VAGOS:
		{
			if(IsPlayerInRangeOfPoint(playerid,25.0,320.7387,1121.1909,1083.8828))
			{
				if(sscanf(params, "dd",params[0],params[1]))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Sheiyvanet: /getgun [Iaragis ID] [Tyviebi]");
					return true;
				}
				if(params[0] != 24 && params[0] != 25 && params[0] != 31 && params[0] != 30) return SendClientMessage(playerid, COLOR_WHITE, "Iaragis ID Arasworea! - Misawvdomia: 24,25,28,30,31,33 ID'ebi");
                if(params[1] > 200 || params[1] < 1) return sendinfo(playerid, "Maxsimum: 200Tyvia");

                
				GivePlayerWeapon(playerid,params[0],params[1]);
			}
		}
		case FRACTION_BALLAS:
		{
			if(IsPlayerInRangeOfPoint(playerid,25.0,320.7387,1121.1909,1083.8828))
			{
				if(sscanf(params, "dd",params[0],params[1]))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Sheiyvanet: /getgun [Iaragis ID] [Tyviebi]");
					return true;
				}
				if(params[0] != 24 && params[0] != 25 && params[0] != 31 && params[0] != 30) return SendClientMessage(playerid, COLOR_WHITE, "Iaragis ID Arasworea! - Misawvdomia: 24,25,28,30,31,33 ID'ebi");
                if(params[1] > 200 || params[1] < 1) return sendinfo(playerid, "Maxsimum: 200Tyvia");
    
                
				GivePlayerWeapon(playerid,params[0],params[1]);
			}
		}
		case FRACTION_AZTEC:
		{
			if(IsPlayerInRangeOfPoint(playerid,25.0,320.7387,1121.1909,1083.8828))
			{
				if(sscanf(params, "dd",params[0],params[1]))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Sheiyvanet: /getgun [Iaragis ID] [Tyviebi]");
					return true;
				}
				if(params[0] != 24 && params[0] != 25 && params[0] != 31 && params[0] != 30) return SendClientMessage(playerid, COLOR_WHITE, "Iaragis ID Arasworea! - Misawvdomia: 24,25,28,30,31,33 ID'ebi");
                if(params[1] > 200 || params[1] < 1) return sendinfo(playerid, "Maxsimum: 200Tyvia");
            
				GivePlayerWeapon(playerid,params[0],params[1]);
			}
		}
		case FRACTION_GROVE:
		{
			if(IsPlayerInRangeOfPoint(playerid,25.0,320.7387,1121.1909,1083.8828))
			{
				if(sscanf(params, "dd",params[0],params[1]))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Sheiyvanet: /getgun [Iaragis ID] [Tyviebi]");
					return true;
				}
				if(params[0] != 24 && params[0] != 25 && params[0] != 31 && params[0] != 30) return SendClientMessage(playerid, COLOR_WHITE, "Iaragis ID Arasworea! - Misawvdomia: 24,25,28,30,31,33 ID'ebi");
                if(params[1] > 200 || params[1] < 1) return sendinfo(playerid, "Maxsimum: 200Tyvia");
              
                
				GivePlayerWeapon(playerid,params[0],params[1]);
			}
		}
		case FRACTION_RIFA:
		{
			if(IsPlayerInRangeOfPoint(playerid,25.0,320.7387,1121.1909,1083.8828))
			{
				if(sscanf(params, "dd",params[0],params[1]))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Sheiyvanet: /getgun [Iaragis ID] [Tyviebi]");
					return true;
				}
				if(params[0] != 24 && params[0] != 25 && params[0] != 31 && params[0] != 30) return SendClientMessage(playerid, COLOR_WHITE, "Iaragis ID Arasworea! - Misawvdomia: 24,25,28,30,31,33 ID'ebi");
                if(params[1] > 200 || params[1] < 1) return sendinfo(playerid, "Maxsimum: 200Tyvia");

                
				GivePlayerWeapon(playerid,params[0],params[1]);
			}
		}
	}
	return true;
}
CMD:antitroll(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(KINKLA(playerid))
	{
	    if(atroll == 0)
	    {
			SendClientMessage(playerid, COLOR_WHITE, "Antitroll ON !");
			atroll = 1;
		}
		else if(atroll == 1)
	    {
			SendClientMessage(playerid, COLOR_WHITE, "Antitroll OFF !");
			atroll = 0;
		}
	}
	return true;
}
CMD:sethousecarpos(playerid, params[])
{
    if(KINKLA(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(!IsPlayerInAnyVehicle(playerid)) return senderror(playerid, "Tkven Ar Xart Avtomobilshi");
        if(sscanf(params, "d", params[0])) return sendusage(playerid, "/sethousecarpos [houseid]");
        new Float:x, Float:y, Float:z, Float:angle;
        GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
        GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
        HouseInfo[params[0]][hCarPosition][0] = x;
        HouseInfo[params[0]][hCarPosition][1] = y;
        HouseInfo[params[0]][hCarPosition][2] = z;
        HouseInfo[params[0]][hCarPosition][3] = angle;
        SendClientMessage(playerid, COLOR_ADMIN, "[Success]{ffffff} Manakanis Axali Spawn Sheinaxa Saxlma !");
        SaveHouseData(params[0]);
    }
	return true;
}
CMD:exit(playerid, params[])
{
    for(new i = 1; i <= TotalHouse; i ++)
    {
        if(!IsPlayerInRangeOfPoint(playerid, 4.0, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2])) continue;
        if(GetPlayerVirtualWorld(playerid) == i+11)
        {
            SetPlayerPosEx(playerid, HouseInfo[i][hPosition][0], HouseInfo[i][hPosition][1], HouseInfo[i][hPosition][2], 1500);
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetCameraBehindPlayer(playerid);
            DelayPickup[playerid] = gettime()+5;
            return true;
        }
    }
    return true;
}
CMD:payday(playerid, params[])
{
    if(Mtavari(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        PayDay();
  		format(log, sizeof(log), "Motamashe %s'm(a) Gaaketa Payday", Name(playerid));
		CreateLog("PayDay.txt", log);
    }
    return true;
}
CMD:settime(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "d",params[0])) return sendusage(playerid, "/settime (0-23)");
        SetWorldTime(params[0]);
        format(gstr, sizeof(gstr), "Time: %d.",params[0]);
        SendClientMessage(playerid, COLOR_WHITE, gstr);
    }
    else senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	return true;
}
CMD:hpanel(playerid, params[])
{
    for(new i = 1; i <= TotalHouse; i ++)
    {
        if(!IsPlayerInRangeOfPoint(playerid, 4.0, HouseInfo[i][hExitPosition][0], HouseInfo[i][hExitPosition][1], HouseInfo[i][hExitPosition][2])) continue;
        if(GetPlayerVirtualWorld(playerid) == i+11)
        {
            if(!IsMyHouse(playerid, i))
            {
                senderror(playerid, "Es Ar Aris Tkveni Saxli");
                return true;
            }
            ShowHousePanel(playerid, i);
            return true;
        }
    }
    return true;
}
CMD:home(playerid, params[])
{
    if(CountPlayerHouses(playerid) <= 0) return senderror(playerid, "Tkven Ar Gakvt Saxli");
    new houseid = -1;
    if(CountPlayerHouses(playerid) == 1)
    {
        for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
        {
            if(PlayerInfo[playerid][pHouse][i] != 0) houseid = PlayerInfo[playerid][pHouse][i];
        }
    }
    if(houseid != -1)
    {
		SetPlayerGPS(playerid, "Home", true, HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2]);
		gCheckpoint[playerid] = CHECKPOINT_HOME;
        return true;
    }
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/home [Home ID]");
	houseid = PlayerInfo[playerid][pHouse][params[0]];
	SetPlayerGPS(playerid, "Home", true, HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2]);
	gCheckpoint[playerid] = CHECKPOINT_HOME;
    return true;
}
CMD:cars(playerid, params[])
{
	if(!isLogged[playerid]) return false;
    if(CountPlayerHouses(playerid) == 0) return senderror(playerid, "Tkven Ar Gakvt Saxli");
	if(DelayCMD[playerid] > gettime()) return true;
    ShowCarMenu(playerid);
    DelayCMD[playerid] = gettime()+2;
    return true;
}
CMD:sellcar(playerid, params[])
{
	if(!isLogged[playerid]) return false;
    if(CountPlayerHouses(playerid) == 0) return senderror(playerid, "Tkven Ar Gakvt Saxli");
	if(DelayCMD[playerid] > gettime()) return true;
    ShowSellCarMenu(playerid);
    DelayCMD[playerid] = gettime()+2;
    return true;
}
CMD:engine(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return false;
    new vehicleid = GetPlayerVehicleID(playerid);
    if(vehicleid == INVALID_VEHICLE_ID) return true;
    if(IsABmx(vehicleid))
    {
        return senderror(playerid, "Am Transports Ar Akvs Dzravi");
    }
	if(DelayCMD[playerid] > gettime()) return true;
	DelayCMD[playerid] = gettime()+1;
    GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
    speedometerChange[playerid] = true;
    if(!engines)
    {
	    if(GetLauncherStatus(playerid))
		{
			cef_emit_event(playerid, "data:pool:notification", CEFINT(1));
		}
		SetVehicleParamsEx(vehicleid, 1, lightss, alarms, doorss, bonnets, boots, objectives);
		return true;
	}
	if(engines)
	{
  		if(GetLauncherStatus(playerid))
		{
			cef_emit_event(playerid, "data:pool:notification", CEFINT(2));
		}
		SetVehicleParamsEx(vehicleid, 0, lightss, alarms, doorss, bonnets, boots, objectives);
		return true;
	}
	return true;
}
CMD:lights(playerid, params[])
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return false;
    new vehicleid = GetPlayerVehicleID(playerid);
    if(vehicleid == INVALID_VEHICLE_ID) return true;
    if(IsABmx(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid))
    {
        return senderror(playerid, "Am Transports Ar Akvs Farebi");
    }
   	if(DelayCMD[playerid] > gettime()) return true;
	DelayCMD[playerid] = gettime()+1;
    GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
    speedometerChange[playerid] = true;
    if(!lightss)
    {
        GameTextForPlayer(playerid, "~w~Lights ~g~~h~ON", 2000, 6);
		SetVehicleParamsEx(vehicleid, engines, 1, alarms, doorss, bonnets, boots, objectives);
		return true;
	}
	if(lightss)
	{
	    GameTextForPlayer(playerid, "~w~Lights ~r~~h~OFF", 2000, 6);
		SetVehicleParamsEx(vehicleid, engines, 0, alarms, doorss, bonnets, boots, objectives);
		return true;
	}
	return true;
}
CMD:lock(playerid, params[])
{
    new nearveh = GetNearestVehicle(playerid);
	new carid = nearveh;
    if(carid == -1) return false;
   	if(DelayCMD[playerid] > gettime()) return true;
	DelayCMD[playerid] = gettime()+1;
    speedometerChange[playerid] = true;
    if(carid == caridhouse[playerid])
    {
        GetVehicleParamsEx(carid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
        if(doorss == 1)
        {
			if(GetLauncherStatus(playerid))
			{
				cef_emit_event(playerid, "data:pool:notification", CEFINT(3));
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Car ~g~UNLOCK", 1500, 1);
			}
            UnLockCar(carid);
        }
        else
        {
			if(GetLauncherStatus(playerid))
			{
				cef_emit_event(playerid, "data:pool:notification", CEFINT(4));
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Car ~r~LOCK", 1500, 1);
			}
            LockCar(carid);
        }
    }
    else
    {
        SendClientMessage(playerid, COLOR_GREY, "Ar Gkavt Transporti");
    }
	return true;
}
CMD:alock(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        new nearveh = GetNearestVehicle(playerid);
		new carid = nearveh;
        if(carid == -1) return false;
        GetVehicleParamsEx(carid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
        speedometerChange[playerid] = true;
		if(doorss == 1)
		{
			if(GetLauncherStatus(playerid))
			{
				cef_emit_event(playerid, "data:pool:notification", CEFINT(3));
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Car ~g~UNLOCK", 1500, 1);
			}
			UnLockCar(carid);
		}
		else
		{
			if(GetLauncherStatus(playerid))
			{
				cef_emit_event(playerid, "data:pool:notification", CEFINT(4));
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Car ~r~LOCK", 1500, 1);
			}
			LockCar(carid);
		}
	}
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}

CMD:ahp(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
        if(sscanf(params, "u",params[0])) return sendinfo(playerid, "/ahp [ID Motamashis]");
	    if(!IsPlayerConnected(params[0])) return true;
	    {
			if(IsPlayerInAnyVehicle(params[0]))
			{
				RepairVehicle(GetPlayerVehicleID(params[0]));
				SetVehicleHealth(GetPlayerVehicleID(params[0]), 999.0);
	 			format(YCMDstr, sizeof(YCMDstr), "Tkven Mankana Gagiketat Administratorma %s'm(a)",Name(playerid));
				SendClientMessage(params[0], 0x6BB3FFAA, YCMDstr);
	 			format(YCMDstr, sizeof(YCMDstr), "Tkven Gauketet Mankana Motamashe %s's",Name(params[0]));
     			SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
			}
		}
	}
	else
	{
	    senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	}
	return true;
}
CMD:hp(playerid)
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(IsPlayerInAnyVehicle(playerid))
		{
	        RepairVehicle(GetPlayerVehicleID(playerid));
			SetVehicleHealth(GetPlayerVehicleID(playerid), 999.0);
			PlayerPlaySound(playerid, SOUND_REPAIR, 0.0, 0.0, 0.0);
			gFuel[GetPlayerVehicleID(playerid)] = 100;
		}
		SetPlayerHealth(playerid, 100);
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:sethp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "ud", params[0], params[1])) return sendusage(playerid, "/sethp [Motamashis ID] [Amount]");
        if(!IsPlayerConnected(params[0])) return true;
		if(!isLogged[params[0]]) return true;
		if(params[1] < -1 || params[1] > 160) return sendinfo(playerid, "Minimum: 0 / Maxsimum: 160");
		SetPlayerHealth(params[0], params[1]);
		SendClientMessage(playerid, COLOR_WHITE, "Motamashes Dauyenda HP");
		if(params[1] == 100 && IsPlayerInAnyVehicle(params[0]))
		{
	        RepairVehicle(GetPlayerVehicleID(params[0]));
			SetVehicleHealth(GetPlayerVehicleID(params[0]), 999.0);
			gFuel[GetPlayerVehicleID(params[0])] = 100;
		}
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:spawn(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/sp(awn) [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Administratorma %s(%d)'m(a) Daarespawna %s(%d)",Name(playerid),playerid,Name(params[0]),params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
		SpawnPlayer(params[0]);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:slap(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/slap [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Administratorma %s(%d)'m(a) Ukna Slap %s(%d)'(s)",Name(playerid),playerid,Name(params[0]),params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
		new Float:x, Float:y, Float:z;
        GetPlayerPos(params[0], x, y, z);
        SetPlayerPos(params[0], x, y, z + 5);
        PlayerPlaySound(params[0], 1130, 0, 0, 0);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:kick(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "us[45]",params[0],params[1])) return sendusage(playerid, "/kick [Motamashis ID] [Mizezi]");
		if(!IsPlayerConnected(params[0])) return false;
        if(!strlen(params[1])) return false;
        format(gstr, sizeof(gstr), "Administratorma {ffffff}%s'm(a){FF6347} Gaagdo Serveridan {ffffff}%s{FF6347} Mizezi: {ffffff}%s",Name(playerid),Name(params[0]),params[1]);
        SendClientMessageToAll(COLOR_LIGHTRED, gstr);
        Kick(params[0]);
        PlayerInfo[playerid][pAdmin_Kick] ++;
        PlayerUpdateData(playerid, "pAdmin_Kick", PlayerInfo[playerid][pAdmin_Kick]);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:skick(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/skick [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
        Kick(params[0]);
        format(gstr, sizeof(gstr), "%s - Kicked ",Name(params[0]));
        SendClientMessage(playerid, COLOR_RED, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:mute(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new string[128], str[300];
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/mute [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
		format(string, sizeof(string), "Mute | %s",Name(params[0]));
        format(str, sizeof(str), "{ffffff}Reason\t{ffffff}Time\n{ffffff}[1] - Chat Flood\t10 Wuti\n[2] - OOC Sheurawkofa\t20 Wuti\n[3] - Motxovna\t5 Wuti\n[4] - Administratoris Sheurawkofa\t15 Wuti\n[5] - Proektis Sheurawkofa\t15 Wuti\n[6]- Mizezis Mititeba\t10 Wuti");
		ShowPlayerDialog(playerid, 11, DIALOG_STYLE_TABLIST_HEADERS, string, str, "Mute", "Exit");
		SetPVarInt(playerid, "ActionID", params[0]);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:unmute(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new string[128];
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/unmute [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
		if(PlayerInfo[params[0]][pMute] == 0) return senderror(playerid, "Mititebul Motamashes Ar Adevs Chatis Bani");
        PlayerInfo[params[0]][pMuteTime] = 1;
        PlayerUpdateData(params[0], "pMuteTime", PlayerInfo[params[0]][pMuteTime]);
        format(string, sizeof(string), "Administarotma {ffffff}%s'm(a) {FF6347}Moxsna Chatis Bani {ffffff}%s'(s)",Name(playerid),Name(params[0]));
        SendClientMessageToAll(COLOR_LIGHTRED, string);
        SendClientMessage(params[0], COLOR_WHITE, "- Administatorma Mogxsnat Chatis Bani");
		format(log, sizeof(log), "[Prison] Administrator [%s] UnMuted - [%s]",Name(playerid),Name(params[0]));
		CreateLog("UnMute.txt", log);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
    return true;
}
CMD:mutelist(playerid)
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new countmutes = 0;
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pMute] >= 1)
			{
			    countmutes ++;
				format(gstr, sizeof(gstr), "%s [ID: %d] | %s",Name(i),i,Convert(PlayerInfo[i][pMuteTime]));
				SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
			}
		}
		if(countmutes == 0) return SendClientMessage(playerid, COLOR_GREY, "Arcert Motamashes Ar Adevs Mute");
		format(gstr, sizeof(gstr), "Sul: %d Motamashe", countmutes);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:prison(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new string[128], str[300];
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/prison [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
		format(string, sizeof(string), "Prison | %s",Name(params[0]));
        format(str, sizeof(str), "{ffffff}Reason\t{ffffff}Time\n{ffffff}[1] - Cheater\t20 Wuti\n[2] - NonRP Action / RP Avoid\t15 Wuti\n[3] - Death Match\t15 Wuti\n[4] - Spawn Kill\t10 Wuti\n[5] - Revenge Kill\t10 Wuti\n[6]- Mizezis Mititeba\t15 Wuti");
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_TABLIST_HEADERS, string, str, "Mute", "Exit");
		SetPVarInt(playerid, "ActionID", params[0]);
		SetPVarInt(playerid, "Slient", 0);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:offprison(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new string[256], rows;
		if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/prison [Saxeli]");
		if(IsOnline(params[0])) return senderror2(playerid, "Motamashe Shemosulia Serverze");
		format(string, sizeof(string), "SELECT * FROM `accounts` WHERE Name = '%s'", params[0]);
		mysql_query(connect, string);
		cache_get_row_count(rows);
		if(!rows)
		{
		    return senderror2(playerid, "Motamashe Ver Moidzebna");
		}
	    format(string, sizeof(string), "UPDATE accounts SET pPrison = '1', pPrisonTime = '1800' WHERE Name = '%s'", params[0]);
		mysql_query(connect, string);
	    format(string, sizeof(string), "<OffPrison> {ffffff}%s'm(a) "color_admin"Chasva Cixeshi Motamashe {ffffff}%s (min:30:0)", params[0]);
		SendAdminMessage(COLOR_ADMIN, string);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:sprison(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new string[128], str[300];
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/prison [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
		format(string, sizeof(string), "Prison | %s",Name(params[0]));
        format(str, sizeof(str), "{ffffff}Reason\t{ffffff}Time\n{ffffff}[1] - Cheater\t20 Wuti\n[2] - NonRP Action / RP Avoid\t15 Wuti\n[3] - Death Match\t15 Wuti\n[4] - Spawn Kill\t10 Wuti\n[5] - Revenge Kill\t10 Wuti\n[6]- Mizezis Mititeba\t15 Wuti");
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_TABLIST_HEADERS, string, str, "Mute", "Exit");
		SetPVarInt(playerid, "ActionID", params[0]);
		SetPVarInt(playerid, "Slient", 1);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:unprison(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 5)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        new string[128];
        if(sscanf(params, "u",params[0])) return sendusage(playerid, "/unprison [Motamashis ID]");
        if(!IsPlayerConnected(params[0])) return false;
        if(PlayerInfo[params[0]][pPrison] == 0) return senderror(playerid, "Mititebuli Motamashe Ar Zis Cixeshi");
        PlayerInfo[params[0]][pPrisonTime] = 1;
        PlayerUpdateData(params[0], "pPrisonTime", PlayerInfo[params[0]][pPrisonTime]);
        format(string, sizeof(string), "Administarotma {ffffff}%s'm(a) {FF6347}Gamoushva Cixidan {ffffff}%s",Name(playerid),Name(params[0]));
        SendAdminMessage(COLOR_LIGHTRED, string);
        SendClientMessage(params[0], COLOR_WHITE, "- Administatorma Gamogishvat Cixidan");
        PlayerTextDrawHide(params[0], Timer_PTD[params[0]]);
		format(log, sizeof(log), "[Prison] Administrator [%s] UnPrisoned - [%s]",Name(playerid),Name(params[0]));
		CreateLog("UnPrison.txt", log);
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:prisonlist(playerid)
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new countprions = 0;
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pPrison] >= 1)
			{
			    countprions ++;
				format(gstr, sizeof(gstr), "%s [ID: %d] | %s",Name(i),i,Convert(PlayerInfo[i][pPrisonTime]));
				SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
			}
		}
		if(countprions == 0) return SendClientMessage(playerid, COLOR_GREY, "Arcerti Motamashe Araa Cixeshi");
		format(gstr, sizeof(gstr), "Sul: %d Motamashe", countprions);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:aduty(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        switch(AdminDuty[playerid])
        {
            case false:
            {
                AdminDuty[playerid] = true;
                GivePlayerWeapon(playerid, 38, 100000);
                SetPlayerColor(playerid, COLOR_BLACK);
                format(gstr, sizeof(gstr), "{ffffff}[A] %s - Admin Duty {58D68D}[ON]",Name(playerid));
                SendAdminMessage(COLOR_WHITE, gstr);
                return true;
            }
            case true:
            {
                AdminDuty[playerid] = false;
                SetPlayerAmmo(playerid, 38, 0);
                SetPlayerColor(playerid, COLOR_NONE);
                format(gstr, sizeof(gstr), "{ffffff}[A] %s - Admin Duty {EC7063}[OFF]",Name(playerid));
                SendAdminMessage(COLOR_WHITE, gstr);
                return true;
            }
        }
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:bmenu(playerid, params[])
{
    if(PlayerInfo[playerid][pBizz] == 0) return senderror(playerid, "Tkven Ar Gakvt Shedzenili Biznesi");
    for(new i = 1; i <= TotalBizz; i ++)
    {
        if(!IsPlayerInRangeOfPoint(playerid, 15.0, BizzInfo[i][bExitPos][0], BizzInfo[i][bExitPos][1], BizzInfo[i][bExitPos][2])) continue;
        if(GetPlayerVirtualWorld(playerid) == i+22)
        {
            new bizizd = GetPlayerVirtualWorld(playerid)-22;
            if(bizizd == PlayerInfo[playerid][pBizz])
            {
                bizizd = PlayerInfo[playerid][pBizz];
                ShowBizzMenu(playerid, bizizd);
                return true;
            }
            else
            {
                senderror(playerid, "Bizneshi Romelshic Imkofebit Ar Gekutvnit Tkven !");
                return true;
            }
        }
    }
    return true;
}
CMD:bwithdraw(playerid, params[])
{
    if(PlayerInfo[playerid][pBizz] == 0) return senderror(playerid, "Tkven Ar Gakvt Shedzenili Biznesi");
    for(new i = 1; i <= TotalBizz; i ++)
    {
        if(!IsPlayerInRangeOfPoint(playerid, 15.0, BizzInfo[i][bExitPos][0], BizzInfo[i][bExitPos][1], BizzInfo[i][bExitPos][2])) continue;
        if(GetPlayerVirtualWorld(playerid) == i+22)
        {
            new bizizd = GetPlayerVirtualWorld(playerid)-22;
            if(bizizd == PlayerInfo[playerid][pBizz])
            {
                if(sscanf(params, "d",params[0])) return sendusage(playerid, "/bwithdraw [Tanxa]");
                if(!params[0] || params[0] > 1000000 || params[0] < 1) return true;
                if(BizzInfo[i][bSafe] < params[0]) return senderror(playerid, "Amdeni Tanxa Araa Biznesshi");
                PlayerInfo[playerid][pCash] += params[0];
                format(log_str, sizeof(log_str), "%s'm(a) gamoitana biznesis angarishidan : %d", Name(playerid),params[0]);
	   			CreateLog("Money", log_str);
                SavePlayerData(playerid);
                BizzInfo[i][bSafe] -= params[0];
                SaveBizzData(i);
                format(gstr, sizeof(gstr), "Biznesidan Moxsenit: %d$",params[0]);
                SendClientMessage(playerid, COLOR_WHITE, gstr);
                format(gstr, sizeof(gstr), "Biznesshi Darcha: %d$",BizzInfo[i][bSafe]);
                SendClientMessage(playerid, COLOR_YELLOW, gstr);
                if(BizzInfo[i][bSafe] < BizzInfo[i][bTax])
                {
                    SendClientMessage(playerid, COLOR_RED, "[WARNING]: Biznesshi Araa Sakmarisi Tanxa Gadasaxadistvis !");
                }
                return true;
            }
            else
            {
                senderror(playerid, "Bizneshi Romelshic Imkofebit Ar Gekutvnit Tkven !");
                return true;
            }
        }
    }
    return true;
}
CMD:chatclear(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 7)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		foreach(new i:Player)
		{
		    sendclear(i, IsPlayerMobile(i)?20:60);
		}
        GameTextForAll("~w~Chat Cleared", 5000, 1);

    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:jetpack(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
        {
            new Float:x, Float:y, Float:z;
            GetPlayerPos(playerid, x, y, z);
            SetPlayerPos(playerid, x, y, z);
        }
        else
        {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        }
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:mask(playerid)
{
    if(!isLogged[playerid]) return false;
	new stringex[100];
    switch(maskOn[playerid])
    {
        case false:
        {
            if(PlayerInfo[playerid][pMask] == 0) return senderror(playerid, "Ar Gakvt Maska");
            maskOn[playerid] = true;
            PlayerInfo[playerid][pMask] = 0;
            format(stringex,sizeof(stringex),"~b~~h~Invisible On");
            SetPlayerChatBubble(playerid, "Iketebs Maskas", COLOR_PURPLE, 30.0, 10000);
            SetPlayerAttachedObject(playerid, HOLDOBJECT, 19801, 2, 0.064999, 0.028999, 0.000000, 0.000000, 80.300003, 178.900009, 1.330000, 1.25, 1.125000);
            SetPlayerColor(playerid, 0x7a766700);
            SendClientMessage(playerid, COLOR_WHITE, "Tkven Gaiketet Maska");
		}
        case true:
        {
            maskOn[playerid] = false;
            PlayerInfo[playerid][pMask] = 1;
            format(stringex,sizeof(stringex),"~b~~h~Invisible Off");
            SetPlayerChatBubble(playerid, "Ixsnis Maskas", COLOR_PURPLE, 30.0, 10000);
            RemovePlayerAttachedObject(playerid, HOLDOBJECT);
            SetPlayerColorEx(playerid);
            SendClientMessage(playerid, COLOR_WHITE, "Tkven Moixsenit Maska");
        }
    }
    GameTextForPlayer(playerid, stringex, 5000, 3);
    ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
    PlayerUpdateData(playerid, "pMask", PlayerInfo[playerid][pMask]);
	return true;
}
CMD:goto(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	if(sscanf(params, "u",params[0])) return sendusage(playerid, "/g(oto) [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		new vw = GetPlayerVirtualWorld(params[0]),
		    intr = GetPlayerInterior(params[0]),
			Float:x, Float:y, Float:z;
		GetPlayerPos(params[0], x, y, z);
		SetPlayerPos(playerid, x+1.0, y, z);
		SetPlayerVirtualWorld(playerid, vw);
		SetPlayerInterior(playerid, intr);
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Administratorma %s'm(a) Mivida %s(%d)",Name(playerid),Name(params[0]),params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:gethere(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	if(sscanf(params, "u",params[0])) return sendusage(playerid, "/gethere [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		new vw = GetPlayerVirtualWorld(playerid),
		    intr = GetPlayerInterior(playerid),
			Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		SetPlayerPos(params[0], x+1.0, y, z);
		SetPlayerVirtualWorld(params[0], vw);
		SetPlayerInterior(params[0], intr);
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Administratorma %s'm(a) Moikvana %s(%d)",Name(playerid),Name(params[0]),params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:admins(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new admincount = 0, playercount = 0, afkstr[100];
		SendClientMessage(playerid, COLOR_YELLOW, "Administators Online:");
		foreach(new i:Player)
		{
		    playercount ++;
		    if(!PlayerInfo[i][pAdmin]) continue;
		    format(gstr, sizeof(gstr), "%s[%d] - Level %d",Name(i),i,PlayerInfo[i][pAdmin]);
		    if(GetPVarInt(i, "AFK_Time") > 2)
			{
				format(afkstr, sizeof(afkstr), " {FFFF00}AFK: %s",Convert(GetPVarInt(i, "AFK_Time")-2));
				strcat(gstr, afkstr);
			}
			SendClientMessage(playerid, COLOR_WHITE, gstr);
		    admincount ++;
		}
		if(admincount == 0) SendClientMessage(playerid, COLOR_GREY, "Arcerti Administratori Araa Serverze");
		format(gstr, sizeof(gstr), "Sul{FFFF00} %d{ffffff} Motamashe Akedan{FFFF00} %d{ffffff} Administatori",playercount,admincount);
		SendClientMessage(playerid, COLOR_WHITE, gstr);

	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:leaders(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new leadercount = 0, playercount = 0, afkstr[100];
		SendClientMessage(playerid, COLOR_YELLOW, "Leaders Online:");
		foreach(new i:Player)
		{
		    playercount ++;
		    if(IsALeader(i)) continue;
		    format(gstr, sizeof(gstr), "%s[%d] - Fraction %s",Name(i),i,FractionNames[PlayerInfo[i][pMember]]);
		    if(GetPVarInt(i, "AFK_Time") > 2)
			{
				format(afkstr, sizeof(afkstr), " {FFFF00}AFK: %s",Convert(GetPVarInt(i, "AFK_Time")-2));
				strcat(gstr, afkstr);
			}
			SendClientMessage(playerid, COLOR_WHITE, gstr);
		    leadercount ++;
		}
		if(leadercount == 0) SendClientMessage(playerid, COLOR_GREY, "Arcerti Lideri Araa Serverze");
		format(gstr, sizeof(gstr), "Sul{FFFF00} %d{ffffff} Motamashe Akedan{FFFF00} %d{ffffff} Lideri",playercount,leadercount);
		SendClientMessage(playerid, COLOR_WHITE, gstr);

	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:money(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "ud",params[0],params[1])) return sendusage(playerid, "/givemoney [Motamashis ID] [Amount]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[1] <= 0) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		PlayerInfo[params[0]][pBank] += params[1];
        PlayerUpdateData(params[0], "pBank", PlayerInfo[params[0]][pCash]);
        format(log_str, sizeof(log_str), "%s'm(a) administratorma %s - gadasca bank fuli %s's : %d", Name(playerid),Name(params[0]),params[1]);
	   	CreateLog("Money", log_str);
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Tkven Miecit %s(%d)'(s) | Tanxa %d$ Bankis Angarishze",Name(params[0]),params[0],params[1]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
		format(gstr, sizeof(gstr), "{FFFF00}[Administrator]{AFAFAF} Administratorma %s'(s) | Gadmogcat Tanxa %d$ Bankis Angarishze",Name(playerid),params[1]);
		SendClientMessage(params[0], COLOR_WHITE, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:givemoney(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "ud",params[0],params[1])) return sendusage(playerid, "/givemoney [Motamashis ID] [Amount]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[1] <= 0) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		PlayerInfo[params[0]][pCash] += params[1];
        PlayerUpdateData(params[0], "pCash", PlayerInfo[params[0]][pCash]);
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Tkven Miecit %s(%d)'(s) | Tanxa %d$",Name(params[0]),params[0],params[1]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
		format(gstr, sizeof(gstr), "{FFFF00}[Administrator]{AFAFAF} Administratorma %s'(s) | Gadmogcat Tanxa %d$",Name(playerid),params[1]);
		SendClientMessage(params[0], COLOR_WHITE, gstr);
		format(log_str, sizeof(log_str), "%s'm(a) administratorma %s - gadasca cash %s's : %d", Name(playerid),Name(params[0]),params[1]);
	   	CreateLog("Money", log_str);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:takemoney(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "ud",params[0],params[1])) return sendusage(playerid, "/takemoney [Motamashis ID] [Amount]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[1] <= 0) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia !");
		PlayerInfo[params[0]][pCash] -= params[1];
        PlayerUpdateData(params[0], "pCash", PlayerInfo[params[0]][pCash]);
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Tkven Chamoacherit %s(%d)'(s) | Tanxa %d$",Name(params[0]),params[0],params[1]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
		format(log_str, sizeof(log_str), "%s'm(a) administratorma %s - chammoachra tanxa fuli %s's : %d", Name(playerid),Name(params[0]),params[1]);
	   	CreateLog("Money", log_str);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:stopmus(playerid, params[])
{
	StopAudioStreamForPlayer(playerid);
	return true;
}
CMD:setweather(playerid, params[])
{
	if(!isLogged[playerid]) return false;
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "d",params[0])) return sendusage(playerid, "/setweather [Weather ID]");
		if(params[0] < 0||params[0] > 45) return SendClientMessage(playerid, COLOR_GREY, "Weather ID 0 - 45");
		SetWeather(params[0]);
		SendClientMessage(playerid, COLOR_WHITE, "Amindi Sheicvala");
	}
	else
	{
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
 	}
	return true;
}
CMD:getip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/getip [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(KINKLA(params[0])) return senderror(playerid, "Mititebuli Motamashis IP Misamarti Miuwvdomelia");
		new str[256], ip[16];
        GetPlayerIp(params[0], ip, 16);
		format(str, sizeof(str), "%s(%d) - [RegIP:{ffffff} %s"color_admin"] | [LastIP: {ffffff}%s"color_admin"] | [CurrentIP: {ffffff}%s"color_admin"]",Name(params[0]),params[0],PlayerInfo[params[0]][pRegIP],PlayerInfo[params[0]][pLastIP],ip);
		SendClientMessage(playerid, COLOR_ADMIN, str);
	}
	else
	{
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
 	}
	return true;
}
CMD:agetip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[70]",params[0])) return sendusage(playerid, "/agetip [Motamashis Saxeli]");
		if(IsDeveloperName(params[0])) return senderror(playerid, "Mititebuli Motamashis IP Misamarti Miuwvdomelia");
		new str[256], query[128], regip[32], lastip[32];
		format(query, sizeof(query), "SELECT * FROM `accounts` WHERE Name = '%s'",params[0]);
        mysql_query(connect, query);
  		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror(playerid, "Account Ver Moidzebna");
		for new i = 0; i < rows; i ++ do
		{
			cache_get_value_name(i, "pRegIP", regip, 32);
			cache_get_value_name(i, "pLastIP", lastip, 32);
		}
		format(str, sizeof(str), "%s - [RegIP:{ffffff} %s"color_admin"] | [LastIP:{ffffff} %s"color_admin"]",params[0],regip,lastip);
		SendClientMessage(playerid, COLOR_ADMIN, str);
	}
	else
	{
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
 	}
	return true;
}
CMD:regips(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	if(sscanf(params, "s[70]",params[0])) return sendusage(playerid, "/regips [IP Address]");
		SendClientMessage(playerid, -1, "Motamasheebi Am IP'it:");
		new playersip[16];
		foreach(new i:Player)
		{
			GetPlayerIp(i, playersip, sizeof(playersip));
			if(!strcmp(playersip, params[0]))
			{
				format(gstr, sizeof(gstr), "[%d] %s | IP %s", i,Name(i),playersip);
				SendClientMessage(playerid, 0x6BB3FFAA, gstr);
			}
		}
	}
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:regip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[70]",params[0])) return sendusage(playerid, "/regip [IP Address]");
		new regipdialog[256], Names[MAX_PLAYER_NAME];
		format(gstr, sizeof(gstr), "SELECT * FROM `accounts` WHERE `pRegIP` = '%s'", params[0]);
		mysql_query(connect, gstr);
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror(playerid,"Am IP'it Arcerti Motamashe Araa Registrirebuli");
		for new i = 0; i < rows; i++ do
		{
			cache_get_value_name(i,"Name",Names);
			format(gstr, sizeof(gstr), "{FFFFFF}%s\n",Names);
			strcat(regipdialog, gstr);
		}
		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST, "{ffffff}Registered On IP", regipdialog, "Close", "");
	}
	else
	{
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
 	}
	return true;
}
CMD:admin(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(DelayChat[playerid] > gettime()) return true;
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/a(dmin) [Text]");
		if(IsIP(params[0])) return true;
		new adminchat[256];
		format(adminchat, sizeof(adminchat), "[A] %s[%d]: %s",Name(playerid),playerid,params[0]);
		SendAdminMessage(COLOR_YELLOW, adminchat);
		DelayChat[playerid] = gettime()+1;
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:oc(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(DelayChat[playerid] > gettime()) return true;
		if(sscanf(params, "s[75]",params[0])) return sendusage(playerid, "/oc [Text]");
		if(IsIP(params[0])) return true;
		new adminchat[256];
		format(adminchat, sizeof(adminchat), "[Owner/Co-Owner] -{ffffff} %s: %s",Name(playerid),params[0]);
		SendAdminMessage(COLOR_YELLOW, adminchat, 9);
		DelayChat[playerid] = gettime()+1;
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:am(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(DelayChat[playerid] > gettime()) return true;
		if(sscanf(params, "s[75]",params[0])) return sendusage(playerid, "/am [Text]");
		if(IsIP(params[0])) return true;
		new adminchat[256];
		format(adminchat, sizeof(adminchat), "[Owner Chat] -{ffffff} %s: %s",Name(playerid),params[0]);
		SendAdminMessage(0xA569BDFF, adminchat, 10);
		DelayChat[playerid] = gettime()+1;
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:dev(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 9)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Sheiyvanet: /dev [Text]");
		else if(PlayerInfo[playerid][pAdmin] == 9) format(gstr, sizeof(gstr), "{63BD4E}[Co-Owner] %s[%d]: {FFFFFF}%s", Name(playerid), playerid, params[0]);
		else if(PlayerInfo[playerid][pAdmin] == 10) format(gstr, sizeof(gstr), "{63BD4E}[Owner] %s[%d]: {FFFFFF}%s", Name(playerid), playerid, params[0]);
		SendDeveloperMessage(COLOR_WHITE, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
/*CMD:spveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		for(new i = 0, l = GetVehiclePoolSize(); i <= l; i ++)
		{
			if(!IsValidVehicle(i)) continue;
	        if(IsVehicleOccupied(i)) continue;
	        if(IsAdminVehicle[i] == 1)
	        {
	            DestroyVehicle(i);
	            IsAdminVehicle[i] = 0;
	            continue;
	        }
	        SetVehicleToRespawn(i);
	        gFuel[i] = 100;
	        foreach(new j:Player)
	        {
	            if(RentCarID[j] == i)
	            {
	                SendClientMessage(j, COLOR_GREEN, "[RentCar]{ffffff} - Tkven Agar Gkavt Naqiravebi Transporti");
	                DestroyVehicle(i);
	                RentCarID[j] = -1;
	            }
	        }
		}
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}*/
CMD:spveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "f",params[0])) return sendusage(playerid, "/spveh [Radius]");
	    if(params[0] > 100 || params[0] < 1) return sendinfo(playerid, "Minimum: 1 / Maxsimum: 100");
	    new Float:car_x,Float:car_y,Float:car_z;
	    for(new cars = 0, j = GetVehiclePoolSize(); cars <= j; cars ++)
	    {
	        if(GetVehicleModel(cars) > 399)
	        {
	            GetVehiclePos(cars,car_x,car_y,car_z);
	            if(IsPlayerInRangeOfPoint(playerid,params[0],car_x,car_y,car_z))
	            {
	                SetVehicleToRespawn(cars);
	            }
	        }
	    }
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:carfix(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    new Float:pos = floatstr(params[0]),Float:car_x,Float:car_y,Float:car_z;
	    for(new cars = 0, j = GetVehiclePoolSize(); cars <= j; cars ++)
	    {
	        if(GetVehicleModel(cars) > 399)
	        {
	            GetVehiclePos(cars,car_x,car_y,car_z);
	            if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z))
	            {
	                DestroyVehicle(cars);
	            }
	        }
	    }
	}
	return true;
}
CMD:spcars(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		format(gstr, sizeof(gstr), "[G:RP]{FFFFFF} - Gamoukenebeli Mankanebi Darespawndeba 20 Wamshi | %s", Name(playerid));
		SendClientMessageToAll(COLOR_REDD, gstr);
		SetTimer("RespawnCars", 20000, 0);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:time(playerid,params[])
{
	if(PlayerInfo[playerid][pWatch] == 0) return senderror(playerid, "Tkven Ar Gakvt Saati, Misi Shedzena Shegidzliat Nebismier 24/7 Market'shi");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
       	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch",4.1,0,0,0,0,0);
	}
	new string[64], mtext[20], year, month,day;
	getdate(year, month, day);
	format(string, sizeof(string), "%s'm(a) Daxeda Saats", Name(playerid));
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	switch(month)
	{
	    case 1: mtext = "January";
	    case 2: mtext = "February";
	    case 3: mtext = "March";
	    case 4: mtext = "April";
	    case 5: mtext = "May";
	    case 6: mtext = "June";
	    case 7: mtext = "July";
	    case 8: mtext = "August";
	    case 9: mtext = "September";
	    case 10: mtext = "October";
	    case 11: mtext = "November";
	    case 12: mtext = "December";
	}
	new hour,minuite,second,prisonstr[32];
	gettime(hour,minuite,second);
	format(string, sizeof(string), "~y~%d ~y~%s~n~~w~%d:%02d~n~played: %s", day, mtext, hour, minuite, Convert(PlayedTime[playerid]));
	if(PlayerInfo[playerid][pPrison])
    {
		format(prisonstr, sizeof(prisonstr), "~n~~r~~h~prison: %s",Convert(PlayerInfo[playerid][pPrisonTime]));
		strcat(string, prisonstr);
	}
	GameTextForPlayer(playerid, string, 5000, 1);
	return 1;
}
CMD:delacc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/delacc [Account Name]");
		//==============================================================================================//
		format(gstr,sizeof(gstr),"SELECT `Name` FROM `accounts` WHERE Name = '%s' ", params[0]);
		mysql_query(connect, gstr);
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror(playerid, "Accounti Ver Moidzebna");
		//==============================================================================================//
		format(gstr, sizeof(gstr), "DELETE FROM `accounts` WHERE `Name` = '%s'", params[0]);
		mysql_query(connect, gstr);
		format(gstr, sizeof(gstr), "%s - Accounti Amoishala");
        SendClientMessage(playerid, COLOR_YELLOW, gstr);
	}
    else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:fixhouse(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(Mtavari(playerid))
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "d",params[0])) return sendusage(playerid, "/fixhouse [House ID]");
        FixHouse(params[0]);
        SendClientMessage(playerid, COLOR_WHITE, "- Saxli Gasworda !");
	}
	return true;
}
CMD:giveitem(playerid, params[])
{
	if(KINKLA(playerid))
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "d",params[0])) return sendusage(playerid, "/giveitem [Object ID]");
        GivePlayerItem(playerid, params[0]);
	}
	return true;
}
CMD:getitem(playerid, params[])
{
	if(KINKLA(playerid))
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[16]",params[0])) return sendusage(playerid, "/getitem [Item]");
		if(strlen(params[0]) < 2) return true;
		new found = 0, totalitem = 0;
        for(new i = 0; i < MAX_ITEMS; i ++)
        {
            if(!strcmp(ItemInfo[i][item_name_eng], params[0]))
            {
                GivePlayerItem(playerid, GetItemModelById(i));
                format(gstr, sizeof(gstr), "you got: %s", GetItemName(i));
                SendClientMessage(playerid, -1, gstr);
                found = 1;
				break;
            }
        }
        if(found == 1) return true;
        for(new i = 0; i < MAX_ITEMS; i ++)
        {
            if(strfind(ItemInfo[i][item_name_eng], params[0], true) != -1)
            {
                itemslist[playerid][totalitem] = i;
				totalitem ++;
				found = 2;
            }
        }
		if(totalitem > 0)
		{
		    new liststr[32], dstr[200];
		    dstr = "{ffffff}Smilliar Items:\n";
		    for(new i = 0; i < totalitem; i ++)
		    {
		        format(liststr, sizeof(liststr), "%s\n", GetItemName(itemslist[playerid][i]));
		        strcat(dstr, liststr);
		    }
		    ShowPlayerDialog(playerid, 64, DIALOG_STYLE_TABLIST_HEADERS, "Item Not Found", dstr, "Get", "Exit");
		}
		if(found == 2) return true;
		if(found == 0) return senderror2(playerid, "items not found");
	}
	return true;
}
CMD:members(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 0) return false;
    new string[128], membercount = 0;
    SendClientMessage(playerid, 0x059BD3FF, "Online Members:");
    foreach(new i:Player)
    {
        if(!isLogged[i]) continue;
        if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
        {
            format(string, sizeof(string), "%s[%d] | Rank: %d",Name(i),i,PlayerInfo[i][pRank]);
            if(PlayerInfo[i][pRank] >= FractionInfo[PlayerInfo[playerid][pMember]][frac_LeaderRank]) strcat(string, " |"color_bizz" Leader");
            if(PlayerInfo[i][pForm] != PlayerInfo[playerid][pMember]) strcat(string, " |"color_bizz" Shvebulebashi");
            SendClientMessage(playerid, 0x059BD3FF, string);
            membercount ++;
        }
    }
    format(string, sizeof(string), "Sul{ffffff} %d{059BD3} Wevri",membercount);
    SendClientMessage(playerid, 0x059BD3FF, string);
    return true;
}
CMD:teleport(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new listitems[] = "LS AvtoVagzali\nVineWood\nSan-Fierro\nLas-Venturas\nFBI\nMtvirtavebi\nGetto\nAvtoSkola SF\nTye\nAvtoVagzali-2\nMeria\nBank\nZona 51 Shesasvleli\nLS Cazino\nIaragis Magazia\nSF Army\nZone 51 Sawyobi\nAvtoParki\nRbola\nAdmin Sofeli\nAeroport LS\nPaintBall\nMotoRbola\nLS Jail\nCheaters Jail\nCasino 4 Dragons\nLS SkinShop\nFort Carson\nAvtoSaxelosnon\nAvtoBazroba";
		ShowPlayerDialog(playerid, 22, DIALOG_STYLE_LIST, "Teleport Menu", listitems, "Archeva", "Daxurva");
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:recon(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/re(con) [Motamashis ID]");
		if(params[0] == playerid) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(!IsPlayerConnected(params[0])) return true;
        if(!isLogged[params[0]]) return true;
		StartSpectate(playerid, params[0]);
		format(gstr, sizeof(gstr), "{FFFF00}[A]{AFAFAF} Administratori %s Akvirdeba %s(%d)'(s)",Name(playerid),Name(params[0]),params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:reconoff(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
		if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING) return true;
		if(ReconInfo[playerid][rec_Player] == -1) return true;
		StopSpectate(playerid);
		SpawnPlayer(playerid);
		SetCameraBehindPlayer(playerid);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:agl(playerid, params[])
{
    if(!isLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/agl [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return true;
        PlayerInfo[params[0]][pLicense][LICENSE_PASS] = 1;
		PlayerUpdateData(params[0], "pLicensePass", PlayerInfo[params[0]][pLicense][LICENSE_PASS]);
		PlayerInfo[params[0]][pLicense][LICENSE_CAR] = 1;
		PlayerUpdateData(params[0], "pLicenseCar", PlayerInfo[params[0]][pLicense][LICENSE_CAR]);
		PlayerInfo[params[0]][pLicense][LICENSE_BIZZ] = 1;
		PlayerUpdateData(params[0], "pLicenseBizz", PlayerInfo[params[0]][pLicense][LICENSE_BIZZ]);
		PlayerInfo[params[0]][pLicense][LICENSE_GUN] = 1;
		PlayerUpdateData(params[0], "pLicenseGun", PlayerInfo[params[0]][pLicense][LICENSE_GUN]);
		format(gstr, sizeof(gstr), "- Tkven Miecit Kvela Licenzia %s[%d]'(s)",Name(params[0]),params[0]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
		format(gstr, sizeof(gstr), "- Administratorma %s'm(a) Gadmogcat Kvela Licenzia",Name(playerid));
		SendClientMessage(params[0], COLOR_WHITE, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:id(playerid, params[])
{
    if(!isLogged[playerid]) return false;
    if(sscanf(params, "s[45]",params[0])) return sendusage(playerid, "/id [Motamashis Saxeli]");
	new find = 0;
	new find_name[MAX_PLAYER_NAME];
	foreach(new i:Player)
	{
		if(strfind(Name(i), params[0], true) != -1)
		{
			GetPlayerName(i, find_name, MAX_PLAYER_NAME);
		    if(find == 0) SendClientMessage(playerid, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			if(isLogged[i]) format(gstr, sizeof(gstr), "%s[%d] | {82E0AA}Level: %d",Name(i),i,PlayerInfo[i][pLevel]);
			else format(gstr, sizeof(gstr), "%s[%d] | {F04245}Not Authorized",Name(i),i);
			SendClientMessage(playerid, COLOR_WHITE, gstr);
			find ++;
		}
	}
	if(find == 0) return SendClientMessage(playerid, COLOR_GREY, "Motamashe Msgavsi Saxelit Ver Moidzebna");
	return true;
}
CMD:alladmins(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
   		if(DelayCMD[playerid] > gettime()) return true;
    	DelayCMD[playerid] = gettime()+2;
		format(gstr, sizeof(gstr), "SELECT * FROM `accounts` WHERE pAdmin >= '1' ORDER BY `pAdmin` DESC");
		mysql_query(connect, gstr);
		new AadminsDialogString[700],gName[MAX_PLAYER_NAME+11],gRank;
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror(playerid, "Adminebi Ver Moidzebnen");
		strcat(AadminsDialogString, "Name\tLVL\tStatus\n");
		for new i = 0;i < rows; i++ do
		{
		    cache_get_value_name(i, "Name", gName);
		    if(!strcmp(gName, "Jax_Teller")) continue;
			cache_get_value_name_int(i, "pAdmin", gRank);
			format(gstr, sizeof(gstr), "{FFFFFF}%s\t%d\t%s\n",gName, gRank, IsOnline(gName) ? ("{7EDF17}Online{FFFFFF}") : ("{DF1717}Offline{FFFFFF}"));
			strcat(AadminsDialogString, gstr);
		}
		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, "All Admins", AadminsDialogString, "Close", "");
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}

CMD:racia(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] >= 1)
    {
        if(!IsAGov(playerid)) return false;
        if(DelayChat[playerid] > gettime()) return true;
        if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/r(acia) [Text]");
        if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
		new racia_str[256];
		format(racia_str, sizeof(racia_str), "[R] %s - %s(%d): {ffffff}%s",FractionRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],Name(playerid),playerid,params[0]);
        SendFractionMessage(0x339CFFAA, racia_str, PlayerInfo[playerid][pMember]);
		DelayChat[playerid] = gettime()+2;
	}
	return true;
}
CMD:rr(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] >= 1)
    {
        if(!IsAGov(playerid)) return false;
        if(DelayChat[playerid] > gettime()) return true;
        if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/rr [Text]");
        if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
		new racia_str[256];
		format(racia_str, sizeof(racia_str), "[ROOC] %s - %s(%d): {ffffff}%s",FractionRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],Name(playerid),playerid,params[0]);
        SendFractionMessage(0x339CFFAA, racia_str, PlayerInfo[playerid][pMember]);
		DelayChat[playerid] = gettime()+2;
	}
	return true;
}
CMD:raciainfo(playerid)
{
	new str[400];
	format(str, sizeof(str), "{FFFFFF}Frakciis Raciis Chartva Gamortva {8099B5}/raciaon {FFFFFF}Key : {8099B5}X\n{FFFFFF}Family Raciis Chartva Gamortva {8099B5}/familyracia {FFFFFF}Key : {8099B5}B");
	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{8099B5}Walkie Talkie Information", str, "Daxurva", "");
	return true;
}
CMD:departaments(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] >= 1)
    {
        if(!IsAGov(playerid)) return false;
        if(DelayChat[playerid] > gettime()) return true;
        if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/d(epartaments) [Text]");
        if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
		new racia_str[256];
		format(racia_str, sizeof(racia_str), "[D] %s - %s(%d): {ffffff}%s",FractionRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],Name(playerid),playerid,params[0]);
        SendFractionMessage(COLOR_LIGHTRED, racia_str, PlayerInfo[playerid][pMember]);
		DelayChat[playerid] = gettime()+2;
	}
	return true;
}
CMD:megaphone(playerid, params[])
{
    if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[100]",params[0])) return sendusage(playerid, "/me(gaphone) [Text]");
	if(strlen(params[0]) > 99) return true;
	switch(PlayerInfo[playerid][pMember])
	{
		case FRACTION_LSPD:
		{
			format(gstr, sizeof(gstr), "{{ Police %s: %s }}",Name(playerid),params[0]);
		}
		case FRACTION_FBI:
		{
			format(gstr, sizeof(gstr), "{{ FBI %s: %s }}",Name(playerid),params[0]);
		}
		case FRACTION_ARMY:
		{
			format(gstr, sizeof(gstr), "{{ ARMY %s: %s }}",Name(playerid),params[0]);
		}
		case FRACTION_MEDIC:
		{
		    format(gstr, sizeof(gstr), "{{ Hospital %s: %s }}",Name(playerid),params[0]);
		}
		default: return senderror2(playerid, "Ar Gakvt Am Brdzanebis Gamokenebis Ufleba");
	}
	SendNearText(playerid, gstr, 65, COLOR_YELLOW);
	return true;
}
CMD:family(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] >= 1)
    {
        if(IsAGang(playerid) || IsAMafia(playerid))
        {
         	if(DelayChat[playerid] > gettime()) return true;
	        if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/f(amily) [Text]");
	        if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
			new family_str[256];
			format(family_str, sizeof(family_str), "[F] %s - %s(%d): {ffffff}%s",FractionRankNames[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],Name(playerid),playerid,params[0]);
	        SendFractionMessage(0x6DA3B5C8, family_str, PlayerInfo[playerid][pMember]);
			DelayChat[playerid] = gettime()+2;
		}
	}
	return true;
}
CMD:rescars(playerid)
{
	if(IsAGang(playerid) || IsAMafia(playerid))
	{
		if(PlayerInfo[playerid][pRank] < 5) return true;
		if(DelayCMD[playerid] > gettime()) return true;
	    DelayCMD[playerid] = gettime()+5;
		switch(PlayerInfo[playerid][pMember])
		{
		    case FRACTION_BALLAS:
		    {
		        for(new i = 0; i < sizeof(ballascar); i ++)
		        {
		            if(IsVehicleOccupied(ballascar[i])) continue;
	             	SetVehicleToRespawn(ballascar[i]);
		        }
		    }
		    case FRACTION_VAGOS:
		    {
		        for(new i = 0; i < sizeof(vagoscar); i ++)
		        {
		            if(IsVehicleOccupied(vagoscar[i])) continue;
	             	SetVehicleToRespawn(vagoscar[i]);
		        }
		    }
		    case FRACTION_AZTEC:
		    {
		        for(new i = 0; i < sizeof(aztecacar); i ++)
		        {
		            if(IsVehicleOccupied(aztecacar[i])) continue;
	             	SetVehicleToRespawn(aztecacar[i]);
		        }
		    }
		    case FRACTION_GROVE:
		    {
		        for(new i = 0; i < sizeof(grovecar); i ++)
		        {
		            if(IsVehicleOccupied(grovecar[i])) continue;
	             	SetVehicleToRespawn(grovecar[i]);
		        }
		    }
		    case FRACTION_RIFA:
		    {
		        for(new i = 0; i < sizeof(rifacar); i ++)
		        {
		            if(IsVehicleOccupied(rifacar[i])) continue;
	             	SetVehicleToRespawn(rifacar[i]);
		        }
		    }
		    case FRACTION_BIKERS:
		    {
		        for(new i = 0; i < sizeof(bikercar); i ++)
		        {
		            if(IsVehicleOccupied(bikercar[i])) continue;
	             	SetVehicleToRespawn(bikercar[i]);
		        }
		    }
		    case FRACTION_LCN:
		    {
	  			for(new i = 0; i < sizeof(lcncar); i ++)
		        {
		            if(IsVehicleOccupied(lcncar[i])) continue;
	             	SetVehicleToRespawn(lcncar[i]);
		        }
		    }
		    case FRACTION_YAKUZA:
		    {
	  			for(new i = 0; i < sizeof(yakuzacar); i ++)
		        {
		            if(IsVehicleOccupied(yakuzacar[i])) continue;
	             	SetVehicleToRespawn(yakuzacar[i]);
		        }
		    }
		    case FRACTION_RM:
		    {
	  			for(new i = 0; i < sizeof(rmcar); i ++)
		        {
		            if(IsVehicleOccupied(rmcar[i])) continue;
	             	SetVehicleToRespawn(rmcar[i]);
		        }
		    }
		}
	 	format(gstr, sizeof(gstr), "{5DA5B5}[F] %s[%d] Daarespawna Manqanebi", Name(playerid), playerid);
	  	SendFractionMessage(0x339CFFAA, gstr, PlayerInfo[playerid][pMember]);
  	}
	return 1;
}
CMD:frisk(playerid, params[])
{
	if(!IsACop(playerid)) return senderror2(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	if(PlayerInfo[playerid][pForm] == 0) return senderror2(playerid, "Tkven Ar Gacviat Samushao Tansacmeli!");
	new string[200],Drugs[20],Gun[20];
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/frisk [Motamashis ID]");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(!IsNearPlayer(playerid, params[0], 3.0)) return senderror2(playerid, "Mititebuli Motamashe Araa Axlos");
	strcat(string,"{FFFFFF}");
	if(PlayerInfo[params[0]][pDrug] > 0) Drugs = "{009933}[Akvs]\n";
	else Drugs = "{AE433D}[Ar Akvs]";
	new gunid, ammo;
	Gun = "{AE433D}[Ar Akvs]";
	for(new i;i < 13;i ++)
	{
		GetPlayerWeaponData(params[0], i, gunid, ammo);
		if(!gunid || !ammo) continue;
		Gun = "{009933}[Akvs]\n";
		break;
	}
	format(string, sizeof(string), "{FFFFFF}Object\t{FFFFFF}Status\n");
	format(string, sizeof(string), "%sNarko: \t%s\n", string, Drugs);
	format(string, sizeof(string), "%sIaragi: \t%s\n", string, Gun);
	new f_str[256];
	format(f_str, sizeof(f_str), "{3399FF}Searched{FFFFFF} | %s", Name(params[0]));
	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, f_str, string, "Daxurva", "");
	format(string,sizeof(string),"Officer: %s'm(a) Gachxrika: %s", Name(playerid), Name(params[0]));
	SendNearText(playerid, string, 15.0, COLOR_PURPLE);
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_HANDSUP);
	return true;
}
CMD:ticket(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == FRACTION_LSPD)
    {
	    if(sscanf(params, "uds[70]", params[0], params[1], params[2])) return sendusage(playerid, "/ticket [Motamashis ID] [Tanxa] [Mizezi]");
		if(!IsPlayerConnected(params[0])) return senderror2(playerid, "Motamashe Ver Moidzebna!");
		if(params[0] == playerid) return true;
		if(params[1] < 100 || params[1] > 2500) return sendinfo(playerid, "Minimum: 100$ / Maxsimum: 2.500$");
		if(PlayerInfo[params[0]][pCash] < params[1]) return sendinfo(playerid, "Motamashes Ar Akvs Sakmarisi Raodenobis Tanxa!");
		if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Mititebuli Motamashe Ar Imkofeba Axlos!");
		if(strlen(params[2]) > 60) return senderror(playerid, "Tkvens Mier Sheyvanili Mizezi Dzalian Didia!");
		new tick_str[250];
		format(tick_str, sizeof(tick_str),"Officer: %s'm(a) Daajarima: %s %d$'it. Dargveva: %s", Name(playerid), Name(params[0]), params[1], params[2]);
		SendNearText(playerid, tick_str, 15.0, COLOR_PURPLE);
		format(tick_str, sizeof(tick_str), "Officer: {3399FF}%s[%d]{FFFFFF}'m(a) Gamogiwerat Jarima: {3399FF}%d${FFFFFF}, Dargveva: {3399FF}%s", Name(playerid), playerid, params[1], params[2]);
		SendClientMessage(params[0], COLOR_WHITE, tick_str);
		SendClientMessage(params[0], COLOR_WHITE, "Jarimis Gadasaxdelad Sheiyvanet: {3399FF}/accept ticket");
		TicketOffer[params[0]] = playerid;
		TicketMoney[params[0]] = params[1];
	}
	else
	{
	    senderror2(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	}
 	return true;
}
CMD:cuff(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pForm] == FRACTION_NONE) return senderror2(playerid, "Tkven Ar Gamogicvliat Samushao Forma!");
		if(sscanf(params,"u",params[0])) return sendusage(playerid, "/cuff [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsPlayerInAnyVehicle(params[0])) return senderror2(playerid, "Motamashe Imkofeba Transportshi!");
		if(IsACop(params[0])) return senderror2(playerid, "Tkven Miutitet SamartalDamcavis ID!");
		if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Mititebuli Motamashe Ar Imkofeba Axlos!");
		if(IsPlayerCuffed[params[0]]) return senderror2(playerid, "Motamashes Ukve Adevs Xelborkilebi!");
		if(PlayerInfo[params[0]][pPrison] != 0) return senderror2(playerid, "Motamashe Imkofeba Cicxeshi Da Ver Daadebt Borkilebs");
		if(KnockStatus[params[0]]) return senderror2(playerid, "Danokil Motamashes Ver Daadebt Borkilebs");
		CuffPlayer(params[0]);
		format(gstr, sizeof(gstr), "Officer: %s'm(a) Daado Xelborkilebi: %s's", Name(playerid), Name(params[0]));
		SendNearText(playerid, gstr, 15.0, COLOR_PURPLE);
		format(gstr, sizeof(gstr), "*{ffffff} Tqven Gauketet Borkilebi %s's", Name(GetPVarInt(playerid, "CuffID")));
		SendClientMessage(playerid, COLOR_PURPLE, gstr);
	}
	else
	{
	    senderror2(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	}
	return true;
}
CMD:uncuff(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pForm] == FRACTION_NONE) return senderror2(playerid, "Tkven Ar Gamogicvliat Samushao Forma!");
		if(sscanf(params,"u",params[0])) return sendusage(playerid, "/uncuff [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Mititebuli Motamashe Ar Imkofeba Axlos!");
		if(!IsPlayerCuffed[params[0]]) return senderror2(playerid, "Motamashes Ar Adevs Xelborkilebi!");
		UncuffPlayer(params[0], true);
		format(gstr,sizeof(gstr), "Officer: %s'm(a) Moxsna Xelborkilebi: %s's", Name(playerid), Name(params[0]));
		SendNearText(playerid, gstr, 15.0, COLOR_PURPLE);
	}
	else
	{
	    senderror2(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
	}
	return true;
}
CMD:auncuff(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params,"u",params[0])) return sendusage(playerid, "/auncuff [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(!IsPlayerCuffed[params[0]]) return senderror2(playerid, "Motamashes Ar Adevs Xelborkilebi!");
		UncuffPlayer(params[0], true);
		SendClientMessage(playerid, -1, "Motamashes Moexsna Xelborkili");
	}
	else
	{
	    senderror2(playerid, ADMIN_ERROR_MESSAGE_2);
	}
	return true;
}
CMD:take(playerid, params[])
{
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pForm] == FRACTION_NONE) return senderror2(playerid, "Tkven Ar Gamogicvliat Samushao Forma!");
    	if(sscanf(params, "u",params[0])) return sendusage(playerid, "/take [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == playerid) return true;
		if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror(playerid, "Motamashe Ar Imyofeba Tkventan Axlos!");
		new caption_str[100], str[100], string[400], lname[50];
		format(caption_str, sizeof(caption_str), "{5DADE2}Take |{ffffff} %s", Name(params[0]));
		string = "\n";
		for(new i = 0; i < 4; i ++)
		{
			SetString(lname, GetLicenseName(i));
			strdel(lname, strlen(lname)-1, strlen(lname));
		    format(str, sizeof(str), "{5DADE2}[%d]{ffffff} %sis Chamortmeva\n",i+1,lname);
		    strcat(string, str);
		}
		ShowPlayerDialog(playerid, 75, DIALOG_STYLE_LIST, caption_str, string, "Take", "Close");
		SetPVarInt(playerid, "ActionID", params[0]);
    }
    else
    {
         senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
    }
    return true;
}
CMD:gotome(playerid, params[])
{
	if(IsACop(playerid))
	{
	    if(sscanf(params, "u",params[0])) return sendusage(playerid, "/gotome [Motamashis ID]");
	    if(playerid == params[0]) return true;
	    if(!IsNearPlayer(playerid, params[0], 5.0)) return sendinfo(playerid, "Mititebuli Motamashe Araa Axlos");
	    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return senderror(playerid, "Transportshi Ver Gamoikenebt Am Brdzanebas");
        if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return sendinfo(playerid, "Mititebuli Motamashe Zis Transportshi");
        if(!IsPlayerCuffed[params[0]]) return senderror(playerid, "Motamashes Ar Adevs Xelborkilebi");
	    if(gotome[params[0]] != -1 && gotome[params[0]] != playerid)
	    {
		    format(gstr, sizeof(gstr), "- Mititebuli Motamashe Mikavs: %s",Name(gotome[params[0]]));
		    SendClientMessage(playerid, COLOR_WHITE, gstr);
		    return true;
		}
	    if(gotome[params[0]] == -1)
	    {
		    //if(PlayerInfo[params[0]][pWanted] < 1) return SendClientMessage(playerid, COLOR_GREY, "Am Motamashes Ar Aqvs Arcerti Dzebnis Done");
	     	if(GetPlayerSpecialAction(params[0]) != SPECIAL_ACTION_CUFFED)
            {
                SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
            }
		    gotome[params[0]] = playerid;
		    format(gstr, sizeof(gstr), "- Tkven Migatrevt Officeri: %s",Name(playerid));
		    SendClientMessage(params[0], COLOR_WHITE, gstr);
		    //================================================================//
		    format(gstr, sizeof(gstr), "Tkven Migkavt: %s",Name(params[0]));
		    SendClientMessage(playerid, COLOR_WHITE, gstr);
		    TogglePlayerControllable(params[0], true);
		}
		else if(gotome[params[0]] == playerid)
		{
			gotome[params[0]] = -1;
            SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		    //================================================================//
		    format(gstr, sizeof(gstr), "- Tkven Agar Migkavt %s",Name(params[0]));
		    SendClientMessage(playerid, COLOR_WHITE, gstr);
		    if(IsPlayerCuffed[params[0]]) TogglePlayerControllable(params[0], false);
		}
	}
	return true;
}
CMD:cput(playerid, params[])
{
    if(!IsACop(playerid)) return senderror2(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
    if(PlayerInfo[playerid][pForm] == 0) return senderror2(playerid, "Tkven Ar Gacviat Samushao Tansacmeli!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) senderror2(playerid, "Tkven Ar Imyofebit Transportis Sachestan!");
	if(sscanf(params, "u",params[0])) return sendusage(playerid, "/cput [Motamashis ID]");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(params[0] == playerid) return true;
	if(!IsNearPlayer(playerid, params[0], 5.0)) return sendinfo(playerid, "Mititebuli Motamashe Araa Axlos");
	if(GetPlayerSpecialAction(params[0]) != SPECIAL_ACTION_CUFFED) return senderror2(playerid, "Motamashes Ar Adevs Borkilebi!");
	if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return sendinfo(playerid, "Motamashe Ukve Imyofeba Transportshi!");
	new vehi = GetPlayerVehicleID(playerid);
	PutPlayerInVehicle(params[0], vehi, 3);
	SetPlayerArmedWeapon(params[0], 0);
	new string[128];
	format(string, sizeof(string), "Officer: {FF9900}%s{FFFFFF}'m(a) Chagagdot Manqanashi",Name(playerid));
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "Tkven Chaagdet Manqanashi: {FF9900}%s",Name(params[0]));
	SendClientMessage(playerid, COLOR_WHITE, string);
	return true;
}
CMD:tazer(playerid, params[])
{
  	if(!IsACop(playerid)) return true;
	if(DelayCMD[playerid] > gettime()) return true;
    DelayCMD[playerid] = gettime()+1;
	new tazerstr[256];
	switch(Tazer[playerid])
	{
	    case false:
	    {
    		if(GetPlayerWeapon(playerid) != TAZE_WEAPON) return senderror(playerid, "Am Iaragshi Ver Chaayeneb Eleqtro Tyviebs");
	     	Tazer[playerid] = true;
	      	format(tazerstr, sizeof(tazerstr), "%s Chaayena EleqtroTyviebi", Name(playerid));
	       	SendNearText(playerid, tazerstr, 15.0, COLOR_PURPLE);
	    }
	    case true:
	    {
		    Tazer[playerid] = false;
		    format(tazerstr, sizeof(tazerstr), "%s Amoigo EleqtroTyviebi", Name(playerid));
		    SendNearText(playerid, tazerstr, 15.0, COLOR_PURPLE);
	    }
	}
    return true;
}
CMD:suspect(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/su(spect) [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsACop(params[0])) return senderror2(playerid, "Motamashe Aris Policieli");
		if(PlayerInfo[params[0]][pWanted] > 0) return sendinfo(playerid, "Motamashes ukve adevs dzebnis done");
		if(PlayerInfo[params[0]][pPrison]) return sendinfo(playerid, "Motamashe Ukve Imyofeba Cixeshi");
		SetPVarInt(playerid, "ActionID", params[0]);
		format(gstr, sizeof(gstr), "Dzebnashi Cxaddeba %s", Name(params[0]));
		ShowPlayerDialog(playerid, 60, DIALOG_STYLE_TABLIST_HEADERS, gstr, "Danashauli\tDone\nMkvlelobis Mcdeloba\t2\nMkvleloba\t5\nBankis Gadzarcva\t3\nTanamdebobis Pirze Tavdasxma\t6\nSamartaldamcavistvis Xelis Sheshla\t1\nManqanis Moparva\t2\nDaumorchilebloba\t1\nNarkotikebi\t2\nUkanono Iaragi\t3\nSheurawyofa\t1", "Set", "Close");
	}
	return true;
}
CMD:arrest(playerid, params[])
{

	if(!IsACop(playerid)) return senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba");
	if(PlayerInfo[playerid][pForm] == 0) return senderror(playerid, "Tkven Ar Gamogicvliat Samushao Forma");
	if((IsPlayerInRangeOfPoint(playerid, 7.0, StatePrisonSpawn[0][0], StatePrisonSpawn[0][1], StatePrisonSpawn[0][2])||
		IsPlayerInRangeOfPoint(playerid, 7.0, StatePrisonSpawn[1][0], StatePrisonSpawn[1][1], StatePrisonSpawn[1][2])||
		IsPlayerInRangeOfPoint(playerid, 7.0, StatePrisonSpawn[2][0], StatePrisonSpawn[2][1], StatePrisonSpawn[2][2])
	&& GetPlayerVirtualWorld(playerid) == FractionInfo[FRACTION_LSPD][frac_VirtualWorld]))
	{
	    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/arrest [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
	    if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Mititebuli Motamashe Araa Axlos");
		if(PlayerInfo[params[0]][pWanted] == 0) return senderror(playerid, "Motamashes Ar Akvs Arcerti Dzebnis Done!");
        if(!IsPlayerCuffed[params[0]]) return senderror(playerid, "Motamashes Ar Adevs Xelborkilebi!");
        PlayerInfo[params[0]][pPrison] = 2;
        PlayerUpdateData(params[0], "pPrison", PlayerInfo[params[0]][pPrison]);
        PlayerInfo[params[0]][pPrisonTime] = 300*PlayerInfo[params[0]][pWanted];
        PlayerUpdateData(params[0], "pPrisonTime", PlayerInfo[params[0]][pPrisonTime]);
		format(gstr, sizeof(gstr), "{FFFFFF}Tkven Chasvit Damnashave: {E55454}%s{FFFFFF} Cixeshi / {E55454}%d{FFFFFF}Wutit", Name(params[0]), 5*PlayerInfo[params[0]][pWanted]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
		format(gstr, sizeof(gstr), "{E55454}%s{FFFFFF}'m(a) Chagsvat Cixeshi / {E55454}%d{FFFFFF}Wutit", Name(playerid), 5*PlayerInfo[params[0]][pWanted]);
		SendClientMessage(params[0], COLOR_WHITE, gstr);
        SpawnPlayer(params[0]);
        gotome[params[0]] = -1;
        gotome[playerid] = -1;
	}
	else
	{
		senderror(playerid, "Tkven Ar Imyofebit Police Department'is Cixeshi!");
	}
	return true;
}
CMD:spawnchange(playerid, params[])
{
	new dialog_string[350], dialog_strcat[150];
	format(dialog_string, sizeof(dialog_string), "{ffffff}Selected: "color_pretty_blue"%s\n",SpawnNames[SpawnType[playerid]-1]);
	for(new i = 0; i < sizeof(SpawnNames); i ++)
	{
	    format(dialog_strcat, sizeof(dialog_strcat), color_pretty_blue"[%d] -{ffffff} %s\n",(i+1),SpawnNames[i]);
	    strcat(dialog_string, dialog_strcat);
	}
	ShowPlayerDialog(playerid, 24, DIALOG_STYLE_TABLIST_HEADERS, color_pretty_blue"Select{ffffff} | Spawn", dialog_string, "Select", "Exit");
	return true;
}
CMD:mainmenu(playerid, params[])
{
	if(DelayCMD[playerid] > gettime()) return true;
    DelayCMD[playerid] = gettime()+1;
    ShowPlayerInventory(playerid);
    return true;
}
CMD:eventmenu(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        ShowEventMenu(playerid);
    }
    else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
    return true;
}
CMD:gotp(playerid, params[])
{
    if(EventInfo[event_On] == false) return senderror(playerid, "Am Momentshi Ar Mimdinareobs Event");
    SetPlayerPosEx(playerid, EventInfo[event_PosX]+random(2), EventInfo[event_PosY]+random(2), EventInfo[event_PosZ], 2000);
    SetPlayerInterior(playerid, EventInfo[event_Interior]);
    SetPlayerVirtualWorld(playerid, EventInfo[event_VirtualWorld]);
    SetCameraBehindPlayer(playerid);
    PlayerEvent[playerid] = true;

    if(EventInfo[event_AutoHealth]) SetPlayerHealth(playerid, 100.0);
    if(EventInfo[event_AutoArmour]) SetPlayerArmour(playerid, 100.0);
    if(EventInfo[event_Skin]) SetPlayerSkin(playerid, EventInfo[event_Skin]);
	for(new i = 0; i < 9; i ++)
	{
	    if(EventInfo[event_Weapons][i])
	    {
	        GivePlayerWeapon(playerid, EventWeapons[i], 999);
	    }
	}
    return true;
}
CMD:ipchanger(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return false;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    switch(ipchanger)
    {
        case 0:
        {
            ipchanger = 1;
            format(gstr, sizeof(gstr), "- Anti IP Changer | Kick");
        }
        default:
        {
            ipchanger = 0;
            format(gstr, sizeof(gstr), "- Anti IP Changer | Warning");
        }
    }
    SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
    return true;
}
CMD:addallowip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return false;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    if(sscanf(params, "s[32]",params[0])) return sendusage(playerid, "/addallowip [IP]");
    new newip[32];
    format(newip, sizeof(newip), "%s", params[0]);
    if(AllowedIP(newip)) return sendinfo(playerid, "Aseti IP Ukve Arsebobs");
    AllowedIPAdd(newip);
    format(gstr, sizeof(gstr), "<IP Added> %s");
    SendClientMessage(playerid, COLOR_GREEN, gstr);
    return true;
}
CMD:removeallowip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return false;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    if(sscanf(params, "s[32]",params[0])) return sendusage(playerid, "/removeallowip [IP]");
    new newip[32];
    format(newip, sizeof(newip), "%s", params[0]);
    if(!AllowedIP(newip)) return sendinfo(playerid, "Aseti IP Ar Arsebobs");
    AllowedIPRemove(newip);
    format(gstr, sizeof(gstr), "<IP Removed> %s");
    SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
    return true;
}
CMD:mp(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "{CC66FF}Event Menu{FFFFFF} | Choose Function","[1] Iaragebis Wartmeva\n[2] Bronis Wartmeva\n[3] UnFreeze\n[4] Iaragebis Micema\n[5] Bronis Micema\n[6] HP Micema\n[7] Freeze\n[8] Yvelas Mokvla\n[9] Skinis Micema", "Archeva", "Daxurva");
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:ao(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 6)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[100]",params[0])) return sendusage(playerid, "/ao [Text]");
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, MAX_PLAYER_NAME);
        switch(PlayerInfo[playerid][pAdmin])
        {
            case 10: format(gstr, sizeof(gstr), "» Head Administrator » %s - {FFFFFF}%s",Name(playerid),params[0]);
            case 9: format(gstr, sizeof(gstr), "» Server Curator » %s - {FFFFFF}%s",Name(playerid),params[0]);
            case 8: format(gstr, sizeof(gstr), "» Tec Administrator » %s - {FFFFFF}%s",Name(playerid),params[0]);
            case 7: format(gstr, sizeof(gstr), "» Spec Administrator » %s - {FFFFFF}%s",Name(playerid),params[0]);
            case 6: format(gstr, sizeof(gstr), "» Chief Administrator » %s - {FFFFFF}%s",Name(playerid),params[0]);
        }
        // other names
		if(!strcmp(name, "Jax_Teller")) format(gstr, sizeof(gstr), "» Server Developer » %s - {FFFFFF}%s",Name(playerid),params[0]);
		if(!strcmp(name, "Levani_Bedinashvili")) format(gstr, sizeof(gstr), "» Server Developer » %s - {FFFFFF}%s",Name(playerid),params[0]);
		if(!strcmp(name, "Nasa_Exlord")) format(gstr, sizeof(gstr), "{505050}» Server Media » %s - {FFFFFF}%s",Name(playerid),params[0]);
		if(!strcmp(name, "Aleksandre_Kinkladze")) format(gstr, sizeof(gstr), "» Server Owner » %s - {FFFFFF}%s",Name(playerid),params[0]);
		//
		SendClientMessageToAll(0xFF0000FF, gstr);
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:ghetto(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/ghetto [Text]");
		if(strlen(params[0]) > 70) return senderror(playerid, "Tkvens Mier Sheyvanili Text Dzalian Didia!");
		format(gstr, sizeof(gstr), "{EA4E4E}[Ghetto] Administrator %s[%d]: {FFFFFF}%s", Name(playerid), playerid, params[0]);
		SendAdminMessage(0xEA4E4EFF, gstr);
		SendGhettoMessage(0xEA4E4EFF, gstr);
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:maffia(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/maffia [Text]");
		if(strlen(params[0]) > 70) return senderror(playerid, "Tkvens Mier Sheyvanili Text Dzalian Didia!");
		format(gstr, sizeof(gstr), "{EA4E4E}[Maffia] Administrator %s[%d]: {FFFFFF}%s", Name(playerid), playerid, params[0]);
		SendAdminMessage(0xEA4E4EFF, gstr);
		SendMaffiaMessage(0xEA4E4EFF, gstr);
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:gov(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/gov [Text]");
		if(strlen(params[0]) > 70) return senderror(playerid, "Tkvens Mier Sheyvanili Text Dzalian Didia!");
		format(gstr, sizeof(gstr), "{EA4E4E}[Goverment] Administrator %s[%d]: {FFFFFF}%s", Name(playerid), playerid, params[0]);
		SendAdminMessage(0xEA4E4EFF, gstr);
		SendGovermentMessage(0xEA4E4EFF, gstr);
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:armyskill(playerid, params[])
{
    new str[100];
    format(str, sizeof(str), "ArmySkill: %d",PlayerInfo[playerid][pArmySkill]);
    SendClientMessage(playerid, COLOR_REDD, str);
    return true;
}
CMD:eject(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/eject [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(params[0])) return senderror(playerid, "Mititebuli Motamashe Ar Zis Tkvens Transportshi");
	format(gstr, sizeof(gstr), "Tkven Gadaagdet Transportidan: %s[%d]",Name(params[0]),params[0]);
	SendClientMessage(playerid, COLOR_REDD, gstr);
	format(gstr, sizeof(gstr), "Tkven Gadmogagdes Transportidan: %s[%d]",Name(playerid),playerid);
	SendClientMessage(params[0], COLOR_REDD, gstr);
	RemovePlayerFromVehicleEx(params[0]);
	return true;
}
CMD:setleader(playerid, params[])
{
    if(GovTester(playerid) || GhettoTester(playerid) || MafiaTester(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "u", params[0])) return sendusage(playerid, "/setleader [Motamashis ID]");
        if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return false;
        new captionstr[500], captstr[100];
        format(captionstr, sizeof(captionstr), "{ffffff}SetLeader | %s\n",Name(params[0]));
        for(new i = 1; i < sizeof(FractionNames); i ++)
        {
            format(captstr, sizeof(captstr), "{F0A45D}[%d] {ffffff}%s\n",i,FractionNames[i]);
            strcat(captionstr, captstr);
        }
        format(captstr, sizeof(captstr), "{ffffff}SetLeader | %s", Name(params[0]));
        ShowPlayerDialog(playerid, 34, DIALOG_STYLE_TABLIST_HEADERS, captstr, captionstr, "Set", "Exit");
        SetPVarInt(playerid, "ActionID", params[0]);
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:invite(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 0) return senderror(playerid, "Tkven Ar Xart Family's Wevri");
    if(PlayerInfo[playerid][pRank] < FractionInfo[PlayerInfo[playerid][pMember]][frac_Ranking]) return senderror(playerid, "Ar Gakvt Am Brdzanebis Gamokenebis Ufleba");
    if(sscanf(params, "u",params[0])) return sendusage(playerid, "/invite [Motamashis ID]");
    if(params[0] == playerid) return true;
    if(!IsPlayerConnected(params[0])) return senderror(playerid, "Motamashe Ver Moidzebna");
    if(!IsNearPlayer(playerid, params[0], 6.0)) return senderror(playerid, "Mititebuli Motamashe Araa Axlos");
	if(PlayerInfo[params[0]][pLicense][LICENSE_PASS] == 0) return sendinfo(playerid, "Mititebul Motamashes Ar Akvs Piradobis Mowmoba");
    if(PlayerInfo[params[0]][pMember] != 0) return senderror(playerid, "Motamashe Sxva Frakciashia !");
    if(PlayerInfo[params[0]][pWarn] > 0) return senderror(playerid, "Motamashes Adevs Gafrtxileba");
	if(PlayerInfo[playerid][pMember] == FRACTION_LSPD || PlayerInfo[playerid][pMember] == FRACTION_FBI)
	{
	    if(PlayerInfo[params[0]][pArmyTicket] == 0) return senderror(playerid, "Motamashes Ar Akvs Army Bileti");
	}
	new p_family = PlayerInfo[playerid][pMember], string[256];
    InviteID[playerid] = params[0];
    format(string, sizeof(string), "{ffffff}Motamashe{FF8282} %s{ffffff} Giwvevt {FF8282}%s{ffffff} Family'shi Gasawevrianeblad",Name(playerid),FractionNames[p_family]);
    SendClientMessage(params[0], -1, string);
    SendClientMessage(params[0], -1, "{ffffff}- Tu Gsurt Gawevrianeba Daachiret {FF8282}Y's{ffffff} Tu Ar Gsurt Daachiret {FF8282}N's");
    format(string, sizeof(string), "{ffffff}Tkven Moiwviet Motamashe{FF8282} %s{ffffff} Gasawevrianeblad {FF8282}%s{ffffff} Family'shi",Name(params[0]),FractionNames[p_family]);
    SendClientMessage(playerid, -1, string);
    SendClientMessage(playerid, -1, "{ffffff}- Daelodet Mis Pasuxs !");
    return true;
}
CMD:giverank(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == 0) return senderror(playerid, "Tkven Ar Xart Family's Wevri");
    if(PlayerInfo[playerid][pRank] < FractionInfo[PlayerInfo[playerid][pMember]][frac_Ranking]) return senderror(playerid, "Ar Gakvt Am Brdzanebis Gamokenebis Ufleba");
	if(sscanf(params, "ud",params[0],params[1])) return sendusage(playerid, "/giverank [Motamashis ID] [Rank]");
 	if(params[0] == playerid) return true;
    if(!IsPlayerConnected(params[0])) return senderror(playerid, "Motamashe Ver Moidzebna");
    if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return senderror(playerid, "Mititebuli Motamashe Araa Tkvens Frakciashi");
    if(!IsALeader(playerid) && params[1] <= FractionInfo[PlayerInfo[playerid][pMember]][frac_Ranking]) return senderror(playerid, "Araswori Rankis ID");
	if(params[1] >= PlayerInfo[playerid][pRank]) return true;
	new string[128];
	PlayerInfo[params[0]][pRank] = params[1];
	PlayerUpdateData(params[0], "pRank", PlayerInfo[params[0]][pRank]);
	format(string, sizeof(string), "%s'm(a) Dagnishnat %d Wodebaze",Name(playerid), params[1]);
	SendClientMessage(params[0], 0xFF8282AA, string);
	format(string, sizeof(string), "Tkven Danishnet %s's - %d Wodebaze",Name(params[0]), params[1]);
	SendClientMessage(playerid, 0xFF8282AA, string);
    return true;
}
CMD:leave(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == FRACTION_NONE) return true;
    if(IsALeader(playerid)) return senderror(playerid, "Tkven Xart Lideri Da Ver Datovebt Frakcias");

   	SvDetachListenerFromStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	SvDetachSpeakerFromStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);

    PlayerInfo[playerid][pMember] = 0;
    PlayerUpdateData(playerid, "pMember", PlayerInfo[playerid][pMember]);
    PlayerInfo[playerid][pForm] = 0;
    PlayerUpdateData(playerid, "pForm", PlayerInfo[playerid][pForm]);
    PlayerInfo[playerid][pRank] = 0;
    PlayerUpdateData(playerid, "pRank", PlayerInfo[playerid][pRank]);
    PlayerInfo[playerid][pModel] = 0;
    PlayerUpdateData(playerid, "pModel", PlayerInfo[playerid][pModel]);
    SpawnType[playerid] = 1;
    SavePlayerData(playerid);
    SetPlayerSkinEx(playerid);
    ResetWeapons(playerid);
	SetPlayerColorEx(playerid);
    sendinfo(playerid, "Tkven Datovet Frakcia");
    if(CaptureOn[playerid] == 1)
    {
   		CaptureOn[playerid] = 0;
		PlayerTextDrawHide(playerid, CaptureTextDraw_PTD[playerid][0]);
       	PlayerTextDrawHide(playerid, CaptureTextDraw_PTD[playerid][1]);
       	PlayerTextDrawHide(playerid, CaptureTextDraw_PTD[playerid][2]);
       	PlayerTextDrawHide(playerid, CaptureTextDraw_PTD[playerid][3]);
	}
    return true;
}
CMD:uninvite(playerid, params[])
{
	new frac = PlayerInfo[playerid][pMember];
    if(frac != 0 && PlayerInfo[playerid][pRank] >= FractionInfo[frac][frac_Ranking])
    {
        if(sscanf(params, "us[30]", params[0],params[1])) return sendusage(playerid, "/uninvite [Motamashis ID] [Mizezi]");
        if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return false;
        format(gstr, sizeof(gstr), "%s'm(a) Gagagdot Frakciidan Mizezi: {FF0000}%s",Name(playerid),params[1]);
        SendClientMessage(params[0], 0x6BB3FFAA, gstr);
        format(gstr, sizeof(gstr), "Tkven Gaagdet %s Frakciidan Mizezi: {FF0000}%s",Name(params[0]),params[1]);
        SendClientMessage(playerid, 0x6BB3FFAA, gstr);

       	SvDetachListenerFromStream(FractionWalkie[PlayerInfo[params[0]][pMember]], params[0]);
   		SvDetachSpeakerFromStream(FractionWalkie[PlayerInfo[params[0]][pMember]], params[0]);

        PlayerInfo[params[0]][pMember] = 0;
        PlayerUpdateData(params[0], "pMember", PlayerInfo[params[0]][pMember]);
        PlayerInfo[params[0]][pForm] = 0;
        PlayerUpdateData(params[0], "pForm", PlayerInfo[params[0]][pForm]);
        PlayerInfo[params[0]][pRank] = 0;
        PlayerUpdateData(params[0], "pRank", PlayerInfo[params[0]][pRank]);
        PlayerInfo[params[0]][pModel] = 0;
        PlayerUpdateData(params[0], "pModel", PlayerInfo[params[0]][pModel]);
        SpawnType[params[0]] = 1;
        SavePlayerData(params[0]);
        SetPlayerSkinEx(params[0]);
        ResetWeapons(params[0]);
        SavePlayerData(params[0]);
        SetPlayerColorEx(params[0]);
   	    if(CaptureOn[params[0]] == 1)
	    {
	    	CaptureOn[params[0]] = 0;
		    PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][0]);
       		PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][1]);
   			PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][2]);
   			PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][3]);
		}
    }
    return true;
}
CMD:uval(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 6)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "u", params[0])) return sendusage(playerid, "/uval [Motamashis ID]");
        if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return false;

       	SvDetachListenerFromStream(FractionWalkie[PlayerInfo[params[0]][pMember]], params[0]);
   		SvDetachSpeakerFromStream(FractionWalkie[PlayerInfo[params[0]][pMember]], params[0]);

        PlayerInfo[params[0]][pMember] = 0;
        PlayerUpdateData(params[0], "pMember", PlayerInfo[params[0]][pMember]);
        PlayerInfo[params[0]][pForm] = 0;
        PlayerUpdateData(params[0], "pForm", PlayerInfo[params[0]][pForm]);
        PlayerInfo[params[0]][pRank] = 0;
        PlayerUpdateData(params[0], "pRank", PlayerInfo[params[0]][pRank]);
        PlayerInfo[params[0]][pModel] = 0;
        PlayerUpdateData(params[0], "pModel", PlayerInfo[params[0]][pModel]);
        SpawnType[params[0]] = 1;
        SavePlayerData(params[0]);
        SetPlayerSkinEx(params[0]);
        ResetWeapons(params[0]);
        SavePlayerData(params[0]);
        SetPlayerColorEx(params[0]);
   	    if(CaptureOn[params[0]] == 1)
	    {
	    	CaptureOn[params[0]] = 0;
		    PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][0]);
       		PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][1]);
   			PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][2]);
   			PlayerTextDrawHide(params[0], CaptureTextDraw_PTD[playerid][3]);
		}
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][0]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][1]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][2]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][3]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][4]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][5]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][6]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][7]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][8]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][9]);
		PlayerTextDrawHide(params[0], MaffiaTXT[playerid][10]);
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:changeskin(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] == FRACTION_NONE) return true;
    if(IsALeader(playerid))
    {
        if(sscanf(params, "u", params[0])) return sendusage(playerid, "/changeskin [Motamashis ID]");
        if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return false;
        new dialogstr[260], capstr[32], member = PlayerInfo[playerid][pMember];
        if(PlayerInfo[params[0]][pMember] != member) return senderror(playerid, "Mititebuli Motamashe Ar Imkofeba Tkvens Frakciashi");
        dialogstr = "{ffffff}Slot\t{ffffff}SkinID\n";
        for(new i = 0; i < FractionInfo[member][frac_MaxSkin]; i ++)
        {
            format(capstr, sizeof(capstr), "[%d]{ffffff} Skin: %d\n",i+1,FractionSkins[member][i]);
            strcat(dialogstr, capstr);
        }
        ShowPlayerDialog(playerid, 35, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}ChangeSkin", dialogstr, "Set", "Exit");
        SetPVarInt(playerid, "ActionID", params[0]);
    }
    else
    {
        senderror(playerid, "Ar Xart Lideri !");
    }
    return true;
}
CMD:coloroff(playerid, params[])
{
    if(CaptureOn[playerid] == 1) return senderror(playerid, "Am Momentshi Ver Gamoiyenebt Am CMD's!");
    if(MFCaptOn[playerid] == 1)  return senderror(playerid, "Am Momentshi Ver Gamoiyenebt Am CMD's!");
    sendinfo(playerid, "Tkven Moishoret Feri");
    colorOff[playerid] = true;
    SetPlayerColorEx(playerid);
    return true;
}
CMD:color(playerid, params[])
{
    sendinfo(playerid, "Tkven Daidet Feri");
    colorOff[playerid] = false;
    SetPlayerColorEx(playerid);
    return true;
}
CMD:colorall(playerid, params[])
{
 	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pAdmin] == 0) SetPlayerColorEx(i);
		}
		SendClientMessage(playerid, COLOR_WHITE, "Kvela Motamashes Daedo Feri");
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:clist(playerid)
{
    if(PlayerInfo[playerid][pMember] != 0) return true;
	new colorlist[400];
	format(colorlist, sizeof(colorlist), "{FFFFFF}----------\n{FF7575}----------\n{F14040}----------\n{FFAA00}----------\n{FFFF00}----------\n{00FF74}----------\n{17FF00}----------\n{00FFE8}----------\n{00BDFF}----------\n{0068FF}----------\n{9B00FF}----------\n{F000FF}----------\n{FF00C5}----------\n{FF0070}----------\n{FF0000}----------");
	ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "{CC66FF}Color List", colorlist, "Select", "Exit");
	return true;
}
CMD:givegun(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 5)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "udd",params[0],params[1],params[2])) return sendusage(playerid, "/givegun [ID Motamashis] [Iaragis ID] [Tyviebi]");
	    if(params[1] < 1 || params[1] > 46) return true;
		if(!IsPlayerConnected(params[0])) return false;
        if(!isLogged[params[0]]) return false;
		if(IsBadWeapon(params[1])) return senderror(playerid, "Tkven Miutitet Iaragis Araswori ID!");
		GivePlayerWeapon(params[0], params[1], params[2]);
		SendClientMessage(playerid, COLOR_GREY, "Motamashes Gadaeca Iaragi");
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:setskin(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 8)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "ud", params[0],params[1])) return sendusage(playerid, "/setskin [Motamashis ID] [Skin ID]");
		if(params[1] < 1 || params[1] > 311 && params[1] < 14910 || params[1] > 14949) return senderror(playerid, "Tkven Miutitet Skin'is Araswori ID!");
		if(!IsPlayerConnected(params[0])) return false;
		if(params[0] == INVALID_PLAYER_ID) return false;
        if(!isLogged[params[0]]) return false;
		PlayerInfo[params[0]][pSkin] = params[1];
	    PlayerUpdateData(params[0], "pSkin", PlayerInfo[params[0]][pSkin]);
		SetPlayerSkinEx(params[0]);
	}
	else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:link(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
      	ShowPlayerDialog(playerid, 36, DIALOG_STYLE_INPUT, "Musika", "{00FF40}Chaweret Musikis Linki", "Play", "Exit");
	}
	else
	{
		senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:fmo(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 5)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        new fraction_member_count[sizeof(FractionNames)], dstr[200], pstr[64];
        foreach(new i:Player)
        {
            fraction_member_count[PlayerInfo[i][pMember]] ++;
        }
        dstr = "\n";
        for(new i = 1; i < sizeof(fraction_member_count); i ++)
        {
            format(pstr, sizeof(pstr), "{8099B5}%s - {ffffff}%d\n",FractionNames[i],fraction_member_count[i]);
            strcat(dstr, pstr);
        }
        strcat(dstr, "\n");
        ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{8099B5}Fraction Members{ffffff} - Online", dstr, "Close", "");
	}
	else
	{
		senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
    return true;
}
CMD:cho(playerid, params[])
{
    new fraction_member_count[sizeof(FractionNames)], dstr[200], pstr[64];
    foreach(new i:Player)
    {
        if(!IsAGang(i)) continue;
        fraction_member_count[PlayerInfo[i][pMember]] ++;
    }
    dstr = "\n";
    for(new i = 1; i < sizeof(fraction_member_count); i ++)
    {
        if(!IsAGangID(i)) continue;
        format(pstr, sizeof(pstr), "{8099B5}%s - {ffffff}%d\n",FractionNames[i],fraction_member_count[i]);
        strcat(dstr, pstr);
    }
    strcat(dstr, "\n");
    ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{8099B5}Fraction Members{ffffff} - Online", dstr, "Close", "");
    return true;
}
CMD:limit(playerid, params[])
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return senderror(playerid, "Tkven Ar Xart Sachestan");
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/limit [Speed 10 - 150]");
    if(params[0] <= -1) return true;
	if(params[0] == 0 && SpeedLimit[playerid])
	{
		SpeedLimit[playerid] = 0;
		sendinfo(playerid, "Sichkaris Limit Moixsna");
		return true;
	}
	if(params[0] < 10 || params[0] > 200) return sendusage(playerid, "Sichqare Unda Sheadgendes 10 - 200");
	SpeedLimit[playerid] = params[0];
	sendinfo(playerid, "Sichkaris Limit Dakenda");
	return true;
}
CMD:changekey(playerid, params[])
{
	if(caridhouse[playerid] == -1) return true;
	new query[300], ownername[28];
	GetPlayerName(playerid,ownername,28);
	mysql_format(connect, query, sizeof(query), "DELETE FROM `carkeys` WHERE `Owner` = '%s'",ownername);
	mysql_query(connect, query, false);
	SendClientMessage(playerid, COLOR_WHITE, "Tkveni Transportistvis Gaketda Axali Gasagebi");
	return 1;
}
CMD:givekey(playerid, params[])
{
    if(CountPlayerHouses(playerid) == 0) return true;
	new targetid;
	if(GetVehicleModel(caridhouse[playerid]) == 462 || caridhouse[playerid] == -1) return senderror(playerid, "Tqven Ar Gyavt Manqana.");
	if(sscanf(params, "u",targetid)) return sendusage(playerid,  "/givekey [Motamashis ID]");
	if(!IsPlayerConnected(targetid)) return true;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(targetid,X,Y,Z);
	if(IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z))
	{
		new query[256], ownername[28], playername[28];
		GetPlayerName(playerid, ownername, 28);
		GetPlayerName(targetid, playername, 28);
		mysql_format(connect, query,sizeof(query), "INSERT INTO `carkeys`(`Owner`, `Player`) VALUES ('%s', '%s')",ownername,playername);
		mysql_query(connect, query,false);
		new string[128];
		format(string,sizeof(string),"{33CCFF}%s{FFFFFF}'m(a) Gadmogcat Transportis Gasagebi",ownername);
		SendClientMessage(targetid,-1,string);
		format(string,sizeof(string),"Tqven Miecit {33CCFF}%s{FFFFFF}'s  Tkveni Transportis Gasagebi",playername);
		SendClientMessage(playerid,-1,string);
		SendClientMessage(playerid,-1,"Tqven Shegidzliat Gamoikenot {FFFF00}/changekey{FFFFFF} Mankanis Saketis Shesacvlelad");
	}
	else
	{
		SendClientMessage(playerid, -1, "Mititebuli Motamashe Araa Axlos");
	}
	return 1;
}
CMD:animlist(playerid, params[])
{
	if(jobID[playerid] != JOB_NONE) return true;
    if(Tazed[playerid] == true) return true;
    ShowAnimationDialog(playerid);
	return true;
}
CMD:anim(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/anim [Animation ID]");
    if(IsPlayerConnected(playerid))
    {
		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_CUFFED)
		{
		    if(Tazed[playerid] == false)
		    {
		        switch(params[0])
		        {
					case 0: ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
					case 1: ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
					case 2: ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
					case 3: ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 0, 0, 0, 1, 1,1);
					case 4: ApplyAnimation(playerid,"JST_BUISNESS","girl_02",4.1,0,0,0,1,1,1);
					case 5: ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1,1);
					case 6: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0,1);
					case 7: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0,1);
					case 8: ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0,1);
					case 9: ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1);
					case 10: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0,1);
					case 11: ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.0, 0, 0, 0, 0, 0,1);
					case 12: ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.0, 0, 0, 0, 0, 0,1);
					case 13: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2); //
					case 14: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
					case 15: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
					case 16: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
					case 17: ApplyAnimation(playerid,"PED","IDLE_taxi",4.0,0,0,0,0,0);
					case 18: ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,0,0,1,1,1);
					case 19: ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,0,0,1,1,1);
					case 20: ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
					case 21: ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",3.0,0,1,1,1,0);
					case 22: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.0, 1, 0, 0, 0, 0);
					case 23: ApplyAnimation(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1,1);
					case 24: ApplyAnimation(playerid,"PED","Gun_stand",4.1,0,1,1,1,1,1);
					case 25: ApplyAnimation(playerid, "KISSING","gfwave2", 4.1,0,1,1,0,0);
					case 26: ApplyAnimation(playerid, "ON_LOOKERS","wave_loop", 4.1,1,1,1,0,0);
					case 27: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.0,0,0,0,0,0);
					case 28: ApplyAnimation(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1,1);
					case 29: ApplyAnimation(playerid,"PED","BIKE_pickupL",4.1,0,0,0,0,0,1);
					case 30: ApplyAnimation(playerid,"GANGS","hndshkaa",4.0, 0, 0, 0, 0, 0,1);
					case 31: ApplyAnimation(playerid,"GANGS","hndshkfa",4.0, 0, 0, 0, 0, 0,1);
					case 32: ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.0, 0, 0, 0, 0, 0,1);
					case 33: ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
					case 34: ApplyAnimation(playerid,"GANGS","shake_carK",4.0,0,0,0,0,0);
					case 35: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
					case 36: ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
					case 37: ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
					case 38: ApplyAnimation(playerid,"MISC","scratchballs_01",4.0,0,0,0,0,0);
					case 39: ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
					case 40: ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
					case 41: ApplyAnimation(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
					case 42: ApplyAnimation(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
					case 43: ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
					case 44: ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
					case 45: ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.0,0,0,0,0,0);
					case 46: ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.0,0,0,0,0,0);
					case 47: ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
					case 48: ApplyAnimation(playerid,"PED","gang_gunstand",3.0,0,1,1,1,0);
					case 49: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,1,0,0,0,0,1);
				}
				Animation[playerid] = true;
				TextDrawShowForPlayer(playerid, StopAnimationTD);
			}
		}
	}
	return true;
}
CMD:pay(playerid, params[])
{
	if(PlayerInfo[playerid][pPrison] != 0) return senderror(playerid, "Cixeshi Ver Gamoiyenebt Am CMD's");
	if(sscanf(params, "ud", params[0], params[1])) return sendusage(playerid, "/pay [Motamashis ID] [Tanxa]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return true;
	if(!IsNearPlayer(playerid, params[0], 6.0))  return senderror(playerid, "Motamashe Ar Imkofeba Axlos");
	if(PlayerInfo[playerid][pCash] < params[1]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa!");
	if(params[1] < 1 || params[1] > 100000) return senderror(playerid, "Minimum: 1$ / Maksimum: 100.000$");
	PlayerInfo[playerid][pCash] -= params[1];
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	PlayerInfo[params[0]][pCash] += params[1];
	PlayerUpdateData(params[0], "pCash", PlayerInfo[params[0]][pCash]);
	format(gstr, sizeof(gstr), "Tkven Gadaecit Motamashes: %s[%d] / %d$", Name(params[0]), params[0], params[1]);
	SendClientMessage(playerid, COLOR_PURPLE, gstr);
	format(gstr, sizeof(gstr), "%s[%d]'m(a) Gadmogcat: %d$", Name(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_PURPLE, gstr);
	format(gstr, sizeof(gstr), "Amoigo Safulidan Tanxa Da Gadasca: %s's", Name(params[0]));
	format(log_str, sizeof(log_str), "%s'm(a) motamashe %s'm(a) gadauricxa %s's tanxa : %d$", Name(playerid),Name(params[0]),params[1]);
	CreateLog("Money", log_str);
	return true;
}
CMD:promocode(playerid, params[])
{
	if(Mtavari(playerid))
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new string[180];
		format(string, sizeof(string), color_promo"[1] -{ffffff} Create Promocode\n"color_promo"[2] -{ffffff} Delete Promocode\n"color_promo"[3] -{ffffff} Promocode List");
		ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, color_promo"Promocode{ffffff} | Select", string, "Next", "Exit");
	}
	return true;
}
CMD:makeadmin(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return true;
	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	if(sscanf(params, "ud",params[0],params[1])) return sendusage(playerid, "/makeadmin{ffffff} [Motamashis ID] [Level]");
	new string[128], ipAddress[16];
	PlayerInfo[params[0]][pAdmin] = params[1];
	PlayerUpdateData(params[0], "pAdmin", PlayerInfo[params[0]][pAdmin]);
	if(params[1] == 0)
	{
		format(string, sizeof(string), "%s'm(a){ffffff} Moxsna Administratori "color_admin"%s",Name(playerid),Name(params[0]));
		SendAdminMessage(COLOR_ADMIN, string);
  		GetPlayerIp(params[0], ipAddress, 16);
		RemAdminIP(ipAddress);

		PlayerInfo[params[0]][pAdmin_PlayedTime] = 0;
		PlayerUpdateData(params[0], "pAdmin_PlayedTime", PlayerInfo[params[0]][pAdmin_PlayedTime]);
		PlayerInfo[params[0]][pAdmin_Mute] = 0;
		PlayerUpdateData(params[0], "pAdmin_Mute", PlayerInfo[params[0]][pAdmin_Mute]);
		PlayerInfo[params[0]][pAdmin_Prison] = 0;
		PlayerUpdateData(params[0], "pAdmin_Prison", PlayerInfo[params[0]][pAdmin_Prison]);
		PlayerInfo[params[0]][pAdmin_Warn] = 0;
		PlayerUpdateData(params[0], "pAdmin_Warn", PlayerInfo[params[0]][pAdmin_Warn]);
		PlayerInfo[params[0]][pAdmin_Ban] = 0;
		PlayerUpdateData(params[0], "pAdmin_Ban", PlayerInfo[params[0]][pAdmin_Ban]);
		PlayerInfo[params[0]][pAdmin_ReportAnswer] = 0;
		PlayerUpdateData(params[0], "pAdmin_ReportAnswer", PlayerInfo[params[0]][pAdmin_ReportAnswer]);
	 	PlayerInfo[playerid][pAdmin_Kick] = 0;
	  	PlayerUpdateData(playerid, "pAdmin_Kick", PlayerInfo[playerid][pAdmin_Kick]);
	  	PlayerInfo[params[0]][pAdminWarning] = 0;
		PlayerUpdateData(params[0], "pAdminWarning", PlayerInfo[params[0]][pAdminWarning]);
	    return true;
	}
	else
	{
		format(string, sizeof(string), "%s'm(a){ffffff} Danishna Axali Admini "color_admin"%s{ffffff} | Level: %d",Name(playerid),Name(params[0]),params[1]);
		SendAdminMessage(COLOR_ADMIN, string);
	}

    // [ Generate Alogin ]
	SetString(PlayerInfo[params[0]][pAlogin], GeneratePassword(6), 96);
	PlayerUpdateDataString(params[0], "pAlogin", PlayerInfo[params[0]][pAlogin]);
	format(string, sizeof(string), "< Sheni Admin Parolia >: %s - Chaiwere!!!",PlayerInfo[params[0]][pAlogin]);
	SendClientMessage(params[0], 0xF4B800AA, string);
	SendClientMessage(params[0], COLOR_ADMIN, "[Server]{ffffff} Admin Loginis Shecvla Shegidzliat: /adminkey Gamokenebit");

	GetPlayerIp(params[0], ipAddress, 16);
	AddAdminIP(Name(params[0]), ipAddress);
	return true;
}
CMD:offadmin(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/offadmin [Motamashis Saxeli]");
		if(IsOnline(params[0])) return senderror2(playerid, "Motamashe Shemosulia Serverze");
		new sql_str[256];
		format(sql_str, sizeof(sql_str),"SELECT `Name` FROM `accounts` WHERE Name = '%s'", params[0]);
		mysql_query(connect, sql_str);
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror2(playerid, "Motamashe Ver Moidzebna");
		format(sql_str, sizeof(sql_str), "UPDATE accounts SET pAdmin = '0' WHERE Name = '%s'", params[0]);
		mysql_query(connect, sql_str);
		format(gstr, sizeof(gstr), "<OffAdmin> %s'm(a) Moxsna: %s", Name(playerid), params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
	}
	return true;
}
CMD:anticheat(playerid)
{
	if(KINKLA(playerid) && PlayerInfo[playerid][pAdmin] >= 10 && isAlogged[playerid])
	{
	    pAntiCheatSettingsPage[playerid] = 1;
	    ShowPlayer_AntiCheatSettings(playerid);
	}
	return true;
}
CMD:raciaon(playerid)
{
	if(PlayerInfo[playerid][pMember] >= 1)
	{
	    if(WalkieTalkieFractionStatus[playerid] == 0)
	    {
	        SvAttachListenerToStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	        SendClientMessage(playerid, 0x8099B5FF, "[Fraction Walkie] {FFFFFF}Tkven Chagertot Frakciis Racia - {8099B5}[X] {FFFFFF}- Gamosartavad /raciaon");
	        WalkieTalkieFractionStatus[playerid] = 1;
	        return 1;
	    }
	    else if(WalkieTalkieFractionStatus[playerid] == 1)
	    {
	        SvDetachListenerFromStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	        SvDetachSpeakerFromStream(FractionWalkie[PlayerInfo[playerid][pMember]], playerid);
	        SendClientMessage(playerid, 0x8099B5FF, "[Fraction Walkie] {FFFFFF}Tkven Gamogertot Frakciis Racia");
	        WalkieTalkieFractionStatus[playerid] = 0;
	        return true;
	    }
	}
	return 1;
}
CMD:gzcolor(playerid, params[])
{
 	if(GhettoTester(playerid) || PlayerInfo[playerid][pAdmin] >= 9)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "d",params[0])) return sendusage(playerid, "/gzcolor [Banda]");
	    if(params[0] != FRACTION_BALLAS && params[0] != FRACTION_VAGOS && params[0] != FRACTION_AZTEC && params[0] != FRACTION_GROVE && params[0] != FRACTION_RIFA) return senderror(playerid, "Tkven Miutitet Bandis Araswori ID!");
		for(new i = 0; i < 130; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				GZInfo[i][gFrakVlad] = params[0];
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
				SaveGZ();
    			//format(log, sizeof(log), "[GHETTOZONE] %s Gadaca Frakcias %s Kvadrati",Name(playerid), ZoneFracName(params[0]));
				//CreateLog("FractionZones.txt", log);
				return true;
			}
		}
	}
	return true;
}
CMD:ginfo(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsAGang(playerid))
		{
		    new string[512];
			ClearTotalGz();
			for(new i =0; i < sizeof(GZInfo); i ++)
			{
				if(GZInfo[i][gFrakVlad] == FRACTION_BALLAS) TotalGzB++;
				if(GZInfo[i][gFrakVlad] == FRACTION_VAGOS) TotalGzV++;
				if(GZInfo[i][gFrakVlad] == FRACTION_GROVE) TotalGzG++;
				if(GZInfo[i][gFrakVlad] == FRACTION_AZTEC) TotalGzA++;
				if(GZInfo[i][gFrakVlad] == FRACTION_RIFA) TotalGzR++;

			}
			switch(PlayerInfo[playerid][pMember])
			{
			case FRACTION_BALLAS:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Gangis Gankarugelbashia : {DBD604}%d Kvadrati\n{ffffff}PayDay'ze Iricxeba: {DBD604}$%d\n{ffffff}Gangis Angarishzea: {DBD604}%d",TotalGzB, TotalGzB*100, BallasBank);
					ShowPlayerDialog(playerid,1042,DIALOG_STYLE_MSGBOX,"The Ballas Gang",string, "Close", "");
				}
			case FRACTION_VAGOS:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Gangis Gankarugelbashia : {DBD604}%d Kvadrati\n{ffffff}PayDay'ze Iricxeba: {DBD604}$%d\n{ffffff}Gangis Angarishzea: {DBD604}%d",TotalGzV, TotalGzV*100, VagosBank);
					ShowPlayerDialog(playerid,1043,DIALOG_STYLE_MSGBOX,"The Vagos Gang",string, "Close", "");
				}
			case FRACTION_GROVE:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Gangis Gankarugelbashia : {DBD604}%d Kvadrati\n{ffffff}PayDay'ze Iricxeba: {DBD604}$%d\n{ffffff}Gangis Angarishzea: {DBD604}%d",TotalGzG, TotalGzG*100, GroveBank);
					ShowPlayerDialog(playerid,1045,DIALOG_STYLE_MSGBOX,"The Grove Street Gang",string, "Close", "");
				}
			case FRACTION_AZTEC:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Gangis Gankarugelbashia : {DBD604}%d Kvadrati\n{ffffff}PayDay'ze Iricxeba: {DBD604}$%d\n{ffffff}Gangis Angarishzea: {DBD604}%d",TotalGzA, TotalGzA*100, AztecaBank);
					ShowPlayerDialog(playerid,1047,DIALOG_STYLE_MSGBOX,"The Aztecas Gang",string, "Close", "");
				}
			case FRACTION_RIFA:
				{
					format(string, sizeof(string),"{ffffff}Tqveni Gangis Gankarugelbashia : {DBD604}%d Kvadrati\n{ffffff}PayDay'ze Iricxeba: {DBD604}$%d\n{ffffff}Gangis Angarishzea: {DBD604}%d",TotalGzR, TotalGzR*100, RifaBank);
					ShowPlayerDialog(playerid,1048,DIALOG_STYLE_MSGBOX,"The Rifa Gang Gang",string, "Close", "");
				}
			}
			ClearTotalGz();
		}
	}
	return true;
}
CMD:capture(playerid)
{
	if(!IsAGang(playerid)) return true;
	if(ghettoon == 0) return sendinfo(playerid, "Capture Gamortulia Administraciis Mier");
	if(!startcapture) return sendinfo(playerid, "Am Momentshi Capture Daushvebelia!");
	if(MorozSystem[PlayerInfo[playerid][pMember]]) return sendinfo(playerid, "Am Momentshi Ver Dacaptavt!");
	new string[260], code = Random(10000000,99999999);
	format(string, sizeof(string), "{FFFFFF}Teritoriistvis Brdzolis Dasawyebad Sachiroa Sheiyvanot Mocemuli Kodi\nKodi: {8099B5}%d\n{FFFFFF}Brdzolas Daiwyebs Is Banda, Romelic Pirveli Moaswrebs Kodis Sheyvanas", code);
	ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_INPUT, "{8099B5}Capture{FFFFFF} | Enter The Answer", string, "Shemdeg", "Daxurva");
	SetPVarInt(playerid, "Capture", code);
	AutoTimer[playerid] = true;
	AntiDialog[playerid] = true;
	SetTimerEx("AntiAuto", 2400, false, "d", playerid);
	return true;
}
CMD:captureon(playerid, params[])
{
	if(GhettoTester(playerid) || PlayerInfo[playerid][pAdmin] >= 9)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(ghettoon == 0)
		{
			ghettoon = 1;
			format(gstr, sizeof(gstr), "%s - Charto Gang Capture",Name(playerid));
	        SendClientMessageToAll(COLOR_WHITE, gstr);
		}
		else
		{
			ghettoon = 0;
			format(gstr, sizeof(gstr), "%s - Gamorto Gang Capture",Name(playerid));
	        SendClientMessageToAll(COLOR_WHITE, gstr);
		}
	}
	return true;
}
CMD:saveall(playerid)
{
    if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    for(new i = 1; i <= TotalBizz; i++) SaveBizzData(i);
	    for(new i = 1; i <= TotalHouse; i++) SaveHouseData(i);
		SaveGZ();
	//	SaveFracBank();
	//	SaveKazino();
		SendClientMessage(playerid, COLOR_GREY, "| Serveris Bazam Yvelaferi Warmatebulad Sheinaxa |");
	}
	return true;
}
CMD:sopen(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return true;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	SendRconCommand("password 0");
	SendClientMessageToAll(COLOR_LIGHTRED, "Servers Aexsna Paroli");
	return true;
}
CMD:sclose(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return true;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	new pass = Random(9999,100000);
	format(gstr,sizeof(gstr),"Server Password %d",pass);
 	SendAdminMessage(COLOR_LIGHTRED, gstr, 5);
 	format(gstr,sizeof(gstr),"password %d",pass);
	SendRconCommand(gstr);
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pAdmin] <= 0) Kick(i);
	}
	return true;
}
CMD:passchange(playerid, params[])
{
	if(KINKLA(playerid))
	{
 		new pass = Random(9999,100000);
   		format(gstr,sizeof(gstr),"Server Password %d",pass);
   		SendAdminMessage(COLOR_LIGHTRED, gstr);
		format(gstr,sizeof(gstr),"password %d",pass);
		SendRconCommand(gstr);
	}
	return true;
}
CMD:clearpass(playerid, params[])
{
	if(KINKLA(playerid))
	{
   		format(gstr,sizeof(gstr),"Server Password 0");
   		SendAdminMessage(COLOR_LIGHTRED, gstr);
		format(gstr,sizeof(gstr),"password 0");
		SendRconCommand(gstr);
	}
	return true;
}
CMD:hostname(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 10) return true;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	if(sscanf(params, "s[100]", params[0])) return sendusage(playerid, "/hostname [Name]");
    format(gstr,sizeof(gstr), "HostName: %s",params[0]);
	SendAdminMessage(COLOR_WHITE, gstr);
	format(gstr, sizeof(gstr), "hostname %s",params[0]);
	SendRconCommand(gstr);
	return true;
}
CMD:dm(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, 2695.4736,-1704.6350,11.8438)) return senderror(playerid, "Tkven Ar Imyofebit DM Arenastan Axlos");
    if(!IsAGang(playerid)) return senderror(playerid, "Tkven Ar Xart Bandis Wevri");
    if(DMArea[playerid] != 0)return senderror(playerid, "Tkven Ukve Imyofebit DM Arenaze, Gamosasvlelad Daweret: /exitdm");
	new DMPlayers[3];
	foreach(new i:Player)
	{
	    if(DMArea[i] > 0) DMPlayers[DMArea[i]] ++;
	}
	format(gstr, sizeof(gstr), "DM Arena '1\t%d Players\nDM Arena '2\t%d Players",DMPlayers[1],DMPlayers[2]);
    ShowPlayerDialog(playerid, 8586, DIALOG_STYLE_LIST, "DeathMatch Arena", gstr, "Enter", "Close");
    return true;
}
CMD:dt(playerid, params[])
{
	if(DMArea[playerid] == 0) return senderror(playerid, "Tkven Ar Imyofebit DeathMatch Arenaze!");
	if(sscanf(params, "i",params[0])) return sendusage(playerid, "/dt [1-100]");
	if(params[0] < 1 || params[0] > 100) return sendinfo(playerid, "Minimum : 1 / Maxsimum : 100");
	DMKill[playerid] = 0;
    DMDeath[playerid] = 0;
	DMVirtual[playerid] = params[0];
	SetPlayerVirtualWorld(playerid, DMVirtual[playerid]);
	DMTXTUPDATE(playerid);
	return true;
}
CMD:exitdm(playerid)
{
    if(DMArea[playerid] == 0) return senderror(playerid, "Tkven Ar Imyofebit DeathMatch Arenaze!");
    DMArea[playerid] = 0;
    DMVirtual[playerid] = 0;
    DMKill[playerid] = 0;
    DMDeath[playerid] = 0;
    SetPlayerVirtualWorld(playerid,0);
	ResetWeapons(playerid);
    SetPlayerColorEx(playerid);
	SetPlayerPos(playerid, 2691.9851,-1697.7567,10.4953);
	SetPlayerFacingAngle(playerid, 205.3863);
	PlayerTextDrawHide(playerid, DMTXT[playerid]);
	return true;
}
CMD:banlist(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 8) return true;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
   	if(DelayCMD[playerid] > gettime()) return true;
    DelayCMD[playerid] = gettime()+2;
    new AleadersString[600],Names[MAX_PLAYER_NAME],GetBan;
    format(gstr, sizeof(gstr), "SELECT * FROM `bans` WHERE ID >= '1'");
	mysql_query(connect, gstr);
	new bnacc = 0, banstr[120];
	new rows;
	cache_get_row_count(rows);
	new CurrentBan = getdate();
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Arcert Motamashes Ar Adevs Bani");
    AleadersString = "{ffffff}Name\t{ffffff}Unban\n";
	for new i = 0; i < rows; i++ do
	{
	    cache_get_value_name(i, "Name", Names, MAX_PLAYER_NAME);
	    cache_get_value_name_int(i, "Day", GetBan);
		format(gstr, sizeof(gstr), "{FFFFFF}Name: %s\t%d Day\n",Names,GetBan-CurrentBan);
		strcat(AleadersString, gstr);
		bnacc += 1;
	}
	format(banstr, sizeof(banstr), "{8099B5}BanList{FFFFFF} | %d Account", bnacc);
	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, banstr, AleadersString, "Close", "");
	return true;
}
CMD:baninfo(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 8) return true;
    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
   	if(DelayCMD[playerid] > gettime()) return true;
   	if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/baninfo [Motamashis Saxeli]");
    DelayCMD[playerid] = gettime()+2;
    new AleadersString[600];
    format(gstr, sizeof(gstr), "SELECT * FROM `bans` WHERE Name = '%s'",params[0]);
	mysql_query(connect, gstr);
	new rows;
	cache_get_row_count(rows);
	new current = getdate();
	if(!rows) return senderror2(playerid, "Motamashes Ar Adevs Bani");
    AleadersString = "{ffffff}Name\t{ffffff}Unban\n";
    new playername[200], adminname[200], reason[200], day, date[300], string[800];
	for new i = 0; i < rows; i++ do
	{
        cache_get_value_name(i, "Name", playername, 100);
        cache_get_value_name(i, "Reason", reason, 100);
        cache_get_value_name(i, "AdminName", adminname, 100);
        cache_get_value_name_int(i, "Day", day);
        cache_get_value_name(i, "Date", date, 40);
        new haj = day-current;
        if(haj > 300)
        {
            day = haj-365;
        }
	}
 	format(string, sizeof(string), "\n\n{ffffff}Server: {4FB64F}"SERVER_SHORT_NAME"\n{ffffff}Name: {4FB64F}%s\n{ffffff}Reason: {4FB64F}%s\n{ffffff}AdminName: {4FB64F}%s\n{ffffff}Day: {4FB64F}%d\n{ffffff}Date: {4FB64F}%s",playername,reason,adminname,day-current,date);
   	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{ffffff}Account Blocked", string, "Exit", "");
	return true;
}
CMD:barier(playerid,params[])
{
   	if(!IsACop(playerid)) return senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
   	new sendername[MAX_PLAYER_NAME];
   	GetPlayerName(playerid,sendername,sizeof(sendername));
   	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);
	GetXYInFrontOfPlayer(playerid, x, y, 1.0);
   	CreateRoadblock(3091, x, y, z+0.5, a+180);
   	format(gstr,sizeof(gstr),"[HQ]: Oficerma %s -m Dadga Roadblock Gzis Dasaketad",sendername);
   	SendNearText(playerid, gstr, 7.0, COLOR_PURPLE);
   	GameTextForPlayer(playerid,"~w~Roadblock ~g~Created",3000,1);
   	sendinfo(playerid, "Washahlelad /rbarier");
 	return true;
}
CMD:rbarier(playerid,params[])
{
    if(IsPlayerConnected(playerid) && IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 2)
  	{
  	    new ariak = false;
  	    for(new i = 0; i < sizeof(Roadblocks); i++)
	  	{
	  	    if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
	        {
	  	        if(Roadblocks[i][sCreated] == 1)
	            {
					ariak = 1;
					break;
	  	        }
	  	    }
	  	}
	  	if(ariak == 0) return senderror(playerid, "Tkventan Axlos Araa Barieri");
        new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid,sendername,sizeof(sendername));
       	DeleteClosestRoadblock(playerid);
       	format(gstr,sizeof(gstr),"[HQ]: Officerma %s -m Moxsna Roadblock",sendername);
        SendNearText(playerid, gstr, 7.0, COLOR_PURPLE);
        GameTextForPlayer(playerid,"~w~Roadblock ~r~Deleted!",3000,1);
    }
    return 1;
}
CMD:banip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "ds[32]",params[0],params[1])) return sendusage(playerid, "/banip [Dgeebis Raodenoba] [IP]");
		if(!Mtavari(playerid))
		{
			if(params[0] > 10 || params[0] < 1) return sendinfo(playerid, "Dgeebis Raodenoba Unda Iyos 1 Dan 10 Dgemde");
		}
		new year, month,day;
		getdate(year, month, day);
		format(gstr, sizeof(gstr), "Administratorma %s'm(a) Dabloka IP: %s - %d Dgit",Name(playerid),params[1],params[0]);
		SendAdminMessage(COLOR_LIGHTRED, gstr);
		new strstre[100];
		format(strstre,sizeof(strstre), "%d/%d/%d",day,month,year);
		format(gstr, sizeof(gstr), "INSERT INTO `banip` (`Dge`, `IP`, `Admin`, `Tarigi`) VALUES ('%d', '%s', '%s', '%s')",getdate()+params[0],params[1],Name(playerid),strstre);
		mysql_query(connect,gstr);
	}
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
	return true;
}
CMD:unbanip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[32]",params[0])) return sendusage(playerid, "/unbanip [IP]");
		format(gstr,sizeof(gstr), "DELETE FROM `banip` WHERE `IP` = '%s'",params[0]);
		mysql_query(connect, gstr);
		format(gstr, sizeof(gstr), "Administratorma %s'm(a) Moxsna Block IP's: %s",Name(playerid),playerid,params[0]);
		SendAdminMessage(COLOR_GREEN, gstr, 1);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:unsampban(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
    	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[31]",params[0])) return sendusage(playerid, "/unsampban [IP]");
		format(gstr,sizeof(gstr), "unbanip %s",params[0]);
		SendRconCommand(gstr);
		SendRconCommand("reloadbans");
		format(gstr, sizeof(gstr), "%s <UNHOSTBAN> IP: %s",Name(playerid),params[0]);
		SendAdminMessage(COLOR_GREEN, gstr);
	}
	return true;
}
CMD:sampban(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
    	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[32]",params[0])) return sendusage(playerid, "/sampban [IP]");
		format(gstr,sizeof(gstr), "banip %s",params[0]);
		SendRconCommand(gstr);
		SendRconCommand("reloadbans");
		format(gstr, sizeof(gstr), "%s'm(a) <HOSTBAN> IP: %s",Name(playerid),params[0]);
		SendAdminMessage(COLOR_GREEN, gstr);
	}
	return true;
}
CMD:reloadbans(playerid, params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		SendRconCommand("reloadbans");
		SendClientMessage(playerid, COLOR_WHITE, "Ban List Reloaded");
	}
	return true;
}
CMD:phone(playerid, params[])
{
	if(IsPlayerHavePhone(playerid))
	{
		if(TakingPicture[playerid] == 0 && InvData[playerid][i_Opened] == false && JetXStatus[playerid] == false)
		{
			if(DelayCMD[playerid] > gettime()) return true;
		    DelayCMD[playerid] = gettime()+2;
	        PhoneMove(playerid, !phoneOpen[playerid]);
		}
	}
	else
	{
	    senderror(playerid, "Tkven Ar Gakvt Mobiluri Telefoni, Misi Shedzena Shegidzliat Nebismier 24/7 Market'shi");
	}
	return true;
}
CMD:togphone(playerid)
{
    if(IsPlayerHavePhone(playerid))
    {
	    new telestr[256];
		if(!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			format(telestr, sizeof(telestr), "%s'm(a) Gatisha Mobiluri",Name(playerid));
			SendNearText(playerid, telestr, 11.0, COLOR_PURPLE);
			SetPlayerChatBubble(playerid, "Gatisha Mobiluri", COLOR_PURPLE, 30.0, 10000);
		}
		else if(PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			format(telestr, sizeof(telestr), "%s'm(a) Charto Mobiluri",Name(playerid));
			SendNearText(playerid, telestr, 11.0, COLOR_PURPLE);
			SetPlayerChatBubble(playerid, "Charto Mobiluri", COLOR_PURPLE, 30.0, 10000);
		}
	}
	else
	{
	    senderror(playerid, "Tkven Ar Gakvt Mobiluri Telefoni, Misi Shedzena Shegidzliat Nebismier 24/7 Market'shi");
	}
	return true;
}
CMD:cfly(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 7)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(GetPVarType(playerid, "FlyMode")) CancelFlyMode(playerid);
		else FlyMode(playerid);
	}
	return 1;
}
CMD:offmembers(playerid)
{
	if(PlayerInfo[playerid][pMember] == 0) return true;
	if(!IsALeader(playerid)) return true;
 	format(gstr, sizeof(gstr), "SELECT * FROM `accounts` WHERE `pMember` = '%d'",PlayerInfo[playerid][pMember]);
	mysql_tquery(connect, gstr, "OffMembers", "i",playerid);
	return true;
}
CMD:givecoin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "ud",params[0],params[1])) return	sendusage(playerid, "/givecoin [Motamashis ID] [Raodenoba]");
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pGcoin]+params[1] > 100) return SendClientMessage(playerid, COLOR_WHITE, "Motamashes Ukve Sakmarisi Raodenobis G-Coin Akvs");
		PlayerInfo[params[0]][pGcoin] += params[1];
		new rouletstr[256];
		format(rouletstr, sizeof(rouletstr), "{FFFFFF}Tkven Gadaecit: {00FF00}%s{FFFFFF}'s {00FF00}%d{FFFFFF}G-Coin / Balance: {00FF00}%d/100", Name(params[0]), params[1], PlayerInfo[params[0]][pGcoin]);
		SendClientMessage(playerid, COLOR_WHITE, rouletstr);
		format(rouletstr, sizeof(rouletstr), "{FFFFFF}Tkven Gadmogces {00FF00}%d{FFFFFF}G-Coin / Balance: {00FF00}%d/100", params[1], PlayerInfo[params[0]][pGcoin]);
		SendClientMessage(params[0], COLOR_WHITE, rouletstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:trailer(playerid)
{
    if(!IsPlayerConnected(playerid)) return true;
    if(!IsACop(playerid)) return senderror(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
    if(!IsPlayerInAnyVehicle(playerid)) return senderror(playerid, "Tkven Ar Imyofebit Transportshi");
    if(GetPlayerState(playerid) != 2) return senderror(playerid, "Tkven Ar Imyofebit Sachestan!");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return senderror(playerid, "Tkven Ar Imyofebit Mechanicis Transportshi!");
    new Float:pX,Float:pY,Float:pZ;
    GetPlayerPos(playerid,pX,pY,pZ);
    new Float:vXx,Float:vYy,Float:vZz;
    new Found=0;
    new vid=0;
    while((vid<MAX_VEHICLES)&&(!Found))
    {
        vid++;
        GetVehiclePos(vid,vXx,vYy,vZz);
        if ((floatabs(pX-vXx)<7.0)&&(floatabs(pY-vYy)<7.0)&&(floatabs(pZ-vZz)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
        {
            Found=1;
            AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
            if(!IsAPlane(GetPlayerVehicleID(playerid)) && !IsABoat(GetPlayerVehicleID(playerid)) && !IsABike(GetPlayerVehicleID(playerid)))
			{
	            chabmulia[GetPlayerVehicleID(playerid)] = 1;
	            chabmuli[GetPlayerVehicleID(playerid)] = vid;
	        	foreach(new i : Player)
				{
				    if(caridhouse[i] != -1 && caridhouse[i] == chabmuli[GetPlayerVehicleID(playerid)])
				    {
						CarTrailer[i] = 1;
				    }
				}
			}
        }
    }
    if(!Found) senderror(playerid, "Tkven Ar Imyofebit Transporttan Axlos!");
    return true;
}
CMD:untrailer(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return senderror(playerid, "Tkven Ar Gyavt Chabmuli Transporti!");
        if(chabmulia[GetPlayerVehicleID(playerid)] == 0) return senderror(playerid, "Tkven Ar Gyavt Chabmuli Transporti!");
    	foreach(new i : Player)
		{
		    if(caridhouse[i] != -1 && caridhouse[i] == chabmuli[GetPlayerVehicleID(playerid)])
		    {
				CarTrailer[i] = 0;
		    }
		}
		new vehplid=GetPlayerVehicleID(playerid);
        DetachTrailerFromVehicle(vehplid);
        chabmulia[vehplid] = 0;
        chabmuli[vehplid] = -1;
    }
    return true;
}
CMD:fuelcars(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 9)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	for(new i = 0;i<MAX_VEHICLES;i++) gFuel[i] = 100;
	}
	return true;
}
CMD:healme(playerid, params[])
{
	if(antidouble[playerid] == true) return senderror(playerid, "Double Healme Akrdzalulia");
    if(Animation[playerid] == true) return senderror(playerid, "Am Momentshi Medikamentebis Gamoyeneba Sheudzlebelia");
	if(DMArea[playerid] != 0) return senderror(playerid, "Death Match Arenaze Ver Gamoiyenebt Am Brdzanebas");
	if(IsPlayerInAnyVehicle(playerid)) return senderror(playerid, "Transportshi Ver Gamoiyenebt Medikamentebs");
	new Float:healmee, slot = -1;
	GetPlayerHealth(playerid, healmee);
	if(healmee > 100) return sendinfo(playerid, "Tkven Ar Gchirdebat Medikamenti");
	for(new i = 2*INV_MAX_SLOTS-1; i > -1; i --)
	{
	    if(InvData[playerid][i_Items][i] == GetItemModelById(ITEM_MEDIC))
	    {
	        slot = i;
			break;
	    }
	}
	if(slot == -1) return senderror(playerid, "Ar Gakvt Medikamentebi");
	RemovePlayerItem(playerid, slot);
 	SetPlayerHealth(playerid, healmee+60);
 	Animation[playerid] = true;
 	antidouble[playerid] = true;
    SetPlayerAttachedObject(playerid, 9, 11738, 6, 0.235999, -0.008999, 0.048999, 1.399997, -104.899986, -10.999977, 1.000000, 1.000000, 1.000000);
  	ApplyAnimation(playerid, "SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
    format(gstr, sizeof(gstr), "~b~HP +60");
    GameTextForPlayer(playerid, gstr, 3000, 1);
	format(gstr, sizeof(gstr), "%s'm(a) Gamoikena Medikamenti", Name(playerid));
    SendNearText(playerid, gstr, 10.0, COLOR_PURPLE);
	SetPlayerChatBubble(playerid, "Gamoikena Medikamenti", COLOR_PURPLE, 30.0, 10000);
	SetTimerEx("HealOFF", 4000, false, "d", playerid);
 	return true;
}
CMD:heal(playerid, params[])
{
    if(PlayerInfo[playerid][pMember] != FRACTION_MEDIC) return true;
    //if(HospitalMeds <= 0) return senderror(playerid, "Saavadmyofoshi Medikamentebis Maragi Amoiwura Da Ver Umkurnalebt!");
	if(sscanf(params, "u",params[0])) return sendusage(playerid, "/heal [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
    if(params[0] == playerid) return true;
	if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Motamashe Ar Imyofeba Tkventan Axlos!");
	if(PlayerInfo[playerid][pMember] == FRACTION_MEDIC)
	{
		new healdialog[200];
		new Float:hpevel;
		GetPlayerHealth(params[0], hpevel);
		if(hpevel > 99) return senderror2(playerid, "Motamashes Ar Schirdeba Mkurnaloba!");
		format(healdialog,sizeof(healdialog), "{00AAFF}%s[%d]{FFFFFF}'m(a) Shemogtavazat Mkurnaloba\nMkurnalobis Safasuri: {00AAFF}%d$\n\n{FFFFFF}Darwmunebuli Xart, Rom Gsurt Mkurnaloba?", Name(playerid), playerid, 5000);
		ShowPlayerDialog(params[0], 28, DIALOG_STYLE_MSGBOX, "{00AAFF}Hospital{FFFFFF} | Health", healdialog, "Ki", "Ara");

		format(gstr, sizeof(gstr),"Tkven Shestavazet Mkurnaloba: {FF4545}%s[%d] / %d${FFFFFF}", Name(params[0]), params[0], 5000);
		SendClientMessage(playerid, COLOR_WHITE, gstr);

		HealPrice[params[0]] = 5000;
		HealOffer[params[0]] = playerid;
	}
	return true;
}
CMD:gps(playerid)
{
    if(jobID[playerid] != JOB_NONE) return senderror(playerid, "Am Momentshi Ver Gamoikenebt GPS's");
    if(GPS[playerid])
    {
		GPS[playerid] = false;
		gCheckpoint[playerid] = CHECKPOINT_NONE;
		DisablePlayerCheckpoint(playerid);
	    gpsTimer[playerid] = SetTimerEx("UpdateGPS", 100, true, "i", playerid);
     	KillTimer(gpsTimer[playerid]);
      	gpsTimer[playerid] = -1;
		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
		SendClientMessage(playerid, 0x5DADE2FF, "[GPS]{ffffff} GPS Gaitisha!");
		return true;
    }
	ShowPlayerDialog(playerid, 100, DIALOG_STYLE_LIST, "{5DADE2}Global Position System", GPSMenu, "Archeva", "Daxurva");
	return true;
}
CMD:quest(playerid, params[])
{
	ShowQuestDialog(playerid);
    return true;
}
CMD:sms(playerid, params[])
{
    if(!IsPlayerHavePhone(playerid)) return senderror2(playerid, "Tkven Ar Gakvt Telefoni, Misi Shedzena Shegidzliat Nebismier 24/7 Marketshi");
    if(PlayerInfo[playerid][pPrison] > 0)return senderror2(playerid, "Cixeshi Ver Gamoiyeneb Telefons");
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) return true;
    if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "ds[64]",params[0],params[1])) return sendusage(playerid, "/sms [Motamashis ID] [Text]");
	if(!IsPlayerConnected(params[0])) return true;
	if(isLogged[params[0]] == false) return senderror2(playerid, "Mititebul Motamashes Ar Gauvlia Avtorizacia");
	if(!IsPlayerHavePhone(params[0])) return senderror2(playerid, "Mititebul Motamashes Ar Akvt Telefoni");
	if(!GetPlayerItem(playerid, GetItemModelById(ITEM_SIMCARD))) return senderror2(playerid, "Tkven Ar Gakvt SIM Barati");
	if(GetPlayerItem(params[0], GetItemModelById(ITEM_SIMCARD))) return senderror2(playerid, "Mititebul Motamashes Ar Akvs SIM Barati");
    if(PhoneOnline[playerid] > 0) return senderror2(playerid, "Tkven Gatishuli Gakvt Mobiluri");
    if(PlayerInfo[playerid][pMobile] <= 0) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa Telefonze");
    if(PhoneOnline[params[0]] > 0) return SendClientMessage(playerid, COLOR_GREY, "Mititebul Motamashes Gatishuli Akvs Mobiluri");
 	if(IsIP(params[1]))
	{
		PlayerInfo[playerid][pMuteTime] = 5*60;
		PlayerUpdateData(playerid, "pMuteTime", PlayerInfo[playerid][pMuteTime]);
		PlayerInfo[playerid][pMute] = 1;
		PlayerUpdateData(playerid, "pMute", PlayerInfo[playerid][pMute]);
		SendClientMessage(playerid, COLOR_WHITE, "- Tkven Dagedot 5 Wutiani Chatis Bani Cifrebis Daweristvis");
		return true;
	}
	format(gstr, sizeof(gstr), "SMS: %s. Gamomgzavni: %s[%d]",params[1],Name(playerid), playerid);
	SendClientMessage(params[0], COLOR_YELLOW, gstr);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	format(gstr, sizeof(gstr), "%s'm(a) Gaagzavna SMS",Name(playerid));
	SendNearText(playerid, gstr, 10.0, COLOR_PURPLE);
	format(gstr, sizeof(gstr), "SMS: %s. Mimgebi: %s[%d]",params[1],Name(params[0]),params[0]);
	SendClientMessage(playerid, COLOR_YELLOW, gstr);
	SendClientMessage(playerid, COLOR_WHITE, "SMS Migebulia");
	PlayerInfo[playerid][pMobile] --;
	PlayerUpdateData(playerid, "pMobile", PlayerInfo[playerid][pMobile]);
	return true;
}
CMD:pm(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "us[64]",params[0],params[1])) return sendusage(playerid, "Daweret: /pm [Motamashis ID] [Text]");
		if(!IsPlayerConnected(params[0])) return true;
		format(gstr, sizeof(gstr), "[PM]:{ffffff} %s: %s",Name(playerid),params[1]);
		SendClientMessage(params[0], 0x52BE80FF, gstr);
	    format(gstr, sizeof(gstr), "[PM]:{ffffff} %s - %s(%d): %s", Name(playerid),Name(params[0]), params[0], params[1]);
		SendAdminMessage(0x52BE80FF, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:alarm(playerid, params[])
{
	if(PlayerInfo[playerid][pForm] != FRACTION_ARMY) return true;
	new mem = PlayerInfo[playerid][pForm];
	if(PlayerInfo[playerid][pRank] < FractionInfo[mem][frac_Ranking]) return senderror2(playerid, "Ar Gakvt Amis Ufleba");
	if(armyalarmtime > gettime()) return true;
	if(IsPlayerInRangeOfPoint(playerid, 200.0, 2765.2793,-2459.3650,13.4888))
	{
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pForm] == mem)
			{
	  			PlayerPlaySound(i, 6001, 0.0, 0.0, 0.0);
	   			SetTimer("AlarmEnd", 30000, false);
	   			format(gstr, sizeof(gstr), "{31B404}[Warning]{FA5858} LS-Army Bazaze Gamocxadda Gangashi! - %s",Name(playerid));
				SendClientMessage(i, COLOR_WHITE, gstr);
			}
		}
		armyalarmtime = gettime()+120;
	}
	else
	{
	    senderror2(playerid, "Ar Imkofebit Bazaze");
	}
	return true;
}
/*CMD:clearreconnect(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 8)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    SendClientMessage(playerid, COLOR_WHITE, "Reconnect List Cleared");
	    ClearReconnect();
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
    return true;
}*/
CMD:quitjob(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 0)
    {
  		PlayerInfo[playerid][pJob] = 0;
    	PlayerUpdateData(playerid, "pJob", PlayerInfo[playerid][pJob]);
     	SendClientMessage(playerid, COLOR_BIZZ, "Tkven Datovet Samushao");
	}
    return true;
}
CMD:shout(playerid, params[])
{
    if(DelayChat[playerid] > gettime()) return true;
    if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/s(hout) [Text]");
	if(IsIP(params[0])) return false;
	format(gstr, sizeof(gstr), "%s Yviris: %s!",Name(playerid),params[0]);
    SendNearText(playerid, gstr, 25.0, COLOR_WHITE);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid, params[0], COLOR_YELLOW,60.0,10000);
	DelayChat[playerid] = gettime()+2;
	return true;
}
CMD:whisper(playerid, params[])
{
    if(DelayChat[playerid] > gettime()) return true;
    if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[100]",params[0])) return sendusage(playerid, "/w(hisper) [Text]");
	format(gstr, sizeof(gstr), "%s Chaichurchula: %s", Name(playerid),params[0]);
	SendNearText(playerid, gstr, 5.0, 0x6E6E6EAA);
	DelayChat[playerid] = gettime()+1;
	return true;
}
CMD:b(playerid, params[])
{
    if(DelayChat[playerid] > gettime()) return true;
	if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[100]",params[0])) return	sendusage(playerid, "/b [Text]");
	new i_love_everyone[200];
	format(i_love_everyone, sizeof(i_love_everyone), "%s: (( %s ))", Name(playerid), params[0]);
	SendNearText(playerid, i_love_everyone, 15.0, COLOR_WHITE);
	DelayChat[playerid] = gettime()+1;
	return true;
}
CMD:me(playerid, params[])
{
	if(DelayCMD[playerid] > gettime()) return true;
 	DelayCMD[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/me [Qmedeba]");
	format(gstr, sizeof(gstr), "%s: %s", Name(playerid), params[0]);
	SendNearText(playerid, gstr, 14.0, COLOR_PURPLE);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 10000);
	return true;
}
CMD:do(playerid, params[])
{
	if(DelayCMD[playerid] > gettime()) return true;
 	DelayCMD[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/do [Qmedeba]");
	format(gstr, sizeof(gstr), "%s (( %s ))",params[0],Name(playerid));
	SendNearText(playerid, gstr, 14.0, COLOR_PURPLE);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 10000);
	return true;
}
CMD:try(playerid, params[])
{
	if(DelayCMD[playerid] > gettime()) return true;
 	DelayCMD[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(sscanf(params, "s[64]", params[0])) return sendusage(playerid, "/try [Qmedeba]");
	new randomchik = Random(0,2);
	format(gstr, sizeof(gstr), "%s Cdilobs %s %s",Name(playerid),params[0],(!randomchik)?("{9ACD32}| Warmatebit") : ("{FF6347}| Warumateblad"));
    SendNearText(playerid, gstr, 14.0, COLOR_PURPLE);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 10000);
	return true;
}
CMD:showpass(playerid, params[])
{
	if(DelayCMD[playerid] > gettime()) return true;
 	DelayCMD[playerid] = gettime()+1;
	if(PlayerInfo[playerid][pLicense][LICENSE_PASS] == 0) return senderror2(playerid, "Ar Gakvt Pasporti, Ageba Shegidzliat Meriashi /gps >> Mtavari Adgilebi >> City Hall");
    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/showpass [Motamashis ID]");
    if(!IsPlayerConnected(params[0])) return true;
    if(params[0] == INVALID_PLAYER_ID) return true;
    if(!IsNearPlayer(playerid, params[0], 6.0)) return sendinfo(playerid, "Mititebuli Motamashe Araa Axlos");
    SendClientMessage(params[0], 0xF5DEB3AA, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	format(gstr, sizeof(gstr), "Name: %s",Name(playerid));
	SendClientMessage(params[0], 0xF5DEB3AA, gstr);
	format(gstr, sizeof(gstr), "Level: %d | Number: %d",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pNumber]);
	SendClientMessage(params[0], 0xF5DEB3AA, gstr);
	format(gstr, sizeof(gstr), "Job: %s | Fraction: %s",GetJobName(PlayerInfo[playerid][pJob]),FractionNames[PlayerInfo[playerid][pMember]]);
	SendClientMessage(params[0], 0xF5DEB3AA, gstr);
	format(gstr, sizeof(gstr), "Rank: %d | Rank Name %s",PlayerInfo[playerid][pRank],GetRankName(PlayerInfo[playerid][pMember], PlayerInfo[playerid][pRank]));
	SendClientMessage(params[0], 0xF5DEB3AA, gstr);
	format(gstr,sizeof(gstr), "Achvena Pasporti %s'(s)", Name(params[0]));
	SetPlayerChatBubble(playerid, gstr, COLOR_PURPLE, 30.0, 10000);
	format(gstr, sizeof(gstr), "%s'm(a) Achvena Pasporti %s(s)", Name(playerid), Name(params[0]));
	SendNearText(playerid, gstr, 10.0, COLOR_PURPLE);
	return true;
}
CMD:showlicenses(playerid, params[])
{
    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/showlicenses [Motamashis ID]");
    if(!IsPlayerConnected(params[0])) return true;
    if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Mititebuli Motamashe Araa Axlos");
	new str[128];
	format(str, sizeof(str), "-----------===[ LICENSES %s ]===-----------", Name(playerid));
	SendClientMessage(params[0], -1, str);
	for(new i = 0; i < 4; i ++)
	{
	    format(str, sizeof(str), "%s: %s",GetLicenseName(PlayerInfo[playerid][pLicense][i]),PlayerInfo[playerid][pLicense][i]?"{2ecc71}Akvs":"{e74c3c}Ar Akvs");
	    SendClientMessage(params[0], -1, str);
	}
	SendClientMessage(params[0], -1, str);
	format(gstr,sizeof(gstr), "Achvena Licenziebi %s'(s)", Name(params[0]));
	SetPlayerChatBubble(playerid, gstr, COLOR_PURPLE, 30.0, 10000);
	format(gstr, sizeof(gstr), "%s'm(a) Achvena Licenziebi %s(s)", Name(playerid), Name(params[0]));
	SendNearText(playerid, gstr, 10.0, COLOR_PURPLE);
	return true;
}
CMD:usedrugs(playerid,params[])
{
    if(GetPVarInt(playerid, "DrugsTime") > gettime()) return senderror2(playerid, "Narkotikis Gamoyeneba Shesadzlebelia Yovel 1Wutshi Ertxel");
    if(antidouble[playerid] == true) return senderror(playerid, "Double Healme/Drugs Akrdzalulia!");
 	if(PlayerInfo[playerid][pDrug] <= 5) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Raodenobis Narkotiki");
    eAddict[playerid] = 0;
	new Float:health;
	GetPlayerHealth(playerid, health);
	health += 10;
	GameTextForPlayer(playerid, "+10HP", 5000, 1);
	if(health > 100) health = 100;
	SetPlayerHealth(playerid, health);
	new rand1 = random(5);
	PlayerInfo[playerid][pDrug] -= rand1;
	PlayerUpdateData(playerid, "pDrug", PlayerInfo[playerid][pDrug]);
	PlayerInfo[playerid][pAddict] += 2;
	PlayerUpdateData(playerid, "pAddict", PlayerInfo[playerid][pAddict]);
	Animation[playerid] = true;
    antidouble[playerid] = true;
	if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	else ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetTimerEx("drug_effect", 8000, false, "i", playerid);
	SetPVarInt(playerid, "DrugsTime", gettime()+60);
	return 1;
}
CMD:warn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "us[64]",params[0],params[1])) return sendusage(playerid, "/warn [Motamashis ID] [Reason]");
		if(!IsPlayerConnected(params[0])) return true;
		PlayerInfo[params[0]][pWarn] ++;
		PlayerInfo[params[0]][pWarnTime] = 6;
		format(gstr, sizeof(gstr), "Administratorma {ffffff}%s'm(a){FF6347} Daado Warn {ffffff}%s's{FF6347} Mizezi: {FF6347}%s",Name(playerid),Name(params[0]),params[1]);
		SendClientMessageToAll(COLOR_LIGHTRED, gstr);
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pModel] = 0;
		PlayerInfo[params[0]][pJob] = 0;
		SavePlayerData(params[0]);
		SetPlayerSkinEx(params[0]);
		SendClientMessage(params[0], COLOR_WHITE, "Tkven Dagedot Gafrtxileba");
		PlayerInfo[playerid][pAdmin_Warn] ++;
		PlayerUpdateData(playerid, "pAdmin_Warn", PlayerInfo[playerid][pAdmin_Warn]);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:unwarn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 9)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/warn [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pWarn] <= 0) return senderror(playerid, "Motamashes Ar Adevs Gafrtxileba");
		PlayerInfo[params[0]][pWarn] = 0;
		PlayerUpdateData(params[0], "pWarn", PlayerInfo[params[0]][pWarn]);
		PlayerInfo[params[0]][pWarnTime] = 0;
		PlayerUpdateData(params[0], "pWarnTime", PlayerInfo[params[0]][pWarnTime]);
		format(gstr, sizeof(gstr), "Administratorma {ffffff}%s'm(a){FF6347} Moxsna Warn {ffffff}%s's{FF6347}",Name(playerid),Name(params[0]));
		SendClientMessageToAll(COLOR_LIGHTRED, gstr);
		SavePlayerData(params[0]);
		SendClientMessage(playerid, COLOR_WHITE, "Tkven Mogexsnat Gafrtxileba");
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:warnlist(playerid)
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new countwarns = 0;
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pWarn] >= 1)
			{
			    countwarns ++;
				format(gstr, sizeof(gstr), "%s [ID: %d] | %d Warn",Name(i),i,PlayerInfo[i][pWarn]);
				SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
			}
		}
		if(countwarns == 0) return SendClientMessage(playerid, COLOR_GREY, "Arcert Motamashes Ar Adevs Warn");
		format(gstr, sizeof(gstr), "Sul: %d Motamashe", countwarns);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:boss(playerid, params[])
{
	if(KINKLA(playerid))
	{
		if(!isAlogged[playerid])
		{
  			if(AStream) SvAttachListenerToStream(AStream, playerid);
  			UpdateReportTD();
     		for(new i = 0; i < 4; i ++) TextDrawShowForPlayer(playerid, ReportTXT[i]);
      		for(new i = 0; i < 53; i++)
			{
				EnableAntiCheatForPlayer(playerid, i, 0);
			}
			PlayerInfo[playerid][pAdmin] = 10;
			isAlogged[playerid] = true;
   			format(gstr, sizeof(gstr), "<Administrator> {ffffff}%s[%d]"color_admin" Gaira Admin Avtorizacia | Level: {ffffff}%d",Name(playerid),playerid,PlayerInfo[playerid][pAdmin]);
      		SendAdminMessage(COLOR_ADMIN, gstr);
      		//SendClientMessage(playerid, 0xA7A7A7FF, "» Gaumarjos Bozz :)");
			return true;
		}
        isAlogged[playerid] = false;
	}
	else
	{
		invalidcmd(playerid);
	}
	return true;
}
CMD:addcjskin(playerid, params[])
{
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new nick1[60];
  		if(sscanf(params, "s[60]",nick1)) return sendusage(playerid, "Sheiyvanet: /addcjskin [Motamashis Saxeli]");
  		new str11[60];
  		if(CjSkinAqvs2(nick1)) return SendClientMessage(playerid, COLOR_GREY, "Tqven Mier Mititebuli Saxeli Ukve Chawerilia CJ Skinebis Siashi");
  		format(gstr, sizeof(gstr), "{BDBDBD}Administratorma: %s'm(a) Daamata Axali CJ Skin: %s!",Name(playerid),nick1);
  		SendAdminMessage(0xBDBDBDFF, gstr);
  		format(str11, sizeof(str11), "%s",nick1);
 		AddCjSkin(str11);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:removecjskin(playerid, params[])
{
    if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new nick1[60];
  		if(sscanf(params, "s[60]",nick1)) return sendusage(playerid, "/removecjskin [Motamashis Saxeli]");
  		new str11[60];
  		if(!CjSkinAqvs2(nick1)) return SendClientMessage(playerid, COLOR_GREY, "Tqven Mier Mititebuli Saxeli Araa Chawerilia CJ Skin Siashi");
  		format(gstr, sizeof(gstr), "{BDBDBD}Administratorma: %s'm(a) Moxsna CJ Skinis Siidan: %s!",Name(playerid),nick1);
  		SendAdminMessage(0xBDBDBDFF, gstr, 1);
  		format(str11, sizeof(str11), "%s",nick1);
 		RemoveCjSkin(str11);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:spikes(playerid)
{
	if(!IsACop(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 1) return senderror2(playerid, "Sachiroa Ikot 2 Rank");
	new vehx = GetPlayerVehicleID(playerid);
	if(GetPlayerVirtualWorld(playerid) != 0) return true;
	if(GetPlayerInterior(playerid) != 0) return true;
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	new string[128];
	if(!GetPVarInt(playerid,"block"))
	{
		if(ObjectShip[playerid] == FLOAT_INFINITY)
		{
			if(IsValidDynamicObject(ObjectShip[playerid])) DestroyDynamicObject(ObjectShip[playerid]);

			GetVehiclePos(vehx, X, Y, Z);
			GetVehicleZAngle(vehx, ANGLE);

			X -= (5.0 * floatsin(-ANGLE, degrees));
			Y -= (5.0 * floatcos(-ANGLE, degrees));
			Z -= 0.8;

			ObjectShip[playerid] = CreateDynamicObject(2899, X, Y, Z, 0, 0, ANGLE - 90.0);
			SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
			stringclear(string);
			format(string,sizeof(string),"{E9F43B}Ekliani Mavtulxlarti. Samartaldamcavi: %s(%i)",Name(playerid),playerid);
			ShipText[playerid] = CreateDynamic3DTextLabel(string,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		SetPVarInt(playerid,"block", true);
		sendinfo(playerid, "Tkven Daakenet Ekliani Mavrtulxlarti, Deaqtivaciisatvis Daweret /spikes");
	}
	else
	{
		DestroyDynamic3DTextLabel(ShipText[playerid]);
		if(ObjectShip[playerid] != FLOAT_INFINITY)
		{
			DestroyDynamicObject(ObjectShip[playerid]);
			ObjectShip[playerid] = 0x7F800000;
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DeletePVar(playerid,"block");
		DeletePVar(playerid,"Ships");
		sendinfo(playerid, "Ekliani Mavrtulxlarti Deaqtivirebulia");
	}
	return 1;
}
CMD:playerips(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		SendClientMessage(playerid, COLOR_YELLOW, "Motamasheebi Ucxouri IP'it");
		new string[300], ipcIP[16];
		foreach(new i:Player)
		{
   			if(!GetString(prox_Country[i], "Georgia") && isLogged[i] == true)
			{
                GetPlayerIp(i, ipcIP, 16);
				format(string, sizeof(string), "Player: %s[%d] | {bf00ff}[%s] - {ff0066}[%s] {F5DEB3}- {00b3b3}[%d]",Name(i),i, ipcIP, prox_Country[i], prox_City[i]);
				SendClientMessage(playerid, 0xF5DEB3AA, string);
			}
		}
	}
    return true;
}
CMD:getintinfo(playerid,params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
 		if(sscanf(params, "u", params[0])) return sendusage(playerid, "/getinfinfo [Motamashis ID]");
 		if(Mtavari(params[0])) senderror(playerid, "Mititebuli Motamashis Informacia Miuwvdomelia");
   		new stats[400], str[150];
 		GetPlayerNetworkStats(params[0], stats, sizeof(stats));
		format(str,sizeof(str),"[%s] - Network Stats",Name(params[0]));
  		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, str, stats, "Okay", "");
	}
	return true;
}
CMD:showpin(playerid,params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/showpin [Motamashis ID]");
		new str[128];
		format(str, sizeof(str), "Mititebuli Motamashis PinCode : %d",PlayerInfo[params[0]][pPIN]);
		SendClientMessage(playerid, COLOR_WHITE, str);
	}
	return true;
}
CMD:agetpass(playerid, params[])
{
    if(Mtavari(playerid))
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/agetpass [Motamashis Saxeli]");
		if(!Mtavari(playerid) &&
			IsDeveloperName(params[0])) return senderror(playerid, "Mititebuli Motamashis Paroli Miuwvdomelia");
		format(gstr, sizeof(gstr), "SELECT * FROM `accounts` WHERE Name = '%s'",params[0]);
		mysql_query(connect, gstr);
		new rows, password[64];
		cache_get_row_count(rows);
		if(!rows) return senderror2(playerid, "Accounti Ver Moidzebna");
		for new i = 0; i < rows; i++ do
		{
			cache_get_value_name(i, "Password", password);
		}
  		format(gstr, sizeof(gstr), "Player Name:{ffffff} %s "color_admin"| Password:{ffffff} %s",params[0],password);
		SendClientMessage(playerid, COLOR_ADMIN, gstr);
	}
	return true;
}
CMD:asetpass(playerid, params[])
{
    if(Mtavari(playerid))
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[64]s[20]",params[0],params[1])) return sendusage(playerid, "/asetpass [Motamashis Saxeli] [Paroli]");
		if(!KINKLA(playerid) &&
			IsDeveloperName(params[0])) return senderror(playerid, "Mititebuli Motamashis Paroli Miuwvdomelia");
        if(!CheckForAccount(params[0])) return senderror(playerid, "Accounti Ver Moidzebna");
		format(gstr, sizeof(gstr), "UPDATE `accounts` SET `Password` = '%s' WHERE `Name` = '%s'", params[1], params[0]);
		mysql_query(connect, gstr);
  		format(gstr, sizeof(gstr), "Player Name:{ffffff} %s "color_admin"| New Password:{ffffff} %s",params[0],params[1]);
		SendClientMessage(playerid, COLOR_ADMIN, gstr);
	}
    return true;
}
CMD:agetipkey(playerid, params[])
{
    if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/agetipkey [Motamashis Saxeli]");
		format(gstr, sizeof(gstr), "SELECT * FROM `accounts` WHERE Name = '%s'",params[0]);
		mysql_query(connect, gstr);
		new rows, password[64];
		cache_get_row_count(rows);
		if(!rows) return senderror2(playerid, "Accounti Ver Moidzebna");
		for new i = 0;i < rows; i++ do
		{
			cache_get_value_name(i, "pIPKey", password);
		}
  		format(gstr, sizeof(gstr), "Player Name:{ffffff} %s "color_admin"| IP Key:{ffffff} %s",params[0],password);
		SendClientMessage(playerid, COLOR_ADMIN, gstr);
	}
	return true;
}
CMD:spy(playerid, params[])
{
    if(PlayerInfo[playerid][pForm] == 0) return senderror2(playerid, "Tkven Ar Gakvt Am CMD's Gamoyenebis Ufleba!");
    if(PlayerInfo[playerid][pForm] != FRACTION_FBI || PlayerInfo[playerid][pRank] < 4) return true;
    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/spy [Motamashis ID]");
    if(!IsPlayerConnected(params[0])) return true;
    if(!isLogged[params[0]]) return true;
    if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror2(playerid, "Motamashe Ar Aris Shentan Axlos");
    if(PlayerInfo[params[0]][pMember] != FRACTION_FBI) return senderror2(playerid, "Mititebuli Motamashe Ar Aris Federaluri Biuros Wevri");
    SpyPlayerID[playerid] = params[0];
    ShowSkinDialog(playerid);
    return true;
}
CMD:cmenu(playerid, params[])
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return senderror(playerid, "Tkven Unda Ijdet Transportis Sachestan!");
    new listitems[] = "{ffffff}Dzravis Chartva\nDzravis Gamortva\n\nFarebis Chartva\nFarebis Gamortva\n\nKapotis Axda\nKapotis Daxurva\n\nSabarguris Gaxsna\nSabarguris Daxurva";
    ShowPlayerDialog(playerid, 57, DIALOG_STYLE_LIST, "{ffffff}Car Menu", listitems, "Select", "Close");
    return true;
}
CMD:setstat(playerid, params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new giveplayerid, stat, amount;
		if(sscanf(params, "udd",giveplayerid,stat,amount))
		{
			SendClientMessage(playerid, COLOR_WHITE, "format: /setstat [Motamashis ID] [Nomeri] [Raodenoba]");
            SendClientMessage(playerid, COLOR_WHITE, "[1] Level");
            SendClientMessage(playerid, COLOR_WHITE, "[2] EXP");
            SendClientMessage(playerid, COLOR_WHITE, "[3] Narkotiki");
			SendClientMessage(playerid, COLOR_WHITE, "[4] Medikamenti (healme)");
			SendClientMessage(playerid, COLOR_WHITE, "[5] Saati");
			SendClientMessage(playerid, COLOR_WHITE, "[6] Pasporti");
			SendClientMessage(playerid, COLOR_WHITE, "[7] Army Bileti");
			return true;
		}
		if(!IsPlayerConnected(giveplayerid)) return true;
		if(giveplayerid == INVALID_PLAYER_ID) return true;
		switch(stat)
		{
			case 1:
			{
				PlayerInfo[giveplayerid][pLevel] = amount;
				PlayerUpdateData(giveplayerid, "pLevel", PlayerInfo[giveplayerid][pLevel]);
				SetPlayerScoreEx(playerid);
				format(gstr, sizeof(gstr), "Motamashis Leveli Gaxda: %d", amount);
			}
			case 2:
			{
				GivePlayerExp(playerid, amount);
				format(gstr, sizeof(gstr), "Motamashis Exp Gaxda: %d", amount);
			}
			case 3:
			{
				PlayerInfo[giveplayerid][pDrug] = amount;
				PlayerUpdateData(giveplayerid, "pDrug", PlayerInfo[giveplayerid][pDrug]);
				format(gstr, sizeof(gstr), "Motamashis Narkotiki Gaxda: %d", amount);
			}
			case 4:
			{
			    for(new i = 0; i < amount; i ++)
			    {
			        if(i > 3) break;
					GivePlayerItem(playerid, GetItemModelById(ITEM_MEDIC));
				}
				format(gstr, sizeof(gstr), "Motamashes Gadaeca Medikamenti");
			}
			case 5:
			{
			    if(!amount)
			    {
			        PlayerInfo[giveplayerid][pWatch] = 0;
			        PlayerUpdateData(giveplayerid, "pWatch", PlayerInfo[giveplayerid][pWatch]);
			        format(gstr, sizeof(gstr), "Motamashes Waertva Saati");
			    }
			    else
				{
			        PlayerInfo[giveplayerid][pWatch] = 1;
			        PlayerUpdateData(giveplayerid, "pWatch", PlayerInfo[giveplayerid][pWatch]);
			        format(gstr, sizeof(gstr), "Motamashes Gadaeca Saati");
			    }
			}
			case 6:
			{
   				PlayerInfo[giveplayerid][pLicense][LICENSE_PASS] = 1;
       			format(gstr, sizeof(gstr), "Motamashes Gadaeca Pasporti");
			}
			case 7:
			{
   				PlayerInfo[giveplayerid][pArmyTicket] = 1;
   				PlayerUpdateData(giveplayerid, "pArmyTicket", PlayerInfo[giveplayerid][pArmyTicket]);
       			format(gstr, sizeof(gstr), "Motamashes Gadaeca Pasporti");
			}
			default: format(gstr, sizeof(gstr), "Araswori Nomeri");
		}
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:vclist(playerid, params[])
{
    if((GetTickCount() - GetPVarInt(playerid,"vclist")) <= 5000 && PlayerInfo[playerid][pAdmin] == 0) return false;
    SendClientMessage(playerid, COLOR_YELLOW, "{FF4000}Motamasheebi Voice Chatit");
    new voiceplayers, motamasheebi;
	foreach(new i:Player)
    {
        motamasheebi++;
        if(!SvGetVersion(i)) continue;
        format(gstr, sizeof(gstr), "{9FF781}- %s (ID: %d)",Name(i),i);
        SendClientMessage(playerid, COLOR_WHITE, gstr);
        voiceplayers++;
    }
	format(gstr, sizeof(gstr), "Sul %d Motamashe, Aqedan %d Voice Chatit",motamasheebi,voiceplayers);
    SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
    SetPVarInt(playerid, "vclist", GetTickCount());
    return true;
}
CMD:ids(playerid, params[])
{
    if(sscanf(params, "u",params[0])) return sendusage(playerid, "/ids [Motamashis ID]");
    if(!IsPlayerConnected(params[0])) return true;
    if(!(0 <= params[0] < MAX_PLAYERS)) return true;
    if (!SvGetVersion(params[0]))
    {
		format(gstr, sizeof(gstr), "%s - ID %d | Level %d | {4FB64F}NO VOICE {FFFFFF}+ {4FB64F}NO MICROPHONE",Name(params[0]),params[0],PlayerInfo[params[0]][pLevel]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	else if (!SvHasMicro(params[0]))
	{
		format(gstr, sizeof(gstr), "%s - ID %d | Level %d | {00FF00}VOICE {FFFFFF}+ {4FB64F}NO MICROPHONE",Name(params[0]),params[0],PlayerInfo[params[0]][pLevel]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	else
	{
		format(gstr, sizeof(gstr), "%s - ID %d | Level %d | {00FF00}VOICE {FFFFFF}+ {00FF00}MICROPHONE",Name(params[0]),params[0],PlayerInfo[params[0]][pLevel]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:checkip(playerid, params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "ud", params[0])) return sendusage(playerid, "/checkip [Motamashis ID]");
		if(params[0] == INVALID_PLAYER_ID) return senderror2(playerid, "Motamashe Ver Moidzebna!");
		new ipstr[200], ip[16];
		GetPlayerIp(playerid, ip, 16);
		format(ipstr, sizeof(ipstr), "{FFFFFF}Saxeli: {8099B5}%s\n{FFFFFF}IP Misamarti: {8099B5}%s\n{FFFFFF}Qveyana: {8099B5}%s\n{FFFFFF}Qalaqi: {8099B5}%s", Name(params[0]), ip, prox_Country[playerid], prox_City[playerid]);
		if(!strcmp(ip, "127.0.0.1")) strcat(ipstr, "\nlocalhost ip !\n");
		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{8099B5}CheckIP", ipstr, "Close", "");
	}
	return true;
}
CMD:check(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 8)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/check [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		ShowStats(playerid, params[0]);
	}
	return true;
}
CMD:checkcar(playerid, params[])
{
	if(!isLogged[playerid]) return false;
	if(DelayCMD[playerid] > gettime()) return true;
	if(sscanf(params, "s[90]",params[0])) return sendusage(playerid, "/checkcar [Motamashis ID]");
    new query[256], captionstr[128];
    format(query, sizeof(query), "SELECT * FROM `cars` WHERE Owner = '%s'",params[0]);
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
    if(!rows) return senderror(playerid, "Mititebul Motamashes Ar Kavs Transporti");
    new CarCount = 0, listCount = 0;
    for new i = 0;i < rows; i++ do
	{
        cache_get_value_name_int(i, "Model", MyCarID[playerid][CarCount]);
        CarCount ++;
    }
    for(new i = 0; i < 25; i ++) if(MyCarID[playerid][i]) listCount ++;
    new DialogStr[1056], dialogstr[100];
    DialogStr = "{F0A45D}Daarespawnet Tkveni Transporti\n";
    for(new i = 0; i < listCount; i ++)
    {
        format(dialogstr, sizeof(dialogstr), "{F0A45D}[%d] {FFFFFF}- %s\n",(i+1),GetVehicleName(MyCarID[playerid][i]));
        strcat(DialogStr, dialogstr);
    }
    format(captionstr, sizeof(captionstr), "%s Cars", params[0]);
    ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, captionstr, DialogStr, "Close", "");
    return true;
}
CMD:number(playerid, params[])
{
    if(sscanf(params, "u",params[0])) return sendusage(playerid, "/number [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!IsPlayerHavePhone(params[0])) return senderror2(playerid, "Mititebul Motamashes Ar Akvs Mobiluri Telefoni");
	if(PlayerInfo[params[0]][pNumber] == 0) return senderror2(playerid, "Mititebul Motamashes Ar Akvs SIM Barari");
	format(gstr, sizeof(gstr), "Name: %s | Phone: %d",Name(params[0]),PlayerInfo[params[0]][pNumber]);
	SendClientMessage(playerid, COLOR_WHITE, gstr);
	return true;
}
CMD:rasform(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        new captionstr[300], captstr[100];
        format(captionstr, sizeof(captionstr), "{ffffff}RasForm \n");
        for(new i = 1; i < sizeof(FractionNames); i ++)
        {
            format(captstr, sizeof(captstr), "{F0A45D}[%d] {ffffff}%s\n",i+1,FractionNames[i]);
            strcat(captionstr, captstr);
        }
        ShowPlayerDialog(playerid, 58, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}RasForm", captionstr, "Clear", "Exit");
    }
    else
    {
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
    }
    return true;
}
CMD:gnews(playerid, params[])
{
    if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
    if(IsAGov(playerid))
	{
	    if(PlayerInfo[playerid][pRank] >= FractionInfo[PlayerInfo[playerid][pMember]][frac_Ranking])
	    {
			new count_player_row = GetPVarInt(playerid,"count_row");
			new max_rows = GetPVarInt(playerid, "max_rows");
			new get_goverment_text[100];
			new set_pvar_string[15];
	       	qwerty228="";
			if(!max_rows)
			{
				if(sscanf(params,"i",params[0])) return sendusage(playerid, "/gnews [Strofebis Raodenoba]");
				if(params[0] < 1 || params[0] > 5) return SendClientMessage(playerid, -1, "1 Dan 5 Strofamde");
				SetPVarInt(playerid,"max_rows", params[0] + 1);
				SetPVarInt(playerid, "count_row", 1);
				format(qwerty228, 256, "Tqven Govistvis Gamoyavit: %d Strofi {C0C0C0}| Sheiyvanet /gnews [Strofi 1]", params[0]);
				SendClientMessage(playerid, 0x489191C8, qwerty228);
			}
			else
			{
			    if(max_rows == count_player_row)
			    {
			        SendClientMessageToAll(-1,"{C77070}=======================[ {4FB64F}GOVERNMENT NEWS{C77070} ]=======================");
			        for(new i = 1; i < max_rows; i++)
			        {
			            format(set_pvar_string, 15, "gnews%d", i);
			            GetPVarString(playerid, set_pvar_string, get_goverment_text, 100);

		      			format(qwerty228, 256, "News: %s[%d]: {ffffff}%s", Name(playerid),playerid, get_goverment_text );
						SendClientMessageToAll(GetPlayerColor(playerid), qwerty228);
			        }
					SendClientMessageToAll(-1,"{C77070}=======================[ {4FB64F}GOVERNMENT NEWS{C77070} ]=======================");
			        DeletePVar(playerid,"max_rows");
			        DeletePVar(playerid,"count_row");
			        return true;
			    }
			    format(qwerty228, 64, "Gamoiyene: /gnews [Strofi %d]",count_player_row);
			    format(set_pvar_string, 15, "gnews%d", count_player_row);
			    SetPVarString(playerid, set_pvar_string, params);
			    if(count_player_row + 1 == max_rows)
			    {
		  			format(qwerty228, 255, "Strofi %d : %s", count_player_row, params);
		    		SendClientMessage(playerid,0xD6D6D6C8, qwerty228);
			        SendClientMessage(playerid, COLOR_GREEN, "Gaimeoret CMD /gnews Rom Gaushvat Gamzadebuli Teqsti");
				}
				else
				{
		 			format(qwerty228, 255, "Strofi %d : %s {489191}| Sheiyvanet /gnews [Strofi %d]", count_player_row, params, count_player_row + 1);
		    		SendClientMessage(playerid, 0xD6D6D6C8, qwerty228);
				}
			    SetPVarInt(playerid,"count_row", count_player_row + 1);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarsi Rank Am Command's Gamosayeneblad!");
			return true;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Tqven Ver Gamoiyenebt Am Command's!");
		return true;
	}
	return true;
}
CMD:tie(playerid, params[])
{
    if(!IsAGang(playerid)) return true;
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return senderror2(playerid, "Tkven Ar Imkofebit Sachestan");
    if(PlayerInfo[playerid][pRope] == 0) return senderror2(playerid, "Tkven Ar Gakvt Toki");
    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/tie [Motamashis ID]");
    if(params[0] == INVALID_PLAYER_ID) return senderror2(playerid, "Motamashe Ver Moidzebna!");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(params[0])) return senderror2(playerid, "Motamashe Ar Imyofeba Tkvens Transportshi!");
	if(params[0] == playerid) return true;
	if(TieStatus[params[0]] == true) return senderror2(playerid, "Motamashe Ukve Dabmulia!");
	new tiestr[280];
	TieStatus[params[0]] = true;
	PlayerInfo[playerid][pRope] --;
	format(tiestr, sizeof(tiestr), "{FFFFFF}Fraction: {38AF91}%s{FFFFFF} | Motamashe: {38AF91}%s{FFFFFF}'m Dagabat Manqanashi", FractionNames[PlayerInfo[playerid][pMember]], Name(playerid));
	SendClientMessage(params[0], COLOR_WHITE, tiestr);
	format(tiestr, sizeof(tiestr), "{FFFFFF}Fraction: {38AF91}%s{FFFFFF} | Tkven Daabit Manqanashi: {38AF91}%s", FractionNames[PlayerInfo[params[0]][pMember]], Name(params[0]));
	SendClientMessage(playerid, COLOR_WHITE, tiestr);
	TogglePlayerControllable(params[0], 0);
	return true;
}
CMD:untie(playerid, params[])
{
    if(!IsAGang(playerid)) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return senderror2(playerid, "Tkven Ar Imyofebit Sachestan");
    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/untie [Motamashis ID]");
    if(params[0] == INVALID_PLAYER_ID) return senderror2(playerid, "Motamashe Ver Moidzebna!");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(params[0])) return senderror2(playerid, "Motamashe Ar Imyofeba Tkvens Transportshi!");
	if(params[0] == playerid) return true;
	if(TieStatus[params[0]] == false) return senderror2(playerid, "Motamashe Ar Aris Dabmuli!");
	new tiestr[280];
	TieStatus[params[0]] = false;
	PlayerInfo[playerid][pRope] ++;
	format(tiestr, sizeof(tiestr), "{FFFFFF}Fraction: {38AF91}%s{FFFFFF} | Motamashe: {38AF91}%s{FFFFFF}'m Mogxsnat Toki", FractionNames[PlayerInfo[playerid][pMember]], Name(playerid));
	SendClientMessage(params[0], COLOR_WHITE, tiestr);
	format(tiestr, sizeof(tiestr), "{FFFFFF}Fraction: {38AF91}%s{FFFFFF} | Tkven Moxsenit Toki: {38AF91}%s{FFFFFF}'s", FractionNames[PlayerInfo[params[0]][pMember]], Name(params[0]));
	SendClientMessage(playerid, COLOR_WHITE, tiestr);
	TogglePlayerControllable(params[0], 1);
    return true;
}
CMD:find(playerid, params[])
{
	if(!IsACop(playerid)) return true;
	if(PlayerInfo[playerid][pForm] == 0) return senderror2(playerid, "Tkven Ar Gacviat Samushao Forma!");
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/find [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPlayerInterior(params[0]) != GetPlayerInterior(playerid)) return true;
	if(PlayerInfo[params[0]][pWanted] == 0) return senderror2(playerid, "Motamashe Ar Imyofeba Dzebnashi");
	if(PhoneOnline[params[0]] > 0) return senderror2(playerid, "Motamashis AdgilMdebareobis Dadgena Ver Xerxdeba!");
	new Float: POS[3];
	GetPlayerPos(params[0], POS[0], POS[1], POS[2]);
	SetPlayerCheckpoint(playerid, POS[0], POS[1], POS[2], 2);
	return true;
}
CMD:findhouse(playerid, params[])
{
	if(PlayerInfo[playerid][pDirectory] == 0) return senderror(playerid, "Tkven Ar Gakvt Directory !");
	if(gCheckpoint[playerid] == CHECKPOINT_FINDHOUSE)
	{
		DisablePlayerCheckpoint(playerid);
	    gCheckpoint[playerid] = CHECKPOINT_NONE;
	    return true;
	}
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/findhouse [House ID]");
	SetPlayerGPS(playerid, "House", true, HouseInfo[params[0]][hPosition][0], HouseInfo[params[0]][hPosition][1], HouseInfo[params[0]][hPosition][2]);
	gCheckpoint[playerid] = CHECKPOINT_FINDHOUSE;
	return true;
}
CMD:findbiz(playerid, params[])
{
	if(PlayerInfo[playerid][pDirectory] == 0) return senderror(playerid, "Tkven Ar Gakvt Directory !");
	if(gCheckpoint[playerid] == CHECKPOINT_FINDBIZZ)
	{
		DisablePlayerCheckpoint(playerid);
	    gCheckpoint[playerid] = CHECKPOINT_NONE;
	    return true;
	}
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/findbiz [House ID]");
	SetPlayerGPS(playerid, "Bussiness", true, BizzInfo[params[0]][bEnterPos][0], BizzInfo[params[0]][bEnterPos][1], BizzInfo[params[0]][bEnterPos][2]);
	gCheckpoint[playerid] = CHECKPOINT_FINDBIZZ;
	return true;
}
CMD:wanted(playerid)
{
	if(!IsACop(playerid)) return true;
	if(PlayerInfo[playerid][pForm] == 0) return senderror2(playerid, "Tkven Ar Gacviat Samushao Forma!");
	new w_str[256], ws_str[500], counter = 0;
	strcat(ws_str, "{FFFFFF}Dzebnili\t{FFFFFF}ID\t{FFFFFF}Done\n");
    foreach(new i:Player)
	{
		if(PlayerInfo[i][pWanted] >= 1)
		{
  			format(w_str,sizeof(w_str), "%s\t%d\t%d\n",Name(i),i,PlayerInfo[i][pWanted]);
			strcat(ws_str,w_str);
			counter ++;
		}
	}
	if(counter == 0) return sendinfo(playerid, "Arcerti Motamashe Ar Imyofeba Dzebnashi!");
	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_TABLIST_HEADERS, "{CC66FF}Wanted List", ws_str, "Exit", "");
	return true;
}
CMD:aclear(playerid, params[])
{
  	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u", params[0])) return  sendusage(playerid, "/aclear [Motamashis ID]");
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] == playerid) return true;
			new string[128];
			format(string, sizeof(string), "Tkven Moxsenit Dzebnis Done %s'(s)", Name(params[0]));
			SendClientMessage(playerid, COLOR_RED, string);
			format(string, sizeof(string), "Adminitratorma %s'm(a) Mogxsnat Dzebnis Done", Name(playerid));
			SendClientMessage(params[0], COLOR_RED, string);
			PlayerInfo[params[0]][pWanted] = 0;
			SetPlayerWantedLevelEx(params[0]);
		}
	}
	else
	{
        senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:clear(playerid, params[])
{
  	if(IsACop(playerid) && IsALeader(playerid))
	{
		if(sscanf(params, "u", params[0])) return sendusage(playerid, "/clear [Motamashis ID]");
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] == playerid) return true;
			new string[128];
			format(string, sizeof(string), "Tkven Moxsenit Dzebnis Done %s'(s)", Name(params[0]));
			SendClientMessage(playerid, COLOR_RED, string);
			format(string, sizeof(string), "Officerma %s'm(a) Mogxsnat Dzebnis Done", Name(playerid));
			SendClientMessage(params[0], COLOR_RED, string);
			PlayerInfo[params[0]][pWanted] = 0;
			SetPlayerWantedLevelEx(params[0]);
		}
	}
	return true;
}
CMD:ban(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
  		if(sscanf(params, "uds[64]",params[0],params[1],params[2])) return sendusage(playerid, "/ban [Motamashis ID] [Dge 1-10] [Mizezi]");
		if(1 > params[1] < 10) return senderror2(playerid, "Dgeebis Odenoba Unda Ikos 1'dan 10'mde !");
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pAdmin] != 0) return senderror2(playerid, "Mititebuli Motamashe Administratoria");
		BanPlayer(Name(params[0]), Name(playerid), params[1], params[2]);
		format(gstr, sizeof(gstr), "Administratorma {ffffff}%s'm(a){FF6347} Daado Bani {ffffff}%s'(s){FF6347} Mizezi: {FF6347}%s(%day)",Name(playerid),Name(params[0]),params[2],params[1]);
		SendClientMessageToAll(COLOR_LIGHTRED, gstr);
		format(log, sizeof(log), "%s Daado Bani Motamashe: %s | %s",Name(playerid), Name(params[0]), params[2]);
		CreateLog("Ban.txt", log);
		PlayerInfo[playerid][pAdmin_Ban] ++;
		PlayerUpdateData(playerid, "pAdmin_Ban", PlayerInfo[playerid][pAdmin_Ban]);
	}
	return true;
}
CMD:offban(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[90]s[60]",params[0],params[1])) return sendusage(playerid, "/offban [Motamashis Saxeli] [Mizezi]");
		format(gstr, sizeof(gstr),"SELECT `Name` FROM `accounts` WHERE Name = '%s'",params[0]);
		mysql_query(connect, gstr);
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror2(playerid, "Account Ver Moidzebna");
		BanPlayer(params[0], Name(playerid), 3, params[2]);
		format(gstr, sizeof(gstr), "<OffBan> %s'm(a) Daado: %s", Name(playerid), params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
		format(log, sizeof(log), "[OffBan] %s Daado Bani Motamashe: %s | %s",Name(playerid), params[0], params[1]);
		CreateLog("Ban.txt", log);
		PlayerInfo[playerid][pAdmin_Ban] ++;
		PlayerUpdateData(playerid, "pAdmin_Ban", PlayerInfo[playerid][pAdmin_Ban]);
	}
	return true;
}
CMD:offleader(playerid, params[])
{
	if(GovTester(playerid) || GhettoTester(playerid) || MafiaTester(playerid) || PlayerInfo[playerid][pAdmin] >= 9)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[90]",params[0])) return sendusage(playerid, "/offleader [Motamashis Saxeli]");

		new sql_str[300];
		format(sql_str, sizeof(sql_str),"SELECT `Name` FROM `accounts` WHERE Name = '%s' LIMIT 1", params[0]);
		mysql_query(connect, sql_str);
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror(playerid, "Motamashe Ver Moidzebna!");

		format(sql_str, sizeof(sql_str), "UPDATE accounts SET pMember = '0', pRank = '0', pDuty = '0', pModel = '0' WHERE Name = '%s' LIMIT 1", params[0]);
		mysql_query(connect,sql_str);

		format(gstr, sizeof(gstr), "Administratorma {ffffff}%s'm(a){FF6347} Moxsna Leaderis Postidan {ffffff}%s", Name(playerid), params[0]);
		SendAdminMessage(COLOR_LIGHTRED, gstr);
	}
	return true;
}
CMD:unban(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
  		if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/unban [Motamashis ID]");
        if(!IsPlayerBanned(params[0])) return senderror2(playerid, "Mititebul Motamashes Ar Adevs Bani");
        UnBanPlayer(params[0]);
		BanPlayer(Name(params[0]), Name(playerid), params[1], params[2]);
		format(log, sizeof(log), "%s Moxsna Bani Motamashe: %s",Name(playerid), Name(params[0]));
		CreateLog("UnBan.txt", log);
		format(gstr, sizeof(gstr), "<UnBan> %s'm(a) Moxsna: %s", Name(playerid), params[0]);
		SendAdminMessage(COLOR_YELLOW, gstr);
	}
	return true;
}
CMD:givevip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 9)
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "udd",params[0],params[1], params[2])) return sendusage(playerid, "/givevip [Motamashis ID] [0-3] [Dgeebis Raodenoba]");
		if(params[1] < 0 || params[1] > 5) return senderror2(playerid, "VIP'is Ranki Unda Iyos 0 Dan 5 Mde");
		if(params[2] < 1) return senderror2(playerid, "Dgeebis Raodenoba Unda Iyos 1 An 1'ze Meti");
		if(!IsPlayerConnected(params[0])) return true;
		new year, month,day;
		getdate(year, month, day);
		if(params[1] >= 1 && params[1] <= 5)
		{
			PlayerInfo[params[0]][pDonateRank] = params[1];
			PlayerInfo[params[0]][pVipTime] = getdate()+params[2];
		}
		else if(params[1] == 0)
		{
			PlayerInfo[params[0]][pDonateRank] = 0;
			PlayerInfo[params[0]][pVipTime] = 0;
		}
		format(gstr, sizeof(gstr), "{F78181}Administratorma %s Misca %s's - {4FB64F}[VIP LVL]:{F78181} %d. %d - Dgit",Name(playerid),Name(params[0]),params[1], params[2]);
		SendClientMessage(playerid, 0xFF0000AA, gstr);
		PlayerUpdateData(params[0], "pDonateRank", PlayerInfo[params[0]][pDonateRank]);
		PlayerUpdateData(params[0], "pVipTime", PlayerInfo[params[0]][pVipTime]);
	}
	return true;
}
CMD:takevip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 9)
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
 		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/takevip [Motamashis ID]");
        if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pDonateRank] == 0) return senderror2(playerid, "Motamashes Ar Akvs VIP");
		PlayerInfo[params[0]][pDonateRank] = 0;
		PlayerInfo[params[0]][pVipTime] = 0;
		format(gstr, sizeof(gstr), "{F78181}Administratorma %s Waartva VIP %s's",Name(playerid),Name(params[0]));
 		SendAdminMessage(COLOR_WHITE, gstr, 9);
		PlayerUpdateData(params[0], "pDonateRank", PlayerInfo[params[0]][pDonateRank]);
		PlayerUpdateData(params[0], "pVipTime", PlayerInfo[params[0]][pVipTime]);
	}
	return true;
}
CMD:viprespawn(playerid, params[])
{
    if(PlayerInfo[playerid][pDonateRank] < 2) return senderror2(playerid, "Tkven Ar Xart Silver VIP!");
    if(PlayerInfo[playerid][pCash] < 5000) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa, Sachiroa: 5.000$");
	SpawnPlayer(playerid);
	PlayerInfo[playerid][pCash] -= 5000;
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	GameTextForPlayer(playerid,"~r~-5000$", 3000, 1);
	format(log_str, sizeof(log_str), "%s'm(a) gaaketa vip respawn - gadaixada 5000", Name(playerid));
	CreateLog("Money", log_str);
	return true;
}
CMD:vipskin(playerid, params[])
{
    if(PlayerInfo[playerid][pDonateRank] < 4) return senderror2(playerid, "Tkven Ar Xart Crystal VIP!");
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/vipskin [Skin ID]");
    if(params[0] == 74) return true;
    if(params[0] == 0) return SetPlayerSkinEx(playerid);
	if(params[0] > 299 || params[0] < 1) return SendClientMessage(playerid, COLOR_WHITE, "Araswori Skin ID");
	SetPlayerSkin(playerid, params[0]);
	return true;
}
CMD:vc(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] >= 4 || PlayerInfo[playerid][pAdmin] > 0)
	{
	    if(!vipchat) return senderror2(playerid, "VIP Chat Gamortulia Administraciis Mier");
 		if(DelayChat[playerid] > gettime()) return true;
    	if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
		if(sscanf(params, "s[100]",params[0])) return sendusage(playerid, "/vc [Text]");
		new v_chat[256];
		format(v_chat, sizeof(v_chat), "<> VIP-CHAT <> %s[%d]: {FFFFFF}%s",Name(playerid),playerid,params[0]);
		SendAdminMessage(0xF3705FAA, v_chat);
		SendVipMessage(0xF3705FAA, v_chat);
		DelayChat[playerid] = gettime()+2;
	}
	else
	{
	    senderror2(playerid, "Tkven Ar Xart Crystal VIP");
	}
	return true;
}
CMD:vunprison(playerid)
{
    if(PlayerInfo[playerid][pDonateRank] < 5) return senderror2(playerid, "Tkven Ar Xart Titan VIP!");
	if(PlayerInfo[playerid][pPrison] == 0) return senderror2(playerid, "Tkven Ar Imyofebit Cixeshi!");
	if(PlayerInfo[playerid][pPrisonTime] > 600) return senderror2(playerid, "Tkven Gakvt Darchenili 10Wutze Meti Da Ver Gaxvalt Cixidan!");
	if(PlayerInfo[playerid][pCash] < 250000) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa, Sachiroa: 250.000$");
	if(PlayerInfo[playerid][pPrison] == 1)
	{
		PlayerInfo[playerid][pPrison] = 0;
		PlayerUpdateData(playerid, "pPrison", PlayerInfo[playerid][pPrison]);
		PlayerInfo[playerid][pPrisonTime] = 0;
		PlayerUpdateData(playerid, "pPrisonTime", PlayerInfo[playerid][pPrisonTime]);
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Tkven Gamoxvedit Cixidan - {63BD4E}250.000$");
		format(log_str, sizeof(log_str), "%s'm(a) gamoikena vip unprison - gadaixada : 250.000", Name(playerid));
		CreateLog("Money", log_str);
		SpawnPlayer(playerid);
		return true;
	}
	return true;
}
CMD:vunmute(playerid)
{
    if(PlayerInfo[playerid][pDonateRank] < 3) return sendusage(playerid, "Tkven Ar Xart Gold VIP!");
	if(PlayerInfo[playerid][pMute] == 0) return sendusage(playerid, "Tkven Ar Gadevt Chatis Bani!");
	PlayerInfo[playerid][pMute] = 0;
	PlayerUpdateData(playerid, "pMute", PlayerInfo[playerid][pMute]);
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerUpdateData(playerid, "pMuteTime", PlayerInfo[playerid][pMuteTime]);
	format(gstr, sizeof(gstr), "{4FB64F}[VIP] {F78181}%s'm(a) Moixsna Chatis Bani",Name(playerid));
	SendClientMessageToAll(COLOR_LIGHTRED, gstr);
	SendClientMessage(playerid, COLOR_WHITE, "Tqven Mogexsnat Chatis Bani");
	return true;
}
CMD:vipnitro(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] >= 3)
	{
		new vehid = GetPlayerVehicleID(playerid);
		if(AraqvsNitro(vehid))
		{
			AddVehicleComponent(vehid, 1010);
		}
	}
	else
	{
	 	senderror2(playerid, "Tkven Ar Xart Gold VIP!");
 	}
 	return true;
}
CMD:vipmus(playerid, params[])
{
	if(PlayerInfo[playerid][pDonateRank] >= 3)
	{
		ShowPlayerDialog(playerid, 1221, DIALOG_STYLE_LIST, "Radio", "{ffa500}+{FFFFFF} Radio Tbilisi\n{ffa500}+{FFFFFF} Radio Energy\n{ffa500}+{FFFFFF} Georgian Radio", "Chartva", "Gatishva");
    }
    else
    {
        senderror2(playerid, "Tkven Ar Xart Gold VIP!");
    }
	return true;
}
CMD:viplist(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] > 3)
    {
    	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	}
	else
	{
	    if(PlayerInfo[playerid][pDonateRank] == 0) return senderror2(playerid, "Tkven Ar Xart VIP Motamashe!");
	}
    SendClientMessage(playerid, COLOR_YELLOW, "{FF4000}VIP Motamasheebi");
    foreach(new i:Player)
    {
        if(PlayerInfo[i][pDonateRank] < 1) continue;
        format(gstr, sizeof(gstr), "%s (ID: %d) | VIP: %s",Name(i),i,GetVIPName(PlayerInfo[i][pDonateRank]));
        SendClientMessage(playerid, COLOR_YELLOW, gstr);
    }
    return true;
}
CMD:cmd(playerid, params[])
{
    ShowCommands(playerid);
	return true;
}
CMD:directory(playerid, params[])
{
    if(PlayerInfo[playerid][pDirectory] == 0) return senderror2(playerid, "Tkven Ar Gakvt Directory Misi Shedzena Shegidzliat Nebismier 24/7 Market'shi !");
    ShowPlayerDialog(playerid, 63, DIALOG_STYLE_LIST, "{ffffff}Directory", "{ffffff}[1] Advokatebi\n[2] Liderebi\n[3] Dilerebi\n[4] Eqimebi", "Search", "Exit");
	return true;
}
CMD:fare(playerid)
{
    new Veh = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Taksisti");
	if(TransportDuty[playerid] == 1)
	{
	    TaxiPassenger[playerid] = -1;
		TransportDuty[playerid] = 0;
		SendClientMessage(playerid, 0x6BB3FFAA, "Tkven Daasrulet Samushao Dge");
		return true;
	}
	if(Veh >= TaxiCar[0] && Veh <= TaxiCar[6])
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Tqven Unda Iyot Manqanis Rulze");
		TransportDuty[playerid] = 1;
		SendClientMessage(playerid, 0x6BB3FFAA, "Tkven Daiwket Samushao Dge");
	}
 	else if(Veh >= TaxiCar[7] && Veh <= TaxiCar[10])
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Tqven Unda Iyot Manqanis Rulze");
		TransportDuty[playerid] = 1;
		SendClientMessage(playerid, 0x6BB3FFAA, "Tkven Daiwket Samushao Dge");
	}
	return true;
}
CMD:accept(playerid, params[])
{
    if(sscanf(params, "s[32]", params[0])) return sendusage(playerid, "/accept [Value]");
    if(IsPlayerConnected(playerid))
    {
		if(!strcmp(params[0], "taxi"))
		{
			if(PlayerInfo[playerid][pJob] != 2) return true;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			if(TransportDuty[playerid] == 0) return senderror2(playerid, "Tkven Ar Xart Taksisti");
            if(TaxiCall == INVALID_PLAYER_ID) return senderror2(playerid, "Am Momentshi Araa Gamodzaxebebi");
            format(gstr, sizeof(gstr), "[Dispatcher]{ECECEC} Tkven Miiget Gamodzaxeba {80B59B}%s",Name(playerid));
            SendClientMessage(playerid, 0x8099B5FF, gstr);
            format(gstr, sizeof(gstr), "[Phone]{ECECEC} Tkveni Gamodzaxeba Miggo Taksistma {80B59B}%s{ECECEC} Daelodet Amave Adgilas",Name(playerid));
            SendClientMessage(TaxiCall, 0x5DADE2FF, gstr);

			new Float:x, Float:y, Float:z;
			GetPlayerPos(TaxiCall, x, y, z);
			SetPlayerCheckpoint(playerid, x, y, z, 5.0);
			gCheckpoint[playerid] = CHECKPOINT_TAXI;
            TaxiPassenger[playerid] = TaxiCall;

            TaxiCall = INVALID_PLAYER_ID;
            return true;
        }
       	if(!strcmp(params[0], "ticket"))
		{
		    if(TicketOffer[playerid] == -1) return senderror2(playerid, "Tkven Ar Gakvt Gadasaxdeli Jarima!");
		    if(PlayerInfo[playerid][pCash] < TicketMoney[playerid]) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Raodenobis Tanxa!");
		    PlayerInfo[playerid][pCash] -= TicketMoney[playerid];
		    PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		    PlayerInfo[TicketOffer[playerid]][pCash] += TicketMoney[playerid];
		    PlayerUpdateData(TicketOffer[playerid], "pCash", PlayerInfo[TicketOffer[playerid]][pCash]);
		    format(log_str, sizeof(log_str), "%s'm(a) gadaixada jarima : %d", Name(playerid),TicketMoney[playerid]);
			CreateLog("Money", log_str);
			new str[10];
			format(str, sizeof(str), "~r~-%d$", TicketMoney[playerid]);
		    GameTextForPlayer(playerid, str, 1000, 1);
		   	format(str, sizeof(str), "~g~+%d$", TicketMoney[playerid]);
		    GameTextForPlayer(TicketOffer[playerid], str, 1000, 1);
		    TicketOffer[playerid] = -1;
		    TicketMoney[playerid] = 0;
		    return true;
		}
 		if(!strcmp(params[0], "marriage"))
		{
		    if(!IsAChurch(playerid)) return sendinfo(playerid, "Tkven Ar Xart Eklesiastan");
		    if(ProposeOffer[playerid] == -1) return senderror2(playerid, "Tkventvis Aravis Utxovia Xeli");
            if(IsPlayerConnected(ProposeOffer[playerid]))
            {
                ProposeOffer[playerid] = -1;
                return true;
            }
            new string[156];
			format(string, sizeof(string), "Tqven Datanxmdit Motamashes %s", Name(ProposeOffer[playerid]));
			SendClientMessage(playerid, 0x6BB3FFAA, string);
			format(string, sizeof(string), "%s Datanxmda Colobas.", Name(playerid));
			SendClientMessage(ProposeOffer[playerid], 0x6BB3FFAA, string);
			SetString(PlayerInfo[playerid][pMarry], Name(ProposeOffer[playerid]));
			PlayerUpdateDataString(playerid, "pMarry", PlayerInfo[playerid][pMarry]);
			SetString(PlayerInfo[ProposeOffer[playerid]][pMarry], Name(playerid));
			PlayerUpdateDataString(ProposeOffer[playerid], "pMarry", PlayerInfo[ProposeOffer[playerid]][pMarry]);
			PlayerInfo[ProposeOffer[playerid]][pCash] -= 100000;
			PlayerUpdateData(ProposeOffer[playerid], "pCash", PlayerInfo[ProposeOffer[playerid]][pCash]);
			ProposeOffer[ProposeOffer[playerid]] = -1;
			ProposeOffer[playerid] = -1;
			SetPlayerQuest(ProposeOffer[playerid], QUEST_PROPOSE);
			SetPlayerQuest(playerid, QUEST_PROPOSE);
		    return true;
		}
        else
        {
            senderror2(playerid, "Brdzaneba Arasworia");
        }
	}
	return true;
}
CMD:donates(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
    	ShowDonates(playerid);
	}
	return true;
}
CMD:report(playerid, params[])
{
    if(GetPVarInt(playerid, "AntiReportFlood") > gettime()) return senderror2(playerid, "Reportis Gagzavna Shegidzliat 2-Wutshi Ertxel !");
    ShowReportDialog(playerid);
	return true;
}
CMD:fightstyle(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/fstyle [0-3]");
	if(params[0] < 0 || params[0] > 3) return sendusage(playerid, "/fstyle [0-3]");
	switch(params[0])
	{
	    case 0:
	    {
   			SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
			SendClientMessage(playerid, -1, color_pretty_blue"Archeulia:{ffffff} Chveulebrivi Stili");
			return true;
	    }
	    case 1:
	    {
	    	if(PlayerInfo[playerid][pFightSkill][0] < 250) return SendClientMessage(playerid, COLOR_WHITE, "Tqven Ar Gaqvt Sheswavlili Am Chxubis Stili");
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	        SendClientMessage(playerid, -1, color_pretty_blue"Archeulia:{ffffff} Boqsis Stili");
	        return true;
	    }
	   	case 2:
	    {
	        if(PlayerInfo[playerid][pFightSkill][2] < 250) return SendClientMessage(playerid, COLOR_WHITE, "Tqven Ar Gaqvt Sheswavlili Am Chxubis Stili");
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
	        SendClientMessage(playerid, -1, color_pretty_blue"Archeulia:{ffffff} Kick Box Stili");
	        return true;
	    }
	   	case 3:
	    {
	        if(PlayerInfo[playerid][pFightSkill][1] < 250) return SendClientMessage(playerid, COLOR_WHITE, "Tqven Ar Gaqvt Sheswavlili Am Chxubis Stili");
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	        SendClientMessage(playerid, -1, color_pretty_blue"Archeulia:{ffffff} Kung-Fu Stili");
	        return true;
	    }
	}
	return true;
}
CMD:adddev(playerid, params[])
{
    if(KINKLA(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/adddev [Name]");
		new sql_str[200];
		format(sql_str, sizeof(sql_str), "INSERT INTO `developer` (`Name`) VALUES ('%s')",params[0]);
		mysql_query(connect, sql_str);
		format(sql_str, sizeof(sql_str), "New Developer Added: "color_admin"%s",params[0]);
		SendClientMessage(playerid, -1, sql_str);
	}
    else senderror(playerid, "Tkven Ar Gakvt Amis Ufleba !");
	return true;
}
CMD:removedev(playerid, params[])
{
    if(KINKLA(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[128]",params[0])) return sendusage(playerid, "/removedev [Name]");
		new sql_str[200];
		format(sql_str, sizeof(sql_str), "SELECT `Name` FROM `developer` WHERE Name = '%s'",params[0]);
		mysql_query(connect, sql_str);
		new rows;
		cache_get_row_count(rows);
		if(!rows) return senderror2(playerid, "Developeri Ver Moidzebna");
  		format(sql_str, sizeof(sql_str), "DELETE FROM `developer` WHERE `Name` = '%s'",params[0]);
    	mysql_query(connect, sql_str);
		format(sql_str, sizeof(sql_str), "Developer Removed: "color_admin"%s",params[0]);
		SendClientMessage(playerid, -1, sql_str);
	}
    else senderror(playerid, "Tkven Ar Gakvt Amis Ufleba !");
	return true;
}
CMD:eat(playerid, params[])
{
	for(new i = 1; i <= TotalBizz; i ++)
 	{
    	if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bBar][0], BizzInfo[i][bBar][1], BizzInfo[i][bBar][2])) continue;
        if(GetPlayerVirtualWorld(playerid) == i+22)
        {
        	ShowPlayerMarket(playerid, i, BizzInfo[i][bType]);
         	return true;
       	}
  	}
	return true;
}
CMD:cure(playerid, params[])
{
	if(sscanf(params, "u",params[0])) return SendClientMessage(playerid, -1, "/cure [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return true;
	if(!IsNearPlayer(playerid, params[0], 5.0)) return senderror(playerid, "Motamashe Ar Imyofeba Tkventan Axlos");
	if(KnockStatus[playerid] == true) return true;
	if(KnockStatus[params[0]] == false) return senderror(playerid, "Motamashes Ar Chirdeba Daxmareba");
	ApplyAnimation(playerid, "BOMBER", "BOM_PLANT_LOOP", 4.1, 0, 0, 0, 0, 0, 0);
	SetTimerEx("CureKnockPlayer", 1500, false, "ii", playerid, params[0]);
	SetPVarInt(playerid, "CMDFlood", gettime()+2);
	return true;
}
CMD:setboombox(playerid, params[])
{
	if(BoomBoxID[playerid] != -1)
	{
	    new bbid = BoomBoxID[playerid];
	    if(!IsPlayerInRangeOfPoint(playerid, 3.0, BoomBoxData[bbid][bb_Position][0], BoomBoxData[bbid][bb_Position][1], BoomBoxData[bbid][bb_Position][2]))
	        return senderror2(playerid, "Ar Xart BoomBox'tan Axlos");
	    ShowPlayerDialog(playerid, 2099, DIALOG_STYLE_INPUT, "{ffffff}Boom-Box", "{ffffff}- Chaweret Musikis Linki Romelic Chairtveba BoomBox'shi", "Chartva", "Daxurva");
    }
    else
    {
        senderror2(playerid, "Tkven Ar Dagidgiat BoomBox");
	}
	return true;
}
CMD:restartserver(playerid, params[])
{
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		SendRconCommand("gmx");
	}
	return true;
}
CMD:fight(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 6.0, 765.1197, 11.2571, 1000.7075)) return senderror2(playerid, "Ar Xart Sabrdzolo Arenastan Axlos");
	if(FightData[fight_Busy]) return senderror2(playerid, "Am Momentshi Ver Shedzlebt Chxubs");
    if(sscanf(params, "u", params[0])) return sendusage(playerid, "/fight [Motamashis ID]");
    if(!IsPlayerConnected(params[0])) return true;
    if(playerid == params[0]) return true;
    if(!IsPlayerInRangeOfPoint(params[0], 6.0, 765.1197, 11.2571, 1000.7075)) return senderror2(playerid, "Mititebuli Motamashe Ar Aris Sabrdzolo Arenastan Axlos");
    if(FightOffer[playerid] == params[0]) return senderror2(playerid, "Tkven Ukve Gagzavnili Gakvt Motxovna");
    if(FightOffer[playerid] != -1)
    {
        FightOffer[FightOffer[playerid]] = -1;
        FightOffer[playerid] = -1;
    }
	FightOffer[playerid] = params[0];
	FightOffer[params[0]] = playerid;
	format(gstr, sizeof(gstr), "- Tkven Shestavazet {EC7063}%s'(s){ffffff} Chxubi | Daelodet Pasuxs",Name(params[0]));
	SendClientMessage(playerid, -1, gstr);
	format(gstr, sizeof(gstr), "- %s{ffffff} Gtavazobt Chxubs",Name(playerid));
	SendClientMessage(params[0], 0xEC7063FF, gstr);
	SendClientMessage(params[0], -1, "Tu Gsurt Chxubi Daachiret {EC7063}Y's{ffffff} Tu Ar Gsurt Daachiret {EC7063}N's");
	return true;
}
CMD:laulist(playerid)
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new sampplayers = 0, launcherplayers = 0, lau_str[100];
		foreach(new i:Player)
		{
			if(GetLauncherStatus(i)) launcherplayers += 1;
			else if(!GetLauncherStatus(i)) sampplayers += 1;
		}
		format(lau_str, sizeof(lau_str), "Serverze Amjamad Tamashobs - {FFFFFF}%d {B94040}Launcher Player {ffffff}| %d{06963C} SA:MP Player", launcherplayers, sampplayers);
		SendClientMessage(playerid, COLOR_LIGHTRED, lau_str);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:lau(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/lau [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	new lau_str[80];
	format(lau_str, sizeof(lau_str), "[Launcher]:{ffffff} Launcher %s",GetLauncherStatus(playerid)?"{32a83e}Akvs":"{FF9900}Ar Akvs");
	SendClientMessage(playerid, COLOR_GREEN, lau_str);
	return true;
}
CMD:withdraw(playerid, params[])
{
   	if(!IsABank(playerid)) return senderror2(playerid,"Tkven Ar Immyofebit Bankis Teritoriaze");
   	CheckPlayerBankPinCode(playerid);
	if(sscanf(params, "d", params[0])) return sendusage(playerid,"/withdraw [Tanxis Raodenoba]");
	if(params[0] < 50 || params[0] > 1000000) return senderror2(playerid, "Minimum 50$ / Max 1.000.000$");
	if(PlayerInfo[playerid][pBank] < params[0]) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Raodenobis Fuli Bankis Angarishze");
	new sakomisio = params[1]*6;
	new sakomisio1 = sakomisio/100;
	new sakomisio2 = floatround(sakomisio1, floatround_floor);
	//
	PlayerInfo[playerid][pCash] += params[0]-sakomisio2;
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	PlayerInfo[playerid][pBank] -= params[0];
	PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
	format(log_str, sizeof(log_str), "%s'm(a) gamoitana bankidan tanxa : %d", Name(playerid),params[0]);
	CreateLog("Money", log_str);
	
	SavePlayerData(playerid);
	new string[250];
	format(string, sizeof(string), "[Information]: {ffffff}Tkven Moxsenit Taxna Bank Angarishidan : %d$ | Nashti: {ffffff}%d$",params[0], PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	return true;
}
CMD:bank(playerid, params[])
{
    if(!IsABank(playerid)) return senderror2(playerid,"Tkven Ar Immyofebit Bankis Teritoriaze");
   	CheckPlayerBankPinCode(playerid);
	if(sscanf(params, "d", params[0])) return sendusage(playerid,"/bank [Tanxa]");
	if(PlayerInfo[playerid][pCash] < params[0]) return senderror2(playerid, "Ar Gaqvt Sakmarisi Raodenobis Fuli");
	if(params[0] > 1000000 || params[0] < 50) return senderror2(playerid, "Minimum 50$ / Max 1.000.000$");
	new string[250];
	SendClientMessage(playerid, COLOR_WHITE, "{F0A45D}-----------------------===[ Bank Check ]===-----------------------");
	format(string, sizeof(string), "[Information]: {ffffff}Dzveli Balansi: %d$", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	PlayerInfo[playerid][pCash] -= params[0];
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	PlayerInfo[playerid][pBank] += params[0];
	PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
	format(log_str, sizeof(log_str), "%s'm(a) sheitana bankshi tanxa : %d", Name(playerid),params[0]);
	CreateLog("Money", log_str);
	format(string, sizeof(string), "[Information]: {ffffff}Tkven Gadaitanet Bank Angarishze: %d$", params[0]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), "[Information]: {ffffff}Axali Balansi: %d$", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SavePlayerData(playerid);
	return true;
}
CMD:transfer(playerid, params[])
{
   	if(!IsABank(playerid)) return senderror2(playerid,"Tkven Ar Immyofebit Bankis Teritoriaze");
   	CheckPlayerBankPinCode(playerid);
	if(sscanf(params, "ud", params[0],params[1])) return sendusage(playerid,"/transfer [ID Motamashis] [Tanxa]");
	if (!IsPlayerConnected(params[0])) return true;
	if(!isLogged[params[0]]) return senderror2(playerid, "Motamashes Jer Ar Gauvlia Avtorizacia, Scadet Mogvianebit");
	new string[250];
    if(params[1] > 0 && PlayerInfo[playerid][pBank] >= params[1])
	{
		PlayerInfo[playerid][pBank] -= params[1];
		PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
		PlayerInfo[params[0]][pBank] += params[1];
		PlayerUpdateData(params[0], "pBank", PlayerInfo[params[0]][pBank]);
		format(string, sizeof(string), "[Bank Transfer]: {ffffff}Tqven Gadauricxet Motamashes %s Tanxa %d$", Name(params[0]), params[1]);
		SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "[Bank Transfer]: {ffffff}%s Gadmogiricxat %d$ Tqvens Angarishze",Name(playerid),params[1]);
		format(log_str, sizeof(log_str), "%s'm(a) gadauricxa tanxa %s's | tanxa : %d", Name(playerid),Name(params[0]),params[1]);
		CreateLog("Money", log_str);
		SendClientMessage(params[0], COLOR_GREEN, string);
		PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
		SavePlayerData(playerid);
		SavePlayerData(params[0]);
	}
	else
	{
	    senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Raodenobis Tanxa Bankshi");
	}
	return true;
}
CMD:buygun(playerid)
{
    if(!IsGunPoint(playerid)) return senderror2(playerid, "Tkven Ar Xart Iaraghis Maghaziashi");
    new DialogString[512];
	for (new i = 0; i < sizeof(GunData); i++)
    {
        format(DialogString, sizeof(DialogString), "%s%d. %s - $%d tito tyvia\n", DialogString, i+1, GunData[i][GunName], GunData[i][GunPrice]);
    }
    ShowPlayerDialog(playerid, DIALOG_GUNSHOP, DIALOG_STYLE_LIST, "Los Santos Guns", DialogString, "Select", "Close");
    return true;
}
CMD:election(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(ElectionON == 0)
		{
			ElectionON = 1;
        	SendClientMessageToAll(COLOR_WHITE, "Tardeba: {0099CC}Los Santos Merobis{FFFFFF} Archevnebi");
			SendClientMessageToAll(COLOR_WHITE, "Tkveni Rcheuli Kandidatistvis Xmis Micemas Shedzlebt: {0099CC}Meriis Shenobashi !");
			mysql_query(connect, "UPDATE accounts SET pElections = '0' WHERE pElections = '1'");
		}
		else
		{
			ElectionON = 0;
			SendClientMessageToAll(COLOR_WHITE, "{FFFFFF}Dasrulda: {0099CC}Los Santos Merobis{FFFFFF} Archevnebi");
			SendClientMessageToAll(COLOR_WHITE, "Ramdenime Wutshi Gaigebt Tu Vin Gaxda: {0099CC}Los Santos'is Meri");
		}
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:archevnebi(playerid)
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new teststr[350];
		format(teststr, sizeof(teststr), "{FFFFFF}?\t{FFFFFF}Saxeli\t{FFFFFF}Partia\t{FFFFFF}Xmebi\n%d\t%s\t%s\t%d\n%d\t%s\t%s\t%d\n%d\t%s\t%s\t%d", ElectionInfo[0][eNumber], ElectionInfo[0][eName], ElectionInfo[0][eParty], ElectionInfo[0][eVoices], ElectionInfo[1][eNumber], ElectionInfo[1][eName], ElectionInfo[1][eParty], ElectionInfo[1][eVoices],
		ElectionInfo[2][eNumber], ElectionInfo[2][eName], ElectionInfo[2][eParty], ElectionInfo[2][eVoices]);
		ShowPlayerDialog(playerid, 3333, DIALOG_STYLE_TABLIST_HEADERS, "{8FD73F}Election{FFFFFF} | Choose Candidate", teststr, "Select", "Close");
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:divorce(playerid)
{
	if(!strcmp(PlayerInfo[playerid][pMarry], "-")) return SendClientMessage(playerid, COLOR_GREY, "Tkven Ar Xart Daqorwinebuli");
	SendClientMessage(playerid, COLOR_GREY, "Tkven Ganqorwindit Tkveni Meuglisagan");
	ClearMarriage(playerid);
	return true;
}
CMD:propose(playerid, params[])
{
    if(!IsAChurch(playerid)) return senderror2(playerid, "Tqven Ar Shegidzlia Am CMD's, Radgan Tqven Ar Imyofebit Eklesiashi");
    if(!GetString(PlayerInfo[playerid][pMarry], "-")) return senderror2(playerid, "Tqven Ukve Gyavt Mewyvile");
	if(PlayerInfo[playerid][pCash] < 100000) return senderror2(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa! Sachiroa 100.000$");
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/propose [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return true;
	if(!GetString(PlayerInfo[params[0]][pMarry], "-")) return senderror2(playerid, "Mititebul Motamashes Ukve Yavs Mewyvile");
	if(!IsNearPlayer(playerid, params[0], 7.0)) return senderror2(playerid, "Mititebuli Motamashe Araa Axlos");
	if(PlayerInfo[playerid][pSex] == PlayerInfo[params[0]][pSex]) return senderror2(playerid, "Ert Sqesianta Qorwineba Akrdzalulia");
	format(gstr, sizeof(gstr), "Tqven Txovet Xeli: %s'(s)",Name(params[0]));
	SendClientMessage(playerid, 0xFF0000AA, gstr);
	format(gstr, sizeof(gstr), "%s'm(a) {ffffff} Gtxovat Xeli {45B55B}( /accept marriage - Tanxmoba )",Name(playerid));
	SendClientMessage(params[0], 0xFF0000AA, gstr);
	ProposeOffer[params[0]] = playerid;
	return true;
}
CMD:ahpanel(playerid, params[])
{
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/ahpanel [House ID]");
		if(!(0 <= params[0] < TotalHouse)) return senderror2(playerid, "Araswori Saxlis ID!");
        ShowHousePanel(playerid, params[0]);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:getbizstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/getbizstats [Biznesis ID]");
		if(!(0 <= params[0] < TotalBizz)) return senderror2(playerid, "Araswori Biznesis ID!");
		ShowBizzStats(playerid, params[0]);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:asellbiz(playerid, params[])
{
	if(Mtavari(playerid))
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "d",params[0])) return sendusage(playerid, "/asellbiz [Biznesis ID]");
		if(!(0 <= params[0] < TotalBizz)) return senderror2(playerid, "Araswori Biznesis ID!");
		if(BizzInfo[params[0]][bOwned] == 0) return sendinfo(playerid, "Bizness Ar Yavs Mflobeli");
		if(GetPlayerID(HouseInfo[params[0]][hOwner]) != INVALID_PLAYER_ID)
		{
		    new id = GetPlayerID(BizzInfo[params[0]][bOwner]);
			PlayerInfo[id][pBizz] = 255;
		 	SendClientMessage(id, COLOR_GREY, "*{ffffff} Tkveni Biznesi Gaikida Administraciis Mier");
		 	PlayerUpdateData(id, "pBizz", PlayerInfo[id][pBizz]);
		}
		else
		{
			format(gstr, sizeof(gstr), "UPDATE accounts SET pBizz = '0' WHERE Name = '%s'", BizzInfo[params[0]][bOwner]);
			mysql_query(connect, gstr);
		}
		BizzInfo[params[0]][bLock] = 1;
		BizzInfo[params[0]][bOwned] = 0;
		SetString(BizzInfo[params[0]][bOwner], "For Sale");
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pBizz] == params[0])
			{
			    PlayerInfo[i][pBizz] = 0;
			    PlayerUpdateData(i, "pBizz", PlayerInfo[i][pBizz]);
			}
		}
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:bizlist(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new count_items = 1;
		new string[1096];
		string[0] = EOS;
		for(new h = 1; h <= TotalBizz; h++)
		{
			format(string, sizeof(string), "%s%d. %s\n", string, count_items, BizzInfo[h][bName]);
			count_items++;
		}
		if(count_items == 1) senderror2(playerid, "Biznesebi Ver Moizebna");
		else ShowPlayerDialog(playerid, 82, DIALOG_STYLE_LIST, "Bussiness List", string, "Select", "Back");
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:setbproducts(playerid, params[])
{
	if(Mtavari(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 10)
		{
		    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
			if(sscanf(params, "dd",params[0],params[1])) return sendusage(playerid, "/setbproducts [Biznesi] [Produqtebi]");
			BizzInfo[params[0]][bProducts] = params[1];
			SaveBizzData(params[0]);
			SendClientMessage(playerid, COLOR_WHITE, "Produqtebi Dayenda");
		}
	}
	return true;
}
CMD:vmenu(playerid, params[])
{
	new string[300], str[80];
	string = "{ffffff}Graphics Card:\t{ffffff}Status:\n";
	for(new i = 0; i < MAX_VIDEO_CARDS; i ++)
	{
		format(str, sizeof(str), "{52BE80}(%i){ffffff} %s\t%s%s\n",i+1,GetVideoCardName(PlayerInfo[playerid][pVideoCardType][i]),GetVideoCardStatusColors(PlayerInfo[playerid][pVideoCardStatus][i]),GetVideoCardStatus(PlayerInfo[playerid][pVideoCardStatus][i]));
		strcat(string, str);
	}
	if(IsABank(playerid)) strcat(string, "{52BE80}(4){ffffff} Exchange");
	ShowPlayerDialog(playerid, 88, DIALOG_STYLE_TABLIST_HEADERS, "{52BE80}Graphics Card{ffffff} | Menu", string, "Select", "Close");
	return true;
}
CMD:astats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
 	{
 	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "u", params[0])) return sendusage(playerid, "/astats [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
  		new string[300], str[80];
  		format(str, sizeof(str), "\n{ffffff}Admin Name:{58d68d} %s\n\n",Name(params[0]));
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Played Time:{58d68d} %s\n",Convert(PlayerInfo[params[0]][pAdmin_PlayedTime]));
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Report Answer:{58d68d} %d\n",PlayerInfo[params[0]][pAdmin_ReportAnswer]);
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Muted Players:{58d68d} %d\n",PlayerInfo[params[0]][pAdmin_Mute]);
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Prisoned Players:{58d68d} %d\n",PlayerInfo[params[0]][pAdmin_Prison]);
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Warned Players:{58d68d} %d\n",PlayerInfo[params[0]][pAdmin_Warn]);
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Banned Players:{58d68d} %d\n",PlayerInfo[params[0]][pAdmin_Ban]);
  		strcat(string, str);
  		format(str, sizeof(str), "{ffffff}Kicked Players:{58d68d} %d\n\n",PlayerInfo[params[0]][pAdmin_Kick]);
  		strcat(string, str);
     	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{58d68d}Admininstator |{ffffff} Stats", string, "Close", "");
	}
	return true;
}
CMD:resetstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 9)
 	{
 	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    format(gstr, sizeof(gstr), "UPDATE accounts SET pAdmin_PlayedTime = '0', pAdmin_Mute = '0', pAdmin_Prison = '0', pAdmin_Ban = '0', pAdmin_ReportAnswer = '0', pAdmin_Kick = '0' WHERE pAdmin >= '1'");
		mysql_query(connect,gstr);
		foreach(new i:Player)
		{
			PlayerInfo[i][pAdmin_PlayedTime] = 0;
			PlayerUpdateData(i, "pAdmin_PlayedTime", PlayerInfo[i][pAdmin_PlayedTime]);
			PlayerInfo[i][pAdmin_Mute] = 0;
			PlayerUpdateData(i, "pAdmin_Mute", PlayerInfo[i][pAdmin_Mute]);
			PlayerInfo[i][pAdmin_Prison] = 0;
			PlayerUpdateData(i, "pAdmin_Prison", PlayerInfo[i][pAdmin_Prison]);
			PlayerInfo[i][pAdmin_Warn] = 0;
			PlayerUpdateData(i, "pAdmin_Warn", PlayerInfo[i][pAdmin_Warn]);
			PlayerInfo[i][pAdmin_Ban] = 0;
			PlayerUpdateData(i, "pAdmin_Ban", PlayerInfo[i][pAdmin_Ban]);
			PlayerInfo[i][pAdmin_ReportAnswer] = 0;
			PlayerUpdateData(i, "pAdmin_ReportAnswer", PlayerInfo[i][pAdmin_ReportAnswer]);
			PlayerInfo[playerid][pAdmin_Kick] = 0;
			PlayerUpdateData(playerid, "pAdmin_Kick", PlayerInfo[playerid][pAdmin_Kick]);
		}
		format(gstr, sizeof(gstr), "Administratorma {58d68d}%s'm(a){ffffff} Gaanula Admininistrator Statistic",Name(playerid));
		SendAdminMessage(COLOR_WHITE, gstr, 6);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:awarn(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
     	if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "us[256]",params[0],params[1])) return sendusage(playerid, "/awarn [Motamashis ID] [Mizezi]");
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pAdmin] <= 0) return senderror2(playerid, "Mititebuli Motamashe Ar Aris Administratori!");
	    PlayerInfo[params[0]][pAdminWarning] ++;
		if(PlayerInfo[params[0]][pAdminWarning] >= 3)
		{
			format(gstr, sizeof(gstr), "[A] {ffffff}%s'm(a)"color_admin" Moxsna Administratoris Postidan: {ffffff}%s [%d/3] [Reason: %s]", Name(playerid), Name(params[0]), PlayerInfo[params[0]][pAdminWarning], params[1]);
			SendAdminMessage(COLOR_ADMIN, gstr);
		    for(new t; t < 4; t++) TextDrawHideForPlayer(params[0], ReportTXT[t]);
   			PlayerInfo[params[0]][pAdmin] = 0;
			PlayerUpdateData(params[0], "pAdmin", PlayerInfo[params[0]][pAdmin]);
			PlayerInfo[params[0]][pAdmin_PlayedTime] = 0;
			PlayerUpdateData(params[0], "pAdmin_PlayedTime", PlayerInfo[params[0]][pAdmin_PlayedTime]);
			PlayerInfo[params[0]][pAdmin_Mute] = 0;
			PlayerUpdateData(params[0], "pAdmin_Mute", PlayerInfo[params[0]][pAdmin_Mute]);
			PlayerInfo[params[0]][pAdmin_Prison] = 0;
			PlayerUpdateData(params[0], "pAdmin_Prison", PlayerInfo[params[0]][pAdmin_Prison]);
			PlayerInfo[params[0]][pAdmin_Warn] = 0;
			PlayerUpdateData(params[0], "pAdmin_Warn", PlayerInfo[params[0]][pAdmin_Warn]);
			PlayerInfo[params[0]][pAdmin_Ban] = 0;
			PlayerUpdateData(params[0], "pAdmin_Ban", PlayerInfo[params[0]][pAdmin_Ban]);
			PlayerInfo[params[0]][pAdmin_ReportAnswer] = 0;
			PlayerUpdateData(params[0], "pAdmin_ReportAnswer", PlayerInfo[params[0]][pAdmin_ReportAnswer]);
		 	PlayerInfo[playerid][pAdmin_Kick] = 0;
		  	PlayerUpdateData(playerid, "pAdmin_Kick", PlayerInfo[playerid][pAdmin_Kick]);
  			PlayerInfo[params[0]][pAdminWarning] = 0;
			PlayerUpdateData(params[0], "pAdminWarning", PlayerInfo[params[0]][pAdminWarning]);
			return true;
		}
		format(gstr, sizeof(gstr), "[A] {ffffff}%s'm(a)"color_admin" Misca Gafrtxileba Administrators: {ffffff}%s [%d/3] [Reason: %s]", Name(playerid), Name(params[0]), PlayerInfo[params[0]][pAdminWarning], params[1]);
		SendAdminMessage(COLOR_ADMIN, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:aunwarn(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 9)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/aunwarn [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		if(PlayerInfo[params[0]][pAdmin] <= 0) return senderror(playerid, "Mititebuli Motamashe Ar Aris Administratori!");
		if(PlayerInfo[params[0]][pAdminWarning] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "Mititebuli Administrators Ar Aqvs Gafrtxileba");
	    PlayerInfo[params[0]][pAdminWarning] --;
		PlayerUpdateData(params[0], "pAdminWarning", PlayerInfo[params[0]][pAdminWarning]);
		format(gstr, sizeof(gstr), "[A] {ffffff}%s'm(a) "color_admin"Waushala Gafrtxilebis {ffffff}Administrators: %s [%d/3]", Name(playerid), Name(params[0]), PlayerInfo[params[0]][pAdminWarning]);
		SendAdminMessage(COLOR_ADMIN, gstr);
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:apanel(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		new items[][] = {"Unbal All", "Unban IP All", "Unprison All", "Unwarn All", "Unmute All", "Goverment Tester ", "Ghetto Tester", "Mafia Tester", "Boost2X", "Capture"};
		new string[600], str[64];
		for(new i = 0; i < sizeof items; i ++)
		{
		    if(strfind(items[i], "Goverment", true) != -1)
		    {
		        format(str, sizeof(str), color_admin"[%d] -{ffffff} %s - {f5b041}%s\n",i+1,items[i],GetTesterName("GovTester"));
		    }
		    else if(strfind(items[i], "Ghetto", true) != -1)
		    {
		        format(str, sizeof(str), color_admin"[%d] -{ffffff} %s - {f5b041}%s\n",i+1,items[i],GetTesterName("GhettoTester"));
		    }
		    else if(strfind(items[i], "Mafia", true) != -1)
		    {
		        format(str, sizeof(str), color_admin"[%d] -{ffffff} %s - {f5b041}%s\n",i+1,items[i],GetTesterName("MafiaTester"));
		    }
		    else if(strfind(items[i], "Boost", true) != -1)
		    {
		        format(str, sizeof(str), color_admin"[%d] -{ffffff} %s - %s\n",i+1,items[i],(Boost2X==1?("{F04245}Gamortuli") :("{3cb371}Chartuli")));
		    }
		    else if(strfind(items[i], "Capture", true) != -1)
		    {
		        format(str, sizeof(str), color_admin"[%d] -{ffffff} %s - %s\n",i+1,items[i],(ghettoon==0?("{F04245}Gamortuli") :("{3cb371}Chartuli")));
		    }
			else
			{
				format(str, sizeof(str), color_admin"[%d] -{ffffff} %s\n",i+1,items[i]);
			}
			strcat(string, str);
		}
		ShowPlayerDialog(playerid, 79, DIALOG_STYLE_LIST, color_admin"Admin{ffffff} | Panel", string, "Select", "Close");
	}
	else
	{
	    senderror(playerid, ADMIN_ERROR_MESSAGE_1);
	}
	return true;
}
CMD:endlesson(playerid, params[])
{
	if(Player_Passed_Exam[playerid])
	{
	    PlayerScore[playerid] = 0;
	    PlayerIncorrectAnswers[playerid] = 0;
	    Player_Passed_Exam[playerid] = 0;
		sendinfo(playerid, "Tkven Daasrulet Gamocda");
		if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
	}
	return true;
}
CMD:adminip(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[60]s[24]",params[0],params[1])) return sendusage(playerid, "/adminip [Motamashis Saxeli] [IP Address]");
		if(AdminIP(params[1])) return senderror2(playerid, "Tqven Mier Mititebuli IP Ukve Chawerilia Adminis IP'ebshi");
		new ips[80], names[90];
		format(ips, 80, "%s",params[1]);
		format(names, 90, "%s",params[0]);
		format(gstr, sizeof(gstr), "Tkven Chaamatet Axali IP:{ffffff} %s | %s",names,ips);
		SendClientMessage(playerid, COLOR_GREY, gstr);
		AddAdminIP(names, ips);
	}
	return true;
}
CMD:adminipoff(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "s[60]",params[0])) return sendusage(playerid, "/adminip [IP Address]");
		if(AdminIP(params[1])) return senderror2(playerid, "Tqven Mier Mititebuli IP Ukve Chawerilia Adminis IP'ebshi");
		new ips[80];
		format(ips, 80, "%s",params[0]);
		format(gstr, sizeof(gstr), "Tkven Amoshalet IP:{ffffff} %s",ips);
		SendClientMessage(playerid, COLOR_GREY, gstr);
		RemAdminIP(ips);
	}
	return true;
}
CMD:vcon(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 10)
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        vipchat = !vipchat;
        format(gstr, sizeof(gstr), "Tkven %s{ffffff} VIP Chati", vipchat?"{2ecc71}Chartet":"{e74c3c}Gatishet");
        SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:gallcoin(playerid, params[])
{
 	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "d",params[0])) return sendusage(playerid, "/gallcoin [Raodenoba]");
	    foreach(new i:Player)
	    {
	        PlayerInfo[i][pGcoin] += params[0];
	        PlayerUpdateData(i, "pGcoin", PlayerInfo[i][pGcoin]);
	    }
	    format(gstr, sizeof(gstr), "[Genuine-RP] {7ED6B1}%s{ffffff}'m(a) Gadasca Kvela Motamashe's {ff0000}%d {ffffff}G-COIN",Name(playerid),params[0]);
		SendClientMessageToAll(COLOR_LIGHTRED, gstr);
	}
    return true;
}
CMD:gallcash(playerid, params[])
{
	if(KINKLA(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "d",params[0])) return sendusage(playerid, "/gallcash [Raodenoba]");
	    foreach(new i:Player)
	    {
	        PlayerInfo[i][pCash] += params[0];
	        PlayerUpdateData(i, "pCash", PlayerInfo[i][pCash]);
	        format(log_str, sizeof(log_str), "%s'm(a) dauriga kvela motamashes | tanxa : %d", Name(playerid),params[0]);
			CreateLog("Money", log_str);
	    }
	    format(gstr, sizeof(gstr), "[Genuine-RP] {7ED6B1}%s{ffffff}'m(a) Gadasca Kvela Motamashe's {ff0000}%d {ffffff}Tanxa",Name(playerid),params[0]);
		SendClientMessageToAll(COLOR_LIGHTRED, gstr);
	}
    return true;
}
CMD:setlimit(playerid, params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "dd",params[0],params[1])) return sendusage(playerid, "/setlimit [ID] [Raodenoba]");
     	if(!(0 <= params[0] <= 20000)) return senderror2(playerid, "Araswori Limitis ID");
		SetModelCount(params[0], params[1]);
	}
	return true;
}
CMD:givecar(playerid, params[])
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    if(sscanf(params, "ud",params[0],params[1])) return sendusage(playerid, "/givecar [Motamashis ID] [Transportis ID]");
		if(!IsPlayerConnected(params[0])) return true;
     	if((!(400 <= params[1] <= 611)) && (!(12300 <= params[1]  <= 12380))) return senderror(playerid, "Tkven Miutitet Transportis Araswori ID!");
		GivePlayerCar(params[0], params[1]);
		format(gstr, sizeof(gstr), "Tkven Miecit {7dcea0}%s'(s){ffffff} Transporti {7dcea0} %s (%d)",Name(params[0]),GetVehicleName(params[1]),params[1]);
		SendClientMessage(playerid, COLOR_WHITE, gstr);
		format(gstr, sizeof(gstr), "Administratorma {7dcea0}%s'm(a){ffffff} Gadmogcat Transporti {7dcea0} %s (%d)",Name(playerid),GetVehicleName(params[1]),params[1]);
		SendClientMessage(params[0], COLOR_WHITE, gstr);
	}
	return true;
}
CMD:gettrailer(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 10.0, 1338.7609,-857.5486,39.3473) && GetVehicleTrailer(GetPlayerVehicleID(playerid)) && TrailerJob[playerid] == true && TvirtisSaxeoba[playerid] == 1)
    {
		if(PlayerInfo[playerid][pTrailerJob] == 20)
		{
			PlayerInfo[playerid][pGcoin] += 5;
	        PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
	        sendinfo(playerid,"Shen Sheasrule Me-20 Davaleba Da Gadmogeca 5 G-Coin");
	        PlayerInfo[playerid][pTrailerJob] = 0;
	        PlayerUpdateData(playerid, "pTrailerJob", PlayerInfo[playerid][pTrailerJob]);
	    }
        SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
        if(GetLauncherStatus(playerid))
		{
			PlayerInfo[playerid][pCash] += 15000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		}
		else
		{
			PlayerInfo[playerid][pCash] += 10000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		}
        PlayerInfo[playerid][pTrailerJob] += 1;//xelfasi
        TvirtisSaxeoba[playerid] = 0;
        Aigotvirti[playerid] = false;
    	DisablePlayerCheckpoint(playerid);
        sendinfo(playerid, "Tqven Miitanet Tvirti Shegidzliat Aigot Axali Shekveta!");
        sendinfo(playerid, "Tkven Gamoimushavet Am Tvirtis Safasuri : 80.000{4AC444}$");
        sendinfo(playerid, "Tu Tamashobt Launcher'it Gadmogecemat : 120.000{4AC444}$");
       	GameTextForPlayer(playerid,"~w~1.000.000 $", 5000, 1);
       	SetPVarInt(playerid, "StopFlood", 300);
       	ShowPlayerDialog(playerid,INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "","","","");
       	format(log_str, sizeof(log_str), "[TRUNCK] Motamashe %s'm(a) Chaabara Datvirtuli Trailer [LOS SANTOS]", Name(playerid));
		CreateLog("TrailerLog.txt", log_str);
       	TrailerLimit -= 1;

    }
    if(IsPlayerInRangeOfPoint(playerid, 10.0, 327.4458,865.4194,20.4063) && GetVehicleTrailer(GetPlayerVehicleID(playerid)) && TrailerJob[playerid] == true && TvirtisSaxeoba[playerid] == 2)
    {
		if(PlayerInfo[playerid][pTrailerJob] == 20)
		{
			PlayerInfo[playerid][pGcoin] += 5;
	        PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
	        sendinfo(playerid,"Shen Sheasrule Me-20 Davaleba Da Gadmogeca 5 G-Coin");
	        PlayerInfo[playerid][pTrailerJob] = 0;//xelfasi
	        PlayerUpdateData(playerid, "pTrailerJob", PlayerInfo[playerid][pTrailerJob]);
	    }
        SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
        if(GetLauncherStatus(playerid))
		{
			PlayerInfo[playerid][pCash] += 15000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		}
		else
		{
			PlayerInfo[playerid][pCash] += 10000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		}
        PlayerInfo[playerid][pTrailerJob] += 1;//xelfasi
        TvirtisSaxeoba[playerid] = 0;
        Aigotvirti[playerid] = false;
    	DisablePlayerCheckpoint(playerid);
        sendinfo(playerid, "Tqven Miitanet Tvirti Shegidzliat Aigot Axali Shekveta!");
        sendinfo(playerid, "Tkven Gamoimushavet Am Tvirtis Safasuri : 80.000{4AC444}$");
        sendinfo(playerid, "Tu Tamashobt Launcher'it Gadmogecemat : 120.000{4AC444}$");
        GameTextForPlayer(playerid,"~w~800.000 $", 5000, 1);
        SetPVarInt(playerid, "StopFlood", 300);
        ShowPlayerDialog(playerid,INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "","","","");
        format(log_str, sizeof(log_str), "[TRUNCK] Motamashe %s'm(a) Chaabara Datvirtuli Trailer [SHAXTA]", Name(playerid));
		CreateLog("TrailerLog.txt", log_str);
        TrailerLimit -= 1;
    }
    if(IsPlayerInRangeOfPoint(playerid, 10.0, 2790.9324,-2093.3979,11.4421) && GetVehicleTrailer(GetPlayerVehicleID(playerid)) && TrailerJob[playerid] == true && TvirtisSaxeoba[playerid] == 3)
    {
		if(PlayerInfo[playerid][pTrailerJob] == 20)
		{
			PlayerInfo[playerid][pGcoin] += 5;
	        PlayerUpdateData(playerid, "pGcoin", PlayerInfo[playerid][pGcoin]);
	        sendinfo(playerid,"Shen Sheasrule Me-20 Davaleba Da Gadmogeca 5 G-Coin");
	        PlayerInfo[playerid][pTrailerJob] = 0;//xelfasi
	        PlayerUpdateData(playerid, "pTrailerJob", PlayerInfo[playerid][pTrailerJob]);
	    }
        SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
        if(GetLauncherStatus(playerid))
		{
			PlayerInfo[playerid][pCash] += 15000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		}
		else
		{
			PlayerInfo[playerid][pCash] += 10000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
		}
        PlayerInfo[playerid][pTrailerJob] += 1;//xelfasi
        TvirtisSaxeoba[playerid] = 0;
        Aigotvirti[playerid] = false;
    	DisablePlayerCheckpoint(playerid);
        sendinfo(playerid, "Tqven Miitanet Tvirti Shegidzliat Aigot Axali Shekveta!");
        sendinfo(playerid, "Tkven Gamoimushavet Am Tvirtis Safasuri : 80.000{4AC444}$");
        sendinfo(playerid, "Tu Tamashobt Launcher'it Gadmogecemat : 120.000{4AC444}$");
        GameTextForPlayer(playerid,"~w~1.000.000 $", 5000, 1);
        SetPVarInt(playerid, "StopFlood", 300);
        ShowPlayerDialog(playerid,INVALID_DIALOG_ID, DIALOG_STYLE_LIST, "","","","");
        format(log_str, sizeof(log_str), "[TRUNCK] Motamashe %s'm(a) Chaabara Datvirtuli Trailer [LOS SANTOS 2]", Name(playerid));
		CreateLog("TrailerLog.txt", log_str);
        TrailerLimit -= 1;
	}
	return true;
}
CMD:fixlimit(playerid)
{
	if(Mtavari(playerid))
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
	    TrailerLimit = 3;
	}
 	return true;
}
CMD:cblock(playerid, params[])
{
    if(Mtavari(playerid))
	{
		if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u",params[0])) return sendusage(playerid, "/cblock [Motamashis ID]");
		if(!IsPlayerConnected(params[0])) return true;
		switch(PlayerInfo[params[0]][pCasinoBlock])
		{
		    case 0: PlayerInfo[params[0]][pCasinoBlock] = 1, format(gstr, sizeof(gstr), "[Casino Block]:{ffffff} Motamashe %s'(s) Daedo Casino Block", Name(params[0]));
		    default: PlayerInfo[params[0]][pCasinoBlock] = 0, format(gstr, sizeof(gstr), "[Casino Block]:{ffffff} Motamashe %s'(s) Moexsna Casino Block", Name(params[0]));
		}
		SendClientMessage(playerid, 0x69C6B1AA, gstr);
        PlayerUpdateData(params[0], "pCasinoBlock", PlayerInfo[params[0]][pCasinoBlock]);
	}
	return true;
}
CMD:awarnlist(playerid)
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new countwarns = 0;
		foreach(new i:Player)
		{
			if(PlayerInfo[i][pAdminWarning] >= 1 && PlayerInfo[i][pAdmin] >= 1 && IsPlayerConnected(i))
			{
				format(gstr, sizeof(gstr), "%s [ID: %d] | %d Gafrtxileba",Name(i),i,PlayerInfo[i][pAdminWarning]);
				SendClientMessage(playerid, COLOR_LIGHTRED, gstr);
				countwarns++;
			}
		}
		if(countwarns == 0) SendClientMessage(playerid, COLOR_WHITE, "Arcert Administrators Ar Adevs Warn");
	}
	return true;
}
CMD:moxsna(playerid)
{
	for(new i = 0; i < 10; i ++)
	{
 		RemovePlayerAttachedObject(playerid, 0);
	    RemovePlayerAttachedObjectEx(playerid, 0);
	}
	return true;
}
CMD:fmenu(playerid, params[])
{
	if(p_family_id == 0) return senderror2(playerid, "Ar Xart Arcert Familyshi");
	if(!strcmp(FamilyInfo[p_family_id][fLeader], Name(playerid)))
	{
        ShowPlayerFamilyMenu(playerid);
	}
	else
	{
	    senderror2(playerid, "Ar Xart Familyis Lideri");
	}
	return true;
}
CMD:fam(playerid, params[])
{
	if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror2(playerid, "Tkven Ar Imyofebit Arcert Familyshi");
	if(PlayerInfo[playerid][pMute] == 1) return SendMuteMessage(playerid);
	if(DelayChat[playerid] > gettime()) return true;
 	if(sscanf(params, "s[128]", params[0])) return sendusage(playerid, "/f(amily) [Text]");
	new familychat[150];
	format(familychat, sizeof(familychat), "%s[Family - %s] {FFFFFF}%s: %s", p_family_color2, FamilyInfo[p_family_id][fName], Name(playerid), params[0]);
	SendFamilyMessage(PlayerInfo[playerid][pFamilyMember], COLOR_WHITE, familychat);
	DelayChat[playerid] = gettime()+2;
    return true;
}
CMD:fleave(playerid)
{
	if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror2(playerid, "Tkven Ar Imyofebit Arcert Familyshi");
	if(PlayerInfo[playerid][pFamilyRank] == 6) return senderror2(playerid, "Tkven Ar Gakvt Familys Datovebis Ufleba");
	new leavestr[200];
	format(leavestr, sizeof(leavestr), "{ffffff}Family - %s%s{FFFFFF} | %s%s'm(a)FFFFFF Datova Family Tavisive Survilit", p_family_color2,FamilyInfo[p_family_id][fName], p_family_color2,Name(playerid));
	SendFamilyMessage(p_family_id, COLOR_WHITE, leavestr);
	PlayerInfo[playerid][pFamilyMember] = 0;
	PlayerUpdateData(playerid, "pFamilyMember", PlayerInfo[playerid][pFamilyMember]);
	PlayerInfo[playerid][pFamilyRank] = 0;
	PlayerUpdateData(playerid, "pFamilyRank", PlayerInfo[playerid][pFamilyRank]);
	RemovePlayerFamilyStatus(playerid);
	return true;
}
CMD:fgiverank(playerid, params[])
{
	if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror2(playerid, "Tkven Ar Imyofebit Arcert Familyshi");
	if(PlayerInfo[playerid][pFamilyRank] < 5) return senderror2(playerid, "Tkven Ar Gakvt Am Funkciis Gamoyenebis Ufleba!");
    if(sscanf(params, "ud", params[0], params[1])) return sendusage(playerid, "/fgiverank [Motamashis ID] [Rank]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return true;
	if(PlayerInfo[playerid][pFamilyMember] != PlayerInfo[params[0]][pFamilyMember]) return senderror2(playerid, "Motamashe Ar Imyofeba Tkvens Familyshi!");
    if(PlayerInfo[params[0]][pFamilyRank] == 6) return senderror2(playerid, "Am Motamashes Ver Sheucvlit Ranks!");
	if(params[1] < 1 || params[1] > 5)
	{
		sendinfo(playerid, "Minimum: 1 / Maximum: 5");
		return true;
	}
	PlayerInfo[params[0]][pFamilyRank] = params[1];
	PlayerUpdateData(params[0], "pFamilyRank", PlayerInfo[params[0]][pFamilyRank]);
	new rankstr[200];
	format(rankstr, sizeof(rankstr), "Family - %s%s{FFFFFF} | Tkven Miecit Rank Motamashes: %s%s / %d", p_family_color2, FamilyInfo[p_family_id][fName], p_family_color2, Name(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, rankstr);
	format(rankstr, sizeof(rankstr), "Family - %s%s{FFFFFF} | %s%s{FFFFFF}'m(a) Mogcat Rank: %d", p_family_color2, FamilyInfo[p_family_id][fName], p_family_color2, Name(playerid), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, rankstr);
	return true;
}
CMD:funinvite(playerid, params[])
{
	if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror2(playerid, "Tkven Ar Imyofebit Arcert Familyshi!");
    if(PlayerInfo[playerid][pFamilyRank] < 5) return senderror2(playerid, "Tkven Ar Gakvt Am Funkciis Gamoyenebis Ufleba!");
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/finvite [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return true;
	if(PlayerInfo[playerid][pFamilyMember] != PlayerInfo[params[0]][pFamilyMember]) return senderror2(playerid, "Motamashe Ar Imyofeba Tkvens Familyshi!");
	new uninvitestr[200];
	format(uninvitestr, sizeof(uninvitestr), "Family - %s%s{FFFFFF} | Tkven Gaagdet Familydan: %s%s", p_family_color2, FamilyInfo[p_family_id][fName], p_family_color2, Name(params[0]));
	SendClientMessage(playerid, COLOR_WHITE, uninvitestr);
	format(uninvitestr, sizeof(uninvitestr), "Family - %s%s{FFFFFF} | %s%s{FFFFFF}'m(a) Gagagdot Familydan", p_family_color2, FamilyInfo[p_family_id][fName], p_family_color2, Name(playerid));
	SendClientMessage(params[0], COLOR_WHITE, uninvitestr);
	PlayerInfo[params[0]][pFamilyMember] = 0;
	PlayerUpdateData(params[0], "pFamilyMember", PlayerInfo[params[0]][pFamilyMember]);
	PlayerInfo[params[0]][pFamilyRank] = 0;
	PlayerUpdateData(params[0], "pFamilyRank", PlayerInfo[params[0]][pFamilyRank]);
	RemovePlayerFamilyStatus(params[0]);
	return true;
}
CMD:finvite(playerid, params[])
{
	if(PlayerInfo[playerid][pFamilyMember] == 0) return senderror2(playerid, "Tkven Ar Imyofebit Arcert Familyshi!");
	if(PlayerInfo[playerid][pFamilyRank] < 5) return senderror2(playerid, "Tkven Ar Gakvt Am Funkciis Gamoyenebis Ufleba!");
	if(sscanf(params, "u", params[0])) return sendusage(playerid, "/finvite [Motamashis ID]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return true;
	if(PlayerInfo[params[0]][pFamilyMember] > 0) return senderror2(playerid, "Motamashe Ukve Imyofeba Family'shi!");
	if(IsPlayerInAnyVehicle(params[0])) return senderror2(playerid, "Motamashe Imyofeba Transportshi!");
    if(!IsNearPlayer(playerid, params[0], 7.0)) return senderror2(playerid, "Mititebuli Motamashe Araa Axlos");
	if(InviteStatus[params[0]] == true) return senderror2(playerid, "Am Motamashes Ukve Shestavazes Familyshi Gawevrianeba!");
	InviteStatus[params[0]] = true;
	InviterID[params[0]] = playerid;
	new invitestr[200];
	format(invitestr, sizeof(invitestr), "Family - %s%s{FFFFFF} | Tkven Shestavazet Familyshi Gawevrianeba: %s%s", p_family_color2, FamilyInfo[p_family_id][fName], p_family_color2, Name(params[0]));
	SendClientMessage(playerid, COLOR_WHITE, invitestr);
	format(invitestr, sizeof(invitestr), "Family - %s%s{FFFFFF} | %s%s{FFFFFF}'m(a) Shemogtavazat Family'shi Gawevrianeba", p_family_color2, FamilyInfo[p_family_id][fName], p_family_color2, Name(playerid));
	SendClientMessage(params[0], COLOR_WHITE, invitestr);
	SendClientMessage(params[0], COLOR_WHITE, "Dasatanxmeblad Daachiret: {009933}Y{FFFFFF}'s / Uaryofistvis Daachiret: {AE433D}N{FFFFFF}'s");
	return true;
}
CMD:addmansion(playerid, params[])
{
    if(Mtavari(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(sscanf(params, "d", params[0],params[1])) return sendusage(playerid, "/addmansion [Price]");
        if(!params[0] || params[0] > 15000000 || params[0] < 10000) return sendinfo(playerid, "Mansion Fasi Unda Ikos 10.000$ dan 15.000.000$ mde !");
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
		for(new i = 1; i < MAX_MANSION; i ++)
		{
		    if(MansionInfo[i][mID] == 0)
		    {
				new query[90];
				format(query, sizeof(query), "INSERT INTO `mansion` (`mID`) VALUES ('%d')",i);
				mysql_query(connect, query);
                MansionInfo[i][mID] = i;
                MansionInfo[i][mFamily] = 0;
                MansionUpdateData(i, "mFamily", MansionInfo[i][mFamily]);
                MansionInfo[i][mOwned] = 0;
                MansionUpdateData(i, "mOwned", MansionInfo[i][mOwned]);
                MansionInfo[i][mPrice] = params[0];
                MansionUpdateData(i, "mPrice", MansionInfo[i][mPrice]);
                MansionInfo[i][mLock] = 0;
                MansionUpdateData(i, "mLock", MansionInfo[i][mLock]);
      			MansionInfo[i][mEnterPos][0] = x;
      			MansionUpdateDataFloat(i, "mEnterPos0", MansionInfo[i][mEnterPos][0]);
      			MansionInfo[i][mEnterPos][1] = y;
      			MansionUpdateDataFloat(i, "mEnterPos1", MansionInfo[i][mEnterPos][1]);
      			MansionInfo[i][mEnterPos][2] = z;
      			MansionUpdateDataFloat(i, "mEnterPos2", MansionInfo[i][mEnterPos][2]);
      			MansionInfo[i][mExitPos][0] = -830.588;
      			MansionUpdateDataFloat(i, "mExitPos0", MansionInfo[i][mExitPos][0]);
      			MansionInfo[i][mExitPos][1] = 1117.55;
      			MansionUpdateDataFloat(i, "mExitPos1", MansionInfo[i][mExitPos][1]);
      			MansionInfo[i][mExitPos][2] = 1497.16;
      			MansionUpdateDataFloat(i, "mExitPos2", MansionInfo[i][mExitPos][2]);
      			MansionInfo[i][mExitPos][3] = 0;
      			MansionUpdateDataFloat(i, "mExitPos3", MansionInfo[i][mExitPos][3]);
      			
				MansionInfo[i][mEnterPickup] = CreateDynamicPickup(19130,23, MansionInfo[i][mEnterPos][0], MansionInfo[i][mEnterPos][1], MansionInfo[i][mEnterPos][2], 0);
				MansionInfo[i][mExitPickup] = CreateDynamicPickup(19130,23, -830.4787, 1114.8856, 1497.1621, i+55);
				new string[256];
				if(MansionInfo[i][mOwned]) format(string, 256, "{34495e}Mansion ID:{ffffff} #%d\n{34495e}Price:{ffffff} %d$\n{34495e}Family:{ffffff} %s",MansionInfo[i][mID],MansionInfo[i][mPrice],FamilyInfo[MansionInfo[i][mFamily]][fName]);
				else format(string, 256, "{34495e}Mansion ID:{ffffff} #%d\n{34495e}Price:{ffffff} %d$\n{34495e}Family:{ffffff} %s",MansionInfo[i][mID],MansionInfo[i][mPrice],"Ar Kavs");
	   			MansionInfo[i][mText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, MansionInfo[i][mEnterPos][0], MansionInfo[i][mEnterPos][1], MansionInfo[i][mEnterPos][2], 10.0);
				return true;
			}
		}
    }
	return true;
}
CMD:setmansioncarpos(playerid, params[])
{
    if(Mtavari(playerid))
    {
        if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
        if(!IsPlayerInAnyVehicle(playerid)) return senderror(playerid, "Tkven Ar Xart Avtomobilshi");
        if(sscanf(params, "dd", params[0], params[1])) return sendusage(playerid, "/setmansioncarpos [Mansion ID] [Car ID]");
        if(!(0 <= params[1] <= MAX_MANSION_CAR)) return true;
        new Float:x, Float:y, Float:z, Float:angle, query[16];
        GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
        GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
        MansionInfo[params[0]][mCarPosX][params[1]] = x;
        format(query, 16, "mCarPosX%d", params[1]); MansionUpdateDataFloat(params[0], query, MansionInfo[params[0]][mCarPosX][params[1]]);
        MansionInfo[params[0]][mCarPosY][params[1]] = y;
        format(query, 16, "mCarPosY%d", params[1]); MansionUpdateDataFloat(params[0], query, MansionInfo[params[0]][mCarPosY][params[1]]);
        MansionInfo[params[0]][mCarPosZ][params[1]] = z;
        format(query, 16, "mCarPosZ%d", params[1]); MansionUpdateDataFloat(params[0], query, MansionInfo[params[0]][mCarPosZ][params[1]]);
        MansionInfo[params[0]][mCarPosA][params[1]] = angle;
        format(query, 16, "mCarPosA%d", params[1]); MansionUpdateDataFloat(params[0], query, MansionInfo[params[0]][mCarPosA][params[1]]);
        SendClientMessage(playerid, COLOR_ADMIN, "[Success]{ffffff} Manakanis Axali Spawn Sheinaxa Mansionma !");
    }
	return true;
}
CMD:findmansion(playerid, params[])
{
	if(PlayerInfo[playerid][pDirectory] == 0) return senderror(playerid, "Tkven Ar Gakvt Directory !");
	if(gCheckpoint[playerid] == CHECKPOINT_FINDMANSION)
	{
		DisablePlayerCheckpoint(playerid);
	    gCheckpoint[playerid] = CHECKPOINT_FINDMANSION;
	    return true;
	}
    if(sscanf(params, "d", params[0])) return sendusage(playerid, "/findhouse [House ID]");
	SetPlayerGPS(playerid, "Mansion", true, MansionInfo[params[0]][mEnterPos][0], MansionInfo[params[0]][mEnterPos][1], MansionInfo[params[0]][mEnterPos][2]);
	gCheckpoint[playerid] = CHECKPOINT_FINDMANSION;
	return true;
}
CMD:mansion(playerid, params[])
{
	if(p_family_id == 0) return senderror2(playerid, "Ar Xart Arcert Familyshi");
	if(!strcmp(FamilyInfo[p_family_id][fLeader], Name(playerid)))
	{
		if(FamilyInfo[p_family_id][fMansion] == 0) return senderror2(playerid, "Tkven Ojaxs Ar Akvs Mansion");
		new mansion_str[256];
		format(mansion_str, sizeof(mansion_str), "{48c9b0}[1]{ffffff} Karebi %s\n{48c9b0}[2]{ffffff} Transportis Shedzena\n{48c9b0}[3]{ffffff} Transportis Darespawneba\n{48c9b0}[4]{ffffff} Transportis Parkireba",(MansionInfo[FamilyInfo[p_family_id][fMansion]][mLock])?("{F04245}Daketili") : ("{3cb371}Gaxsnili"));
		ShowPlayerDialog(playerid, 93, DIALOG_STYLE_LIST, "{48c9b0}Mansion{ffffff} | Menu", mansion_str, "Next", "Close");
	}
	else
	{
	    senderror2(playerid, "Ar Xart Familyis Lideri");
	}
	return true;
}
CMD:agivemed(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "u", params[0])) return sendusage(playerid, "/agivemed [Motamashis ID]");
        if(params[0] == INVALID_PLAYER_ID) return senderror(playerid, "Motamashe Ver Moidzebna!");
        if(!IsPlayerConnected(params[0])) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia");
        GivePlayerItem(params[0], GetItemModelById(ITEM_MEDIC));
        SaveInventory(Name(params[0]));
        format(gstr, sizeof(gstr), "Administratorma "color_bizz"%s Gadmogcat Medikamenti",Name(playerid));
        SendClientMessage(params[0], COLOR_WHITE, gstr);
        format(gstr, sizeof(gstr), "Tkven Miecit Medikamenti "color_bizz"%s'(s)",Name(params[0]));
        SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:agivedrug(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 10)
	{
	    if(!isAlogged[playerid]) return senderror(playerid, ADMIN_ERROR_MESSAGE_2);
		if(sscanf(params, "ud", params[0], params[1])) return sendusage(playerid, "/agivedrug [Motamashis ID] [Amount]");
        if(params[0] == INVALID_PLAYER_ID) return senderror(playerid, "Motamashe Ver Moidzebna!");
        if(!IsPlayerConnected(params[0])) return true;
        if(!isLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Motamashes Ar Gauvlia Avtorizacia");
        PlayerInfo[params[0]][pDrug] += params[1];
    	PlayerUpdateData(params[0], "pDrug", PlayerInfo[params[0]][pDrug]);
        format(gstr, sizeof(gstr), "Administratorma "color_bizz"%s Gadmogcat Narkotiki",Name(playerid));
        SendClientMessage(params[0], COLOR_WHITE, gstr);
        format(gstr, sizeof(gstr), "Tkven Miecit Narkotiki "color_bizz"%s'(s)",Name(params[0]));
        SendClientMessage(playerid, COLOR_WHITE, gstr);
	}
	return true;
}
CMD:gbankwithdraw(playerid, params[])
{
	if(!IsAGhetto(playerid)) return true;
	if(!IsALeader(playerid)) return true;
	if(sscanf(params, "d", params[0])) return sendusage(playerid, "/gbankwithdraw [Odenoba]");
	if(PlayerInfo[playerid][pMember] == FRACTION_BALLAS)
	{
		if(BallasBank == 0) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(BallasBank < params[0]) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(params[0] > 100000000 || params[0] < 1) return SendClientMessage(playerid, COLOR_GREY, "Araswori Odenoba");
		BallasBank -= params[0];
		PlayerInfo[playerid][pCash] += params[0];
		format(YCMDstr, sizeof(YCMDstr), "Tqven Moxsenit Tanxa Angarishidan Saxelad Ballas: %d$", params[0]);
		SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
		GhettoTextUPDATE();
		SaveFracBank();
	}
	else if(PlayerInfo[playerid][pMember] == FRACTION_VAGOS)
	{
		if(VagosBank == 0) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(VagosBank < params[0]) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(params[0] > 100000000 || params[0] < 1) return SendClientMessage(playerid, COLOR_GREY, "Araswori Odenoba");
		VagosBank -= params[0];
		PlayerInfo[playerid][pCash] += params[0];
		format(YCMDstr, sizeof(YCMDstr), "Tqven Moxsenit Tanxa Angarishidan Saxelad Vagos: %d$", params[0]);
		SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
		GhettoTextUPDATE();
		SaveFracBank();
	}
	else if(PlayerInfo[playerid][pMember] == FRACTION_GROVE)
	{
		if(GroveBank == 0) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(GroveBank < params[0]) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(params[0] > 100000000 || params[0] < 1) return SendClientMessage(playerid, COLOR_GREY, "Araswori Odenoba");
		GroveBank -= params[0];
		PlayerInfo[playerid][pCash] += params[0];
		format(YCMDstr, sizeof(YCMDstr), "Tqven Moxsenit Tanxa Angarishidan Saxelad Grove: %d$", params[0]);
		SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
		GhettoTextUPDATE();
		SaveFracBank();
	}
	else if(PlayerInfo[playerid][pMember] == FRACTION_AZTEC)
	{
		if(AztecaBank == 0) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(AztecaBank < params[0]) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(params[0] > 100000000 || params[0] < 1) return SendClientMessage(playerid, COLOR_GREY, "Araswori Odenoba");
		AztecaBank -= params[0];
		PlayerInfo[playerid][pCash] += params[0];
		format(YCMDstr, sizeof(YCMDstr), "Tqven Moxsenit Tanxa Angarishidan Saxelad Aztec: %d$", params[0]);
		SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
		GhettoTextUPDATE();
		SaveFracBank();
	}
	else if(PlayerInfo[playerid][pMember] == FRACTION_RIFA)
	{
		if(RifaBank == 0) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(RifaBank < params[0]) return SendClientMessage(playerid, COLOR_GREY, "Tqven Ar Gaqvt Sakmarisi Tanxa");
		if(params[0] > 100000000 || params[0] < 1) return SendClientMessage(playerid, COLOR_GREY, "Araswori Odenoba");
		RifaBank -= params[0];
		PlayerInfo[playerid][pCash] += params[0];
		format(YCMDstr, sizeof(YCMDstr), "Tqven Moxsenit Tanxa Angarishidan Saxelad Rifa: %d$", params[0]);
		SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
		GhettoTextUPDATE();
		SaveFracBank();
	}
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	return true;
}
CMD:gbankput(playerid, params[])
{
	if(!IsAGhetto(playerid)) return true;
	if(!IsALeader(playerid)) return true;
	if(sscanf(params, "d", params[0])) return sendusage(playerid, "/gbankput [Odenoba]");
    switch(PlayerInfo[playerid][pMember])
    {
		case FRACTION_GROVE:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			GroveBank += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), "Tqven Sheavset Balansi. Angarishis Saxeli: Grove: %d$", params[0]);
			SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
			GhettoTextUPDATE();
			SaveFracBank();
		}
		case FRACTION_BALLAS:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			BallasBank += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), "Tqven Sheavset Balansi. Angarishis Saxeli: Ballas: %d$", params[0]);
			SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
			GhettoTextUPDATE();
			SaveFracBank();
		}
		case FRACTION_VAGOS:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			VagosBank += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), "Tqven Sheavset Balansi. Angarishis Saxeli: Vagos: %d$", params[0]);
			SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
			GhettoTextUPDATE();
			SaveFracBank();
		}
		case FRACTION_AZTEC:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			AztecaBank += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), "Tqven Sheavset Balansi. Angarishis Saxeli: Aztec: %d$", params[0]);
			SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
			GhettoTextUPDATE();
		}
		case FRACTION_RIFA:
		{
			if(PlayerInfo[playerid][pCash] < params[0]) return senderror(playerid, "Tkven Ar Gakvt Sakmarisi Tanxa");
			RifaBank += params[0];
			PlayerInfo[playerid][pCash] -= params[0];
			format(YCMDstr, sizeof(YCMDstr), "Tqven Sheavset Balansi. Angarishis Saxeli: Rifa: %d$", params[0]);
			SendClientMessage(playerid, 0x6BB3FFAA, YCMDstr);
			GhettoTextUPDATE();
			SaveFracBank();
		}
	}
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	return true;
}
CMD:get(playerid, params[])
{
    if(sscanf(params, "s[32]d", params[0])) return sendusage(playerid, "/get [Value] [Odenoba]");
    if(IsPlayerConnected(playerid))
    {
		if(!strcmp(params[0], "guns"))
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 10.0, 321.1270,1117.0868,1083.8828)) return true;
		    new g_str[150];
			if(params[0] < 1 || params[0] > 600)
			{
			    return sendinfo(playerid, "Tyviebis Raodenoba Unda Shedgebodes: 100'dan 600'mde");
			}
   		    if(PlayerInfo[playerid][pMember] == FRACTION_BALLAS)
			{
			    if(BallasMat < params[0]) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
     			if(PlayerInfo[playerid][pMaterial]+params[0] > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
				PlayerInfo[playerid][pMaterial] += params[0];
     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, params[0]);
				SendNearText(playerid, g_str, 25.0, COLOR_PURPLE);
				BallasMat -= params[0];
				GhettoTextUPDATE();
				SaveWH();
			}
			else if(PlayerInfo[playerid][pMember] == FRACTION_VAGOS)
			{
			    if(VagosMat < params[0]) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
				if(PlayerInfo[playerid][pMaterial]+params[0] > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
     			PlayerInfo[playerid][pMaterial] += params[0];
     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, params[0]);
				SendNearText(playerid, g_str, 25.0, COLOR_PURPLE);
     			VagosMat -= params[0];
     			GhettoTextUPDATE();
     			SaveWH();
     		}
     		else if(PlayerInfo[playerid][pMember] == FRACTION_GROVE)
			{
				if(GroveMat < params[0]) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
				if(PlayerInfo[playerid][pMaterial]+params[0] > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
     			PlayerInfo[playerid][pMaterial] += params[0];
     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, params[0]);
				SendNearText(playerid, g_str, 25.0, COLOR_PURPLE);
     			GroveMat -= params[0];
     			GhettoTextUPDATE();
     			SaveWH();
     		}
     		else if(PlayerInfo[playerid][pMember] == FRACTION_AZTEC)
			{
				if(AztecaMat < params[0]) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
     			if(PlayerInfo[playerid][pMaterial]+params[0] > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
     			PlayerInfo[playerid][pMaterial] += params[0];
     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, params[0]);
				SendNearText(playerid, g_str, 25.0, COLOR_PURPLE);
     			AztecaMat -= params[0];
     			GhettoTextUPDATE();
     			SaveWH();
     		}
     		else if(PlayerInfo[playerid][pMember] == FRACTION_RIFA)
			{
			    if(RifaMat < params[0]) return sendinfo(playerid, "Tkveni Bandis Sawyobshi Ar Aris Sakmarisi Raodenobis Tyviebi");
     			if(PlayerInfo[playerid][pMaterial]+params[0] > 600) return sendinfo(playerid, "Tkven Ukve Sakmarisi Raodenobis Tyviebi Gakvt");
     			PlayerInfo[playerid][pMaterial] += params[0];
     			format(g_str, sizeof(g_str), "{0099FF}[F] {FFFFFF}%s[%d] {0099FF}Aigo Bandis Sawyobidan: {FFFFFF}%d {0099FF}Tyvia", Name(playerid), playerid, params[0]);
				SendNearText(playerid, g_str, 25.0, COLOR_PURPLE);
     			RifaMat -= params[0];
     			GhettoTextUPDATE();
     			SaveWH();
     		}
            return true;
        }
        else
        {
            senderror2(playerid, "Brdzaneba Arasworia");
        }
	}
	return true;
}
CMD:makegun(playerid, params[])
{
	if(!IsAGang(playerid)) return true;
	if(sscanf(params, "dd",params[0],params[1])) return sendusage(playerid, "/makegun [Iaragis ID] [Tyviebi]");
	if(params[1] > 200 || params[1] < 1) return sendinfo(playerid, "Maxsimum: 200Tyvia");
	if(PlayerInfo[playerid][pMaterial] < params[1]) return sendinfo(playerid, "Tkven Ar Gakvt Sakmarisi Raodenobis Tyviebi");
	if(params[0] != 24 && params[0] != 25 && params[0] != 31 && params[0] != 30 && params[0] != 33 && params[0] != 23 && params[0] != 29) return senderror2(playerid, "Iaragis ID Arasworea! - Misawvdomia: {ffffff}23,24,29,30,31,33 ID'ebi");
	GivePlayerWeapon(playerid, params[0], params[1]);
	PlayerInfo[playerid][pMaterial] -= params[1];
	PlayerUpdateData(playerid, "pMaterial", PlayerInfo[playerid][pMaterial]);
	format(gstr, sizeof(gstr), "%s'm(a) Gaiketa Iaragi",Name(playerid));
	SendNearText(playerid, gstr, 15.0, COLOR_PURPLE);
	return true;
}
CMD:fullmats(playerid, params[])
{
    if(Mtavari(playerid))
	{
        BallasMat += 100000;
        VagosMat += 100000;
        GroveMat += 100000;
        AztecaMat += 100000;
        RifaMat += 100000;
		format(gstr, sizeof(gstr), "Administrator: %s'm(a) Sheavso Yvela Organizaciashi Materialebi", Name(playerid), playerid);
		SendClientMessageToAll(COLOR_WHITE, gstr);
	}
	return true;
}
CMD:moroz(playerid, params[])
{
	if(GhettoTester(playerid) || PlayerInfo[playerid][pAdmin] >= 10)
	{
		new dialogstr[256], str[80];
		dialogstr = "{ffffff}Gang\t{ffffff}Status\n";
		for(new i = 0; i < MAX_FRACTIONS; i ++)
		{
		    if(!IsAGhettoID(i)) continue;
			format(str, sizeof(str), "{FF6600}[%d]{F5F5F5} %s\t%s\n",i+1,FractionNames[i],MorozSystem[i]?"{F05A7E}Gamortuli":"{8FD14F}Dashvebuli");
			strcat(dialogstr, str);
		}
		ShowPlayerDialog(playerid, 98, DIALOG_STYLE_TABLIST_HEADERS, "{FF6600}Moroz{ffffff} | System", dialogstr, "Action", "Close");
	}
	return true;
}
CMD:youtube(playerid, params[])
{
	if(Mtavari(playerid))
	{
	    if(sscanf(params, "s[64]",params[0])) return sendusage(playerid, "/youtube [Channel]");
        #include "..\..\library\TextDraw\Global\Youtube.inc"
TextDrawSetString(youtube_TD[11], params[0]);
foreach(new i:Player)
{
    if(GetLauncherStatus(i))
    {
        cef_emit_event(i, "data:pool:channelname", CEFSTR(params[0]));
    }
    else
    {
        for(new j = 0; j < 13; j ++) TextDrawShowForPlayer(i, youtube_TD[j]);
	}
}
	}
	return true;
}
CMD:youtubeoff(playerid, params[])
{
	if(Mtavari(playerid))
	{
        for(new j = 0; j < 13; j ++) TextDrawDestroy(youtube_TD[j]);
        foreach(new i:Player)
        {
            if(GetLauncherStatus(i))
            {
                cef_emit_event(i, "data:pool:channelname", CEFINT(0));
            }
        }
	}
	return true;
}
CMD:test(playerid, params[])
{
	new str[90], dialog[1000];
	for(new i = 0; i < sizeof newitems; i ++)
	{
		format(str, 90, "%d\n", newitems[i]);
		strcat(dialog, str);
	}
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_LIST, "123", dialog, "Close", "");
	return true;
}

/* =========================== << [ Stocks ] >> ============================= */
stock MySQL_Active()
{
    connect = mysql_connect(mysql_host, mysql_user, mysql_password, mysql_database);
    //connect = mysql_connect("80.241.246.30", "user27847", "SpSk6PitJm5S", "user27847");

    if(mysql_errno() == 0) print("[MySQL]: Server Successfully Connected To Database !");
    else print("[MySQL]: Server Failed To Connect Database !");

    mysql_tquery(connect, "SELECT * FROM `house`", "LoadHouseData", "");
    mysql_tquery(connect, "SELECT * FROM `bizz`", "LoadBizzData", "");
    mysql_tquery(connect, "SELECT * FROM `family`", "LoadFamilyData", "");
    mysql_tquery(connect, "SELECT * FROM `Radars` ORDER BY `Radars`.RadarID ASC ", "@LoadRadars", "");
    mysql_tquery(connect, "SELECT * FROM `mansion`", "LoadMansionData", "");
   	mysql_tquery(connect, "SELECT * FROM `bankomats`", "LoadBankomats", "");
   	mysql_tquery(connect, "SELECT * FROM `greenzone`", "LoadZones", "");
   	mysql_tquery(connect, "SELECT * FROM `anticheat`", "LoadAntiCheatSettings", "");
   	mysql_tquery(connect, "SELECT * FROM `AutoSalon`", "LoadAutoSalon", "");
   	mysql_tquery(connect, "SELECT * FROM `FracBank`", "LoadFracBank", "");
   	mysql_tquery(connect, "SELECT * FROM `FracWh`", "LoadWH", "");
}
stock MySQL_Deactive()
{
    mysql_close(connect);
}
stock ShowAuthorization(playerid)
{
    new string[400];
    format(string, sizeof(string), "{FFFFFF}- Mogesalmebit Serverze - {DE4343}"SERVER_SHORT_NAME"\
    \n\n{FFFFFF}Sasiamovnoa Tkveni Naxva Isev Serverze\
    \n{FFFFFF}Avtorizaciisatvis Gtxovt Miutitot Paroli, Romelic Daayenet Registraciis Dros\
    \n\n{5DADE2}* Rodesac Miutitebt Parols Daachiret 'Next' Gilaks");
	ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{FFFFFF}Avtorizacia", string, "Next", "Exit");
    return true;
}
stock ShowRegistration(playerid)
{
    new register = -1;
    #if MAX_ACC_ON_IP != 0
        new query[200], ip[16], rows;
        GetPlayerIp(playerid, ip, 16);
        format(query, sizeof(query), "SELECT `pRegIP` FROM `accounts` WHERE pRegIP = '%s'",ip);
        mysql_query(connect, query);
        cache_get_row_count(rows);
        if(rows > MAX_ACC_ON_IP)
        {
            register++;
        }
    #endif
    if(register != -1)
    {
        ACKick(playerid, "104", "Many Account On IP", 1);
        Kick(playerid);
        return true;
    }
    new string[500];
    format(string, sizeof(string), "{FFFFFF}- Mogesalmebit Serverze - {DE4343}"SERVER_SHORT_NAME"\
   	\n\n{FFFFFF}Tkven Shemoxvedit Rogorc Axali Motamashe, Amitom Sachiroa Registracia\
    \n{FFFFFF}Registraciisatvis Gtxovt Miutitot Paroli, Romelsac Gamoiyenebt\
    \n{F0A45D}[1]{FFFFFF} Paroli Unda Iyos Daculi Da Dzlieri\
    \n{F0A45D}[2]{FFFFFF} Paroli Unda Iyos Latinuri Asoebit\
    \n{F0A45D}[3]{FFFFFF} Parolis Sigrdze Snda Iyos 6'dan 20'Simbolomde\
    \n\n{5DADE2}* Rodesac Miutitebt Parols Daachiret 'Next' Gilaks");
	ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "{FFFFFF}Registracia", string, "Next", "Cancel");
    return true;
}
stock GetMafiaZoneColor(zoneid)
{
	new zid;
	switch(McInfo[zoneid][FrakVlad])
	{
		case FRACTION_LCN: zid = 0xFF7F00AA;
		case FRACTION_YAKUZA: zid = 0xFF0000AA;
		case FRACTION_RM: zid = 0xCDCDCDAA;
		default: zid = 0xFFFFFFAA;
	}
	return zid;
}
stock ShowProtection(playerid)
{
    new string[400];
    format(string, sizeof(string), "{FFFFFF}- Mogesalmebit Serverze - {DE4343}"SERVER_SHORT_NAME"\
    \n\n{FFFFFF}Tkveni Wina Da Axlandeli IP Misamarti\
    \n{FFFFFF}Ar Emtxveva Ertmanets ! Amistvis Sachiroa Gairator IP Misamartis Parolis Dacva\
    \n\n{5DADE2}* Rodesac Miutitebt Parols Daachiret 'Next' Gilaks");
	ShowPlayerDialog(playerid, 49, DIALOG_STYLE_PASSWORD, "{FFFFFF}Protection", string, "Next", "Exit");
    return true;
}
stock ShowChooseSex(playerid)
{
    new string[128];
    format(string, sizeof(string), "{FFFFFF}- Airchiet Tkveni Personajis Sqesi\
    \n{F0A45D}[1]{ffffff} Mamrobiti\
    \n{F0A45D}[2]{ffffff} Mdedrobiti");
	ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, "{FFFFFF}Gender", string, "Next", "Back");
    return true;
}
stock ShowHousePanel(playerid, houseid)
{
    new house_string[256];
    house_string = "{ffffff}House Panel\n";
    format(house_string, sizeof(house_string), color_house"[1]{ffffff} Karebi: %s\n"color_house"[2]{ffffff} Transportis Chamogdeba\n"color_house"[3]{ffffff} Saxlis Gakidva - %d$\n"color_house"[4]{ffffff} Garajis %s - %d$",(HouseInfo[houseid][hLock])?("{F04245}Daketili") : ("{3cb371}Gaxsnili"),HouseInfo[houseid][hPrice],(HouseInfo[houseid][hGarage])?("{F04245}Gayidva") : ("{3cb371}Yidva"),(HouseInfo[houseid][hGarage])?(16000) : (20000));
    ShowPlayerDialog(playerid, 8, DIALOG_STYLE_LIST, color_house"House", house_string, "Select", "Close");
    SetPVarInt(playerid, "HouseID", houseid);
    return true;
}
stock ShowBizzMenu(playerid, bizzid)
{
    new bizz_string[300];
    bizz_string = "{ffffff}Bussiness Menu\n";
    format(bizz_string, sizeof(bizz_string), color_house"[1]{ffffff} Karebi: - %s\n"color_house"[2]{ffffff} Biznesis Statistika\n"color_house"[3]{ffffff} Produktebis Shedzena: - %d/%d\n"color_house"[4]{ffffff} Shesvlis Fasi - %d$\n"color_house"[5]{ffffff} Produktis Fasi - %d$\n"color_house"[6]{ffffff} Biznesis Gakidva - %d$",(BizzInfo[bizzid][bLock])?("{F04245}Daketili") : ("{3cb371}Gaxsnili"),BizzInfo[bizzid][bProducts],MAX_BIZZ_PRODUCT,BizzInfo[bizzid][bEnterPrice],BizzInfo[bizzid][bProductPrice],BizzInfo[bizzid][bPrice]);
    ShowPlayerDialog(playerid, 16, DIALOG_STYLE_LIST, color_house"Bussiness", bizz_string, "Select", "Close");
    SetPVarInt(playerid, "BizzID", bizzid);
    return true;
}
stock ShowBizzStats(playerid, bizzid)
{
    new bizz_string[256], strcater[100];
    format(strcater, sizeof(strcater), color_house"\nBussiness ID:{ffffff} %d\n",BizzInfo[bizzid][bID]);
    strcat(bizz_string, strcater);
    format(strcater, sizeof(strcater), color_house"Owner:{ffffff} %s\n",BizzInfo[bizzid][bOwner]);
    strcat(bizz_string, strcater);
    format(strcater, sizeof(strcater), color_house"Balance:{ffffff} %d$\n",BizzInfo[bizzid][bSafe]);
    strcat(bizz_string, strcater);
    format(strcater, sizeof(strcater), color_house"Products:{ffffff} %d/%d\n",BizzInfo[bizzid][bProducts],MAX_BIZZ_PRODUCT);
    strcat(bizz_string, strcater);
    format(strcater, sizeof(strcater), color_house"Product Price:{ffffff} %d\n",BizzInfo[bizzid][bProductPrice]);
    strcat(bizz_string, strcater);
    format(strcater, sizeof(strcater), color_house"Enter Price:{ffffff} %d\n",BizzInfo[bizzid][bEnterPrice]);
    strcat(bizz_string, strcater);
    format(strcater, sizeof(strcater), color_house"Tax:{ffffff} %d\n",BizzInfo[bizzid][bTax]);
    strcat(bizz_string, strcater);
    ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "Statistic", bizz_string, "Close", "");
    return true;
}
stock ResetWeapons(playerid)
{
    ResetPlayerWeapons(playerid);
}
stock ResetPlayerData(playerid)
{
	SetPVarInt(playerid, "newIndex", -1);
	SetPVarInt(playerid, "cef_gz", 0);

	#include "..\..\library\TextDraw\Player\Others.inc"
	#include "..\..\library\MAP\RemoveBuildings.inc"

    if(LoginTime[playerid] != -1)
    {
        KillTimer(LoginTime[playerid]);
        LoginTime[playerid] = -1;
    }
	if(BurnoutTimer[playerid] != -1)
	{
		KillTimer(BurnoutTimer[playerid]);
		BurnoutTimer[playerid] = -1;
	}
	SYNC_SettedTimer[playerid] = -1;
    SetString(myNumber[playerid], "-");

    if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY) CancelFlyMode(playerid);
    for(new i = 0; i < 25; i ++)
    {
        MyCarID[playerid][i] = 0;
    }
   	for(new i = 0; i < MAX_FRACTIONS; i ++)
	{
	    SvDetachListenerFromStream(FractionWalkie[i], playerid);
		SvDetachSpeakerFromStream(FractionWalkie[i], playerid);
	}

    if(Speedometer_Timer[playerid] != -1)
    {
        KillTimer(Speedometer_Timer[playerid]);
        Speedometer_Timer[playerid] = -1;
    }
    GetPlayerName(playerid, PlayerInfo[playerid][Name], MAX_PLAYER_NAME);
    SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
    pLoadTextDraws(playerid);
    ResetAnimations(playerid);
    //ResetPlayerInventory(playerid);
    StopAudioStreamForPlayer(playerid);
    EnablePlayerCameraTarget(playerid, true);

    DeletePVar(playerid, "WeaponFactory");
    DeletePVar(playerid, "HouseID");
    DeletePVar(playerid, "FlyMode");
	DeletePVar(playerid, "block");
	DeletePVar(playerid, "Ships");
	DeletePVar(playerid, "CarDialog");
	SetPVarInt(playerid, "GameStol", 88);
	SetPVarInt(playerid, "Ochki", 88);
	SetPVarInt(playerid, "Slient", 0);
	SetPVarInt(playerid, "PlantDrug", 0);
	SetPVarInt(playerid, "DTime", gettime());
	SetPVarInt(playerid, "Surgery", 0);
	SetPVarInt(playerid, "AntiReportFlood", gettime());
	SetPVarInt(playerid, "carspam", 0);
    SetPVarInt(playerid, "cartime", 0);

    PlayerInfo[playerid][pCases][0] = 0;
	PlayerInfo[playerid][pCases][1] = 0;
	PlayerInfo[playerid][pCases][2] = 0;
	for(new i; i < 10; i ++) Roll_Cell[playerid][i] = 0;
	KillTimer(Roll_Timer[playerid]);
    IphoneON[playerid] = false;
    RollStatus[playerid] = false;
	RouletON[playerid] = false;
    isLogged[playerid] = false;
    isAlogged[playerid] = false;
    ChatAnim[playerid] = false;
    AdminDuty[playerid] = false;
    maskOn[playerid] = false;
    CasinoDuty[playerid] = false;
    colorOff[playerid] = false;
    speedometerChange[playerid] = false;
	Animation[playerid] = false;
	hospitalSpawn[playerid] = false;
	isProceted[playerid] = false;
	antidouble[playerid] = false;
	//AutoSalon[playerid] = false;
    PlayerEvent[playerid] = false;
	//
	SelectingCase[playerid] = false;
    SelectedCase[playerid] = -1;
    CaseRolling[playerid] = false;
    CaseRoll[playerid] = 0;
    CaseRandomRoll[playerid] = 0;
    for(new i = 0; i < 5; i ++) CaseItems[playerid][i] = 0;
	//
    WrongPassword[playerid] = MAX_LOGIN_ATTEMPTS;
    DelayPickup[playerid] = gettime();
    DelayChat[playerid] = gettime();
    DelayKey[playerid] = gettime();
    DelayCMD[playerid] = gettime();
    DelayAD[playerid] = gettime();
    DelayClick[playerid] = gettime();
    SelectChar[playerid] = 0;
    SkinShopStatus[playerid] = false;
    CurrentRentCar[playerid] = 0;
    RentCarID[playerid] = -1;
    MFCaptOn[playerid] = 0;
    RentCarStatus[playerid] = false;
    gCheckpoint[playerid] = CHECKPOINT_NONE;
    caridhouse[playerid] = -1;
    vehicleput[playerid] = -1;
    TextHouse[playerid] = 0;
    EnterBizz[playerid] = -1;
    TextBizz[playerid] = 0;
    AutoSchoolCar[playerid] = -1;
    AutoSchoolStatus[playerid] = -1;
    gBigEar[playerid] = 0;
    gotome[playerid] = -1;
    PlayedTime[playerid] = 0;
    SpawnStatus[playerid] = false;
    SpawnType[playerid] = 0;
    lastDialogID[playerid] = -1;
    KazinoDuty[playerid] = 0;
    SpawnHouseID[playerid] = 0;
    SpeedLimit[playerid] = 0;
    InviteID[playerid] = -1;
   	Tazer[playerid] = false;
	Tazed[playerid] = false;
    pAntiCheatSettingsPage[playerid] = false;
    WalkieTalkieFractionStatus[playerid] = 0;
    CaptureOn[playerid] = 0;
    KillCounter[playerid] = 0;
    KillNames[playerid] = 0;
    AntiDialog[playerid] = false;
    AutoTimer[playerid] = false;
    marixuana[playerid] = 0;
    DMArea[playerid] = 0;
    DMKill[playerid] = 0;
    DMDeath[playerid] = 0;
    DMVirtual[playerid] = 0;
    phoneOpen[playerid] = false;
    TakingPicture[playerid] = 0;
    IsBag[playerid] = 0;
    if(BagTimer[playerid] != -1) KillTimer(BagTimer[playerid]);
    BagTimer[playerid] = -1;
    isCalling[playerid] = false;
    WantedTime[playerid] = 0;
    PlantationWork[playerid] = false;
    AntiC[playerid] = false;
    PhoneOnline[playerid] = 0;
    TieStatus[playerid] = false;
    pTaxi[playerid] = INVALID_VEHICLE_ID;
    TransportDuty[playerid] = 0;
    TaxiPassenger[playerid] = -1;
    LastPassenger[playerid] = -1;
    LearningFight[playerid] = 0;
    //AS_select[playerid] = 0;
    CheatInDemorgan[playerid] = 0;
    MedicReviveTime[playerid] = 0;
    BoomBoxID[playerid] = -1;
    BoomBoxListener[playerid] = -1;
    TD_Fixer_gz[playerid] = 0;
    PlayerScore[playerid] = 0;
    PlayerIncorrectAnswers[playerid] = 0;
    Player_Passed_Exam[playerid] = 0;
    FightOpponent[playerid] = -1;
    FightOffer[playerid] = -1;
    TicketMoney[playerid] = 0;
 	TicketOffer[playerid] = -1;
 	ProposeOffer[playerid] = -1;
    Has_Player_Entered_Pin[playerid] = 0;
    selectedGun[playerid] = 0;
   	TrailerJob[playerid] = false;
	Aigotvirti[playerid] = false;
    ContainerStatusPlayer[playerid] = false;
    ContainerCar[playerid] = -1;
    ContainerObject[playerid] = -1;
    HealOffer[playerid] = -1;
    HealPrice[playerid] = 0;
    RobbingStarted[playerid] = false;
    RobbingTools[playerid] = false;
    InviteStatus[playerid] = false;
    InviterID[playerid] = -1;
    TuneHasOn[playerid] = true;
    TuneSelectID[playerid] = -1;
    SelectSystemID[playerid] = 0;
    AS_status[playerid] = 0;
	AS_car[playerid] = -1;
	AS_select[playerid] = 0;
	AS_client[playerid] = 0;

	KnockStatus[playerid] = false;
	KnockPos[playerid][0] = 0.0;
	KnockPos[playerid][1] = 0.0;
	KnockPos[playerid][2] = 0.0;
	KnockPos[playerid][3] = 0.0;
	KnockData[playerid][0] = 0;
	KnockData[playerid][1] = 0;
	KnockText[playerid] = Text3D:INVALID_3DTEXT_ID;

    JetXStatus[playerid] = false;
    JetXBet[playerid] = 0;
    JetXPlaying[playerid] = false;

    eAddict[playerid] = 0;
    IsSmoking[playerid] = 0;

    Accessorie_Price[playerid] = 0;
    Accessorie_Model[playerid] = 0;

    GPS[playerid] = false;
	gpsPos[playerid][0] = 0.0;
	gpsPos[playerid][1] = 0.0;
	gpsPos[playerid][2] = 0.0;
	KillTimer(gpsTimer[playerid]);
    gpsTimer[playerid] = -1;

    qFarm[playerid] = 0;
    qFactory[playerid] = 0;
	qShaft[playerid] = 0;
	qPlantation[playerid] = 0;

    jobID[playerid] = 0;
    jobStatus[playerid] = 0;
    jobAmount[playerid] = 0;
    jobCash[playerid] = 0;

	P_Sync[playerid][s_pos_x] = 0.0;
	P_Sync[playerid][s_pos_y] = 0.0;
	P_Sync[playerid][s_pos_z] = 0.0;
	P_Sync[playerid][s_controllable] = 1;

    ReconInfo[playerid][rec_Status] = false;
    ReconInfo[playerid][rec_Player] = -1;
    ReconInfo[playerid][rec_Interior] = -1;
    ReconInfo[playerid][rec_VirtualWorld] = -1;
    ReconInfo[playerid][rec_SpawnStatus] = 0;

    PlayerInfo[playerid][pLevel] = 0;
    PlayerInfo[playerid][pExp] = 0;
    PlayerInfo[playerid][pSex] = 0;
    PlayerInfo[playerid][pSkin] = 230;
    PlayerInfo[playerid][pCash] = 0;
    PlayerInfo[playerid][pAdmin] = 0;
    SetString(PlayerInfo[playerid][pAlogin], "GRPn1");
    PlayerInfo[playerid][pBank] = 0;
    PlayerInfo[playerid][pText] = 0;
    PlayerInfo[playerid][pMute] = 0;
    PlayerInfo[playerid][pMuteTime] = 0;
    PlayerInfo[playerid][pPrison] = 0;
    PlayerInfo[playerid][pPrisonTime] = 0;
    PlayerInfo[playerid][pBizz] = 0;
    //PlayerInfo[playerid][pPhone] = 0;
    //PlayerInfo[playerid][pSIM] = 0;
    PlayerInfo[playerid][pNumber] = 0;
    PlayerInfo[playerid][pWatch] = 0;
    PlayerInfo[playerid][pMask] = 0;
    PlayerInfo[playerid][pMember] = FRACTION_NONE;
    PlayerInfo[playerid][pRank] = 0;
    PlayerInfo[playerid][pForm] = 0;
    PlayerInfo[playerid][pModel] = 0;
    for(new i;i<MAX_PLAYER_HOUSE;i++)PlayerInfo[playerid][pHouse][i] = 0;
    PlayerInfo[playerid][pLicense][LICENSE_PASS] = 0;
    PlayerInfo[playerid][pLicense][LICENSE_CAR] = 0;
    PlayerInfo[playerid][pLicense][LICENSE_BIZZ] = 0;
    PlayerInfo[playerid][pLicense][LICENSE_GUN] = 0;
    PlayerInfo[playerid][pLastPos][0] = 0;
    PlayerInfo[playerid][pLastPos][1] = 0;
    PlayerInfo[playerid][pLastPos][2] = 0;
    PlayerInfo[playerid][pLastInterior] = 0;
    PlayerInfo[playerid][pLastVirtualWorld] = 0;
    PlayerInfo[playerid][pPayment] = 0;
    PlayerInfo[playerid][pPromouse] = 0;
    PlayerInfo[playerid][pProtection] = 0;
    SetString(PlayerInfo[playerid][pIPKey], "-");
    PlayerInfo[playerid][pGcoin] = 0;
    PlayerInfo[playerid][pWanted] = 0;
    PlayerInfo[playerid][pDrug] = 0;
    PlayerInfo[playerid][pAddict] = 0;
    PlayerInfo[playerid][pJob] = 0;
    PlayerInfo[playerid][pWarn] = 0;
    PlayerInfo[playerid][pWarnTime] = 0;
    PlayerInfo[playerid][pRope] = 0;
    PlayerInfo[playerid][pFamilyMember] = 0;
    PlayerInfo[playerid][pFamilyRank] = 0;
	PlayerInfo[playerid][pPayday] = 0;
    PlayerInfo[playerid][pDonateRank] = 0;
    PlayerInfo[playerid][pVipTime] = 0;
    PlayerInfo[playerid][pKills] = 0;
    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pDirectory] = 0;
	PlayerInfo[playerid][pFightSkill][0] = 0;
	PlayerInfo[playerid][pFightSkill][1] = 0;
	PlayerInfo[playerid][pFightSkill][2] = 0;
	PlayerInfo[playerid][pCashAmount] = 0;
	PlayerInfo[playerid][pPIN] = 0;
    PlayerInfo[playerid][pElections] = 0;
    for(new i=0;i<MAX_VIDEO_CARDS;i++) {
		PlayerInfo[playerid][pVideoCardType] = VIDEO_CARD_TYPE_NONE;
		PlayerInfo[playerid][pVideoCardStatus] = VIDEO_CARD_STATUS_NONE;
		PlayerInfo[playerid][pVideoCardWorked] = 0;
	}
    PlayerInfo[playerid][pBitcoin] = 0;
   	PlayerInfo[playerid][pAdmin_PlayedTime] = 0;
	PlayerInfo[playerid][pAdmin_Mute] = 0;
	PlayerInfo[playerid][pAdmin_Prison] = 0;
	PlayerInfo[playerid][pAdmin_Warn] = 0;
	PlayerInfo[playerid][pAdmin_Ban] = 0;
	PlayerInfo[playerid][pAdmin_ReportAnswer] = 0;
	PlayerInfo[playerid][pAdmin_Kick] = 0;
	PlayerInfo[playerid][pAdminWarning] = 0;
    PlayerInfo[playerid][pTrailerJob] = 0;
    PlayerInfo[playerid][pCasinoBlock] = 0;
    PlayerInfo[playerid][pAlreadyRobbed] = 0;

    PlayerTextDrawHide(playerid, DMTXT[playerid]);
   	/* ============ << [ Ghetto'ze Swrafi Kvebis Aparatebi ] >> ============= */
	RemoveBuildingForPlayer(playerid, 955, 2060.1172, -1897.6406, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 956, 2480.8594, -1959.2734, 12.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 955, 1928.7344, -1772.4453, 12.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 955, 2325.9766, -1645.1328, 14.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 955, 2352.1797, -1357.1563, 23.7734, 0.25);

	/* ==================== << [ Casino Interior ] >> ======================= */
	RemoveBuildingForPlayer(playerid, 1895, 1117.2813, -1.6484, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1125.1406, -3.4141, 1000.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1127.0781, -1.6797, 1000.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1125.1484, -0.0313, 1000.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1135.0469, -3.0781, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1133.6875, -1.6250, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1135.0000, -0.1797, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1124.8203, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1125.8672, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1127.8828, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1126.8828, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2964, 1119.2734, 7.6172, 1001.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2964, 1123.1484, 7.6172, 1001.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2964, 1127.0156, 7.6172, 1001.0703, 0.25);

	/* =================== << [ Hospital Exterior ] >> ====================== */
	RemoveBuildingForPlayer(playerid, 17946, 2533.820, -1290.550, 36.945, 0.250);
	RemoveBuildingForPlayer(playerid, 1297, 1190.770, -1320.859, 15.945, 0.250);

	/* ===================== << [ Shuknishnebi ] >> ========================= */
	RemoveBuildingForPlayer(playerid, 1283, 1311.2734, -1746.1172, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1345.7656, -1740.6172, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1325.7109, -1732.8281, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1335.1953, -1731.7813, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1357.5156, -1732.9375, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1376.5156, -1731.8516, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1441.8594, -1733.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1403.3672, -1733.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1414.4141, -1731.4297, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1513.2344, -1732.9219, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1428.9375, -1605.8203, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1416.5859, -1591.7422, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1428.8984, -1577.1328, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1439.6563, -1440.2578, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1453.6016, -1455.9063, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1455.2578, -1427.5156, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1568.8828, -1745.4766, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1545.7656, -1731.6719, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1530.1172, -1717.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1582.6719, -1733.1328, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1688.8672, -1745.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1672.0156, -1731.5234, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1701.9922, -1732.8750, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1762.7891, -1732.8281, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1736.5313, -1731.7969, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1750.2656, -1719.6328, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1664.9063, -1593.1250, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1646.6016, -1591.6875, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1658.5313, -1583.3203, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1676.7813, -1591.6094, 15.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1658.5469, -1533.6172, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1658.7344, -1469.3750, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1657.6016, -1449.5781, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1646.4375, -1441.4531, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1667.4688, -1441.3672, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1703.9063, -1593.6719, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1744.4922, -1598.3359, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1700.8672, -1440.3203, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1731.2188, -1441.3281, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1753.4453, -1610.8281, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1765.0781, -1604.1875, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1767.8359, -1455.5859, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1762.8047, -1443.7578, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1781.3906, -1450.5625, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1453.5391, -1307.4688, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1462.6328, -1296.7578, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1597.0938, -1296.7969, 19.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1447.5313, -1238.5391, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1452.5078, -1248.1719, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1611.7344, -1311.2734, 19.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1722.8750, -1302.0391, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1711.9766, -1291.9453, 15.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1822.5703, -1763.2578, 15.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1930.3750, -1753.1016, 15.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1832.8359, -1751.5078, 15.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1952.5156, -1751.3750, 15.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1820.8359, -1741.1484, 15.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1940.9063, -1741.1484, 15.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1990.6094, -1752.8438, 15.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2013.2891, -1751.7656, 15.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2001.9219, -1683.6172, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2001.3594, -1665.5391, 15.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2013.0703, -1671.8672, 15.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1810.2031, -1612.9063, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1833.0234, -1611.4766, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1821.0313, -1601.2344, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1835.9063, -1461.4063, 15.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2030.6875, -1612.9063, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2038.7266, -1601.0625, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2053.9297, -1611.4375, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2080.9375, -1800.9453, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2082.2734, -1823.9141, 15.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2069.2578, -1752.9141, 15.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2081.1719, -1740.8984, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2093.5313, -1744.5938, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2094.6797, -1762.9531, 15.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2104.4766, -1751.8281, 15.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2082.0313, -1683.6719, 15.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2081.2109, -1660.9453, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2082.2656, -1623.8828, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2070.1484, -1612.9219, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2083.8047, -1611.7500, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2103.8359, -1612.7266, 15.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2194.3984, -1653.9531, 16.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2208.8984, -1644.6563, 17.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2186.1406, -1640.3672, 17.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2199.5078, -1631.9297, 17.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 2092.9922, -1604.1563, 15.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1073.1328, -1395.1094, 15.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1184.7891, -1406.9063, 15.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1140.8984, -1280.1172, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1161.5859, -1281.3594, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1182.6484, -1280.0781, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1150.5078, -1269.9375, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1190.3047, -1389.8047, 15.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1216.5625, -1394.7109, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1244.0391, -1406.5313, 15.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1194.7969, -1290.8516, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1216.3203, -1281.4141, 15.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1245.7266, -1281.3359, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1215.6719, -1159.8672, 25.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1226.8594, -1150.0469, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1206.4844, -1140.2969, 25.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1250.4531, -1389.7500, 15.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1270.8516, -1394.6797, 15.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1261.3594, -1291.1797, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1269.5469, -1280.3203, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1332.0859, -1406.4063, 15.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1342.0000, -1384.6563, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1358.4766, -1416.2734, 15.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1367.9766, -1394.7734, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1354.9063, -1291.3906, 15.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1332.0625, -1281.4609, 15.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1345.1641, -1269.2578, 16.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1252.6094, -1140.2266, 25.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1263.2891, -1130.7578, 25.8516, 0.25);

	/* ===================== << [ Genuine Park ] >> ========================= */
	RemoveBuildingForPlayer(playerid, 4049, 1330.3750, -1793.0781, 22.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 4219, 1330.3281, -1792.5938, 23.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1340.8906, -1835.3672, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 1340.1328, -1835.0391, 12.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1340.8672, -1834.4844, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 1336.8750, -1818.2266, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1372, 1336.7891, -1816.3047, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1338.1250, -1816.5781, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 1338.0781, -1815.7578, 12.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1338.8984, -1816.1641, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1342.2734, -1806.2031, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 1342.6328, -1807.0391, 12.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 1342.5156, -1805.0703, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 4231, 1342.0547, -1800.2188, 25.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1338.9531, -1796.4297, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 1338.9609, -1796.0000, 13.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1338.9375, -1795.4609, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 4112, 1330.3750, -1793.0781, 22.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 1338.9688, -1793.7266, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1372, 1337.6953, -1774.7344, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 1338.7891, -1775.3203, 12.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 1337.0078, -1773.8672, 13.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1341.4531, -1755.4844, 16.4219, 0.25);

	/* ======================= << [ CityHall ] >> =========================== */
	RemoveBuildingForPlayer(playerid, 4031, 1460.053955, -1725.991943, 9.203000, 0.250000);
	RemoveBuildingForPlayer(playerid, 4057, 1479.553955, -1693.140015, 19.577999, 0.250000);
	RemoveBuildingForPlayer(playerid, 4138, 1536.140015, -1743.687012, 6.710000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1527, 1448.234009, -1755.897949, 14.523000, 0.250000);
	RemoveBuildingForPlayer(playerid, 4210, 1479.562012, -1631.453003, 12.078000, 0.250000);
	RemoveBuildingForPlayer(playerid, 713, 1457.937012, -1620.694946, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 713, 1496.866943, -1707.819946, 13.406000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1283, 1430.171021, -1719.468018, 15.625000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1451.625000, -1727.671021, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1467.984009, -1727.671021, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1485.171021, -1727.671021, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984009, -1713.506958, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1231, 1479.694946, -1716.703003, 15.625000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1505.178955, -1727.671021, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765015, -1713.703003, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1289, 1504.750000, -1711.881958, 13.593000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1258, 1445.006958, -1704.765015, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1258, 1445.006958, -1692.234009, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 712, 1445.812012, -1650.022949, 22.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1283, 1443.203003, -1592.944946, 15.625000, 0.250000);
	RemoveBuildingForPlayer(playerid, 673, 1457.725952, -1710.062012, 12.398000, 0.250000);
	RemoveBuildingForPlayer(playerid, 620, 1461.656006, -1707.687012, 11.835000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984009, -1704.640015, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 700, 1463.062012, -1701.569946, 13.726000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1231, 1479.694946, -1702.531006, 15.625000, 0.250000);
	RemoveBuildingForPlayer(playerid, 673, 1457.553955, -1697.288940, 12.398000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984009, -1694.046021, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1231, 1479.381958, -1692.390015, 15.632000, 0.250000);
	RemoveBuildingForPlayer(playerid, 4186, 1479.553955, -1693.140015, 19.577999, 0.250000);
	RemoveBuildingForPlayer(playerid, 620, 1461.125000, -1687.562012, 11.835000, 0.250000);
	RemoveBuildingForPlayer(playerid, 700, 1463.062012, -1690.647949, 13.726000, 0.250000);
	RemoveBuildingForPlayer(playerid, 641, 1458.616943, -1684.131958, 11.101000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1457.272949, -1666.296021, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984009, -1682.718018, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 712, 1471.406006, -1666.178955, 22.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1231, 1479.381958, -1682.312012, 15.632000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1458.256958, -1659.256958, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 712, 1449.850952, -1655.937012, 22.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1231, 1477.937012, -1652.725952, 15.632000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1479.609009, -1653.250000, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1457.350952, -1650.569946, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1454.421021, -1642.491943, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1467.850952, -1646.593018, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1472.897949, -1651.506958, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1465.937012, -1639.819946, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1231, 1466.468018, -1637.959961, 15.632000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1449.593018, -1635.046021, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1467.709961, -1632.890015, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1232, 1465.890015, -1629.975952, 15.531000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1472.663940, -1627.881958, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1479.468018, -1626.022949, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 3985, 1479.562012, -1631.453003, 12.078000, 0.250000);
	RemoveBuildingForPlayer(playerid, 4206, 1479.553955, -1639.609009, 13.648000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1232, 1465.834961, -1608.375000, 15.375000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765015, -1704.593018, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 700, 1494.209961, -1694.437012, 13.726000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765015, -1693.734009, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 620, 1496.975952, -1686.850952, 11.835000, 0.250000);
	RemoveBuildingForPlayer(playerid, 641, 1494.140015, -1689.234009, 11.101000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765015, -1682.671021, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 712, 1480.609009, -1666.178955, 22.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 712, 1488.225952, -1666.178955, 22.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1486.406006, -1651.390015, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1491.366943, -1646.381958, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1493.131958, -1639.453003, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1486.178955, -1627.765015, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1280, 1491.218018, -1632.678955, 13.453000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1232, 1494.413940, -1629.975952, 15.531000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1232, 1494.359009, -1608.375000, 15.375000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1288, 1504.750000, -1705.406006, 13.593000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1287, 1504.750000, -1704.468018, 13.593000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1286, 1504.750000, -1695.053955, 13.593000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1285, 1504.750000, -1694.038940, 13.593000, 0.250000);
	RemoveBuildingForPlayer(playerid, 673, 1498.959961, -1684.609009, 12.398000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1504.163940, -1662.015015, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1504.718018, -1670.921021, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 620, 1503.187012, -1621.125000, 11.835000, 0.250000);
	RemoveBuildingForPlayer(playerid, 673, 1501.281006, -1624.578003, 12.398000, 0.250000);
	RemoveBuildingForPlayer(playerid, 673, 1498.359009, -1616.968018, 12.398000, 0.250000);
	RemoveBuildingForPlayer(playerid, 712, 1508.444946, -1668.741943, 22.257000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1505.694946, -1654.834961, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1508.515015, -1647.859009, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 625, 1513.272949, -1642.491943, 13.695000, 0.250000);
	RemoveBuildingForPlayer(playerid, 4030, 1536.140015, -1743.687012, 6.710000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828003, -1721.631958, 16.421000, 0.250000);
	RemoveBuildingForPlayer(playerid, 1266, 1565.414063, -1722.312500, 25.039101, 0.250000);
	RemoveBuildingForPlayer(playerid, 1260, 1565.414063, -1722.312500, 25.039101, 0.250000);
	RemoveBuildingForPlayer(playerid, 1258, 1510.890625, -1607.312500, 13.695300, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1451.625000, -1727.671875, 16.421900, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1467.984375, -1727.671875, 16.421900, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1485.171875, -1727.671875, 16.421900, 0.250000);
	RemoveBuildingForPlayer(playerid, 1226, 1505.179688, -1727.671875, 16.421900, 0.250000);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);

	/* ===================== << [ Nagavsakreli ] >> ========================= */
	RemoveBuildingForPlayer(playerid, 3723, 2197.7500, -1993.3594, 14.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3722, 2197.7500, -1993.3594, 14.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2209.5859, -1977.5234, 16.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 5190, 2203.7969, -1992.1641, 14.2578, 0.25);

	/* ======================= << [ LS Army ] >> ============================ */
	RemoveBuildingForPlayer(playerid, 5156, 2838.0391, -2423.8828, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 5159, 2838.0313, -2371.9531, 7.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5160, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5161, 2838.0234, -2358.4766, 21.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 5162, 2838.0391, -2423.8828, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 5163, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5164, 2838.1406, -2447.8438, 15.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 5165, 2838.0313, -2520.1875, 18.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 5166, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5167, 2838.0313, -2371.9531, 7.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3707, 2720.3203, -2530.9141, 19.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2417.7891, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2455.8828, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2493.9844, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3708, 2720.3203, -2530.9141, 19.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2771.0703, -2372.4453, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2789.2109, -2377.6250, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2774.7969, -2386.8516, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2771.0703, -2520.5469, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2774.7969, -2534.9531, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3746, 2814.2656, -2356.5703, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3746, 2814.2656, -2521.4922, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3758, 2702.3984, -2324.2578, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 5335, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5336, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3770, 2795.8281, -2394.2422, 14.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3770, 2746.4063, -2453.4844, 14.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 5352, 2838.1953, -2488.6641, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2742.2656, -2481.5156, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 5326, 2661.5156, -2465.1406, 20.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2742.2656, -2416.5234, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2663.8359, -2392.8203, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2774.7969, -2534.9531, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2771.0703, -2520.5469, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2501.8359, 14.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2493.9844, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2486.9609, 14.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2463.8203, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2773.3438, -2479.9688, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2455.8828, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3626, 2746.4063, -2453.4844, 14.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2448.4766, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2773.3438, -2443.1719, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2744.5703, -2436.1875, 13.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2744.5703, -2427.3203, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2425.3516, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2774.7969, -2386.8516, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2771.0703, -2372.4453, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2410.2109, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2417.7891, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2789.2109, -2377.6250, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2802.4297, -2556.5234, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2501.8359, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2486.8281, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2486.9609, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2463.8203, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2448.3438, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2448.4766, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2425.3516, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2410.2109, 14.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2410.0781, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3626, 2795.8281, -2394.2422, 14.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3620, 2814.2656, -2521.4922, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5157, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5154, 2838.1406, -2447.8438, 15.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2488.6641, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3620, 2814.2656, -2356.5703, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5155, 2838.0234, -2358.4766, 21.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2407.1406, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3753, 2702.3984, -2324.2578, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2762.7578, -2333.3828, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2804.2422, -2333.3828, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 5158, 2837.7734, -2334.4766, 11.9922, 0.25);

    /* ====================== << [ I.D.E.K. ] >> ============================ */
	RemoveBuildingForPlayer(playerid, 1297, 1181.9688, -1154.1641, 26.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 717, 1182.1719, -1155.3750, 23.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 14856, 198.4688, 168.6797, 1003.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1617, 1436.3906, -1322.8750, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, 1439.8594, -1323.7031, 13.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 1441.5547, -1323.3125, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);

	/* ======================== << [ SHAFT ] >> ============================= */
	RemoveBuildingForPlayer(playerid, 1391, 1238.380, -1258.270, 44.664, 0.250);

	/* ====================== << [ CityHall New ] >> ======================== */
	RemoveBuildingForPlayer(playerid, 14795, 1388.881958, -20.882000, 1005.203003, 0.250000);
	RemoveBuildingForPlayer(playerid, 14784, 1281.140625, -30.093800, 1009.414124, 0.250000);
	
	/* ======================= << [ Containers ] >> ========================= */
	RemoveBuildingForPlayer(playerid, 1461, 820.1484, -2061.0625, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.1484, -2055.2422, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 820.3438, -2058.1641, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2066.1797, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2036.6953, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.5469, -2048.8984, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -2042.2969, 12.6172, 0.25);
    return true;
}
stock SetString(param_1[], param_2[], size = 300)
{
    return strmid(param_1, param_2, 0, strlen(param_2), size);
}
stock GetString(param1[],param2[])
{
	return !strcmp(param1, param2, false);
}
stock ResetAnimations(playerid)
{
    PreloadAnimLib(playerid,"SWORD");
   	PreloadAnimLib(playerid,"BASEBALL");
   	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BD_FIRE");
   	PreloadAnimLib(playerid,"BOMBER");
   	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
 	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"RYDER");
   	PreloadAnimLib(playerid,"RAPPING");
   	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"SHOP");
   	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"FINALE");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"SAMP");
    PreloadAnimLib(playerid,"goggles");
    PreloadAnimLib(playerid,"GRENADE");
    PreloadAnimLib(playerid,"Freeweights");
}
stock CheckForAccount(name[])
{
    new query[256];
    format(query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE Name = '%s'",name);
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
    return rows;
}
stock PlayerUpdateData(playerid, _type[], _data)
{
	new _str[256], sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	format(_str, sizeof(_str), "UPDATE `accounts` SET `%s` = '%d' WHERE `Name` = '%s'",_type, _data, sendername);
	mysql_tquery (connect, _str);
	return 1;
}
stock PlayerUpdateDataString(playerid, _type[], _data[])
{
	new _str[256], sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	format(_str, sizeof(_str), "UPDATE `accounts` SET `%s` = '%s' WHERE `Name` = '%s'",_type, _data, sendername);
	mysql_tquery (connect, _str);
	return 1;
}
stock PlayerUpdateDataFloat(playerid, _type[], Float:_data)
{
	new _str[256], sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	format(_str, sizeof(_str), "UPDATE `accounts` SET `%s` = '%f' WHERE `Name` = '%s'",_type, _data, sendername);
	mysql_tquery (connect, _str);
	return 1;
}
stock FamilyUpdateData(famid, _type[], _data)
{
	new _str[256];
	format(_str, sizeof(_str), "UPDATE `family` SET `%s` = '%d' WHERE `fID` = '%d'",_type, _data, famid);
	mysql_tquery (connect, _str);
	return 1;
}
stock FamilyUpdateDataString(famid, _type[], _data[])
{
    new _str[256];
	format(_str, sizeof(_str), "UPDATE `family` SET `%s` = '%s' WHERE `fID` = '%d'",_type, _data, famid);
	mysql_tquery (connect, _str);
	return 1;
}
stock MansionUpdateData(mansionid, _type[], _data)
{
	new _str[256];
	format(_str, sizeof(_str), "UPDATE `mansion` SET `%s` = '%d' WHERE `mID` = '%d'",_type, _data, mansionid);
	mysql_tquery (connect, _str);
	return 1;
}
stock MansionUpdateDataString(mansionid, _type[], _data[])
{
	new _str[256];
	format(_str, sizeof(_str), "UPDATE `mansion` SET `%s` = '%s' WHERE `mID` = '%d'",_type, _data, mansionid);
	mysql_tquery (connect, _str);
	return 1;
}
stock MansionUpdateDataFloat(mansionid, _type[], Float:_data)
{
	new _str[256];
	format(_str, sizeof(_str), "UPDATE `mansion` SET `%s` = '%f' WHERE `mID` = '%d'",_type, _data, mansionid);
	mysql_tquery (connect, _str);
	return 1;
}
stock acc_int_strcat(query[], len, name[], number)
{
	new string[100];
	format(string, sizeof(string), "`%s` = '%d',",name, number);
	strcat(query, string, len);
	return true;
}
stock acc_str_strcat(query[], len, name[], str[])
{
	new string[100];
	format(string, sizeof(string), "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}
stock acc_float_strcat(query[], len, name[], Float:number)
{
	new string[100];
	format(string, sizeof(string), "`%s` = '%f',", name, number);
	strcat(query, string, len);
	return true;
}
stock SetPlayerSpawn(playerid)
{
    if(GetPlayerScore(playerid) == 0 && GetPlayerSkin(playerid) == 74 || PlayerInfo[playerid][pLevel] == 0 && GetPlayerSkin(playerid) == 0)
	{
	    format(YCMDstr, sizeof(YCMDstr), "{FF9900}[ANTITROLL] {FFFFFF}Motamashe {FF9900}%s {FFFFFF}Gaikicka, | Reason: {FF9900}0 Score Move",Name(playerid));
	    SendAdminMessage(COLOR_WHITE,YCMDstr);
	    Kick(playerid);
	    printf("[AntiCheat] - %s Gaikika Serveridan Cheterobis Gamo - [0 Score Move]", Name(playerid));
	}
    if(!isLogged[playerid])
    {
        senderror(playerid, "Sachiroa Gaiarot Avtorizacia");
        Kick(playerid);
        return false;
    }
    if(PlayerInfo[playerid][pMute] == 1)
    {
        SvMutePlayerEnable(playerid);
    }
    else
    {
        SvMutePlayerDisable(playerid);
    }
	CancelSelectTextDraw(playerid);
    Tazed[playerid] = false;
    SavePlayerLastIP(playerid);
    ResetAnimations(playerid);
    SetPlayerSkills(playerid);
    SetPlayerScoreEx(playerid);
    SetPlayerColorEx(playerid);
    SetPlayerHealth(playerid, 100.0);
    SetPlayerSkinEx(playerid);
    SetCameraBehindPlayer(playerid);
	ResetPlayerWeapons(playerid);
    DeletePVar(playerid, "AcitonID");
    PlayerTextDrawHide(playerid, Timer_PTD[playerid]);
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    //SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
    SetPlayerFamilyStatus(playerid);

    if(AdminDuty[playerid])
    {
        GivePlayerWeapon(playerid, 38, 100000);
        SetPlayerColor(playerid, COLOR_BLACK);
    }

    for(new i = 0; i < INV_MAX_ACCS; i ++)
    {
        if(InvData[playerid][i_UsedItems][i] != 19382)
        {
            UseInventoryItem(playerid, InvData[playerid][i_UsedItems][i]);
        }
    }
	if(KnockText[playerid] != Text3D:INVALID_3DTEXT_ID)
	{
 		Delete3DTextLabel(KnockText[playerid]);
 		KnockText[playerid] = Text3D:INVALID_3DTEXT_ID;
	}
	if(IsPlayerCuffed[playerid])
	{
		UncuffPlayer(playerid);
	}
	
 	if(GetLauncherStatus(playerid))
    {
        new Float:hp, Float:armor;
		cef_emit_event(playerid, "data:pool:health", CEFFLOAT(GetPlayerHealth(playerid, hp)));
		cef_emit_event(playerid, "data:pool:armor", CEFFLOAT(GetPlayerArmour(playerid, armor)));
		cef_emit_event(playerid, "data:pool:wanted", CEFINT(PlayerInfo[playerid][pWanted]));
    }

    if(PlayerInfo[playerid][pPrison])
    {
        switch(PlayerInfo[playerid][pPrison])
        {
            case 1:
            {
                UncuffPlayer(playerid);
				PlayerInfo[playerid][pWanted] = 0;
				PlayerUpdateData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
                ResetPlayerWeapons(playerid);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 2);
                SetPlayerPosEx(playerid, 5512.5005, 1245.4078, 23.1886, 3000);
                PlayerTextDrawColor(playerid, Timer_PTD[playerid], -1523963137);
                PlayerTextDrawShow(playerid, Timer_PTD[playerid]);
            }
            case 2:
            {
                new spawn_id = random(sizeof(StatePrisonSpawn));
                UncuffPlayer(playerid);
				PlayerInfo[playerid][pWanted] = 0;
				PlayerUpdateData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
                ResetPlayerWeapons(playerid);
                SetPlayerInterior(playerid, FractionInfo[FRACTION_LSPD][frac_Interior]);
                SetPlayerVirtualWorld(playerid, FractionInfo[FRACTION_LSPD][frac_VirtualWorld]);
                SetPlayerPosEx(playerid, StatePrisonSpawn[spawn_id][0], StatePrisonSpawn[spawn_id][1], StatePrisonSpawn[spawn_id][2], 3000);
                PlayerTextDrawColor(playerid, Timer_PTD[playerid], -1523963137);
                PlayerTextDrawShow(playerid, Timer_PTD[playerid]);
                SvMutePlayerEnable(playerid);
            }
        }
        return true;
    }
	if(ReconInfo[playerid][rec_SpawnStatus] == 1)
	{
	    SetPlayerPos(playerid, ReconInfo[playerid][rec_PosX], ReconInfo[playerid][rec_PosY], ReconInfo[playerid][rec_PosZ]);
	    SetPlayerFacingAngle(playerid, ReconInfo[playerid][rec_PosR]);
	    SetPlayerInterior(playerid, ReconInfo[playerid][rec_Interior]);
	    SetPlayerVirtualWorld(playerid, ReconInfo[playerid][rec_VirtualWorld]);
	    ReconInfo[playerid][rec_SpawnStatus] = 0;
	    return true;
	}
	switch(DMArea[playerid])
	{
		case 1:
		{
  			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
  			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
   			SetPlayerHealth(playerid,100);
	    	SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,DMVirtual[playerid]);
 			new rand = random(sizeof(DmRandom));
			SetPlayerPos(playerid, DmRandom[rand][0], DmRandom[rand][1], DmRandom[rand][2]);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
		case 2:
		{
  			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
  			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
   			SetPlayerHealth(playerid, 100);
	    	SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, DMVirtual[playerid]);
 			new rand = random(sizeof(DmRandom2));
			SetPlayerPos(playerid, DmRandom2[rand][0], DmRandom2[rand][1], DmRandom2[rand][2]);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
        case 3:
		{
  			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun"),1000);
  			GivePlayerWeapon(playerid, GetPVarInt(playerid,"pDmGun1"),1000);
   			SetPlayerHealth(playerid,100);
 			new rand = random(sizeof(DmRandom));
			SetPlayerPos(playerid, DmRandom[rand][0], DmRandom[rand][1], DmRandom[rand][2]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, DMVirtual[playerid]);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	}
	if(hospitalSpawn[playerid] == true)
	{
 		new spawn_id = random(sizeof(HospitalCoords));
        SetPlayerInterior(playerid, 9);
        SetPlayerVirtualWorld(playerid, 15);
        SetPlayerPosEx(playerid, HospitalCoords[spawn_id][0], HospitalCoords[spawn_id][1], HospitalCoords[spawn_id][2], 1500);
        SetPlayerFacingAngle(playerid, HospitalCoords[spawn_id][3]);
	    SetPlayerHealth(playerid, 5.0);
	    hospitalSpawn[playerid] = false;
	    return true;
	}
	if(KnockStatus[playerid])
	{
	    ApplyAnimation(playerid, "SWEET", "SWEET_INJUREDLOOP", 4.1, 1, 0, 0, 0, 0, 1);
	    SetPlayerPos(playerid, KnockPos[playerid][0], KnockPos[playerid][1], KnockPos[playerid][2]);
	    SetPlayerFacingAngle(playerid, KnockPos[playerid][3]);
	    SetPlayerInterior(playerid, KnockData[playerid][0]);
	    SetPlayerVirtualWorld(playerid, KnockData[playerid][1]);
	    ShowPlayerDialog(playerid, 1092, DIALOG_STYLE_MSGBOX, "{FE2E2E}Knock{ffffff} | Info", "{ffffff}- Tkven Xart Mdzimed Dachrili\n{FE2E2E}2 Wutis Ganmavlobashi Tu Vinme Ar Dagexmarat\nTkven Avtomaturad Moxvdebit Saavadmkofoshi", "Daxurva", "");
		format(gstr, sizeof(gstr), "{C24D4D}Knock : {308860}Individi Mdzimed Aris Dachrili\n{ffffff}Dasaxmareblad : /cure");
	    KnockText[playerid] = Create3DTextLabel(gstr, COLOR_WHITE, KnockPos[playerid][0], KnockPos[playerid][1], KnockPos[playerid][2], 10.0, KnockData[playerid][1], 1);
	    return true;
	}
 	if(IsAGang(playerid))
    {
        GivePlayerWeapon(playerid, 5, 1);
    }
	switch(PlayerInfo[playerid][pForm])
	{
	    case FRACTION_CITYHALL: if(PlayerInfo[playerid][pRank] < 4) GivePlayerWeapon(playerid, 24, 100);
	}
    switch(SpawnType[playerid])
    {
        case 0: // None
        {
            SpawnType[playerid] = 1;
            SpawnPlayer(playerid);
            return true;
        }
        case 1: // Spawn
        {
            if(PlayerInfo[playerid][pLevel] > 0)
            {
                new spawn_id = random(sizeof(SpawnCoords));
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPosEx(playerid, SpawnCoords[spawn_id][0], SpawnCoords[spawn_id][1], SpawnCoords[spawn_id][2], 1500);
                SetPlayerFacingAngle(playerid, SpawnCoords[spawn_id][3]);
            }
            else Kick(playerid);
            return true;
        }
        case 2: // House
        {
            if(CountPlayerHouses(playerid) != 0)
            {
                //new house = GetMyHouse(Name(playerid), 0);
                new house = GetMyHouse(Name(playerid), SpawnHouseID[playerid]);
                SetPlayerPosEx(playerid, HouseInfo[house][hExitPosition][0], HouseInfo[house][hExitPosition][1], HouseInfo[house][hExitPosition][2], 2000);
                SetPlayerInterior(playerid, HouseInfo[house][hInterior]);
                SetPlayerVirtualWorld(playerid, house+11);
                SetPlayerFacingAngle(playerid, HouseInfo[house][hFacingAngle]);
                SetPVarInt(playerid, "HouseID", house);
                SetTimerEx("FindHouseBug", 1000, false, "i", playerid);
                return true;
            }
            else
            {
                SpawnType[playerid] = 1;
                SpawnPlayer(playerid);
            }
            return true;
        }
        case 3: // Fraction
        {
            if(PlayerInfo[playerid][pMember] > 0)
            {
                new member = PlayerInfo[playerid][pMember];
                if(PlayerInfo[playerid][pForm] == member)
                {
                    SetPlayerPosEx(playerid, FractionInfo[member][frac_SpawnPositionX], FractionInfo[member][frac_SpawnPositionY], FractionInfo[member][frac_SpawnPositionZ], 2400);
                    SetPlayerInterior(playerid, FractionInfo[member][frac_Interior]);
                    SetPlayerVirtualWorld(playerid, FractionInfo[member][frac_VirtualWorld]);
                    SetPlayerFacingAngle(playerid, FractionInfo[member][frac_SpawnRotation]);
                }
                else
                {
                    SpawnType[playerid] = 1;
                    SpawnPlayer(playerid);
                }
                return true;
            }
            return true;
        }
        case 4: // Last Position
        {
            SetPlayerPosEx(playerid, PlayerInfo[playerid][pLastPos][0], PlayerInfo[playerid][pLastPos][1], PlayerInfo[playerid][pLastPos][2], 2500);
            SetPlayerFacingAngle(playerid, 128.15);
	        SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pLastVirtualWorld]);
	        SetPlayerInterior(playerid, PlayerInfo[playerid][pLastInterior]);
            SpawnType[playerid] = 1;
            return true;
        }
        case 5: // Mansion
        {
            if(PlayerInfo[playerid][pFamilyMember] == 0)
            {
                SpawnType[playerid] = 1;
                SpawnPlayer(playerid);
                return true;
            }
            if(FamilyInfo[p_family_id][fMansion] == 0)
            {
            	SpawnType[playerid] = 1;
                SpawnPlayer(playerid);
                return true;
            }
        	SetPlayerPosEx(playerid, -809.2901, 1126.1741, 1497.1621, 2500);
	        SetPlayerVirtualWorld(playerid, FamilyInfo[p_family_id][fMansion]+55);
	        SetPlayerInterior(playerid, 1);
            return true;
        }
    }
    if(PlayerInfo[playerid][pLevel])
    {
        new spawn_id = random(sizeof(SpawnCoords));
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerPosEx(playerid, SpawnCoords[spawn_id][0], SpawnCoords[spawn_id][1], SpawnCoords[spawn_id][2], 1500);
        SetPlayerFacingAngle(playerid, SpawnCoords[spawn_id][3]);
    }
    return true;
}
stock SetPlayerPosEx(playerid, Float:fX, Float:fY, Float:fZ, time=0)
{
    if(time)
    {
        TogglePlayerControllable(playerid, false);
        SetTimerEx("UnFreezePlayer", time, false, "i", playerid);
    }
    P_Sync[playerid][s_pos_x] = fX;
    P_Sync[playerid][s_pos_y] = fY;
    P_Sync[playerid][s_pos_z] = fZ;
    return SetPlayerPos(playerid, fX, fY, fZ);
}
stock SendAdminMessage(const color=-1, text[], level=1)
{
    foreach(new i:Player)
    {
        if(!isAlogged[i]) continue;
        if(PlayerInfo[i][pAdmin] < level) continue;
        SendClientMessage(i, color, text);
    }
}
stock SendFractionMessage(const color=-1, text[], fraction, rank=0)
{
	if(fraction == 0) return true;
    foreach(new i:Player)
    {
        if(PlayerInfo[i][pMember] != fraction) continue;
        if(PlayerInfo[i][pRank] < rank) continue;
        SendClientMessage(i, color, text);
    }
	return true;
}
stock SendDeveloperMessage(const color=-1, text[], bool:adminlogged=true)
{
    foreach(new i:Player)
    {
        if(!Mtavari(i)) continue;
        if(isAlogged[i] != adminlogged) continue;
        SendClientMessage(i, color, text);
    }
}
stock SendGangMessage(string[])
{
	foreach(new i:Player)
	{
		if(IsAGang(i))
		{
	 		SendClientMessage(i, COLOR_WHITE, string);
		}
	}
}
stock SendGhettoMessage(color, string[])
{
    foreach(new i:Player)
    {
        if(PlayerInfo[i][pAdmin] > 0) continue;
    	switch(PlayerInfo[i][pMember])
		{
			case FRACTION_BALLAS, FRACTION_VAGOS, FRACTION_AZTEC, FRACTION_GROVE, FRACTION_RIFA: SendClientMessage(i, color, string);
		}
	}
}
stock SendMaffiaMessage(color, string[])
{
    foreach(new i:Player)
    {
		if(IsAMafia(i) && PlayerInfo[i][pAdmin] == 0) SendClientMessage(i, color, string);
	}
}
stock SendGovermentMessage(color, string[])
{
    foreach(new i:Player)
    {
		if(IsAGov(i) && PlayerInfo[i][pAdmin] == 0) SendClientMessage(i, color, string);
	}
}
stock SendCasinoSMS(magida, color, string[])
{
	foreach(new i:Player)
	{
		if(GetPVarInt(i, "GameStol") == magida)
		{
			SendClientMessage(i, color, string);
		}
	}
}
stock SendVipMessage(color, string[])
{
    foreach(new i:Player)
    {
       if(PlayerInfo[i][pDonateRank] < 4) continue;
       SendClientMessage(i, color, string);
    }
}
stock SendFamilyMessage(famid, color=-1, text[])
{
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pFamilyMember] == famid)
		{
	 		SendClientMessage(i, color, text);
		}
	}
}
stock GeneratePassword(length)
{
	new GetPassword[75 + 5], string[15];
	for(new i = 0; i < length; i ++)
    {
	    new GetRandCode = random(sizeof(randomcode32));
		format(string, sizeof(string), "%s",randomcode32[GetRandCode]);
		strcat(GetPassword, string);
	}
	return GetPassword;
}
stock SendNearText(playerid, text[], Float:range = 10.0, const color = -1)
{
    new Float:x, Float:y, Float:z, virtualworld = GetPlayerVirtualWorld(playerid);
    GetPlayerPos(playerid, x, y, z);
    foreach(new i:Player)
    {
        if(!isLogged[i]) continue;
        if(!gBigEar[i])
        {
	        if(IsPlayerInRangeOfPoint(i, range, x, y, z) && GetPlayerVirtualWorld(i) == virtualworld)
	        {
	            SendClientMessage(i, color, text);
	        }
		}
		else
		{
		    SendClientMessage(i, color, text);
		}
    }
    return true;
}
stock GetNearestFormPickup(playerid, Float:range=5.0)
{
    for(new i = 0; i < sizeof(FractionFormPositions); i ++)
    {
        if(IsPlayerInRangeOfPoint(playerid, range, FractionFormPositions[i][0], FractionFormPositions[i][1], FractionFormPositions[i][2]))
        {
            return i;
        }
    }
    return FRACTION_NONE;
}
stock LoadDrugObj()
{
	DrugObj[0] = CreateDynamicObject(19473, -601.96210, -1489.23291, 12.57580,   0.00000, 0.00000, 0.00000);
	DrugObj[1] = CreateDynamicObject(19473, -49.96460, -1543.31104, 1.00830,   0.00000, 0.00000, 0.00000);
	DrugObj[2] = CreateDynamicObject(19473, 231.58401, -1625.28796, 31.97510,   0.00000, 0.00000, 0.00000);
	DrugObj[3] = CreateDynamicObject(19473, 1911.85498, -1202.83301, 18.48390,   0.00000, 0.00000, 0.00000);
	DrugObj[4] = CreateDynamicObject(19473, 2308.19751, -959.21509, 66.18996,   0.00000, 0.00000, 0.00000);
	DrugObj[5] = CreateDynamicObject(19473, 2819.46240, -1209.38342, 23.54860,   0.00000, 0.00000, 0.00000);
	for(new i = 0; i < sizeof(DrugObj); i ++)
	{
	    new Float:x, Float:y, Float:z;
	    GetDynamicObjectPos(DrugObj[i], x, y, z);
	    Create3DTextLabel("{ffffff}Press: ALT", COLOR_WHITE, x, y, z + 1,5.0,0,0);
	}
}
stock LoadSettings()
{
	obshiaki[0] = 0;
	obshiaki[1] = 0;
 	obshiaki[2] = 0;
 	obshiaki[3] = 0;
 	obshiaki[4] = 0;
 	obshiaki[5] = 0;
 	obshiaki[6] = 0;
 	obshiaki[7] = 0;
 	armyalarmtime = gettime();
 	ElectionON = 0;
 	mafiaon = 1;
 	atroll = 1;
 	miwera = 0;
 	vipchat = true;
 	Boost2X = 1;
}
stock LoadPickups()
{
    /* ====================================================================== */
    autoschoolEx[0] = CreateDynamicPickup(1318,23, 1104.6449,-1675.5818,13.6528);
    autoschoolEx[1] = CreateDynamicPickup(1318,23,1166.5885,-1321.5516,1221.6130,3);
    /* ====================================================================== */
    parashuti = CreateDynamicPickup(371, 23, 1952.9723, -2179.0281, 13.5469);
    /* ====================================================================== */
    clothes4dr = CreateDynamicPickup(1275,23, 1141.8274, 9.8202, 1000.6797);
    /* ====================================================================== */
    fbiEx[0] = CreateDynamicPickup(19133,23, 1473.2711, 254.6203, 1000.9760);
	fbiEx[1] = CreateDynamicPickup(19133,23, 943.0119, -1742.5665, 13.5546);
	fbiLift[0] = CreateDynamicPickup(1318,23, 1476.8739, 269.3103, 1000.9760);
	fbiLift[1] = CreateDynamicPickup(1318,23, 1480.1023, 269.8099, 1013.6290);
	//
	lspdlift[0] = CreateDynamicPickup(1318,23, 1194.5968,1335.8364,3011.0005);
	lspdlift[1] = CreateDynamicPickup(1318,23, 1197.6259,1335.7139,3014.4912);
	//
	lspdlift[2] = CreateDynamicPickup(1318,23, 1219.9130,1335.7434,3014.4912);
	lspdlift[3] = CreateDynamicPickup(1318,23, 654.2769,1391.2118,3020.8884);
	//
	lspdlift[4] = CreateDynamicPickup(1318,23, 1218.0682,1347.1920,3011.0005);
	lspdlift[5] = CreateDynamicPickup(1318,23, 1219.2083,1348.7332,3011.0005);
    /* ====================================================================== */
	lspdEx[0] = CreateDynamicPickup(1318,23, 1555.5045, -1675.6536, 16.1953);
	lspdEx[1] = CreateDynamicPickup(1318,23, 1209.9425,1332.2244,3011.0005);
    /* ====================================================================== */
    armyEx[0] = CreateDynamicPickup(1318, 23, 316.4431, -170.2959, 999.5938, 3);
    armyEx[1] = CreateDynamicPickup(1318, 23, 2729.3267, -2451.4678, 17.5937);
	/* ====================================================================== */
	medicss[0] = CreateDynamicPickup(1318,23, 1172.0767, -1323.3440, 15.4030); //
	medicss[1] = CreateDynamicPickup(1318,23, -50.8207, 158.3299, 999.0569);
	/* ====================================================================== */
    ballaspic[0] = CreateDynamicPickup(1318, 23, 318.6351,1114.4799,1083.8828, 10);
    ballaspic[1] = CreateDynamicPickup(1318, 23, 2650.7041,-2021.8840,14.1766);
    /* ====================================================================== */
    vagospic[0] = CreateDynamicPickup(1318, 23, 318.6351,1114.4799,1083.8828, 11);
    vagospic[1] = CreateDynamicPickup(1318, 23, 2756.3467,-1182.8098,69.4035);
    /* ====================================================================== */
    aztecapic[0] = CreateDynamicPickup(1318, 23, 318.6351,1114.4799,1083.8828, 12);
    aztecapic[1] = CreateDynamicPickup(1318, 23, 1667.5156,-2106.9407,14.0723);
    /* ====================================================================== */
    grovepic[0] = CreateDynamicPickup(1318, 23, 318.6351,1114.4799,1083.8828, 13);
    grovepic[1] = CreateDynamicPickup(1318, 23, 2495.3696,-1691.1400,14.7656);
    /* ====================================================================== */
    rifapic[0] = CreateDynamicPickup(1318, 23, 318.6351,1114.4799,1083.8828, 14);
    rifapic[1] = CreateDynamicPickup(1318, 23, 2185.7615,-1815.2274,13.5469);
    /* ====================================================================== */
	lcnpic[0] = CreateDynamicPickup(1318,23,-42.5496,1405.4700,1084.4297,FractionInfo[FRACTION_LCN][frac_VirtualWorld]);//Vagos ????
	lcnpic[1] = CreateDynamicPickup(1318,23,2481.0322,1525.0209,11.7737);//Vagos ?????
    /* ========================== << [ Yakuza ] >> ========================== */
    yakuzapic[0] = CreateDynamicPickup(1318,23,-42.5466,1405.4681,1084.4297,FractionInfo[FRACTION_YAKUZA][frac_VirtualWorld]);
	yakuzapic[1] = CreateDynamicPickup(1318,23,1456.3470,2773.3147,10.8203);
    /* ======================= << [ Russia Maffia ] >> ====================== */
    rmpic[0] = CreateDynamicPickup(1318,23,-42.5466,1405.4681,1084.4297,FractionInfo[FRACTION_RM][frac_VirtualWorld]);//
	rmpic[1] = CreateDynamicPickup(1318,23,937.7391,1732.2479,8.8516);
    /* ====================================================================== */
	hospitalHP = CreateDynamicPickup(1240, 23, -8.0710,145.0218,999.0519);
	/* ====================================================================== */
	marenter = CreateDynamicPickup(1318,23, 1481.2858, -1771.8811, 18.7958);
	marexit = CreateDynamicPickup(1318,23, 1419.3918,-35.7756,1000.9170, 40);
	CreateFamilyPic = CreateDynamicPickup(1314,23, 1401.5465,-41.4298,1000.9170);
	/* ====================================================================== */
 	WFPickupEx[0] = CreateDynamicPickup(1318,23, 1328.1553, -1271.2799, 13.5469);
    WFPickupEx[1] = CreateDynamicPickup(1318,23, 2577.0117, -1289.9645, 1044.1250);
    WFTake[0] = CreateDynamicPickup(19135, 1, 2559.14990, -1287.09998, 1043.84998);
	WFTake[1] = CreateDynamicPickup(19135, 1, 2551.10010, -1287.09998, 1043.84998);
	WFTake[2] = CreateDynamicPickup(19135, 1, 2543.10010, -1287.09998, 1043.84998);
	WFTake[3] = CreateDynamicPickup(19135, 1, 2559.10010, -1300.25000, 1043.84998);
	WFTake[4] = CreateDynamicPickup(19135, 1, 2551.10010, -1300.25000, 1043.84998);
	WFTake[5] = CreateDynamicPickup(19135, 1, 2543.08008, -1300.25000, 1043.84998);
	for(new i = 0; i < 10; i++) WFTables[i] = CreateDynamicSphere(WFTablePosition[i][0], WFTablePosition[i][1], WFTablePosition[i][2], 0.4);
	/* ====================================================================== */
	//bankPic[0] = CreateDynamicPickup(1318, 23, 1319.4882, 9.8562, 2068.5129);1397.8778,-1672.0184,39.5649
	bankPic[0] = CreateDynamicPickup(1318, 23, 1397.8778,-1672.0184,39.5649);
	bankPic[1] = CreateDynamicPickup(1318, 23, 1495.0869, -1279.9288, 14.5749);

	gunPic[0] = CreateDynamicPickup(1318, 23, -730.6885,1449.5245,-90.4973, 3);
	gunPic[1] = CreateDynamicPickup(1318, 23, 1368.9998,-1279.7072,13.5469);

	sacavi[0] = CreateDynamicPickup(1318, 23, 1310.7136, 16.4700, 2068.5129);
	sacavi[1] = CreateDynamicPickup(1318, 23, 1993.8807, 1833.2465, 1006.1677);
	BankSafePic = CreateDynamicPickup(1550, 23, 1992.3679, 1869.9662, 993.5761);
	/* ====================================================================== */
	hamcvhod = CreateDynamicPickup(1318, 23, 681.5627, -473.9190, 16.5363);
	hamcvqhod = CreateDynamicPickup(1318, 23, 501.7259, -67.6832, 998.7578, 16);
	lspic[0] = CreateDynamicPickup(19133, 23,732.4427, -1349.3025, 13.5079);
	lspic[1] = CreateDynamicPickup(19133, 23,2830.5298, 1673.7766, 2001.0859, 17);
	//
	Learn_Fighting = CreateDynamicPickup(1239,23, 762.0074, 5.4101, 1000.7112);
	GYMPickup[0] = CreateDynamicPickup(19197,23, 2229.8936, -1721.2491, 13.5612);
	GYMPickup[1] = CreateDynamicPickup(19197,23, 772.3377, -5.5149, 1000.7286);
	/* ====================================================================== */
	//AutoSackPickup = CreateDynamicPickup(1210, 23, 2131.9290,-1150.5599,24.1452);
	/* ====================================================================== */
	ElectionPick = CreateDynamicPickup(19131,23, 1565.2904,-1575.3813,1001.0900);
	ElectionPickX = CreateDynamicPickup(19131,23, 1565.2904,-1575.3813,1001.0900,1);
	/* ====================================================================== */
	TrailerInvite = CreateDynamicPickup(1239,23,2361.9319,2778.6121,10.8203);
	/* ====================================================================== */
 	CreateDynamicPickup(3096, 23, 1372.3453,-1771.2546,14.0603); //REPAIR
    CreateDynamicPickup(3096, 23, 1394.7490,-1163.4434,23.6495); //REPAIR
    CreateDynamicPickup(3096, 23, 1009.9204,-1357.5983,13.2453); //REPAIR
}
stock LoadTextLabels()
{
    Create3DTextLabel("{FA8258}Skydiving", 0x00D900C8, 1952.9723, -2179.0281, 13.5469, 30.0, 0);
    Create3DTextLabel("{4FB64F}Deathmatch Area\n{FFFFFF}Shesasvlelad Sheiyvanet: /dm",COLOR_WHITE,2695.4736,-1704.6350,11.8438,15.0,0,1);
    Create3DTextLabel("{ffffff}PRESS: ALT", COLOR_WHITE, 2131.8474, -1150.7032, 24.1286, 30.0, 0);

	Create3DTextLabel("{ffffff}Floor: {81BEF7}'2", -1, 1476.8739, 269.3103, 1000.9760, 10.0, 4);
	Create3DTextLabel("{ffffff}Floor: {81BEF7}'1", -1, 1480.1023, 269.8099, 1013.6290, 10.0, 4);
	CreateDynamic3DTextLabel("{ff0000}AutoSalon{ffffff}\nMankanis Sakidlad Daachiret\n{ff0000}'ALT'", 0xFFFFFFAA, -1657.7375, 1210.2341, 7.2500, 8.0);
}
stock LoadDemorgan()
{
    CreateDynamicObject(18759, 5512.34229, 1244.40442, 22.18864,   0.00000, 0.00000, 0.00000);
}
stock LoadFarm()
{
    // ======================== << [ FARM SYSTEM NEW ] >> =========================== //
    farmEx = AddInteractPosition(1275, "Press {3FF59C}ALT", farmEx, -257.3548, -1363.2465, 9.4872, COLOR_WHITE);
    //CreateDynamic3DTextLabel(!"{00FF7F}Farmer\n{FFFFFF}Click ALT", -1, -257.3548,-1363.2465,9.4872, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
	for(new i = 0; i < MAX_FARM_OBJECT; i ++)
    {
        new string[150];
        FarmObjectInfo[i][cQulebi] = 10;
        FarmObjectInfo[i][cStatus] = 2;
        FarmObjectInfo[i][cObject] = CreateDynamicObject(865, FarmObjectInfo[i][cPosX], FarmObjectInfo[i][cPosY], FarmObjectInfo[i][cPosZ]-1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);

        format(string, sizeof(string), "{FF582D}Darchenili Mosavali - {3FF59C}(%d/10)\n\n{FF582D}Mosavlis Asagebad\n\n{FF582D}Daachiret {3FF59C}ALT", FarmObjectInfo[i][cQulebi]);
        FarmObjectInfo[i][cTextLabel] = CreateDynamic3DTextLabel(string, -1, FarmObjectInfo[i][cPosX], FarmObjectInfo[i][cPosY], FarmObjectInfo[i][cPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
}
stock LoadInteractions()
{
    rentcarEx = AddInteractPosition(19134, "Press {4FB64F}ALT", rentcarEx, 1161.3861, -1732.4519, 13.7734, COLOR_WHITE); // Rent Car
    skinshopEx = AddInteractPosition(1275, "Press {4FB64F}ALT", skinshopEx, 690.8548, -1607.1835, 14.5957, COLOR_WHITE); // Skin Shop

	pasportEx = AddInteractPosition(1239, "Press {4FB64F}ALT", pasportEx, 1405.3977,-32.5058,1000.9170, COLOR_WHITE); // Pasport

    lspdGuns = AddInteractPosition(353, "Press {4FB64F}ALT", lspdGuns, 1221.8672,1349.9130,3011.0005, COLOR_WHITE); // LSPD Take Gun
    armyEx[2] = AddInteractPosition(353, "Press {4FB64F}ALT", armyEx[2], 315.2319, -160.2998, 999.5938, COLOR_WHITE);
    fbiGuns = AddInteractPosition(353, "Press {4FB64F}ALT", fbiGuns, 1467.5073, 253.6497, 1013.5259, COLOR_WHITE);
	houseSales = AddInteractPosition(19523, "Press {4FB64F}ALT", houseSales, 1401.5848,-30.3742,1000.9170, COLOR_WHITE);
	WFStart = AddInteractPosition(1275, "Press {4FB64F}ALT", WFStart, 2567.8357, -1283.1879, 1044.1250, COLOR_WHITE);
	PlantationForm = AddInteractPosition(1275, "Press {4FB64F}ALT", PlantationForm, -570.9138, -1500.2684, 9.4997, COLOR_WHITE);
	ShaftPickup = AddInteractPosition(1275, "Press {4FB64F}ALT", ShaftPickup, 1277.7533, -1263.0232, 13.5329, COLOR_WHITE);
	merialicenses = AddInteractPosition(19131, "Press {4FB64F}ALT", merialicenses, 1405.1871,-38.7680,1000.9170, COLOR_WHITE);
    for(new i = 0; i < sizeof(FractionFormPositions); i ++)
    {
        if(i == FRACTION_NONE) continue;
        if(FractionFormPositions[i][0] == 0.0) continue;
        FractionFormPickup[i] = AddInteractPosition(1275, "Press {4FB64F}ALT", FractionFormPickup[i], FractionFormPositions[i][0], FractionFormPositions[i][1], FractionFormPositions[i][2], COLOR_WHITE);
    }
}
new mayor[88];
stock LoadAllObject()
{
    #include "..\..\library\MAP\Interior\House_HIGH.inc"
    #include "..\..\library\MAP\Interior\House_MEDIUM.inc"
    #include "..\..\library\MAP\Interior\House_LOW.inc"
    #include "..\..\library\MAP\Interior\AutoSchool.inc"
    #include "..\..\library\MAP\Interior\Medic.inc"
    #include "..\..\library\MAP\Interior\WeaponFactory.inc"
    //#include "..\..\library\MAP\Interior\Bank.inc"
    #include "..\..\library\MAP\Interior\BankNew.inc"
    #include "..\..\library\MAP\Interior\LSNews.inc"
    #include "..\..\library\MAP\Interior\FBI.inc"
	#include "..\..\library\MAP\Interior\CityHallNew.inc"
	#include "..\..\library\MAP\Interior\Gunshop.inc"
	#include "..\..\library\MAP\Interior\Mansion.inc"
	#include "..\..\library\MAP\Interior\Garage.inc"
	#include "..\..\library\MAP\Interior\LSPDInterior.inc"

    #include "..\..\library\MAP\Exterior\SkinShop.inc"
    //#include "..\..\library\MAP\Exterior\AutoSchool.inc"
    #include "..\..\library\MAP\Exterior\CityMap.inc"
    #include "..\..\library\MAP\Exterior\Army.inc"
    #include "..\..\library\MAP\Exterior\FarmNew.inc"
    #include "..\..\library\MAP\Exterior\Hospital.inc"
    #include "..\..\library\MAP\Exterior\Plantation.inc"
    #include "..\..\library\MAP\Exterior\GenuinePark.inc"
    #include "..\..\library\MAP\Exterior\CityHall.inc"
    #include "..\..\library\MAP\Exterior\BetterLS.inc"
    #include "..\..\library\MAP\Exterior\Shaft.inc"
    #include "..\..\library\MAP\Exterior\RepairMaps.inc"
    #include "..\..\library\MAP\Exterior\Container.inc"

	#if newyear == true
	    #include "..\..\library\MAP\Exterior\Newyear.inc"
	#endif

    #include "..\..\library\MAP\Others.inc"

    CreateDynamicObject(3071, 772.69379, 5.66064, 999.96722,   0.00000, 90.00000, 90.00000, 35);
	CreateDynamicObject(3071, 772.69177, 5.14746, 999.96722,   0.00000, 90.00000, 90.00000, 35);

	fso_map = CreateDynamicObject(5811, 1644.262817, 178.617798, 36.131771, 0.000000, 0.000000, 349.018799, -1, -1);
	SetDynamicObjectMaterialText(fso_map, 5, "Social Media", 130, "Arial", 25, 1, 0xFFFFFFFFFF000000, 0xFFFFFFFFFFCCCCCC, 1);
	SetDynamicObjectMaterialText(fso_map, 4, "youtube.com/@genuineproject29", 130, "Arial", 34, 1, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFF0000, 1);
	SetDynamicObjectMaterialText(fso_map, 3, "discord.gg/JwJYjC3D", 130, "Arial", 34, 1, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFF7289DA, 1);
	SetDynamicObjectMaterialText(fso_map, 2, "instagram.com/_akinkladze", 130, "Arial", 34, 1, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFE1306C, 1);
	SetDynamicObjectMaterialText(fso_map, 1, "facebook.com/groups/genuineroleplay", 130, "Arial", 34, 1, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFF1DA1F2, 1);
	SetDynamicObjectMaterialText(fso_map, 0, "genuine-rp.ge", 110, "Arial", 24, 1, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFF333333, 1);
	CreateDynamicObject(973, 1646.633179, 181.063812, 32.438549, 0.000020, 4.000003, 71.399940, -1, -1);
}
stock LoadGiftTD(playerid)
{
    #include "..\..\library\TextDraw\Player\Gift"
}
stock pLoadTextDraws(playerid)
{
    #include "..\..\library\TextDraw\Player\RentCar.inc"
    #include "..\..\library\TextDraw\Player\Select.inc"
    //#include "..\..\library\TextDraw\Player\Inventory.inc"
    //#include "..\..\library\TextDraw\Player\Pick.inc"
    #include "..\..\library\TextDraw\Player\Capture.inc"
    #include "..\..\library\TextDraw\Player\rouletteplayer"
    //#include "..\..\library\TextDraw\Player\Buy3.inc"
    #include "..\..\library\TextDraw\Player\JetxPlayerid.inc"
    #include "..\..\library\TextDraw\Player\maffia.inc"
    #include "..\..\library\TextDraw\Player\CaseMenu"
   	#include "..\..\library\TextDraw\Player\NewInventory.inc"
	#include "..\..\library\TextDraw\Player\Pick2.inc"
	#include "..\..\library\TextDraw\Player\AutoSalonTD.inc"
}
stock gLoadTextDraws()
{
    #include "..\..\library\TextDraw\Global\RentCar.inc"
    #include "..\..\library\TextDraw\Global\ReconMenu.inc"
    #include "..\..\library\TextDraw\Global\SpawnMenu.inc"
    //#include "..\..\library\TextDraw\Global\Inventory.inc"
    #include "..\..\library\TextDraw\Global\NewLogo.inc"
    #include "..\..\library\TextDraw\Global\Phone.inc"
    #include "..\..\library\TextDraw\Global\PhoneCall.inc"
    #include "..\..\library\TextDraw\Global\SelectCase.inc"
    #include "..\..\library\TextDraw\Global\CaseMenu.inc"
    //#include "..\..\library\TextDraw\Global\Buy2.inc"
    #include "..\..\library\TextDraw\Global\Report.inc"
    #include "..\..\library\TextDraw\Global\Reports.inc"
    #include "..\..\library\TextDraw\Global\rouletteglobal"
    #include "..\..\library\TextDraw\Global\Zone.inc"
    #include "..\..\library\TextDraw\Global\JetxGlobal.inc"
    #include "..\..\library\TextDraw\Global\NewGreenZone.inc"
    #include "..\..\library\TextDraw\Global\NewInventory.inc"
    #include "..\..\library\TextDraw\Global\AutoSalonTD.inc"
    #include "..\..\library\TextDraw\Global\Gift.inc"
    //#include "..\..\library\TextDraw\Global\Roulette.inc"
}

stock LoadVehicles()
{
    /* ====================================================================== */
    AutoSchoolCars[0] = AddStaticVehicleEx(560,1120.6106,-1669.4675,13.3578,180.0781, 1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[1] = AddStaticVehicleEx(560,1123.6229,-1669.4532,13.3578,180.1166, 1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[2] = AddStaticVehicleEx(560,1126.5950,-1669.4486,13.3578,180.0213, 1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[3] = AddStaticVehicleEx(560,1129.5753,-1669.4257,13.3578,180.3474,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[4] = AddStaticVehicleEx(560,1132.6433,-1669.4143,13.3577,180.2374,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[5] = AddStaticVehicleEx(560,1136.3506,-1672.9753,13.3581,90.8491,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[6] = AddStaticVehicleEx(560,1136.3562,-1676.0244,13.3579,89.0057,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[7] = AddStaticVehicleEx(560,1136.3699,-1678.9904,13.3578,90.4844, 1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[8] = AddStaticVehicleEx(560,1136.3505,-1682.0520,13.3577,90.0343, 1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[9] = AddStaticVehicleEx(560,1136.3254,-1685.0289,13.3578,90.7591, 1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[10] = AddStaticVehicleEx(560,1136.3033,-1688.0646,13.3579,90.2811,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[11] = AddStaticVehicleEx(560,1136.3389,-1691.0421,13.3579,90.9677,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[12] = AddStaticVehicleEx(560,1136.3407,-1693.9912,13.3578,90.4500,  1, 1, VEHICLE_RESPAWN);
    AutoSchoolCars[13] = AddStaticVehicleEx(560,1136.3550,-1697.0251,13.3578,90.6020,  1, 1, VEHICLE_RESPAWN);
    /* ====================================================================== */
	lspdcar[0] = AddStaticVehicleEx(415, 1558.7000, -1710.5000, 5.5757, 0.0000,   79, 1, VEHICLE_RESPAWN);
	lspdcar[1] = AddStaticVehicleEx(596, 1587.5000, -1710.5000, 5.5757, 0.0000,   79, 1, VEHICLE_RESPAWN);
	lspdcar[2] = AddStaticVehicleEx(596, 1583.5000, -1710.5000, 5.5757, 0.0000,   79, 1, VEHICLE_RESPAWN);
	lspdcar[3] = AddStaticVehicleEx(596, 1578.5500, -1710.5000, 5.5757, 0.0000,   79, 1, VEHICLE_RESPAWN);
	lspdcar[4] = AddStaticVehicleEx(596, 1574.3500, -1710.5000, 5.5757, 0.0000,   79, 1, VEHICLE_RESPAWN);
	lspdcar[5] = AddStaticVehicleEx(596, 1570.2500, -1710.5000, 5.5757, 0.0000,   79, 1, VEHICLE_RESPAWN);
	lspdcar[6] = AddStaticVehicleEx(601, 1529.2648, -1683.9962, 5.5413, 270.7345, 79, 1, VEHICLE_RESPAWN);
	lspdcar[7] = AddStaticVehicleEx(601, 1529.3715, -1688.1726, 5.6362, 269.6888, 79, 1, VEHICLE_RESPAWN);
	lspdcar[8] = AddStaticVehicleEx(523, 1545.5000, -1663.1000, 5.4239, 90.0000,  79, 1, VEHICLE_RESPAWN);
	lspdcar[9] = AddStaticVehicleEx(523, 1545.5000, -1667.8837, 5.4239, 90.0000,  79, 1, VEHICLE_RESPAWN);
	lspdcar[10] = AddStaticVehicleEx(523, 1545.5000, -1672.0883, 5.4239, 90.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[11] = AddStaticVehicleEx(523, 1545.5000, -1676.3691, 5.4239, 90.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[12] = AddStaticVehicleEx(599, 1585.5000, -1671.5000, 5.9595, -90.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[13] = AddStaticVehicleEx(599, 1585.5000, -1667.5000, 5.9595, -90.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[14] = AddStaticVehicleEx(427, 1530.5500, -1645.3389, 5.8962, 180.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[15] = AddStaticVehicleEx(427, 1534.7000, -1645.3389, 5.8962, 180.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[16] = AddStaticVehicleEx(427, 1539.0000, -1645.3389, 5.8962, 180.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[17] = AddStaticVehicleEx(497, 1555.0000, -1612.0000, 13.5000, 180.0000, 79, 1, VEHICLE_RESPAWN);
	lspdcar[18] = AddStaticVehicleEx(497, 1565.0000, -1612.0000, 13.5000, 180.0000, 79, 1, VEHICLE_RESPAWN);
    /* ====================================================================== */
    fbicar[0] = AddStaticVehicleEx(490, 929.9684, -1727.6338, 13.6761, 90.0000,  0, 0, VEHICLE_RESPAWN);
	fbicar[1] = AddStaticVehicleEx(490, 929.9684, -1711.8790, 13.6761, 90.0000,  0, 0, VEHICLE_RESPAWN);
	fbicar[2] = AddStaticVehicleEx(482, 949.3714, -1693.8885, 13.6656, 0.0000,   0, 0, VEHICLE_RESPAWN);
	fbicar[3] = AddStaticVehicleEx(482, 945.6992, -1693.8885, 13.6656, 0.0000,   0, 0, VEHICLE_RESPAWN);
	fbicar[4] = AddStaticVehicleEx(415, 942.3234, -1694.5857, 13.2475, 0.0000,   0, 0, VEHICLE_RESPAWN);
	fbicar[5] = AddStaticVehicleEx(415, 938.8193, -1694.5857, 13.2475, 0.0000,   0, 0, VEHICLE_RESPAWN);
	fbicar[6] = AddStaticVehicleEx(426, 946.4802, -1757.0316, 13.2497, 180.0000, 0, 0, VEHICLE_RESPAWN);
	fbicar[7] = AddStaticVehicleEx(426, 951.1573, -1757.0316, 13.2497, 180.0000, 0, 0, VEHICLE_RESPAWN);
	fbicar[8] = AddStaticVehicleEx(426, 956.1215, -1757.0316, 13.2497, 180.0000, 0, 0, VEHICLE_RESPAWN);
	/* ====================================================================== */
	medicscar[0] = AddStaticVehicleEx(416,1178.5431,-1338.7671,14.0167,270.0624,1,3, VEHICLE_RESPAWN);
	medicscar[1] = AddStaticVehicleEx(416,1178.0116,-1308.9192,13.9939,268.2672,1,3, VEHICLE_RESPAWN);
	medicscar[2] = AddStaticVehicleEx(487,1178.7334,-1361.2590,14.2509,269.0083,1,3, VEHICLE_RESPAWN);
	medicscar[3] = AddStaticVehicleEx(416,1145.6483,-1311.8895,13.8003,91.8553,1,3, VEHICLE_RESPAWN);
	medicscar[4] = AddStaticVehicleEx(416,1145.3275,-1306.1224,13.8045,88.2659,1,3, VEHICLE_RESPAWN);
	medicscar[5] = AddStaticVehicleEx(416,1145.8798,-1302.2570,13.8015,88.1521,1,3, VEHICLE_RESPAWN);
    /* ====================================================================== */
	armycar[0] = AddStaticVehicleEx(432, 2798.1724, -2554.1096, 13.7565, 0.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[1] = AddStaticVehicleEx(470, 2733.6592, -2548.5833, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[2] = AddStaticVehicleEx(470, 2740.4014, -2548.6453, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[3] = AddStaticVehicleEx(470, 2740.4014, -2539.8748, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[4] = AddStaticVehicleEx(470, 2740.4014, -2530.6914, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[5] = AddStaticVehicleEx(470, 2740.4014, -2521.7446, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[6] = AddStaticVehicleEx(470, 2733.6592, -2539.8748, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[7] = AddStaticVehicleEx(470, 2733.6592, -2530.6914, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[8] = AddStaticVehicleEx(470, 2733.6592, -2521.7446, 13.6175, -90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[9] = AddStaticVehicleEx(433, 2794.9038, -2486.5803, 14.1209, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[10] = AddStaticVehicleEx(433, 2794.9038, -2474.5928, 14.1209, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[11] = AddStaticVehicleEx(433, 2794.9038, -2480.6953, 14.1209, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[12] = AddStaticVehicleEx(431, 2795.1743, -2446.2444, 13.6468, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[13] = AddStaticVehicleEx(431, 2794.9038, -2438.7290, 13.6468, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[14] = AddStaticVehicleEx(425, 2796.2134, -2396.8916, 14.3792, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[15] = AddStaticVehicleEx(425, 2796.2134, -2380.3215, 14.3792, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[16] = AddStaticVehicleEx(425, 2796.2134, -2365.6431, 14.3792, 90.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[17] = AddStaticVehicleEx(497, 2781.5952, -2343.4731, 13.7977, 180.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[18] = AddStaticVehicleEx(520, 2764.8252, -2359.9795, 14.2367, -135.0000, 180, 180, VEHICLE_RESPAWN);
	armycar[19] = AddStaticVehicleEx(520, 2764.8252, -2376.5647, 14.2367, -135.0000, 180, 180, VEHICLE_RESPAWN);
	/* ====================================================================== */
	/* ====================================================================== */
	vagoscar[0] = AddStaticVehicleEx(467,2761.1113,-1177.4034,69.1072,90.9622,1,6,VEHICLE_RESPAWN);
	vagoscar[1] = AddStaticVehicleEx(474,2742.7019,-1188.0476,69.0791,0.6235,6,6,VEHICLE_RESPAWN);
	vagoscar[2] = AddStaticVehicleEx(474,2742.1958,-1166.2170,69.1452,2.7342,6,6,VEHICLE_RESPAWN);
	vagoscar[3] = AddStaticVehicleEx(474,2742.1863,-1149.0377,69.2538,0.2541,6,6,VEHICLE_RESPAWN);
	vagoscar[4] = AddStaticVehicleEx(474,2742.0378,-1134.9971,69.2553,0.2727,6,6,VEHICLE_RESPAWN);
	vagoscar[5] = AddStaticVehicleEx(467,2717.5635,-1163.6390,69.4949,0.2727,1,6,VEHICLE_RESPAWN);
	vagoscar[6] = AddStaticVehicleEx(467,2717.4460,-1146.6664,69.5781,0.2727,1,6,VEHICLE_RESPAWN);
	vagoscar[7] = AddStaticVehicleEx(467,2741.8823,-1158.1708,69.3735,0.2727,1,6,VEHICLE_RESPAWN);
	vagoscar[8] = AddStaticVehicleEx(422,2730.1416,-1172.5264,69.4333,360.0000,6,6,VEHICLE_RESPAWN);
	vagoscar[9] = AddStaticVehicleEx(510,2729.7788,-1183.4454,69.0114,273.8413,6,6,VEHICLE_RESPAWN);
	vagoscar[10] = AddStaticVehicleEx(510,2729.6685,-1185.0753,69.0012,277.2777,6,6,VEHICLE_RESPAWN);
	vagoscar[11] = AddStaticVehicleEx(510,2729.7688,-1186.8381,68.9969,273.5518,6,6,VEHICLE_RESPAWN);
 	/* ====================================================================== */
	/* ====================================================================== */
	ballascar[0] = AddStaticVehicleEx(412,2649.9678,-1998.1385,13.3461,234.9756,85,1,VEHICLE_RESPAWN); // BallasCar 1
	ballascar[1] = AddStaticVehicleEx(412,2656.2139,-1997.7274,13.3473,231.4372,85,1,VEHICLE_RESPAWN); // BallasCar 2
	ballascar[2] = AddStaticVehicleEx(516,2658.9233,-2009.4418,13.3393,300.7100,85,1,VEHICLE_RESPAWN); // BallasCar 3
	ballascar[3] = AddStaticVehicleEx(516,2665.1628,-2010.4807,13.3449,303.3316,85,1,VEHICLE_RESPAWN); // BallasCar 4
	ballascar[4] = AddStaticVehicleEx(566,2664.8657,-1998.5177,13.2934,233.2404,85,1,VEHICLE_RESPAWN); // BallasCar 5
	ballascar[5] = AddStaticVehicleEx(566,2670.1104,-1997.6185,13.2940,227.1615,85,1,VEHICLE_RESPAWN); // BallasCar 6
	ballascar[6] = AddStaticVehicleEx(482,2644.9402,-2035.5258,13.6737,358.4641,85,1,VEHICLE_RESPAWN); // BallasCar 7
	ballascar[7] = AddStaticVehicleEx(422,2651.5671,-2009.4999,13.4954,310.0757,85,1,VEHICLE_RESPAWN); // BallasCar 8
	ballascar[8] = AddStaticVehicleEx(510,2639.7400,-2006.0609,13.1658,270.2778,85,1,VEHICLE_RESPAWN); // BallasCar 9
	ballascar[9] = AddStaticVehicleEx(510,2639.9053,-2004.0012,13.1629,271.3587,85,1,VEHICLE_RESPAWN); // BallasCar 10
	ballascar[10] = AddStaticVehicleEx(510,2639.9426,-2002.1674,13.1630,268.5518,85,1,VEHICLE_RESPAWN); // BallasCar 11
	/* ====================================================================== */
	aztecacar[0] = AddStaticVehicleEx(534,1691.2307,-2106.8987,13.2320,238.5455,135,1,VEHICLE_RESPAWN); // AztecaCar 1
	aztecacar[1] = AddStaticVehicleEx(534,1697.2252,-2105.5498,13.2709,230.2968,135,1,VEHICLE_RESPAWN); // AztecaCar 2
	aztecacar[2] = AddStaticVehicleEx(567,1692.8204,-2119.3257,13.3817,303.4322,135,1,VEHICLE_RESPAWN); // AztecaCar 3
	aztecacar[3] = AddStaticVehicleEx(567,1698.1672,-2120.2537,13.4139,308.0472,135,1,VEHICLE_RESPAWN); // AztecaCar 4
	aztecacar[4] = AddStaticVehicleEx(422,1686.6693,-2118.9971,13.5185,309.3206,135,1,VEHICLE_RESPAWN); // AztecaCar 5
	aztecacar[5] = AddStaticVehicleEx(482,1662.0924,-2113.2009,13.6689,270.1757,135,1,VEHICLE_RESPAWN); // AztecaCar 6
	aztecacar[6] = AddStaticVehicleEx(510,1703.4274,-2106.1689,13.1536,188.9888,135,1,VEHICLE_RESPAWN); // AztecaCar 7
	aztecacar[7] = AddStaticVehicleEx(510,1705.2931,-2105.5391,13.1718,201.2671,135,1,VEHICLE_RESPAWN); // AztecaCar 8
	aztecacar[8] = AddStaticVehicleEx(510,1706.8296,-2105.1511,13.1703,201.0190,135,1,VEHICLE_RESPAWN); // AztecaCar 9
	aztecacar[9] = AddStaticVehicleEx(567,1703.9320,-2120.7170,13.4203,314.1292,135,1,VEHICLE_RESPAWN); // AztecaCar 10
	aztecacar[10] = AddStaticVehicleEx(534,1687.0133,-2108.3604,13.1516,231.5184,135,1,VEHICLE_RESPAWN); // AztecaCar 11
	/* ====================================================================== */
	grovecar[0] = AddStaticVehicleEx(492,2505.5032,-1681.0790,13.2466,43.5279,86,86,VEHICLE_RESPAWN); // GroveCar 1
	grovecar[1] = AddStaticVehicleEx(492,2508.2461,-1678.2335,13.2748,55.5793,86,86,VEHICLE_RESPAWN); // GroveCar 2
	grovecar[2] = AddStaticVehicleEx(492,2510.4192,-1674.0582,13.2308,69.6923,86,86,VEHICLE_RESPAWN); // GroveCar 3
	grovecar[3] = AddStaticVehicleEx(422,2511.1194,-1669.3258,13.4407,87.5229,86,1,VEHICLE_RESPAWN); // GroveCar 4
	grovecar[4] = AddStaticVehicleEx(576,2509.3452,-1665.0896,13.0981,108.8340,86,86,VEHICLE_RESPAWN); // GroveCar 5
	grovecar[5] = AddStaticVehicleEx(576,2507.7471,-1661.5498,13.1097,120.5376,86,86,VEHICLE_RESPAWN); // GroveCar 6
	grovecar[6] = AddStaticVehicleEx(576,2504.5930,-1656.8682,13.1114,134.5742,86,86,VEHICLE_RESPAWN); // GroveCar 7
	grovecar[7] = AddStaticVehicleEx(510,2500.2957,-1654.1663,13.1115,168.4318,86,86,VEHICLE_RESPAWN); // GroveCar 8
	grovecar[8] = AddStaticVehicleEx(510,2498.2888,-1653.4125,13.0849,166.1564,86,86,VEHICLE_RESPAWN); // GroveCar 9
	grovecar[9] = AddStaticVehicleEx(510,2496.2197,-1652.7598,13.0412,174.7679,86,86,VEHICLE_RESPAWN); // GroveCar 10
	grovecar[10] = AddStaticVehicleEx(482,2473.5132,-1693.4280,13.6316,0.7351,86,1,VEHICLE_RESPAWN); // GroveCar 11
	/* ====================================================================== */
	rifacar[0] = AddStaticVehicleEx(529,2190.4885,-1807.8793,13.0879,57.6594,12,1,VEHICLE_RESPAWN); // Willard 0
	rifacar[1] = AddStaticVehicleEx(529,2190.7566,-1803.2738,13.0776,60.1990,12,1,VEHICLE_RESPAWN); // Willard 1
	rifacar[2] = AddStaticVehicleEx(529,2191.2688,-1798.7716,13.1349,61.4048,12,1,VEHICLE_RESPAWN); // Willard 2
	rifacar[3] = AddStaticVehicleEx(600,2169.2505,-1810.9896,13.2308,331.1815,12,1,VEHICLE_RESPAWN); // Picador 0
	rifacar[4] = AddStaticVehicleEx(600,2165.5552,-1809.8772,13.2229,330.2449,12,1,VEHICLE_RESPAWN); // Picador 1
	rifacar[5] = AddStaticVehicleEx(518,2161.5291,-1792.8157,13.0625,206.9070,12,1,VEHICLE_RESPAWN); // Buccaner 2
	rifacar[6] = AddStaticVehicleEx(518,2165.6248,-1792.7678,13.0754,204.6104,12,1,VEHICLE_RESPAWN); // Buccaner 3
	rifacar[7] = AddStaticVehicleEx(518,2170.2642,-1792.8630,13.0524,201.1296,12,1,VEHICLE_RESPAWN); // Buccaner 4
	rifacar[8] = AddStaticVehicleEx(478,2190.0503,-1780.0416,13.4480,359.8207,12,1,VEHICLE_RESPAWN); // Walton
	/* ====================================================================== */
	bikercar[0] = AddStaticVehicleEx(463, 695.2943, -458.2926, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[1] = AddStaticVehicleEx(463, 695.2943, -459.8171, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[2] = AddStaticVehicleEx(463, 695.2943, -461.3292, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[3] = AddStaticVehicleEx(463, 695.2943, -462.7343, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[4] = AddStaticVehicleEx(463, 695.2943, -464.3237, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[5] = AddStaticVehicleEx(463, 695.2943, -465.8580, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[6] = AddStaticVehicleEx(463, 695.2943, -467.6777, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[7] = AddStaticVehicleEx(463, 695.2943, -469.0885, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[8] = AddStaticVehicleEx(463, 695.2943, -470.7560, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[9] = AddStaticVehicleEx(463, 695.2943, -472.5536, 15.8908, -90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[10] = AddStaticVehicleEx(463, 707.1655, -458.8316, 15.8908, 90.0000, 0, 0, VEHICLE_RESPAWN);
	bikercar[11] = AddStaticVehicleEx(463, 707.1655, -460.6539, 15.8908, 90.0000, 0, 0, VEHICLE_RESPAWN);
	/* ====================================================================== */
	lsnewscar[0] = AddStaticVehicleEx(582, 739.3760, -1335.8337, 13.7159, 230.0000, 1, 1, VEHICLE_RESPAWN);
	lsnewscar[1] = AddStaticVehicleEx(582, 745.1520, -1335.8337, 13.7159, 230.0000, 1, 1, VEHICLE_RESPAWN);
	lsnewscar[2] = AddStaticVehicleEx(582, 752.3925, -1335.8337, 13.7159, 230.0000, 1, 1, VEHICLE_RESPAWN);
	lsnewscar[3] = AddStaticVehicleEx(582, 759.2462, -1335.8337, 13.7159, 230.0000, 1, 1, VEHICLE_RESPAWN);
	lsnewscar[4] = AddStaticVehicleEx(488, 741.9794, -1370.2456, 25.8253, -90.0000, 1, 1, VEHICLE_RESPAWN);
	/* ====================================================================== */
 	lcncar[0] = AddStaticVehicleEx(445, 2490.6008, 1556.1228, 10.6968, 183.6887, 6, 6, VEHICLE_RESPAWN); //
	lcncar[1] = AddStaticVehicleEx(445, 2491.9712, 1548.2881, 10.6970, 197.3771, 6, 6, VEHICLE_RESPAWN); //
	lcncar[2] = AddStaticVehicleEx(579, 2495.6067, 1541.6812, 10.7167, 224.3868, 6, 6, VEHICLE_RESPAWN); // lcn
	lcncar[3] = AddStaticVehicleEx(579, 2501.9390, 1537.2704, 10.7240, 245.2556, 6, 6, VEHICLE_RESPAWN); //
	lcncar[4] = AddStaticVehicleEx(468, 2509.4941, 1521.2003, 10.4937, 352.6942, 6, 6, VEHICLE_RESPAWN); //
	lcncar[5] = AddStaticVehicleEx(468, 2507.9624, 1521.4020, 10.4943, 349.0555, 6, 6, VEHICLE_RESPAWN); //
	lcncar[6] = AddStaticVehicleEx(468, 2506.4023, 1521.6810, 10.4813, 350.9611, 6, 6, VEHICLE_RESPAWN); //
	lcncar[7] = AddStaticVehicleEx(409, 2498.3167, 1522.3032, 10.6000, 292.5108, 6, 6, VEHICLE_RESPAWN); //
	lcncar[8] = AddStaticVehicleEx(482, 2473.9556, 1535.3368, 10.9782, 323.9049, 6, 6, VEHICLE_RESPAWN); //
	lcncar[9] = AddStaticVehicleEx(487, 2462.2490, 1590.9977, 10.9652, 186.2681, 6, 6, VEHICLE_RESPAWN); // lcnvertmfreni 1
	lcncar[10] = AddStaticVehicleEx(487, 2453.4163, 1588.4816, 10.9528, 194.7048, 6, 6, VEHICLE_RESPAWN); // lcnvertmfreni 2
	/* ====================================================================== */
	yakuzacar[0] = AddStaticVehicleEx(487, 1465.7510, 2735.0388, 11.0193, 0.0436, 3, 3, VEHICLE_RESPAWN); // yakuza
	yakuzacar[1] = AddStaticVehicleEx(409, 1475.3086, 2773.2200, 10.6214, 359.3665, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[2] = AddStaticVehicleEx(482, 1462.4268, 2804.8965, 10.9457, 270.2111, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[3] = AddStaticVehicleEx(545, 1475.3861, 2781.6814, 10.6314, 358.7317, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[4] = AddStaticVehicleEx(545, 1475.1746, 2765.2815, 10.6314, 358.5720, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[5] = AddStaticVehicleEx(550, 1460.6240, 2761.6306, 10.6360, 194.4107, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[6] = AddStaticVehicleEx(550, 1463.6028, 2752.9697, 10.6416, 203.5458, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[7] = AddStaticVehicleEx(550, 1469.3513, 2744.8098, 10.6364, 229.6799, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[8] = AddStaticVehicleEx(579, 1462.6516, 2800.8318, 10.7451, 273.3105, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[9] = AddStaticVehicleEx(579, 1462.8491, 2797.0498, 10.7503, 272.6949, 3, 3, VEHICLE_RESPAWN); //
	yakuzacar[10] = AddStaticVehicleEx(487, 1476.4802, 2734.0212, 10.9808, 0.0023, 3, 3, VEHICLE_RESPAWN);
	/* ====================================================================== */
	rmcar[0] = AddStaticVehicleEx(487, 983.9524, 1722.7662, 8.8366, 184.3667, 0, 0, VEHICLE_RESPAWN); //
	rmcar[1] = AddStaticVehicleEx(487, 983.3336, 1740.3167, 8.8002, 1.9419, 0, 0, VEHICLE_RESPAWN); //
	rmcar[2] = AddStaticVehicleEx(580, 950.2061, 1711.3040, 8.4446, 179.6664, 0, 0, VEHICLE_RESPAWN); //
	rmcar[3] = AddStaticVehicleEx(580, 950.1954, 1718.6982, 8.4455, 179.0436, 0, 0, VEHICLE_RESPAWN); //
	rmcar[4] = AddStaticVehicleEx(580, 958.3195, 1707.7142, 8.4446, 269.8474, 0, 0, VEHICLE_RESPAWN); //
	rmcar[5] = AddStaticVehicleEx(579, 950.1837, 1744.6663, 8.5849, 359.6291, 0, 0, VEHICLE_RESPAWN); //
	rmcar[6] = AddStaticVehicleEx(579, 950.0559, 1752.7399, 8.5793, 0.7991, 0, 0, VEHICLE_RESPAWN); //
	rmcar[7] = AddStaticVehicleEx(409, 959.3436, 1758.9463, 8.4484, 271.4193, 0, 0, VEHICLE_RESPAWN); //
	/* ====================================================================== */
 	TaxiCar[0] = AddStaticVehicleEx(420,1078.5042,-1757.8846,13.1655,90.6078,1,1, VEHICLE_RESPAWN); // TaxiCar7
	TaxiCar[1] = AddStaticVehicleEx(420,1078.3918,-1763.7056,13.1511,90.6532,1,1, VEHICLE_RESPAWN); // TaxiCar8
	TaxiCar[2] = AddStaticVehicleEx(420,1078.3877,-1769.6117,13.1368,90.6116,1,1, VEHICLE_RESPAWN); // TaxiCar9
	TaxiCar[3] = AddStaticVehicleEx(420,1078.4054,-1775.6124,13.1229,89.9206,1,1, VEHICLE_RESPAWN); // TaxiCar10
	TaxiCar[4] = AddStaticVehicleEx(420,1062.8958,-1775.5535,13.1436,270.3838,1,1, VEHICLE_RESPAWN); // TaxiCar11
	TaxiCar[5] = AddStaticVehicleEx(420,1062.7603,-1769.5317,13.1398,268.7921,1,1, VEHICLE_RESPAWN); // TaxiCar12
	TaxiCar[6] = AddStaticVehicleEx(420,1062.4371,-1763.5636,13.1730,271.0162,1,1, VEHICLE_RESPAWN); // TaxiCar13
	TaxiCar[7] = AddStaticVehicleEx(560,1098.0685,-1772.6156,13.0519,89.2299,6,6, VEHICLE_RESPAWN); // taxuna1
	TaxiCar[8] = AddStaticVehicleEx(560,1098.5100,-1766.5790,13.0547,90.5947,6,6, VEHICLE_RESPAWN); // taxuna2
	TaxiCar[9] = AddStaticVehicleEx(560,1098.1282,-1760.8949,13.0571,89.4205,6,6, VEHICLE_RESPAWN); // taxuna3
	TaxiCar[10] = AddStaticVehicleEx(560,1098.3370,-1754.9761,13.0590,89.5677,6,6, VEHICLE_RESPAWN); // taxuna4
	for(new i = 0; i < 6; i++)
	{
		new MANKNAA;
	    MANKNAA = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    SetDynamicObjectMaterial(MANKNAA, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
	    SetDynamicObjectMaterialText(MANKNAA, 0, "{FFFF00}YANDEX TAXI\n{4FB64F}9922", 120, "Ariel", 17, 1, 0, 0, 1);
	    AttachDynamicObjectToVehicle(MANKNAA, TaxiCar[i], -0.006, -1.764, 0.502, -0.299, -57.300, -89.400);
    }
	for(new i = 7; i < 11; i++)
	{
    	tmpobjid = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    	AttachDynamicObjectToVehicle(tmpobjid, TaxiCar[i], 0.000, -0.190, 0.930, 0.000, 0.000, 0.000);
    }
    TaxiLabel[TaxiCar[0]][0] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[0]][0] , TaxiCar[0], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[1]][1] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[1]][1] , TaxiCar[1], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[2]][2] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[2]][2] , TaxiCar[2], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[3]][3] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[3]][3] , TaxiCar[3], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[4]][4] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[4]][4] , TaxiCar[4], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[5]][5] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[5]][5] , TaxiCar[5], 0.0, 0.0, 2.0);
	TaxiLabel[TaxiCar[6]][6] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[6]][6] , TaxiCar[6], 0.0, 0.0, 2.0);
	TaxiLabel[TaxiCar[7]][7] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[7]][7] , TaxiCar[7], 0.0, 0.0, 2.0);
  	TaxiLabel[TaxiCar[8]][8] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[8]][8] , TaxiCar[8], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[9]][9] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[9]][9] , TaxiCar[9], 0.0, 0.0, 2.0);
    TaxiLabel[TaxiCar[10]][10] = Create3DTextLabel( "{FFFFFF}- {8099B5}Genuine Taxi {FFFFFF}-", 0x33AA33AA, 0.0, 0.0, 1.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle(TaxiLabel[TaxiCar[10]][10] , TaxiCar[8], 0.0, 0.0, 2.0);
    /* ====================================================================== */
    /*AutoSalonCar[0] = AddStaticVehicle(400,2149.4177,-1134.0846,25.6595,267.4694,1,1); // AutoSalonCar 1
    AutoSalonCar[1] = AddStaticVehicle(402,2148.1509,-1143.0698,24.8228,267.7465,1,1); // AutoSalonCar 2
    AutoSalonCar[2] = AddStaticVehicle(405,2148.1917,-1153.1023,23.7958,268.8886,1,1); // AutoSalonCar 3
    AutoSalonCar[3] = AddStaticVehicle(415,2147.7471,-1161.8475,23.5935,269.3699,1,1); // AutoSalonCar 4
    AutoSalonCar[4] = AddStaticVehicle(429,2147.6687,-1170.8948,23.4999,270.1855,1,1); // AutoSalonCar 5
    AutoSalonCar[5] = AddStaticVehicle(451,2147.5159,-1180.2385,23.5273,270.9608,1,1); // AutoSalonCar 6
    AutoSalonCar[6] = AddStaticVehicle(494,2147.9065,-1189.4406,23.7159,269.9214,1,1); // AutoSalonCar 7
    AutoSalonCar[7] = AddStaticVehicle(495,2147.3416,-1198.9490,24.2358,269.7773,1,1); // AutoSalonCar 8*/
    /* ====================================================================== */
   	Roadtrain[0] = AddStaticVehicleEx(515,2296.0073,2779.9189,11.8265,270.0013,54,77,900); // 25
    Roadtrain[1] = AddStaticVehicleEx(515,2296.0146,2770.4751,11.8305,270.2599,11,76,900);// 25
    Roadtrain[2] = AddStaticVehicleEx(515,2296.0159,2763.8289,11.8284,270.0019,62,77,900); // 25
    Roadtrain[3] = AddStaticVehicleEx(515,2296.0044,2754.3877,11.8305,269.7369,13,76,900); // 25
    Roadtrain[4] = AddStaticVehicleEx(515,2296.0159,2747.9287,11.8284,270.0018,24,77,900); // 25
    Roadtrain[5] = AddStaticVehicleEx(515,2296.0159,2738.3289,11.8284,270.0019,63,78,900); // 25
    Roadtrain[6] = AddStaticVehicleEx(515,2347.0161,2738.2393,11.8725,270.0006,34,36,900); // 25
    Roadtrain[7] = AddStaticVehicleEx(515,2347.0161,2747.8691,11.8727,270.0008,34,36,900); // 25
    Roadtrain[8] = AddStaticVehicleEx(515,2347.0161,2754.4189,11.8728,270.0009,34,36,900); // 25
    Roadtrain[9] = AddStaticVehicleEx(515,2347.0161,2763.9092,11.8726,270.0006,34,36,900); // 25
    Roadtrain[10] = AddStaticVehicleEx(515,2347.0159,2770.5994,11.8725,270.0005,34,36,900); // 25
    Roadtrain[11] = AddStaticVehicleEx(515,2347.0159,2779.9290,11.8282,270.0015,34,36,900);
    Misabmeli[0] = AddStaticVehicleEx(435, 2392.2200, 2730.0181, 11.1726, 0.7000, 34,36,300);
	Misabmeli[1] = AddStaticVehicleEx(435, 2383.3398, 2730.3806, 11.1726, 0.7000, 34,36,300);
	Misabmeli[2] = AddStaticVehicleEx(435, 2373.9729, 2730.5090, 11.1726, 0.7000, 34,36,300);
	Misabmeli[3] = AddStaticVehicleEx(435, 2367.4026, 2730.7551, 11.1726, 0.7000, 34,36,300);
	Misabmeli[4] = AddStaticVehicleEx(435, 2404.0720, 2741.4299, 11.1726, 35.9800, 34,36,300);
	Misabmeli[5] = AddStaticVehicleEx(435, 2448.4731, 2813.6421, 11.1726, 181.1199, 34,36,300);
	Misabmeli[6] = AddStaticVehicleEx(435, 2439.0029, 2813.9036, 11.1726, 181.1199, 34,36,300);
	Misabmeli[7] = AddStaticVehicleEx(435, 2430.7710, 2813.8870, 11.1726, 181.1199, 34,36,300);
	Misabmeli[8] = AddStaticVehicleEx(435, 2423.3015, 2814.0769, 11.1726, 181.1199, 34,36,300);
	Misabmeli[9] = AddStaticVehicleEx(435, 2415.7734, 2814.3215, 11.1726, 181.1199, 34,36,300);
	Misabmeli[10] = AddStaticVehicleEx(435, 2403.9250, 2814.9512, 11.1726, 181.1199, 34,36,300);
	Misabmeli[11] = AddStaticVehicleEx(435, 2391.6033, 2815.3218, 11.1726, 181.1199, 34,36,300);
}
stock pDestroyTextDraws(playerid)
{
    for(new i = 0; i < 20; i ++)
    {
        if(i < 5) PlayerTextDrawDestroy(playerid, RentTD_P[playerid][i]);
        if(i < 12) PlayerTextDrawHide(playerid, select_PTD[playerid][i]);
        /*if(i < MAX_INV_SLOT) PlayerTextDrawDestroy(playerid, Index_PTD[playerid][i]);
        if(i < MAX_USED_ITEM)
        {
            PlayerTextDrawDestroy(playerid, Inv_PTD[playerid][i]);
            PlayerTextDrawDestroy(playerid, UseIndex_PTD[playerid][i]);
        }
        if(i < 4) PlayerTextDrawDestroy(playerid, Inv_PTD2[playerid][i]);*/
    }
}
stock LoadMapIcons()
{
	new Float:stream_dist = 400.0;
    CreateDynamicMapIcon(687.8763, -1604.8181, 14.5957, 45, 0, -1, -1, -1, stream_dist); // Skin Shop
    CreateDynamicMapIcon(1497.1063, -1285.4761, 14.1516, 52, 0, -1, -1, -1, stream_dist); // Bank
    CreateDynamicMapIcon(1552.8159, -1675.4498, 16.1953, 30, 0, -1, -1, -1, stream_dist); // Police
    CreateDynamicMapIcon(1176.2983, -1323.4597, 14.0144, 22, 0, -1, -1, -1, stream_dist); // Hospital
    CreateDynamicMapIcon(1152.0909, -1747.3383, 13.2183, 53, 0, -1, -1, -1, stream_dist); // Spawn
    CreateDynamicMapIcon(-245.3335, -1381.2814, 10.1277, 56, 0, -1, -1, -1, stream_dist); // Farm
    CreateDynamicMapIcon(-572.5425, -1508.8892, 9.5471, 56, 0, -1, -1, -1, stream_dist); // Plantation
    CreateDynamicMapIcon(1365.6863, -1279.8872, 13.5469, 6, 0, -1, -1, -1, stream_dist); // GunShop
    CreateDynamicMapIcon(747.2938, -1352.1947, 13.5000, 48, 0, -1, -1, -1, stream_dist); // LS News
    CreateDynamicMapIcon(2229.8936, -1721.2491, 13.5612, 54, 0, -1, -1, -1, stream_dist); // G.Y.M.
    CreateDynamicMapIcon(2144.4885, -1159.2355, 23.8342, 55, 0, -1, -1, -1, stream_dist); // AutoSalon
    CreateDynamicMapIcon(1258.8083, -1257.1409, 13.112, 11, 0, -1, -1, -1, stream_dist); // Shaft
    CreateDynamicMapIcon(1007.7518, -1443.9167, 13.5469, 27, 0, -1, -1, -1, stream_dist); // Tune
}
@LoadRadars();
@LoadRadars()
{
    new time = GetTickCount();
    new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    for(new i = 1; i <= rows; i++)
		{
		    cache_get_value_index_int(i-1, 0, RadarInfo[i][RadarID]);
		    cache_get_value_index_float(i-1, 1, RadarInfo[i][RadarPosX]);
			cache_get_value_index_float(i-1, 2, RadarInfo[i][RadarPosY]);
			cache_get_value_index_float(i-1, 3, RadarInfo[i][RadarPosZ]);
			cache_get_value_index_float(i-1, 4, RadarInfo[i][RadarPosC]);
			cache_get_value_index_int(i-1, 5, RadarInfo[i][RadarSpeed]);
			RadarInfo[i][RadarObject] = CreateDynamicObject(18880, RadarInfo[i][RadarPosX], RadarInfo[i][RadarPosY], RadarInfo[i][RadarPosZ], 0, 0, RadarInfo[i][RadarPosC]);
	    	format(b_string, sizeof(b_string), "{FFFFFF}Police Camera: #{3399FF}%d\n{FFFFFF}Maxsimaluri Sichkare: {3399FF}%d{FFFFFF}KM/H", i, RadarInfo[i][RadarSpeed]);
			RadarInfo[i][RadarText] = CreateDynamic3DTextLabel(b_string, COLOR_WHITE, RadarInfo[i][RadarPosX], RadarInfo[i][RadarPosY], RadarInfo[i][RadarPosZ]+4.0,40.0);
			RadarInfo[i][RadarArea] = CreateDynamicSphere(RadarInfo[i][RadarPosX], RadarInfo[i][RadarPosY], RadarInfo[i][RadarPosZ], 30.0);
			TotalRadar += 1;
        }
    }
	printf("[Radars Loaded]: <%i>. TIME: <%i ms>.", TotalRadar, GetTickCount() - time);
	return true;
}
stock SaveRadars(i)
{
    new query[500];
	new string[128];
	query = "UPDATE `Radars` SET ";
	acc_float_strcat(query, sizeof(query), "RadarPosX", RadarInfo[i][RadarPosX]);
	acc_float_strcat(query, sizeof(query), "RadarPosY", RadarInfo[i][RadarPosY]);
	acc_float_strcat(query, sizeof(query), "RadarPosZ", RadarInfo[i][RadarPosZ]);
	acc_float_strcat(query, sizeof(query), "RadarPosC", RadarInfo[i][RadarPosC]);
	strdel(query, strlen(query)-1, strlen(query));
	format(string,sizeof(string)," WHERE `RadarID` = '%d'", RadarInfo[i][RadarID]);
	strcat(query, string);
	mysql_tquery(connect, query, "", "");
}
stock ShowRentCarMenu(playerid)
{
    CurrentRentCar[playerid] = 0;
    RenewRentCarMenu(playerid, CurrentRentCar[playerid]);
    for(new i = 0; i < 8; i ++)
    {
        TextDrawShowForPlayer(playerid, RentTD_G[i]);
        if(i < 5) PlayerTextDrawShow(playerid, RentTD_P[playerid][i]);
    }
    SelectTextDraw(playerid, -1);
    RentCarStatus[playerid] = true;
    return true;
}

stock HideRentCarMenu(playerid)
{
    CurrentRentCar[playerid] = 0;
    for(new i = 0; i < 8; i ++)
    {
        TextDrawHideForPlayer(playerid, RentTD_G[i]);
        if(i < 5) PlayerTextDrawHide(playerid, RentTD_P[playerid][i]);
    }
    CancelSelectTextDraw(playerid);
    RentCarStatus[playerid] = false;
    return true;
}
stock RenewRentCarMenu(playerid, id)
{
    new ids[3], current_id = id, str[16];
    ids[0] = current_id-1;ids[1] = current_id;ids[2] = current_id+1;
    if(ids[0] <= 0) ids[0] = sizeof(gRentCars)-1;
    if(ids[2] >= sizeof(gRentCars)-1) ids[2] = 0;
    PlayerTextDrawSetPreviewModel(playerid, RentTD_P[playerid][4], gRentCars[ids[0]][0]);
	PlayerTextDrawSetPreviewModel(playerid, RentTD_P[playerid][3], gRentCars[ids[1]][0]);
	PlayerTextDrawSetPreviewModel(playerid, RentTD_P[playerid][2], gRentCars[ids[2]][0]);
    PlayerTextDrawHide(playerid, RentTD_P[playerid][4]);PlayerTextDrawHide(playerid, RentTD_P[playerid][3]); PlayerTextDrawHide(playerid, RentTD_P[playerid][2]);
    PlayerTextDrawShow(playerid, RentTD_P[playerid][4]);PlayerTextDrawShow(playerid, RentTD_P[playerid][3]); PlayerTextDrawShow(playerid, RentTD_P[playerid][2]);
    format(str, sizeof(str), "%d$",gRentCars[ids[1]][1]);
    PlayerTextDrawSetString(playerid, RentTD_P[playerid][1], str);
    return true;
}
stock CreateHouse(Float:fX, Float:fY, Float:fZ, classid, price)
{
    TotalHouse ++;
    HouseInfo[TotalHouse][hID] = TotalHouse;
    HouseInfo[TotalHouse][hPosition][0] = fX;
    HouseInfo[TotalHouse][hPosition][1] = fY;
    HouseInfo[TotalHouse][hPosition][2] = fZ;
    HouseInfo[TotalHouse][hClass] = classid;
    HouseInfo[TotalHouse][hPrice] = price;
    SetString(HouseInfo[TotalHouse][hOwner], "For Sale");
    HouseInfo[TotalHouse][hOwned] = 0;
    HouseInfo[TotalHouse][hBalance] = 0;
    HouseInfo[TotalHouse][hPickup] = CreateDynamicPickup(1273,23, fX, fY, fZ);
    HouseInfo[TotalHouse][hLock] = 1;
    HouseInfo[TotalHouse][hGarage] = 0;
    FixHouse(TotalHouse);
    new query[100];
    format(query, sizeof(query), "INSERT INTO `house` (`hID`) VALUES ('%d')",TotalHouse);
    mysql_query(connect, query);
    SaveHouseData(TotalHouse);
    return true;
}
stock RenewHouse(houseid)
{
    DestroyDynamicPickup(HouseInfo[houseid][hPickup]);
    HouseInfo[houseid][hPickup] = CreateDynamicPickup((HouseInfo[houseid][hOwned]?19522:1273),23, HouseInfo[houseid][hPosition][0], HouseInfo[houseid][hPosition][1], HouseInfo[houseid][hPosition][2]);
    new hstr[300];
	format(hstr, 300, "\n{369B5A}House ID:{ffffff} %d\n{85c1e9}Owner:{ffffff} %s\n{85c1e9}Price:{ffffff} %d$\n"color_house"Door:{ffffff} %s\n{819FF7}Class:{ffffff} %s\n"color_house"Garage:{ffffff} %s\n",HouseInfo[houseid][hID],HouseInfo[houseid][hOwner],HouseInfo[houseid][hPrice],(HouseInfo[houseid][hLock]? ("Locked") : ("Opened")),GetClassName(HouseInfo[houseid][hClass]),(HouseInfo[houseid][hGarage]? ("Akvs") : ("Ar Akvs")));
    UpdateDynamic3DTextLabelText(HouseInfo[houseid][hText], COLOR_WHITE, hstr);
	return true;
}
stock FixHouse(house)
{
    switch(HouseInfo[house][hClass])
    {
        case 1: // Class Low
        {
            HouseInfo[house][hExitPosition][0] = 1411.9773;
            HouseInfo[house][hExitPosition][1] = -1475.3213;
            HouseInfo[house][hExitPosition][2] = 125.3919;
            HouseInfo[house][hInterior] = 0;
            HouseInfo[house][hTax] = 1000;
        }
        case 2: // Class Medium
        {
            HouseInfo[house][hExitPosition][0] = 853.3853;
            HouseInfo[house][hExitPosition][1] = 19.1820;
            HouseInfo[house][hExitPosition][2] = 993.8686;
            HouseInfo[house][hInterior] = 1;
            HouseInfo[house][hTax] = 2000;
        }
        case 3: // Class High
        {
            HouseInfo[house][hExitPosition][0] = 2613.6245;
            HouseInfo[house][hExitPosition][1] = 723.9241;
            HouseInfo[house][hExitPosition][2] = 3001.0859;
            HouseInfo[house][hInterior] = 1;
            HouseInfo[house][hTax] = 3000;
        }
        default: // Class Low
        {
            HouseInfo[house][hExitPosition][0] = 1411.9773;
            HouseInfo[house][hExitPosition][1] = -1475.3213;
            HouseInfo[house][hExitPosition][2] = 125.3919;
            HouseInfo[house][hInterior] = 1;
            HouseInfo[house][hTax] = 1000;
        }
    }
}
stock GetClassName(classid)
{
    new result[16];
    switch(classid)
    {
        case 1: result = "Low";
        case 2: result = "Medium";
        case 3: result = "High";
    }
    return result;
}
stock GetVIPName(vipid)
{
	new n_str[32];
	switch(vipid)
	{
	    case 0: format(n_str,sizeof(n_str), "None");
	    case 1: format(n_str,sizeof(n_str), "Bronze");
	    case 2: format(n_str,sizeof(n_str), "Silver");
	    case 3: format(n_str,sizeof(n_str), "Gold");
	    case 4: format(n_str,sizeof(n_str), "Crystal");
	    case 5: format(n_str,sizeof(n_str), "Titan");
	}
	return n_str;
}
stock GetLicenseName(licenseid)
{
	new name[32];
	switch(licenseid)
	{
	    case LICENSE_PASS: name = "Piradobis Mowmoba";
	    case LICENSE_CAR: name = "Martvis Mowmoba";
	    case LICENSE_BIZZ: name = "Biznesis Licenzia";
	    case LICENSE_GUN: name = "Iaragis Licenzia";
	}
	return name;
}
stock CreateBussiness(Float:fX, Float:fY, Float:fZ, type, price, name[], enterprice=1000)
{
    TotalBizz ++;
    BizzInfo[TotalBizz][bID] = TotalBizz;
    BizzInfo[TotalBizz][bEnterPos][0] = fX;
    BizzInfo[TotalBizz][bEnterPos][1] = fY;
    BizzInfo[TotalBizz][bEnterPos][2] = fZ;
    BizzInfo[TotalBizz][bEnteredAngle] = 0;
    BizzInfo[TotalBizz][bExitedAngle] = 0;
    BizzInfo[TotalBizz][bType] = type;
    BizzInfo[TotalBizz][bPrice] = price;
    SetString(BizzInfo[TotalBizz][bOwner], "For Sale");
    SetString(BizzInfo[TotalBizz][bName], name);
    BizzInfo[TotalBizz][bOwned] = 0;
    BizzInfo[TotalBizz][bSafe] = 0;
    BizzInfo[TotalBizz][bTax] = 5000;
    BizzInfo[TotalBizz][bPickupid] = 19132;
    FixBizz(TotalBizz);
    BizzInfo[TotalBizz][bPickup] = CreateDynamicPickup(BizzInfo[TotalBizz][bPickupid],23, BizzInfo[TotalBizz][bEnterPos][0], BizzInfo[TotalBizz][bEnterPos][1], BizzInfo[TotalBizz][bEnterPos][2]);
    BizzInfo[TotalBizz][bExitPickup] = CreateDynamicPickup(1318,23, BizzInfo[TotalBizz][bExitPos][0], BizzInfo[TotalBizz][bExitPos][1], BizzInfo[TotalBizz][bExitPos][2], TotalBizz+22);
    BizzInfo[TotalBizz][bLock] = 1;
    BizzInfo[TotalBizz][bProducts] = 0;
    BizzInfo[TotalBizz][bProductPrice] = 1000;
    BizzInfo[TotalBizz][bEnterPrice] = enterprice;
    BizzInfo[TotalBizz][bBarPickup] = CreateDynamicPickup(BizzInfo[TotalBizz][bPickupid],23, BizzInfo[TotalBizz][bBar][0], BizzInfo[TotalBizz][bBar][1], BizzInfo[TotalBizz][bBar][2], TotalBizz+22);
    format(gstr, sizeof(gstr), color_bizz"Name:{ffffff} %s\n"color_bizz"Enter Price:{ffffff} %d$\n"color_bizz"Owner:{ffffff} %s",BizzInfo[TotalBizz][bName],BizzInfo[TotalBizz][bEnterPrice],BizzInfo[TotalBizz][bOwner]);
    BizzInfo[TotalBizz][bText] = CreateDynamic3DTextLabel(gstr, COLOR_WHITE, fX, fY, fZ, 7.0);
    new query[100];
    format(query, sizeof(query), "INSERT INTO `bizz` (`bID`) VALUES ('%d')",TotalBizz);
    mysql_query(connect, query);
    SaveBizzData(TotalBizz);
}
stock FixBizz(bizzid)
{
    switch(BizzInfo[bizzid][bType])
    {
        case 1: // 24/7
        {
            BizzInfo[bizzid][bExitPos][0] = -25.8855;
            BizzInfo[bizzid][bExitPos][1] = -188.2504;
            BizzInfo[bizzid][bExitPos][2] = 1003.5469;
            //
            BizzInfo[bizzid][bEnteredPos][0] = -25.9365;
            BizzInfo[bizzid][bEnteredPos][1] = -186.2791;
            BizzInfo[bizzid][bEnteredPos][2] = 1003.5469;
            BizzInfo[bizzid][bEnteredAngle] = 0.0;
            //
            BizzInfo[bizzid][bBar][0] = -29.1405;
            BizzInfo[bizzid][bBar][1] = -184.8568;
            BizzInfo[bizzid][bBar][2] = 1003.5469;
            //
            BizzInfo[bizzid][bInterior] = 17;
        }
        case 2: // Restourant
        {
            BizzInfo[bizzid][bExitPos][0] = 364.9762;
            BizzInfo[bizzid][bExitPos][1] = -11.8445;
            BizzInfo[bizzid][bExitPos][2] = 1001.8516;
            //
            BizzInfo[bizzid][bEnteredPos][0] = 364.8279;
            BizzInfo[bizzid][bEnteredPos][1] = -10.0152;
            BizzInfo[bizzid][bEnteredPos][2] = 1001.8516;
            BizzInfo[bizzid][bEnteredAngle] = 0.0;
            //
            BizzInfo[bizzid][bBar][0] = 369.4908;
            BizzInfo[bizzid][bBar][1] = -6.1705;
            BizzInfo[bizzid][bBar][2] = 1001.8589;
            //
            BizzInfo[bizzid][bInterior] = 17;
        }
    }
}
stock RenewBizz(bizzid)
{
    format(gstr, sizeof(gstr), color_bizz"Name:{ffffff} %s\n"color_bizz"Enter Price:{ffffff} %d$\n"color_bizz"Owner:{ffffff} %s",BizzInfo[bizzid][bName],BizzInfo[bizzid][bEnterPrice],BizzInfo[bizzid][bOwner]);
    UpdateDynamic3DTextLabelText(BizzInfo[bizzid][bText], COLOR_WHITE, gstr);
    return true;
}
stock Mtavari(playerid)
{
	new ip[MAX_PLAYER_NAME];
	GetPlayerIp(playerid,ip,sizeof(ip));
	new string[128];
	format(string, sizeof(string), "SELECT * FROM `Mtavari` WHERE `IP` = '%s' LIMIT 1", ip);
	mysql_query(connect,string);
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		return true;
	}
	return false;
}
stock KINKLA(playerid)
{
	new ip[MAX_PLAYER_NAME];
	GetPlayerIp(playerid,ip,sizeof(ip));
	new string[128];
	format(string, sizeof(string), "SELECT * FROM `KINKLA` WHERE `IP` = '%s' LIMIT 1", ip);
	mysql_query(connect,string);
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		return true;
	}
	return false;
}
stock IsDeveloperName(name[])
{
	for(new i = 0; i < sizeof(developerName); i ++)
	{
	    if(!strcmp(name, developerName[i])) return true;
	}
    return false;
}
stock GivePlayerHouse(playerid, houseid)
{
    if(CountPlayerHouses(playerid) >= MAX_PLAYER_HOUSE)
    {
        SendClientMessage(playerid, COLOR_GREY, "Tkven Ukve Gakvt Shedzenili 3 Saxli");
        return false;
    }
    SetString(HouseInfo[houseid][hOwner], Name(playerid));
    HouseInfo[houseid][hOwned] = 1;
    HouseInfo[houseid][hBalance] = 0;
    HouseInfo[houseid][hLock] = 0;
    /*new query[128];
    format(query, sizeof(query), "INSERT INTO `houses` (`Name`, `HouseID`) VALUES ('%s', '%d')",Name(playerid),houseid);
    mysql_query(connect, query);*/
    for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
    {
        if(PlayerInfo[playerid][pHouse][i] == 0)
        {
            PlayerInfo[playerid][pHouse][i] = houseid;
            break;
        }
    }
    SavePlayerData(playerid);
    SaveHouseData(houseid);
    return true;
}
stock RemovePlayerHouse(playerid, houseid)
{
    for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
    {
        if(PlayerInfo[playerid][pHouse][i] == houseid)
        {
            PlayerInfo[playerid][pHouse][houseid] = 0;
            break;
        }
    }
    return true;
}
stock RemoveNameHouse(houseid)
{
    SetString(HouseInfo[houseid][hOwner], "For Sale");
    HouseInfo[houseid][hOwned] = 0;
    HouseInfo[houseid][hBalance] = 0;
    HouseInfo[houseid][hLock] = 1;
    /*new query[128];
    format(query, sizeof(query), "DELETE FROM `houses` WHERE HouseID = '%d'",houseid);
    mysql_query(connect, query);*/
    SaveHouseData(houseid);
    RenewHouse(houseid);
    return true;
}
stock CountPlayerHouses(playerid)
{
    new houses = 0;
    for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
    {
        if(PlayerInfo[playerid][pHouse][i] != 0)
        {
            houses ++;
        }
    }
    return houses;
    /*new query[128];
    format(query, sizeof(query), "SELECT `Name` FROM `houses` WHERE Name = '%s'",Name(playerid));
    mysql_query(connect, query);
    new rows;
	cache_get_row_count(rows);
    return rows;*/
}
stock IsMyHouse(playerid, houseid)
{
    for(new i = 0; i < MAX_PLAYER_HOUSE; i ++)
    {
        if(PlayerInfo[playerid][pHouse][i] == houseid)
        {
            return true;
        }
    }
    return false;
    /*new query[128];
    format(query, sizeof(query), "SELECT * FROM `houses` WHERE Name = '%s' AND HouseID = '%d'",Name(playerid),houseid);
    mysql_query(connect, query);
    new rows;
	cache_get_row_count(rows);
    return rows;*/
}
stock IsHouseOwned(houseid)
{
    new query[128];
    format(query, sizeof(query), "SELECT `HouseID` FROM `houses` WHERE HouseID = '%d'",houseid);
    mysql_query(connect, query);
    new rows;
	cache_get_row_count(rows);
    return rows;
}
stock GetMyHouse(name[], houseid)
{
    new playerid = GetPlayerID(name);
    if(playerid == INVALID_PLAYER_ID) return false;
    return PlayerInfo[playerid][pHouse][houseid];
}
function MCaptureOff() return startmcapture = 0;
function CaptureOff() return startcapture = 0;
stock PayDay()
{
    for(new i = 0; i < 20; i++) 
    {
	    FrakMF[i] = 0;
	    FrakCD[i] = 0;
    }
   	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(GZInfo[i][gFrakVlad] == FRACTION_BALLAS) TotalGzB++;
		if(GZInfo[i][gFrakVlad] == FRACTION_VAGOS) TotalGzV++;
		if(GZInfo[i][gFrakVlad] == FRACTION_GROVE) TotalGzG++;
		if(GZInfo[i][gFrakVlad] == FRACTION_AZTEC) TotalGzA++;
		if(GZInfo[i][gFrakVlad] == FRACTION_RIFA) TotalGzR++;
	}
	BallasBank += TotalGzB*100;
	VagosBank += TotalGzV*100;
	GroveBank += TotalGzG*100;
	AztecaBank += TotalGzA*100;
	RifaBank += TotalGzR*100;
	SaveFracBank();
	
	startcapture = 1;
	startmcapture = 1;
 	SetTimer("CaptureOff",300000,0);
	SetTimer("MCaptureOff",300000,0);
	
	for(new i = 0; i < TotalBankomat; i ++) BankomatInfo[i][BankomatRobbed] = false;
	ContainerStatus[0] = 0;
	UpdateDynamic3DTextLabelText(ContainerText[0], COLOR_WHITE, "{FFFFFF}Container - {FF4545}From Russia\n{FFFFFF}Fasi - {FF4545}300.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y");
	ContainerStatus[1] = 0;
	UpdateDynamic3DTextLabelText(ContainerText[1], COLOR_WHITE, "{FFFFFF}Container - {FF4545}From USA\n{FFFFFF}Fasi - {FF4545}300.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y");
	ContainerStatus[2] = 0;
	UpdateDynamic3DTextLabelText(ContainerText[2], COLOR_WHITE, "{FFFFFF}Container - {FF4545}From China\n{FFFFFF}Fasi - {FF4545}300.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y");
	ContainerStatus[3] = 0;
	UpdateDynamic3DTextLabelText(ContainerText[3], COLOR_WHITE, "{FFFFFF}Container - {FF4545}From Dubai\n{FFFFFF}Fasi - {FF4545}300.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y");
	ContainerStatus[4] = 0;
	UpdateDynamic3DTextLabelText(ContainerText[4], COLOR_WHITE, "{FFFFFF}Container - {FF4545}From Ukraine\n{FFFFFF}Fasi - {FF4545}300.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y");
	ContainerStatus[5] = 0;
	UpdateDynamic3DTextLabelText(ContainerText[5], COLOR_WHITE, "{FFFFFF}Container - {FF4545}From Germany\n{FFFFFF}Fasi - {FF4545}300.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y");
    for(new i = 1; i <= TotalHouse; i ++)
    {
        if(!HouseInfo[i][hOwned]) continue;
        HouseInfo[i][hBalance] -= HouseInfo[i][hTax];
        if(HouseInfo[i][hBalance] <= 0)
        {
            if(GetPlayerID(HouseInfo[i][hOwner]) != INVALID_PLAYER_ID)
            {
                new playerid = GetPlayerID(HouseInfo[i][hOwner]);
                for(new j = 0; j < MAX_PLAYER_HOUSE; j ++)
                {
                    if(PlayerInfo[playerid][pHouse][j] == i) PlayerInfo[playerid][pHouse][j] = 0;
                }
                PlayerInfo[playerid][pText] = 1;
                SendClientMessage(playerid, COLOR_ORANGE, "[House]{ffffff} - Tkven Gamogasaxles Saxlidan Gadauxdelobis Gamo");
                TextHouse[playerid] = 1;
            }
            else
            {
                new query[128];
                format(query, sizeof(query), "UPDATE `accounts` SET pText = '1' WHERE Name = '%s'",HouseInfo[i][hOwner]);
                mysql_query(connect, query);
            	for(new j = 0; j < MAX_PLAYER_HOUSE; j ++)
				{
	               	format(query, sizeof(query), "UPDATE `accounts` SET pHouse%d = '0' WHERE pHouse%d = '%d'",j+1,j+1,i);
	          		mysql_query(connect, query);
          		}
            }
            RemoveNameHouse(i);
            //RenewHouse(i);
        }
    }
    for(new i = 1; i <= TotalBizz; i ++)
    {
		if(!BizzInfo[i][bOwned]) continue;
		BizzInfo[i][bSafe] -= BizzInfo[i][bTax];
		if(BizzInfo[i][bSafe] <= BizzInfo[i][bTax])
		{
            if(GetPlayerID(BizzInfo[i][bOwner]) != INVALID_PLAYER_ID)
            {
                new playerid = GetPlayerID(BizzInfo[i][bOwner]);
          		PlayerInfo[playerid][pText] = 2;
                SendClientMessage(playerid, 0xFAAC58FF, "[Bussiness]{ffffff} - Tkven Gagekidat Biznesi Gadauxdelobis Gamo");
                PlayerInfo[playerid][pBizz] = 0;
                PlayerUpdateData(playerid, "pBizz", PlayerInfo[playerid][pBizz]);
                PlayerInfo[playerid][pBank] += BizzInfo[i][bSafe] / 2;
                PlayerUpdateData(playerid, "pBank", PlayerInfo[playerid][pBank]);
                TextBizz[playerid] = 1;
			}
			else
            {
                new query[200];
                format(query, sizeof(query), "UPDATE `accounts` SET pText = '2', pBizz = '0' WHERE Name = '%s'",BizzInfo[i][bOwner]);
                mysql_query(connect, query);
            }
            BizzInfo[i][bSafe] = 0;
            BizzInfo[i][bLock] = 1;
            BizzInfo[i][bProducts] = 0;
            BizzInfo[i][bProductPrice] = 1000;
            BizzInfo[i][bOwned] = 0;
            SetString(BizzInfo[i][bOwner], "For Sale");
            RenewBizz(i);
		}
    }
    new string[128];
    foreach(new i:Player)
    {
        if(!isLogged[i]) continue;
        if(PlayedTime[i] < NEED_TO_PAYDAY)
        {
            format(gstr, sizeof(gstr), "[PayDay] -{ffffff} Tkven Ar Gagitarebiat Server'ze %d Wuti Ris Gamoc Ar Chagetvalat PayDay !",(NEED_TO_PAYDAY/60));
            SendClientMessage(i, COLOR_PAYDAY, gstr);
            continue;
        }
        GameTextForPlayer(i, "~w~PayDay", 5000, 1);
        new member = PlayerInfo[i][pForm], PAYMENT_AMOUNT = 0;
        SendClientMessage(i, COLOR_PAYDAY, "~~~~~~~~~~~~~~~ << PayDay >> ~~~~~~~~~~~~~~~");
        GivePlayerExp(i, 1);
        if(PlayerInfo[i][pPayment] > 0)
        {
            format(string, sizeof(string), "[Payment]{ffffff} Tkven Dagericxat Xelfasi: %d$",PlayerInfo[i][pPayment]);
        	SendClientMessage(i, COLOR_PAYDAY, string);
            PlayerInfo[i][pBank] += PlayerInfo[i][pPayment];
            PlayerUpdateData(i, "pBank", PlayerInfo[i][pBank]);
            PlayerInfo[i][pPayment] = 0;
        }
        if(member)
        {
            if(IsAGov(i))
            {
                PAYMENT_AMOUNT = (PlayerInfo[i][pRank] * FractionInfo[member][frac_Payment]) + random(200);
            }
        }
        if(PAYMENT_AMOUNT > 0)
        {
            format(string, sizeof(string), "[Payment]{ffffff} Tkven Dagericxat Organizaciis Xelfasi: %d$",PAYMENT_AMOUNT);
        	SendClientMessage(i, COLOR_PAYDAY, string);
            PlayerInfo[i][pBank] += PAYMENT_AMOUNT;
            PlayerUpdateData(i, "pBank", PlayerInfo[i][pBank]);
        }
        format(string, sizeof(string), "[Bank]{ffffff} Tkveni Bankis Angarishi Sheadgens: %d$",PlayerInfo[i][pBank]);
        SendClientMessage(i, COLOR_PAYDAY, string);
        if(PlayerInfo[i][pBizz] != 0)
        {
        	format(string, sizeof(string), "[Bussiness]{ffffff} Tkveni Biznesis Angarishi Sheadgens: %d$",BizzInfo[PlayerInfo[i][pBizz]][bSafe]);
        	SendClientMessage(i, COLOR_PAYDAY, string);
        }
        //
        if(TextHouse[i] == 1)
        {
            format(string, sizeof(string), "[House]{ffffff} Tkven Gagekidat Saxli Gadauxdelobis Gamo");
            SendClientMessage(i, COLOR_PAYDAY, string);
            TextHouse[i] = 0;
        }
		if(TextBizz[i] == 1)
        {
  			format(string, sizeof(string), "[Busiess]{ffffff} Tkven Gagekidat Biznesi Gadauxdelobis Gamo");
            SendClientMessage(i, COLOR_PAYDAY, string);
            TextBizz[i] = 0;
		}
		if(PlayerInfo[i][pFamilyMember] != 0)
		{
		    if(PlayerInfo[i][pFamilyRank] == 6)
		    {
				new nextlvl = FamilyInfo[PlayerInfo[i][pFamilyMember]][fLevel]+1;
				new nextexp = nextlvl*3;
				FamilyInfo[PlayerInfo[i][pFamilyMember]][fExp] += 1;
				FamilyUpdateData(PlayerInfo[i][pFamilyMember], "fExp", FamilyInfo[PlayerInfo[i][pFamilyMember]][fExp]);
				if(FamilyInfo[PlayerInfo[i][pFamilyMember]][fExp] >= nextexp)
				{
					FamilyInfo[PlayerInfo[i][pFamilyMember]][fLevel] += 1;
					FamilyUpdateData(PlayerInfo[i][pFamilyMember], "fLevel", FamilyInfo[PlayerInfo[i][pFamilyMember]][fLevel]);
					FamilyInfo[PlayerInfo[i][pFamilyMember]][fExp] = 0;
					FamilyUpdateData(PlayerInfo[i][pFamilyMember], "fExp", FamilyInfo[PlayerInfo[i][pFamilyMember]][fExp]);
				}
			}
			if(PlayerInfo[i][pFamilyRank] >= 1)
			{
			    PlayerInfo[i][pCash] += FamilyInfo[PlayerInfo[i][pFamilyMember]][fLevel]*2000;
			    PlayerUpdateData(i, "pCash", PlayerInfo[i][pCash]);
				format(fam_string, sizeof(fam_string), "[Family] {FFFFFF}Tkveni Family'dan Dagericxat: {38AF91}%d$", FamilyInfo[PlayerInfo[i][pFamilyMember]][fLevel]*2000);
				SendClientMessage(i, COLOR_PAYDAY, fam_string);
				format(log_str, sizeof(log_str), "%s'm(a) daericxa family tanxidan : %d", Name(i),FamilyInfo[PlayerInfo[i][pFamilyMember]][fLevel]*2000);
				CreateLog("Money", log_str);
			}
		}
		PlayerInfo[i][pPayday] ++;
		if(PlayerInfo[i][pPayday] >= 10)
		{
			PlayerInfo[i][pGcoin] ++;
			PlayerUpdateData(i, "pGcoin", PlayerInfo[i][pGcoin]);
			PlayerInfo[i][pPayday] = 0;
			PlayerUpdateData(i, "pPayday", PlayerInfo[i][pPayday]);
			SendClientMessage(i, COLOR_PAYDAY, "[Bonus]{ffffff} Tkven Gaataret Serverze 10 Payday Da Gadmogecat {FA5858}1 G-Coin");
		}
		for(new j = 0; j < MAX_VIDEO_CARDS; j ++)
		{
		    if(PlayerInfo[i][pVideoCardType] != VIDEO_CARD_TYPE_NONE)
		    {
		        if(PlayerInfo[i][pVideoCardStatus][j] == VIDEO_CARD_STATUS_BROKEN)
		        {
		            format(gstr, sizeof(gstr), "[VideoCard]{ffffff} Shegaxsenebt Rom Tkveni Video Karta {FA5858}%d{ffffff} Gafuchebulia Da Ar Gamoimushavebs Bitcoins", j);
                    SendClientMessage(i, COLOR_PAYDAY, gstr);
		        }
 		       	else
		        {
		            new random_btc;
					switch(PlayerInfo[i][pVideoCardType][j])
					{
						case VIDEO_CARD_TYPE_WEAK: random_btc = Random(5, 10);
						case VIDEO_CARD_TYPE_STRONG: random_btc = Random(8, 14);
						case VIDEO_CARD_TYPE_BADASS: random_btc = Random(10, 20);
					}
					switch(PlayerInfo[i][pVideoCardStatus][j])
					{
					    case VIDEO_CARD_STATUS_AMAZING: random_btc++;
						case VIDEO_CARD_STATUS_GREAT: random_btc -= random(3);
						case VIDEO_CARD_STATUS_NORMAL: random_btc -= random(5);
						case VIDEO_CARD_STATUS_BAD: random_btc -= random(8);
						case VIDEO_CARD_STATUS_BROKEN: random_btc = -999;
					}
					if(random_btc < 0 && random_btc != -999) random_btc = 0, random_btc += random(7);
  					format(gstr, sizeof(gstr), "[VideoCard]{ffffff} Tkvenma Video Kartam {FA5858}%d{ffffff} Gamoimushava {FA5858}%d Bitcoin", j, random_btc);
                    SendClientMessage(i, COLOR_PAYDAY, gstr);
                    PlayerInfo[i][pBitcoin] += random_btc;
                    PlayerUpdateData(i, "pBitcoin", PlayerInfo[i][pBitcoin]);
					PlayerInfo[i][pVideoCardWorked][j] ++;
					if(random(100) > 50)
					{
						if(PlayerInfo[i][pVideoCardWorked][j] >= 5)
						{
							if(random(100) > 50) if(PlayerInfo[i][pVideoCardStatus][j] > VIDEO_CARD_STATUS_AMAZING) PlayerInfo[i][pVideoCardStatus][j]--;
						}
					}
					SavePlayerVideoCards(i);
				}
		        if(PlayerInfo[i][pVideoCardStatus][j] == _:(VIDEO_CARD_STATUS_NORMAL || VIDEO_CARD_STATUS_BAD))
		        {
          			format(gstr, sizeof(gstr), "[VideoCard]{ffffff} Tkveni Video Karta {FA5858}%d{ffffff} Aris Cud Mdgomarebashi Ris Gamoc Gamoimushavebs Naklebs Bitcoins", j);
                    SendClientMessage(i, COLOR_PAYDAY, gstr);
                    SendClientMessage(i, COLOR_PAYDAY, "[VideoCard]{ffffff} Girchevt Rom Shecvalot");
		        }
			}
		}
        SendClientMessage(i, COLOR_PAYDAY, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        if(member == FRACTION_ARMY)
        {
            /*if(PlayerInfo[i][pArmySkill] < MAX_ARMYTICKET_TIME)*/
            PlayerInfo[i][pArmySkill] ++;
            if(PlayerInfo[i][pArmySkill] == MAX_ARMYTICKET_TIME && !PlayerInfo[i][pArmyTicket])
            {
                PlayerInfo[i][pArmyTicket] = 1;
                PlayerUpdateData(i, "pArmyTicket", PlayerInfo[i][pArmyTicket]);
                format(string, sizeof(string), "[Army]{ffffff} Gilocavt Tkven Aiget Armiis Bileti");
                SendClientMessage(i, 0xB59C66FF, string);
            }
            else if(PlayerInfo[i][pArmySkill] < MAX_ARMYTICKET_TIME)
            {
                format(string, sizeof(string), "[Army]{ffffff} Army Biletis Agebistvis Sachiroa Armiashi Imsaxurot {FF0000}%d{ffffff} Saati (Payday)",MAX_ARMYTICKET_TIME);
                SendClientMessage(i, 0xB59C66FF, string);
                GivePlayerExp(i, 1);
            }
            format(string, sizeof(string), "[Army]{ffffff} Tkveni Armiis Skilis Sanaxavad Gamoikenet: {FF0000}/armyskill");
            SendClientMessage(i, 0xB59C66FF, string);
        }
        if(PlayerInfo[i][pWarn])
        {
            if(PlayerInfo[i][pWarnTime] > 0)
            {
                PlayerInfo[i][pWarnTime] --;
                format(string, sizeof(string), "Tkven Gadevt Gafrtxileba: %d | Darchenilia: %d", PlayerInfo[i][pWarn], PlayerInfo[i][pWarnTime]);
            }
            if(PlayerInfo[i][pWarnTime] <= 0) PlayerInfo[i][pWarn] --;
			if(PlayerInfo[i][pWarn] == 0)
			{
			    format(string, sizeof(string), "Tkven Mogexsnat Gafrtxileba:");
			}
			SendClientMessage(i, COLOR_WHITE, string);
        }
		if(PlayerInfo[i][pAdmin] > 0) PlayerUpdateData(i, "pAdmin_PlayedTime", PlayerInfo[i][pAdmin_PlayedTime]);
		PlayerInfo[i][pAlreadyRobbed] = 0;
		MKillCounter[i] = 0;
		PlayerUpdateData(i, "pAlreadyRobbed", PlayerInfo[i][pAlreadyRobbed]);
    }
}
stock GetPlayerID(string[])
{
	foreach(new i:Player)
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(i, name, sizeof(name));
		if(strcmp(name, string, true, strlen(string)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock IsOnline(name[])
{
    new pname[MAX_PLAYER_NAME];
    foreach(new i:Player)
    {
        GetPlayerName(i, pname, MAX_PLAYER_NAME);
        if(!strcmp(pname, name, true)) return true;
    }
    return false;
}
stock Random(min, max)
{
	new rand = random(max - min) + min;
	return rand;
}
stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, s_strings[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(s_strings, 100, "%d:%02d:%02d", hours, mins, secs);
	else format(s_strings, 100, "%d:%02d", mins, secs);
	return s_strings;
}
stock BadFloat(Float:xyz)
{
	if(xyz >= 10.0 || xyz <= -10.0) return true;
	return false;
}
stock FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) hour = hour+24;
	else if (hour > 23) hour = hour-24;
	shifthour = hour;
	return 1;
}
stock tosquare(&number)
{
	number = (number*number);
	return number;
}
stock CountPlayerCars(playerid)
{
    new query[256];
    format(query, sizeof(query), "SELECT * FROM `cars` WHERE Owner = '%s'",Name(playerid));
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
	return rows;
}
stock GetPlayerCar(playerid, slot)
{
    new query[256], model;
    format(query, sizeof(query), "SELECT * FROM `cars` WHERE Owner = '%s'",Name(playerid));
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
    for new i = 0;i < rows; i++ do
	{
	    if(i < slot) continue;
        cache_get_value_name_int(i, "Model", model);
        break;
    }
	return model;
}
stock ShowCarMenu(playerid)
{
    new query[256];
    format(query, sizeof(query), "SELECT * FROM `cars` WHERE Owner = '%s'",Name(playerid));
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
    if(!rows) return senderror(playerid, "Tkven Gkavt Transporti");
    for(new i = 0; i < 25; i ++)
    {
        MyCarID[playerid][i] = 0;
    }
    new CarCount = 0, listCount = 0, MyCarSales[25];
    for new i = 0;i < rows; i++ do
	{
        cache_get_value_name_int(i, "ID", MyCarInsertID[playerid][CarCount]);
        cache_get_value_name_int(i, "Model", MyCarID[playerid][CarCount]);
        cache_get_value_name_int(i, "Nitro", MyCarTune[playerid][CarCount][CARTUNE_NITRO]);
        cache_get_value_name_int(i, "Wheel", MyCarTune[playerid][CarCount][CARTUNE_WHEEL]);
        cache_get_value_name_int(i, "ColorFirst", MyCarTune[playerid][CarCount][CARTUNE_COLOR1]);
        cache_get_value_name_int(i, "ColorSecond", MyCarTune[playerid][CarCount][CARTUNE_COLOR2]);
        cache_get_value_name_int(i, "Hydrawlic", MyCarTune[playerid][CarCount][CARTUNE_HYDR]);
        cache_get_value_name_int(i, "PaintJob", MyCarTune[playerid][CarCount][CARTUNE_PJ]);
        cache_get_value_name_int(i, "Spoiler", MyCarTune[playerid][CarCount][CARTUNE_SPOILER]);
        cache_get_value_name_int(i, "RearBumper", MyCarTune[playerid][CarCount][CARTUNE_BUMPERR]);
        cache_get_value_name_int(i, "FrontBumper", MyCarTune[playerid][CarCount][CARTUNE_BUMPERF]);
        cache_get_value_name_int(i, "ForSale", MyCarSales[CarCount]);
        //cache_get_value_name_int(i, "RoofAir", MyCarTune[playerid][CarCount][CARTUNE_ROOFAIR]);
        //cache_get_value_name_int(i, "LowerAir", MyCarTune[playerid][CarCount][CARTUNE_LOWERAIR]);
        CarCount ++;
	}
    for(new i = 0; i < 25; i ++) if(MyCarID[playerid][i]) listCount ++;
    new DialogStr[1056], dialogstr[100];
    DialogStr = "{F0A45D}Daarespawnet Tkveni Transporti\n";
    for(new i = 0; i < listCount; i ++)
    {
        if(MyCarSales[i]) format(dialogstr, sizeof(dialogstr), "{F0A45D}[%d] {FFFFFF}- %s {F04245}[Devs Gasakidad]\n",(i+1),GetVehicleName(MyCarID[playerid][i]));
		else format(dialogstr, sizeof(dialogstr), "{F0A45D}[%d] {FFFFFF}- %s\n",(i+1),GetVehicleName(MyCarID[playerid][i]));
        strcat(DialogStr, dialogstr);
    }
    ShowPlayerDialog(playerid, 9, DIALOG_STYLE_TABLIST_HEADERS, "FixCar", DialogStr, "Select", "Close");
    return true;
}
stock ShowSellCarMenu(playerid)
{
    new query[256];
    format(query, sizeof(query), "SELECT * FROM `cars` WHERE Owner = '%s'",Name(playerid));
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
    if(!rows) return senderror(playerid, "Tkven Gkavt Transporti");
    new CarCount = 0, listCount = 0;
    for new i = 0;i < rows; i++ do
	{
        cache_get_value_name_int(i, "Model", MyCarID[playerid][CarCount]);
        CarCount ++;
    }
    for(new i = 0; i < 25; i ++) if(MyCarID[playerid][i]) listCount ++;
    new DialogStr[2056], dialogstr[100];
    DialogStr = "{F0A45D}Gakidet Tkveni Mankana\t{ffffff}Fasi:";
    for(new i = 0; i < listCount; i ++)
    {
        format(dialogstr, sizeof(dialogstr), "{F0A45D}[%d] {FFFFFF}- %s\t%d$\n",(i+1),GetVehicleName(MyCarID[playerid][i]),GetCarPrice(MyCarID[playerid][i]));
        strcat(DialogStr, dialogstr);
    }
    ShowPlayerDialog(playerid, 59, DIALOG_STYLE_TABLIST_HEADERS, "SellCar", DialogStr, "Spawn", "Gasvla");
    return true;
}
stock ApplyVehicleTune(playerid, vehicleid, slot)
{
    ChangeVehicleColor(vehicleid, MyCarTune[playerid][slot][CARTUNE_COLOR1], MyCarTune[playerid][slot][CARTUNE_COLOR2]);
	if(MyCarTune[playerid][slot][CARTUNE_NITRO]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_NITRO]);
	if(MyCarTune[playerid][slot][CARTUNE_WHEEL]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_WHEEL]);
	if(MyCarTune[playerid][slot][CARTUNE_HYDR]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_HYDR]);
	if(MyCarTune[playerid][slot][CARTUNE_PJ] != -1) ChangeVehiclePaintjob(vehicleid, MyCarTune[playerid][slot][CARTUNE_PJ]);
	if(MyCarTune[playerid][slot][CARTUNE_SPOILER]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_SPOILER]);
	if(MyCarTune[playerid][slot][CARTUNE_BUMPERR]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_BUMPERR]);
	if(MyCarTune[playerid][slot][CARTUNE_BUMPERF]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_BUMPERF]);
	//if(MyCarTune[playerid][slot][CARTUNE_ROOFAIR]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_ROOFAIR]);
	//if(MyCarTune[playerid][slot][CARTUNE_LOWERAIR]) AddVehicleComponent(vehicleid, MyCarTune[playerid][slot][CARTUNE_LOWERAIR]);
	return true;
}
stock RemoveVehicleTune(playerid, vehicleid)
{
	for(new i = 0; i < 5; i ++)
	{
		if(MyCarTune[playerid][i][CARTUNE_NITRO]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_WHEEL]);
		if(MyCarTune[playerid][i][CARTUNE_WHEEL]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_WHEEL]);
		if(MyCarTune[playerid][i][CARTUNE_HYDR]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_HYDR]);
        if(MyCarTune[playerid][i][CARTUNE_PJ] != -1) ChangeVehiclePaintjob(vehicleid, -1);
        if(MyCarTune[playerid][i][CARTUNE_SPOILER]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_SPOILER]);
       	if(MyCarTune[playerid][i][CARTUNE_BUMPERR]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_BUMPERR]);
		if(MyCarTune[playerid][i][CARTUNE_BUMPERF]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_BUMPERF]);
		//if(MyCarTune[playerid][i][CARTUNE_ROOFAIR]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_ROOFAIR]);
		//if(MyCarTune[playerid][i][CARTUNE_LOWERAIR]) RemoveVehicleComponent(vehicleid, MyCarTune[playerid][i][CARTUNE_LOWERAIR]);
	}
	return true;
}
stock GivePlayerCar(playerid, carid)
{
	if(PlayerInfo[playerid][pQuest][QUEST_CAR] == 0)
	{
		SetPlayerQuest(playerid, QUEST_CAR);
	}
    new query[150];
    format(query, sizeof(query), "INSERT INTO `cars` (`Owner`, `Model`, `PaintJob`) VALUES ('%s', '%d', '-1')",Name(playerid),carid);
    mysql_query(connect, query);
    return true;
}
stock BankomatUpdateData(idx, field[], data)
{
	new sqlsstr[250];
 	format(sqlsstr, sizeof(sqlsstr), "UPDATE `bankomats` SET %s = %d WHERE BankomatID = %d LIMIT 1", field, data, idx);
 	mysql_tquery(connect, sqlsstr, "", "");
 	DestroyDynamic3DTextLabel(BankomatInfo[idx][BankomatText]);
 	new BankomatStatusStr[350];
	if(BankomatInfo[idx][BankomatMoney] == 0)
    {
		BankomatStatusStr = "{FFFFFF}Ar Mushaobs";
	}
	else if(BankomatInfo[idx][BankomatMoney] > 0)
    {
		BankomatStatusStr = "{FFFFFF}Mushaobs";
	}
 	format(bh_string, sizeof(bh_string), "{46D5C1}[Bankomati]\n{46D5C1}Bankomati #: {FFFFFF}%d\n{46D5C1}Tanxa Bankomatshi: {FFFFFF}%d / 1000000$\n{46D5C1}Bankomatis Statusi: {A34E4E}%s", idx, BankomatInfo[idx][BankomatMoney], BankomatStatusStr);
 	BankomatInfo[idx][BankomatText] = CreateDynamic3DTextLabel(bh_string, COLOR_WHITE, BankomatInfo[idx][BankomatPosX], BankomatInfo[idx][BankomatPosY], BankomatInfo[idx][BankomatPosZ], 3.0);
 	return true;
}
stock SavePlayerLastIP(playerid)
{
    new ip[16];
	GetPlayerIp(playerid, ip, 16);
	SetString(PlayerInfo[playerid][pLastIP], ip);
	PlayerUpdateDataString(playerid, "pLastIP", PlayerInfo[playerid][pLastIP]);
    return true;
}
stock PreloadAnimLib(playerid, animlib[]) return ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 1, 1);
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,462,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsABmx(carid){switch(GetVehicleModel(carid)){case 481,509,510: return true;}return false;}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
stock IsASkin(skinid)
{
	return (0 <= skinid <= 311);
}
stock IsAGov(playerid)
{
	switch(PlayerInfo[playerid][pForm])
	{
		case FRACTION_LSPD, FRACTION_FBI, FRACTION_ARMY, FRACTION_MEDIC, FRACTION_LSNEWS, FRACTION_CITYHALL: return true;
	}
	return false;
}
stock IsACop(playerid)
{
	switch(PlayerInfo[playerid][pForm])
	{
		case FRACTION_LSPD, FRACTION_FBI: return true;
	}
	return false;
}
stock IsAGang(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case FRACTION_BALLAS, FRACTION_VAGOS,
				FRACTION_AZTEC, FRACTION_GROVE, FRACTION_RIFA, FRACTION_BIKERS: return true;
	}
	return false;
}
stock IsAGhetto(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case FRACTION_BALLAS, FRACTION_VAGOS,
				FRACTION_AZTEC, FRACTION_GROVE, FRACTION_RIFA: return true;
	}
	return false;
}
stock IsAGangID(id)
{
	switch(id)
	{
		case FRACTION_BALLAS, FRACTION_VAGOS,
				FRACTION_AZTEC, FRACTION_GROVE, FRACTION_RIFA, FRACTION_BIKERS: return true;
	}
	return false;
}
stock IsAGhettoID(id)
{
	switch(id)
	{
		case FRACTION_BALLAS, FRACTION_VAGOS,
				FRACTION_AZTEC, FRACTION_GROVE, FRACTION_RIFA: return true;
	}
	return false;
}
stock IsALeader(playerid)
{
    new member = PlayerInfo[playerid][pMember];
    if(member < 0) {
		return false;
	}
    if(PlayerInfo[playerid][pRank] == FractionInfo[member][frac_LeaderRank]) {
        return true;
    }
    return false;
}
stock IsGunPoint(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 5.0, -719.8036,1461.2598,-90.5046))
	{
		return true;
	}
	return false;
}
stock IsABank(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1403.1798,-1693.3622,39.5649)
	|| IsPlayerInRangeOfPoint(playerid, 5.0, 1400.4907,-1693.3638,39.5649)
	|| IsPlayerInRangeOfPoint(playerid, 5.0, 1398.1490,-1693.3632,39.5649)
	|| IsPlayerInRangeOfPoint(playerid, 5.0, 1395.4840,-1693.3638,39.5649)
	|| IsPlayerInRangeOfPoint(playerid, 5.0, 1392.9835,-1693.3610,39.5649))
	{
		return true;
	}
	return false;
}
stock IsAChurch(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 25.0, -1989.1962,1117.9503,54.4755))
	{
		return true;
	}
	return false;
}
stock GovTester(playerid)
{
	new str[150];
	format(str, sizeof(str), "SELECT * FROM settings  WHERE GovTester = '%s' LIMIT 1", Name(playerid));
    mysql_query(connect, str);
	new rows;
	cache_get_row_count(rows);
	return rows;
}
stock GhettoTester(playerid)
{
	new str[150];
	format(str, sizeof(str), "SELECT * FROM settings  WHERE GhettoTester = '%s' LIMIT 1", Name(playerid));
    mysql_query(connect, str);
	new rows;
	cache_get_row_count(rows);
	return rows;
}
stock MafiaTester(playerid)
{
	new str[150];
	format(str, sizeof(str), "SELECT * FROM settings  WHERE MafiaTester = '%s' LIMIT 1", Name(playerid));
    mysql_query(connect, str);
	new rows;
	cache_get_row_count(rows);
	return rows;
}
stock GetTesterName(tester[])
{
    new query[128], nametxt[90];
    format(query, sizeof(query), "SELECT `%s` FROM `settings`", tester);
	mysql_query(connect, query);
	new rows;
	cache_get_row_count(rows);
	//if(!rows) return true;
	for new i = 0; i < rows; i ++ do
	{
	    format(query, sizeof(query), "%s",tester);
	    cache_get_value_name(i, query, nametxt, 90);
	}
	return nametxt;
}
stock ShowPlayerATMDialog(playerid)
{
	new dialog_string[250];
	format(dialog_string, sizeof(dialog_string), color_payday"[1] -{ffffff} Tanxis Gamotana\n"color_payday"[2] -{ffffff} Tanxis Shetana\n"color_payday"[3] -{ffffff} Charicxva Mobuluris Angarishze\n"color_payday"[4] -{ffffff} Charicxva Saxlis Angarishze");
	ShowPlayerDialog(playerid, 76, DIALOG_STYLE_LIST, color_payday"ATM{ffffff} | Service", dialog_string, "Next", "Exit");
	return 1;
}
stock PutPlayerInSkinShop(playerid)
{
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, playerid+66);
    SetPlayerPos(playerid, 697.6223, -1603.7784, 14.5957);
    SetPlayerFacingAngle(playerid, 90.0);
    SetPlayerCameraPos(playerid, 695.1972, -1605.5526, 14.5957);
    SetPlayerCameraLookAt(playerid, 697.6223, -1603.7784, 14.5957);
    TogglePlayerControllable(playerid, false);
    SelectTextDraw(playerid, 0x0080C0FF);
    for(new i = 0; i < 12; i ++) PlayerTextDrawShow(playerid, select_PTD[playerid][i]);

    SelectSystemID[playerid] = 1;
    SelectChar[playerid] = 0;
    SkinShopStatus[playerid] = true;
    RenewSkinShop(playerid);
    return true;
}
stock RemovePlayerFromSkinShop(playerid)
{
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerPos(playerid, 695.4545,-1603.7784,14.5957);
    SetPlayerFacingAngle(playerid, 90.0);
    SetCameraBehindPlayer(playerid);
    TogglePlayerControllable(playerid, true);
    CancelSelectTextDraw(playerid);
    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
    for(new i = 0; i < 12; i ++) PlayerTextDrawHide(playerid, select_PTD[playerid][i]);

    SelectSystemID[playerid] = 0;
    SelectChar[playerid] = 0;
    SkinShopStatus[playerid] = false;
    return true;
}
stock RenewSkinShop(playerid)
{
    new str[20];
    SetPlayerSkin(playerid, TheSkins[SelectChar[playerid]][PlayerInfo[playerid][pSex]-1]);
    format(str, sizeof(str), "%d$",TheSkins[SelectChar[playerid]][2]);
    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
    format(str, sizeof(str), "%d/%d",SelectChar[playerid],6);
    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
    return true;
}
stock ShowPlayerMarket(playerid, i, type)
{
    new string[456], str[100], loopCount;
    string = "{ffffff}Item\t{ffffff}Price\n";
    switch(type)
    {
        case 1:
        {
            for(new j = 0; j < sizeof(MarketItems); j ++)
            {
                loopCount ++;
                new product_price = BizzInfo[i][bProductPrice] * loopCount;
                format(str, sizeof(str), color_bizz"[%d] -{ffffff} %s\t%d$\n",(j+1),MarketItems[j],product_price);
                strcat(string, str);
            }
            ShowPlayerDialog(playerid, 19, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}- Market 24/7", string, "Buy", "Close");
        }
        case 2:
        {
            for(new j = 0; j < sizeof(RestourantItems); j ++)
            {
                loopCount ++;
                new product_price = BizzInfo[i][bProductPrice] * loopCount;
                format(str, sizeof(str), color_bizz"[%d] -{ffffff} %s\t%d$\n",(j+1),RestourantItems[j],product_price);
                strcat(string, str);
            }
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}- Restourant", string, "Buy", "Close");
        }
    }
}
stock ACKick(playerid, code[], reason[], type=0)
{
	if(type == 0)
	{
		format(kick_str, sizeof(kick_str), "{ffffff}Server: {4FB64F}"SERVER_SHORT_NAME"\n{ffffff}Name: {4FB64F}%s\n{ffffff}Ping: {4FB64F}%d\n{ffffff}Code: {4FB64F}#%s\n{ffffff}Mizezi: {4FB64F}%s\n\n{FFFFFF}Tu Tvlit, Rom Serveridan Arasworad Gavardit Aucileblad Gaasachivret Jgufshi", Name(playerid), GetPlayerPing(playerid),code,reason);
		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{4FB64F}AntiCheat", kick_str, "Close", "");
	 	format(kick_str, sizeof(kick_str), c_ac"» Anti Cheat »{ffffff} %s"c_ac" Kicked | Reason: {ffffff}%s[%s]",Name(playerid),reason,code);
	 	SendAdminMessage(0x5D6D7EFF, kick_str);
 	}
 	else
 	{
 		format(kick_str, sizeof(kick_str), "{ffffff}Server: {4FB64F}"SERVER_SHORT_NAME"\n{ffffff}Name: {4FB64F}%s\n{ffffff}Ping: {4FB64F}%d\n{ffffff}Code: {4FB64F}#%s\n{ffffff}Mizezi: {4FB64F}%s\n\n{FFFFFF}Tu Tvlit, Rom Serveridan Arasworad Gavardit Aucileblad Gaasachivret Jgufshi", Name(playerid), GetPlayerPing(playerid),code,reason);
		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{4FB64F}You Kicked", kick_str, "Close", "");
 	}
 	printf("[AntiCheat] - %s | %s | %s",Name(playerid),reason,code);
 	Kick(playerid);
	return true;
}
stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
	return floatround(ST[3]);
}
stock IsBadWeapon(weaponid)
{
	for(new i = 0; i < sizeof(BadWeaponIDs); i ++)
	{
	    if(BadWeaponIDs[i] == weaponid) return true;
	}
	return false;
}
stock GetWeaponSlot(weaponid)
{
 	new slot;
 	switch(weaponid)
 	{
   		case 0,1: slot = 0;
   		case 2..9: slot = 1;
   		case 22..24: slot = 2;
   		case 25..27: slot = 3;
   		case 28,29,32: slot = 4;
   		case 30,31: slot = 5;
   		case 33,34: slot = 6;
   		case 35..38: slot = 7;
   		case 16..18,39: slot = 8;
   		case 41..43: slot = 9;
   		case 10..15: slot = 10;
		case 44..46: slot = 11;
	 	case 40: slot = 12;
	 	default: slot = -1;
 	}
 	return slot;
}
stock IsVehicleOccupied(vehicleid)
{
    foreach(new i:Player)
    {
        if(IsPlayerInVehicle(i,vehicleid)) return true;
    }
    return false;
}
stock IsWheelModel(modelid)
{
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i = 0; i < 17; i ++)
	{
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
stock IsLegalCarNitroIde(carmodel)
{
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i = 0; i < 29; i ++)
	{
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
stock IsLegalCarMod(vehicleide, componentid)
{
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else
	{
		for(new I = 0; I < 48; I ++)
		{
			if (legalmods[I][0] == vehicleide)
			{
				for(new J = 1; J < 22; J++)
				{
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}
stock IsLegal_Nos_Vehicle(PlayerID)
{
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}
stock IsIP(text[])
{
	new bool: isip = false, number, dot;
	for(new i = 0; i < strlen(text); i ++)
	{
	    switch(text[i])
		{
		    case '0'..'9': number ++;
		    case '.': dot ++;
		}
	}
	if(number > 4 && dot > 2) isip = true;
	return isip;
}
stock HasNumber(text[])
{
	for(new i = 0; i < strlen(text); i ++)
	{
	    switch(text[i])
		{
		    case '0'..'9': return true;
		}
	}
	return false;
}
stock SetPlayerCriminal(playerid, killerid[], reason[])
{
   	new string[128];
	if(PlayerInfo[playerid][pWanted] > 6)
	{
	    PlayerInfo[playerid][pWanted] = 6;
	}
	format(string,sizeof(string), "Tkven Chaidinet Danashauli: [%s]. Gvatyobinebs: %s.",reason, killerid);
	SendClientMessage(playerid, 0x69CA74FF, string);
	format(string,sizeof(string),"Tkveni Dzebnis Donea: %i", PlayerInfo[playerid][pWanted]);
	SendClientMessage(playerid, 0x69CA74FF, string);
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pMember] == FRACTION_LSPD || PlayerInfo[i][pMember] == FRACTION_FBI)
		{
			format(string, sizeof(string), "Racia: Gvatyobinebs: %s. Danashauli: %s. Damnashave: %s. Dzebnis Done: %d",killerid,reason,Name(playerid),PlayerInfo[playerid][pWanted]);
			SendClientMessage(i, 0x69CA74FF, string);
		}
	}
	return true;
}
stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, MAX_SKILL_LEVEL);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, MAX_SKILL_LEVEL);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, MAX_SKILL_LEVEL);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, MAX_SKILL_LEVEL);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, MAX_SKILL_LEVEL);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, MAX_SKILL_LEVEL);
	return true;
}
stock SetPlayerSkinEx(playerid)
{
	new forma = PlayerInfo[playerid][pForm],
	    member = PlayerInfo[playerid][pMember];
	if(InvData[playerid][i_Skin] > 0)
	{
	    SetPlayerSkin(playerid, InvData[playerid][i_Skin]);
	    return true;
	}
	if(member != 0 && member == forma)
    {
	    if(PlayerInfo[playerid][pModel] == 0) PlayerInfo[playerid][pModel] = FractionSkins[member][0];
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		return true;
	}
	if(PlayerInfo[playerid][pSkin] == 0) PlayerInfo[playerid][pSkin] = 230;
	return SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
}
stock SetPlayerColorEx(playerid)
{
    SetPlayerColor(playerid, COLOR_NONE);
    if(!colorOff[playerid])
    {
        new member = PlayerInfo[playerid][pForm];
        if(member) SetPlayerColor(playerid, FractionInfo[member][frac_Color]);
    }
   	if(DMArea[playerid] >= 1)
	{
	    SetPlayerColor(playerid, 0x5A5C5CFF); // Grey
	}
	//0xB74900FF // Orange
}
stock SetPlayerScoreEx(playerid)
{
    SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
}
stock SetPlayerWantedLevelEx(playerid)
{
	new wlevel = PlayerInfo[playerid][pWanted];
	/*if(!(0 <= wlevel <= 6))
	{
	    wlevel = 0;
	}*/
    if(GetLauncherStatus(playerid))
	{
		cef_emit_event(playerid, "data:pool:wanted", CEFINT(wlevel));
	}
	return SetPlayerWantedLevel(playerid, wlevel);
}
stock NonRPName(text[])
{
    if (strfind(text, "_", true) == -1) return true;
    if(IsIP(text)) return true;

	for(new i = 0; i < strlen(text); i ++)
	{
		switch(text[i])
		{
		    case '0'..'9': return true;
		}
	}

	new nonrptexts[][] =
	{
		"/", "//", "|", "||", "'", "''", ",", ".", ":", ";", "{", "}", "(", ")", "@", "#", "$", "%", "^", "&", "*", "<", ">", "?"
 	};
	for(new i = 0; i < sizeof(nonrptexts); i ++)
	{
	    if (strfind(text, nonrptexts[i], true) != -1) return true;
	}
	return false;
}
stock IsBotIP(ip[])
{
	return !strcmp(ip, "127.0.0.1");
}
stock GetMaxPlayerOnIP(ip[])
{
	if(IsBotIP(ip)) return -1;
	new maxip = 0, myip[16];
	foreach(new i:Player)
	{
		GetPlayerIp(i, myip, 16);
		if(!strcmp(ip, myip)) maxip ++;
	}
	return maxip;
}
stock GetPlayerSpeed(playerid)
{
    new Float:Coord[4];
    GetPlayerVelocity(playerid, Coord[0], Coord[1], Coord[2]);
    Coord[3] = floatsqroot(floatpower(floatabs(Coord[0]), 2.0) + floatpower(floatabs(Coord[1]), 2.0) + floatpower(floatabs(Coord[2]), 2.0)) * 213.3;
    return floatround(Coord[3]);
}
stock IsPlayerInWater(playerid)
{
	new Float:pos;
	GetPlayerPos(playerid, pos, pos, pos);
	return (pos <= 0);
}
/*stock SetPlayerLookAt(playerid, Float:X, Float:Y)
{
    new Float:Px, Float:Py, Float: Pa;
    GetPlayerPos(playerid, Px, Py, Pa);
    Pa = floatabs(atan((Y-Py)/(X-Px)));
    if (X <= Px && Y >= Py) Pa = floatsub(180, Pa);
    else if (X < Px && Y < Py) Pa = floatadd(Pa, 180);
    else if (X >= Px && Y <= Py) Pa = floatsub(360.0, Pa);
    Pa = floatsub(Pa, 90.0);
    if (Pa >= 360.0) Pa = floatsub(Pa, 360.0);
    SetPlayerFacingAngle(playerid, Pa);
}*/
stock SetPlayerLookAt(playerid, Float:X, Float:Y)
{
    new Float:pX, Float:pY, Float:pZ;
    GetPlayerPos(playerid, pX, pY, pZ);
    return SetPlayerFacingAngle(playerid, acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
}
stock SetPlayerFacingAngleToPlayer(playerid, target)
{
    new Float:x1, Float:y1, Float:z1;
    new Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x1, y1, z1);
    GetPlayerPos(target, x2, y2, z2);
    new Float:angle = atan2(y2 - y1, x2 - x1) - 90.0;
    SetPlayerFacingAngle(playerid, angle);
}
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:z, Float:angle;
 	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);
    x += (distance * floatsin(-angle, degrees));
    y += (distance * floatcos(-angle, degrees));
}
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if (IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		if (vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees));
	y -= (distance * floatcos(-a, degrees));
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
    new Float:angle;
    new Float:misc = 5.0;
    new Float:x, Float:y, Float:z;
    new Float:ix, Float:iy, Float:iz;
    GetPlayerPos(facingtoid, x, y, z);
    GetPlayerPos(playerid, ix, iy, iz);
    angle = 180.0-atan2(ix-x,iy-y);
    angle += misc;
    misc *= -1;
    SetPlayerFacingAngle(playerid, angle+misc);
    return true;
}
stock GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
 	foreach(new x:Player)
	{
		if(x != p1)
		{
			dis2 = GetDistanceBetweenPlayers(x,p1);
			if(dis2 < dis && dis2 != -1.00)
			{
				dis = dis2;
				player = x;
			}
		}
	}
	return player;
}
stock IsNearPlayer(playerid, targetid, Float: range=5.0)
{
	new Float:pos[4];
	GetPlayerPos(targetid, pos[0], pos[1], pos[2]);
	pos[3] = GetPlayerVirtualWorld(targetid);
	return (IsPlayerInRangeOfPoint(playerid, range, pos[0], pos[1], pos[2]) && GetPlayerVirtualWorld(playerid) == floatround(pos[3]));
}
stock SetPlayerAutoSchool(playerid, id)
{
    DisablePlayerRaceCheckpoint(playerid);
    SetPlayerRaceCheckpoint(playerid, 0, AutoSchoolPositions[id][0], AutoSchoolPositions[id][1], AutoSchoolPositions[id][2], AutoSchoolPositions[id+1][0], AutoSchoolPositions[id+1][1], AutoSchoolPositions[id+1][2], 4);
    gCheckpoint[playerid] = CHECKPOINT_PRACTICE;
}
stock GetVehicleName(model)
{
	new nameee[85];
	switch(model)
	{
		case 400..611:SetString(nameee, VehicleNames[model-400]);
	    default:
	    {
			for(new i; i < sizeof(NewCaro); i++)
			{
				if(NewCaro[i][NewCarLauncher] == model)
				{
					SetString(nameee, NewCaro[i][NewCarName]);
					break;
				}
			}
		}
	}
    return nameee;
}
stock ShowEventMenu(playerid)
{
    new dialog_string[300];
    format(dialog_string, sizeof(dialog_string), "{27AE60}[1]{ffffff} Status: %s\n{27AE60}[2]{ffffff} Eventis %s",(EventInfo[event_On])?("{7DCEA0}Mimdinareobs"):("{E74C3C}Ar Mimdinareobs"),(EventInfo[event_On])?("Shewkveta"):("Dawkeba"));
    ShowPlayerDialog(playerid, 25, DIALOG_STYLE_LIST, "{ffffff}Event Menu", dialog_string, "Enter", "Exit");
    return true;
}
stock ShowEventMenu2(playerid)
{
    new dialog_string[300];
    format(dialog_string, sizeof(dialog_string), "{27AE60}[1]{ffffff} Event Name:\t%s\n{27AE60}[2]{ffffff} Event Second \t%d\n\
												{27AE60}[3]{ffffff} Auto Health \t %s\
												\n{27AE60}[4]{ffffff} Auto Armour \t%s\
												\n{27AE60}[5]{ffffff} Auto Skin \t\t%d\
                                                \n{27AE60}[6]{ffffff} Auto Weapons\
												\n{27AE60}[7]{ffffff} Start Event",
												EventInfo[event_Name],EventInfo[event_Time],
												(EventInfo[event_AutoHealth])?("{7DCEA0}Enabled"):("{E74C3C}Disabled"),
												(EventInfo[event_AutoArmour])?("{7DCEA0}Enabled"):("{E74C3C}Disabled"),
												EventInfo[event_Skin]
												);
    ShowPlayerDialog(playerid, 26, DIALOG_STYLE_LIST, "{ffffff}Event Menu", dialog_string, "Enter", "Exit");
	return true;
}
stock StartEvent()
{
    #include "..\..\library\TextDraw\Global\Event.inc"
        foreach(new i:Player) StartPlayerEvent(i), PlayerEvent[i] = false;
}
stock EndEvent()
{
    foreach(new i:Player) EndPlayerEvent(i);
    for(new i = 0; i < 14; i ++) TextDrawDestroy(TeleportEvent[i]);
}
stock StartPlayerEvent(playerid)
{
    new event_str[100];
	format(event_str, sizeof(event_str), "%s",EventInfo[event_Name]);
	for(new i = 0; i < 14; i ++) TextDrawShowForPlayer(playerid, TeleportEvent[i]);
	TextDrawSetString(TeleportEvent[0], event_str);
    return true;
}
stock EndPlayerEvent(playerid)
{
	for(new i = 0; i < 14; i ++) TextDrawHideForPlayer(playerid, TeleportEvent[i]);
    return true;
}
stock UpdateEvent()
{
	new event_str[100];
	format(event_str, 100, "%s_~W~-_/GOTP",Convert(EventInfo[event_Time]));
	return TextDrawSetString(TeleportEvent[1], event_str);
}
stock StartSpectate(playerid, specid)
{
    SetPVarInt(playerid, "ReconSkin", GetPlayerSkin(playerid));
    if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
 	{
  		GetPlayerPos(playerid, ReconInfo[playerid][rec_PosX], ReconInfo[playerid][rec_PosY], ReconInfo[playerid][rec_PosZ]);
  		GetPlayerFacingAngle(playerid, ReconInfo[playerid][rec_PosR]);
  		ReconInfo[playerid][rec_Interior] = GetPlayerInterior(playerid);
  		ReconInfo[playerid][rec_VirtualWorld] = GetPlayerVirtualWorld(playerid);
  	}
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid, GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, true);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
		ReconInfo[playerid][rec_Player] = specid;
	}
	else
	{
		SetPlayerInterior(playerid, GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, true);
		PlayerSpectatePlayer(playerid, specid);
		ReconInfo[playerid][rec_Player] = specid;
	}
	ReconInfo[playerid][rec_Status] = true;
	for(new i = 0; i < 16; i ++) TextDrawShowForPlayer(playerid, reconmenu_TD[i]);
	SelectTextDraw(playerid, COLOR_BLUE);
	return true;
}
stock StopSpectate(playerid, stopstype=1)
{
    SetPVarInt(playerid, "ReconSkin", 0);
    SetPlayerSkin(playerid, 0);
	TogglePlayerSpectating(playerid, false);
	ReconInfo[playerid][rec_Status] = false;
	ReconInfo[playerid][rec_Player] = -1;
    ReconInfo[playerid][rec_SpawnStatus] = 1;
	if(stopstype == 2) GameTextForPlayer(playerid, "~w~RECON ~r~ OFF~n~~w~PLAYER ~r~DISCONNECTED",5000,3);
	else GameTextForPlayer(playerid, "~w~RECON ~r~ OFF",5000,3);
	for(new i = 0; i < 16; i ++) TextDrawHideForPlayer(playerid, reconmenu_TD[i]);
	CancelSelectTextDraw(playerid);
	return true;
}
AntiDeAMX()
{
	new antidamx[][] =
	{
		"Unarmed (Fist)",
		"Brass K",
		"Fire Ex"
	};
	#pragma unused antidamx
}
stock ShowSpawnMenu(playerid)
{
    for(new i = 0; i < 14; i ++) TextDrawShowForPlayer(playerid, SpawnMenu_TD[i]);
    SelectTextDraw(playerid, 0x0080C0FF);
    SpawnStatus[playerid] = true;
    return true;
}
stock HideSpawnMenu(playerid)
{
    for(new i = 0; i < 14; i ++) TextDrawHideForPlayer(playerid, SpawnMenu_TD[i]);
    CancelSelectTextDraw(playerid);
    SpawnStatus[playerid] = false;
    return true;
}
stock GivePlayerExp(playerid, amount)
{
    new nextexperience = PlayerInfo[playerid][pLevel]*3;
    PlayerInfo[playerid][pExp] += amount;
    if(PlayerInfo[playerid][pExp] > nextexperience)
    {
        PlayerInfo[playerid][pLevel] ++;
        PlayerUpdateData(playerid, "pLevel", PlayerInfo[playerid][pLevel]);
        PlayerInfo[playerid][pExp] = 0;
        PlayerUpdateData(playerid, "pExp", PlayerInfo[playerid][pExp]);
        format(gstr, sizeof(gstr), "[Update]:{ffffff} Tkven Gadaxvedit{FA5858} %d{ffffff} Level'ze",PlayerInfo[playerid][pLevel]);
        SendClientMessage(playerid, COLOR_PAYDAY, gstr);
        SetPlayerScoreEx(playerid);
    }
    return true;
}
#include "..\..\library\AttachToSkin.inc"
/*#include "..\..\library\SetAttachToSkin.inc"*/
stock GetJobName(jobid)
{
	new jname[32];
	jname = "None";
	switch(jobid)
	{
		case 1: jname = "Fermeri";
		case 2: jname = "Taqsisti";
		case 3: jname = "Traileris Mdzgoli";
	}
	return jname;
}
/*stock GetItemName(id, lang=0)
{
    new s_name[16];
    s_name = "NONE-INVALID";
    for(new i = 0; i < MAX_ITEMS; i ++)
    {
        if(id == i)
        {
            switch(lang)
            {
                case 0: SetString(s_name, ItemInfo[i][item_name_eng]);
                default: SetString(s_name, ItemInfo[i][item_name_geo]);
            }
            break;
        }
    }
    switch(GetItemModelById(id))
    {
        case 1..311: SetString(s_name, "Skin");
    }
    return s_name;
}*/
/*stock GetItemModelById(id)
{
    new s_id = ITEM_INVALID;
    for(new i = 0; i < MAX_ITEMS; i ++)
    {
        if(id == i)
        {
            s_id = ItemInfo[i][item_model];
            break;
       }
    }
    if(0 > id > MAX_ITEMS) return ItemInfo[ITEM_INVALID][item_model];
    return s_id;
}*/
stock GetItemModelById(id)
{
	for(new i = 0; i < MAX_ITEMS; i ++)
	{
		if(ItemInfo[i][item_id] == ItemInfo[id][item_id])
		{
		    return ItemInfo[i][item_model];
		}
	}
	return -1;
}
stock GetItemID(model)
{
    new s_model = 19382;
    for(new i = 0; i < MAX_ITEMS; i ++)
    {
        if(model == ItemInfo[i][item_model])
        {
            s_model = i;
            break;
        }
    }
    return s_model;
}
stock GetItemAttachIndex(model)
{
    new s_index = -1;
    for(new i = 0; i < MAX_ITEMS; i ++)
    {
        if(model == ItemInfo[i][item_model])
        {
            s_index = ItemInfo[i][item_index];
            break;
        }
    }
    return s_index;
}
function FarmStatusNone(playerid)
{
    for(new i = 0; i < MAX_FARM_OBJECT; i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 3.0, FarmObjectInfo[i][cPosX], FarmObjectInfo[i][cPosY], FarmObjectInfo[i][cPosZ]))
        {
            if(jobID[playerid] != JOB_FARM) return senderror(playerid, "Tkven Ar Mushaobt Fermashi");
            if(FarmObjectInfo[i][cStatusTimer]) return 1;
            if(FarmObjectInfo[i][cStatus] != 2) continue;
            new string[350];
            FermaStarted[playerid] = false;
            SetPVarInt(playerid,"farmwork",0);
      		new fmoney = Random(900,1500);
      		new farmstr[100];
			TogglePlayerControllable(playerid, 1);
			format(farmstr, sizeof(farmstr), "~g~+%d$", fmoney);
			GameTextForPlayer(playerid, farmstr, 5000, 1);
            FarmObjectInfo[i][cQulebi] --;
            PlayerInfo[playerid][pCash] += fmoney;
            format(log_str, sizeof(log_str), "%s'm(a) daericxa ferma samushaodan : %d", Name(playerid),fmoney);
			CreateLog("Money", log_str);

            format(string, sizeof(string), "{FF582D}Darchenili Mosavali - {3FF59C}(%d/10)\n\n{FF582D}Mosavlis Asagebad\n\n{FF582D}Daachiret {3FF59C}ALT", FarmObjectInfo[i][cQulebi]);
            UpdateDynamic3DTextLabelText(FarmObjectInfo[i][cTextLabel], -1, string);
            ClearAnimations(playerid);
            if(FarmObjectInfo[i][cQulebi] <= 0)
            {
                DestroyDynamicObject(FarmObjectInfo[i][cObject]);
                FarmObjectInfo[i][cObject] = CreateDynamicObject(865, FarmObjectInfo[i][cPosX], FarmObjectInfo[i][cPosY], FarmObjectInfo[i][cPosZ]-1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
                SetDynamicObjectMaterial(FarmObjectInfo[i][cObject], 0, 812, !"gta_proc_grassland", "oak2b", 0);
                FarmObjectInfo[i][cStatus] = 0;

                FarmObjectInfo[i][cWamebi] = 90;
                FarmObjectInfo[i][cStatusTimer] = 1;
                format(string, sizeof(string), "{CCD3D8}Mtliani Mosavali Agebulia\n{CCD3D8}Axali Mosavali\n\n{FF582D}%s {CCD3D8}Wutshi", ConvertTimeAllT(FarmObjectInfo[i][cWamebi]));
                UpdateDynamic3DTextLabelText(FarmObjectInfo[i][cTextLabel], -1, string);
                FarmObjectInfo[i][cTimer] = SetTimerEx("@__CottonProgressGrow", 1000, true, "d", i);
                return 1;
            }
            qFarm[playerid] ++;
            if(qFarm[playerid] == 20) QuestChecker(playerid);
        }
    }
    return 1;
}
function @__CottonProgressGrow(cottonid)
{
    new string[350];
    FarmObjectInfo[cottonid][cWamebi]--;
    format(string, sizeof(string), "{CCD3D8}Mtliani Mosavali Agebulia\n{CCD3D8}Axali Mosavali\n\n{FF582D}%s {CCD3D8}Wutshi", ConvertTimeAllT(FarmObjectInfo[cottonid][cWamebi]));
    UpdateDynamic3DTextLabelText(FarmObjectInfo[cottonid][cTextLabel], -1, string);
    if(FarmObjectInfo[cottonid][cWamebi] <= 0)
    {
        if(FarmObjectInfo[cottonid][cStatus] == 0)
        {
            DestroyDynamicObject(FarmObjectInfo[cottonid][cObject]);
            FarmObjectInfo[cottonid][cObject] = CreateDynamicObject(865, FarmObjectInfo[cottonid][cPosX], FarmObjectInfo[cottonid][cPosY], FarmObjectInfo[cottonid][cPosZ]-1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
            SetDynamicObjectMaterial(FarmObjectInfo[cottonid][cObject], 0, 817, "gta_procflowers", "gras07Si", 0);
            FarmObjectInfo[cottonid][cStatus] = 1;

            FarmObjectInfo[cottonid][cWamebi] = 90;
            FarmObjectInfo[cottonid][cStatusTimer] = 1;
            format(string, sizeof(string), "{CCD3D8}Mtliani Mosavali Agebulia\n{CCD3D8}Axali Mosavali\n\n{FF582D}%s {CCD3D8}Wutshi", ConvertTimeAllT(FarmObjectInfo[cottonid][cWamebi]));
            UpdateDynamic3DTextLabelText(FarmObjectInfo[cottonid][cTextLabel], -1, string);
        }
        else if(FarmObjectInfo[cottonid][cStatus] == 1)
        {
            DestroyDynamicObject(FarmObjectInfo[cottonid][cObject]);
            FarmObjectInfo[cottonid][cObject] = CreateDynamicObject(865, FarmObjectInfo[cottonid][cPosX], FarmObjectInfo[cottonid][cPosY], FarmObjectInfo[cottonid][cPosZ]-1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
            FarmObjectInfo[cottonid][cStatus] = 2;
            FarmObjectInfo[cottonid][cQulebi] = 10;
            FarmObjectInfo[cottonid][cStatusTimer] = 0;

            format(string, sizeof(string), "{FF582D}Darchenili Mosavali - {3FF59C}(%d/10)\n\n{FF582D}Mosavlis Asagebad\n\n{FF582D}Daachiret {3FF59C}ALT", FarmObjectInfo[cottonid][cQulebi]);
            UpdateDynamic3DTextLabelText(FarmObjectInfo[cottonid][cTextLabel], -1, string);
            KillTimer(FarmObjectInfo[cottonid][cTimer]);
        }
    }
    return 1;
}
stock ConvertTimeAllT(time)
{
    new str[20];
    if(time > 60 && time < 3600)
    {
        new Float:TimeM,TimeS;
        TimeM = time / 60;
        TimeS = time % 60;
        format(str,sizeof(str),"%.0f:%02d",TimeM,TimeS);
    }
    else if(time < 60) format(str,sizeof(str),"0:%02d",time);
    return str;
}
stock IsPlayerNearStol(playerid)
{
	for(new i;i<sizeof(StolCoor);i++) if(GetPlayerDistanceFromPoint(playerid,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2]) < 2.0) return i;
  	return -1;
}
stock SetNameStol(playerid,stolid)
{
	SetPVarInt(playerid,"StolReg",88);
    if(StolInfo[stolid][Gamer][0] == INVALID_PLAYER_ID && KazinoDuty[playerid] == 0) { StolInfo[stolid][Gamer][0] = playerid, StolInfo[stolid][Igrokov]++; return true; }
    if(StolInfo[stolid][Gamer][1] == INVALID_PLAYER_ID && KazinoDuty[playerid] == 0) { StolInfo[stolid][Gamer][1] = playerid, StolInfo[stolid][Igrokov]++; return true; }
    if(StolInfo[stolid][Gamer][2] == INVALID_PLAYER_ID && KazinoDuty[playerid] == 0) { StolInfo[stolid][Gamer][2] = playerid, StolInfo[stolid][Igrokov]++; return true; }
    if(StolInfo[stolid][Gamer][3] == INVALID_PLAYER_ID && KazinoDuty[playerid] == 0) { StolInfo[stolid][Gamer][3] = playerid, StolInfo[stolid][Igrokov]++; return true; }
    if(StolInfo[stolid][Gamer][4] == INVALID_PLAYER_ID && KazinoDuty[playerid] == 0) { StolInfo[stolid][Gamer][4] = playerid, StolInfo[stolid][Igrokov]++; return true; }
 	return false;
}
stock DelName(playerid, stolid)
{
	if(StolInfo[stolid][Gamer][0] == playerid) { StolInfo[stolid][Gamer][0] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return true; }
    if(StolInfo[stolid][Gamer][1] == playerid) { StolInfo[stolid][Gamer][1] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return true; }
    if(StolInfo[stolid][Gamer][2] == playerid) { StolInfo[stolid][Gamer][2] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return true; }
    if(StolInfo[stolid][Gamer][3] == playerid) { StolInfo[stolid][Gamer][3] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return true; }
    if(StolInfo[stolid][Gamer][4] == playerid) { StolInfo[stolid][Gamer][4] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return true; }
 	return false;
}
stock GetCasinName(id)
{
	new name[64];
 	if(id == INVALID_PLAYER_ID) name = "~w~--____________________";
 	else
 	{
 		GetPlayerName(id,name,sizeof(name));
 		new v = 20 - strlen(name);
 		for(new g;g<v;g++)
 		{
 			strcat(name,"_",sizeof(name));
 		}
 	}
 	return name;
}
function UpdateCasino()
{
	for(new i = 0; i < MAX_COSTI; i ++)
 	{
   		if(TimeStavka[i] <= 0) continue;
		TimeStavka[i] --;
  		foreach(new g:Player)
		{
			if(GetPVarInt(g,"GameStol") == i && GetPVarInt(g,"StolReg") == i || StolInfo[i][Crupe] == g)
			{
				new str[14];
 				format(str,sizeof(str),"~g~%d",TimeStavka[i]);
  				GameTextForPlayer(g,str,1200,6);
   				if(TimeStavka[i] == 1 && GetPVarInt(g,"StolReg") == i && GetPVarInt(g,"Ochki") == 88)
				{
					new vip3 = random(12)+1;
					SetPVarInt(g,"Ochki",vip3);
	  			}
	 	 	}
	  	}
	  	if(TimeStavka[i] == 1) ShowItog(i);
   	}
}
stock UpdateCasino2()
{
    for(new s = 0; s < MAX_COSTI; s ++)
   	{
    	new str[256],sstr[40];
    	format(str,sizeof(str),"Fsoni: %d ~g~$~n~~w~Bank: %d ~g~$~n~",StolInfo[s][Stavka],StolInfo[s][Bank]);
    	TextDrawSetString(KostiGameInfo[s],str);
    	format(str,sizeof(str),"");
    	for(new i;i<5;i++)
    	{
    		new text[15];
			text = "~w~--";
    		if(GetPVarInt(StolInfo[s][Gamer][i],"StolReg") == s) text = "~w~++";
    		if(GetPVarInt(StolInfo[s][Gamer][i],"Ochki") != 88) format(text,sizeof(text),"%d",GetPVarInt(StolInfo[s][Gamer][i],"Ochki"));
    		format(sstr,sizeof(sstr),"~w~%d. %s%s~n~",i+1,GetCasinName(StolInfo[s][Gamer][i]),text);
    		strcat(str,sstr,256);
 		}
    	TextDrawSetString(KostiInfo[s],str);
	}
}
stock ShowItog(stolid)
{
	new maxs = 0,id = -1,test = 0;
  	foreach(new i:Player)
	{
   		if(GetPVarInt(i,"StolReg") == stolid && GetPVarInt(i,"Ochki") < 88)
   		{
     		new v = GetPVarInt(i,"Ochki");
     		if(v > maxs) { maxs = v; id = i; }
 		}
  	}
	foreach(new i:Player)
	{
	    if(GetPVarInt(i,"StolReg") == stolid && GetPVarInt(i,"Ochki") < 88 && i != id)
   		{
	    	new v = GetPVarInt(i,"Ochki");
	    	if(v == maxs) { test++; }
		}
	}
	if(test > 0)
	{
	    foreach(new i:Player)
		{
		    if(GetPVarInt(i,"StolReg") == stolid && GetPVarInt(i,"Ochki") < 88)
   			{
            	new v = GetPVarInt(i,"Ochki");
	    		if(v == maxs)
	    		{
   					SetPVarInt(i,"Ochki",88);
   					SetPVarInt(i,"StolReg",stolid);
   					TimeStavka[stolid] = 30;
				}
			}
		}
	}
	else
	{
  		new name[25];
	  	GetPlayerName(id,name,sizeof(name));
	  	new str[144];
	  	format(str,sizeof(str),"{F56262}[CASINO WIN] {FFFFFF}%s - {68BDD6}Igebs Tanxas | {C6E578}Gagorebuli Qvebis Raodenoba - {FFFFFF}%d",name,maxs);
	  	new ammo = StolInfo[stolid][Bank]/90;
	  	PlayerInfo[StolInfo[stolid][Crupe]][pPayment]+=ammo/2;
	  	PlayerInfo[id][pCash]+=StolInfo[stolid][Bank]-ammo;
	  	format(log_str, sizeof(log_str), "%s'm(a) Moigo Kazinoshi : %d", Name(id),StolInfo[stolid][Bank]-ammo);
		CreateLog("Money", log_str);
	  	PlayerUpdateData(id, "pCash", PlayerInfo[id][pCash]);
	  	BizzInfo[1][bSafe] += ammo;
	  	SaveBizzData(1);
	  	if(stolid >= 0 && stolid <= 2)
	  	{

		}
		else if(stolid >= 3 && stolid <= 7)
	  	{
			//if(KazinoInfo[2][Mafia] == 5) LCNBank+=ammo;
	 		//else if(KazinoInfo[2][Mafia] == 6) YakuzaBank+=ammo;
	  		//else if(KazinoInfo[2][Mafia] == 14) RMBank+=ammo;
		}
	  	foreach(new i:Player)
		{
  			if(GetPVarInt(i,"StolReg") == stolid && IsPlayerNearStol(i) != stolid && KazinoDuty[i] == 0)
    		{
				TextDrawHideForPlayer(i,KostiBox[stolid]);
				TextDrawHideForPlayer(i,TableName[stolid]);
				TextDrawHideForPlayer(i,KostiInfo[stolid]);
				TextDrawHideForPlayer(i,KostiGameInfo[stolid]);
				TextDrawHideForPlayer(i,KostiKeyExit);
				TextDrawHideForPlayer(i,KostiKeyDone);
				TextDrawHideForPlayer(i,KostiKeyStavka);
				SetPVarInt(i,"GameStol",88);
				SetPVarInt(i,"StolReg",88);
				TogglePlayerControllable(i,1);
				CancelSelectTextDraw(i);
				DelName(i,stolid);
				SetPVarInt(i,"Ochki",88);
				CasinoDuty[i] = false;
			}
	   		if(GetPVarInt(i,"GameStol") == stolid)
	   		{
	    		SendClientMessage(i,COLOR_INDIGO,str);
	    		SetPVarInt(i,"Ochki",88);
	    		SetPVarInt(i,"StolReg",88);
	   		}
	  	}
		TimeStavka[stolid] = 0;
	  	StolInfo[stolid][Stavka] = 0;
	  	StolInfo[stolid][Bank] = 0;
	  	StolInfo[stolid][GameStart] = 0;
	  	UpdateCasino2();
	}
  	return true;
}
function NullStol(stolid)
{
	StolInfo[stolid][Crupe] = INVALID_PLAYER_ID;
	StolInfo[stolid][GameStart] = 0;
	StolInfo[stolid][Bank] = 0;
    return 1;
}
stock ShowGovWeapons(playerid)
{
    new dialogstring[200], dialogstrcat[64], gunname[32];
    dialogstring = "{ffffff}Take Weapon\n";
    for(new i = 0; i < sizeof(GovGuns); i ++)
    {
        GetWeaponName(GovGuns[i], gunname, sizeof(gunname));
        format(dialogstrcat, sizeof(dialogstrcat), "{7FB151}[%d]{ffffff} %s\n",i+1,gunname);
        strcat(dialogstring, dialogstrcat);
    }
    format(dialogstrcat, sizeof(dialogstrcat), "{7FB151}[%d]{ffffff} %s\n",sizeof(GovGuns)+1,"Armour");
    strcat(dialogstring, dialogstrcat);
    ShowPlayerDialog(playerid, 31, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Weapons", dialogstring, "Take", "Exit");
}
function OnSpeedometerUpdate(playerid)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !IsValidVehicle(GetPlayerVehicleID(playerid)))
    {
        EndSpeedometer(playerid);
        return true;
    }
   	if(GetLauncherStatus(playerid))
	{
		cef_emit_event(playerid, "data:vehicle", CEFINT(veh[playerid][carspeedx]), CEFINT(veh[playerid][cardoorx]), CEFINT(veh[playerid][carenginex]), CEFINT(veh[playerid][carfuelx]));
		return true;
	}
    new speed_str[32], vehicleid = GetPlayerVehicleID(playerid);
    format(speed_str, sizeof(speed_str), "%d", GetVehicleSpeed(vehicleid));
    PlayerTextDrawSetString(playerid, Speedometer_PTD[playerid][24], speed_str);
    if(speedometerChange[playerid] == true)
    {
        GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
        switch(engines)
        {
            case 1: PlayerTextDrawColor(playerid, Speedometer_PTD[playerid][25], -1);
            default: PlayerTextDrawColor(playerid, Speedometer_PTD[playerid][25], 0x8F8F8FFF);
        }
        switch(doorss)
        {
            case 1: PlayerTextDrawColor(playerid, Speedometer_PTD[playerid][26], -1);
            default: PlayerTextDrawColor(playerid, Speedometer_PTD[playerid][26], 0x8F8F8FFF);
        }
        switch(lightss)
        {
            case 1: PlayerTextDrawColor(playerid, Speedometer_PTD[playerid][27], -1);
            default: PlayerTextDrawColor(playerid, Speedometer_PTD[playerid][27], 0x8F8F8FFF);
        }
        for(new i = 25; i <= 27; i ++)
        {
            PlayerTextDrawHide(playerid, Speedometer_PTD[playerid][i]);
            PlayerTextDrawShow(playerid, Speedometer_PTD[playerid][i]);
        }
		new Float: fuel_line = 0.0, Float: max_line = 62.0;
		fuel_line = (gFuel[vehicleid] * max_line) / 100;
		if(fuel_line > max_line) fuel_line = max_line;
		else if(fuel_line < 0.0) fuel_line = 0.0;
		PlayerTextDrawTextSize(playerid, Speedometer_PTD[playerid][36], fuel_line, 7.0000);
  		PlayerTextDrawHide(playerid, Speedometer_PTD[playerid][36]);
    	PlayerTextDrawShow(playerid, Speedometer_PTD[playerid][36]);
		//Speedometer_PTD[playerid][36]
        speedometerChange[playerid] = false;
	}
	if(SpeedLimit[playerid])
	{
		new Float:X, Float:Y, Float:Z;
		//GetVehicleVelocity(vehicleid, X, Y, Z);
		//new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 100.3;
  		GetVehicleVelocity(vehicleid, X, Y, Z);
	    new Float:speed = ((X * X) + (Y * Y) + (Z * Z)) * 167.6;
		floatround(speed);
		if(speed > SpeedLimit[playerid])
		{
			new Float:dif = SpeedLimit[playerid] / speed;
			SetVehicleVelocity(vehicleid, X*dif, Y*dif, Z);
			speed = SpeedLimit[playerid];
		}
	}
    return true;
}
function MobileSpeedometerUpdate(playerid)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !IsValidVehicle(GetPlayerVehicleID(playerid)))
    {
        EndSpeedometer(playerid);
        return true;
    }
    new speed_str[32], vehicleid = GetPlayerVehicleID(playerid);
    format(speed_str, sizeof(speed_str), "%d", GetVehicleSpeed(vehicleid));
    PlayerTextDrawSetString(playerid, Speedometer2_PTD[playerid][21], speed_str);
    if(speedometerChange[playerid] == true)
    {
        GetVehicleParamsEx(vehicleid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
        switch(engines)
        {
            case 1: PlayerTextDrawColor(playerid, Speedometer2_PTD[playerid][41], -1);
            default: PlayerTextDrawColor(playerid, Speedometer2_PTD[playerid][41], 0x8F8F8FFF);
        }
        switch(doorss)
        {
            case 1: PlayerTextDrawColor(playerid, Speedometer2_PTD[playerid][42], -1);
            default: PlayerTextDrawColor(playerid, Speedometer2_PTD[playerid][42], 0x8F8F8FFF);
        }
        switch(lightss)
        {
            case 1: PlayerTextDrawColor(playerid, Speedometer2_PTD[playerid][43], -1);
            default: PlayerTextDrawColor(playerid, Speedometer2_PTD[playerid][43], 0x8F8F8FFF);
        }
        for(new i = 41; i <= 43; i ++)
        {
            PlayerTextDrawHide(playerid, Speedometer2_PTD[playerid][i]);
            PlayerTextDrawShow(playerid, Speedometer2_PTD[playerid][i]);
        }
		new Float: fuel_line = 0.0, Float: max_line = 120.0;
		fuel_line = (gFuel[vehicleid] * max_line) / 100;
		if(fuel_line > max_line) fuel_line = max_line;
		else if(fuel_line < 0.0) fuel_line = 0.0;
		PlayerTextDrawTextSize(playerid, Speedometer2_PTD[playerid][38], fuel_line, 8.0000);
  		PlayerTextDrawHide(playerid, Speedometer2_PTD[playerid][38]);
    	PlayerTextDrawShow(playerid, Speedometer2_PTD[playerid][38]);
		//Speedometer_PTD[playerid][36]
        speedometerChange[playerid] = false;
	}
	if(SpeedLimit[playerid])
	{
		new Float:X, Float:Y, Float:Z;
  		GetVehicleVelocity(vehicleid, X, Y, Z);
	    new Float:speed = ((X * X) + (Y * Y) + (Z * Z)) * 167.6;
		floatround(speed);
		if(speed > SpeedLimit[playerid])
		{
			new Float:dif = SpeedLimit[playerid] / speed;
			SetVehicleVelocity(vehicleid, X*dif, Y*dif, Z);
			speed = SpeedLimit[playerid];
		}
	}
    return true;
}
stock StartSpeedometer(playerid)
{
  	if(GetLauncherStatus(playerid))
	{
		cef_emit_event(playerid, "data:pool:speedometer", CEFINT(1));
		return true;
	}
	if(!IsPlayerMobile(playerid))
	{
		#include "..\..\library\TextDraw\Player\Speedometer.inc"
		for(new i = 0; i < 38; i ++) PlayerTextDrawShow(playerid, Speedometer_PTD[playerid][i]);
		Speedometer_Timer[playerid] = SetTimerEx("OnSpeedometerUpdate", 100, true, "i", playerid);
		return true;
	}
	if(IsPlayerMobile(playerid))
	{
		#include "..\..\library\TextDraw\Player\SpeedometerMobile.inc"
		for(new i = 0; i < 44; i ++) PlayerTextDrawShow(playerid, Speedometer2_PTD[playerid][i]);
		Speedometer_Timer[playerid] = SetTimerEx("MobileSpeedometerUpdate", 200, true, "i", playerid);
	}
    return true;
}
stock EndSpeedometer(playerid)
{
  	if(GetLauncherStatus(playerid))
	{
		cef_emit_event(playerid, "data:pool:speedometer", CEFINT(0));
		return true;
	}
	if(!IsPlayerMobile(playerid))
	{
		for(new i = 0; i < 38; i ++) PlayerTextDrawDestroy(playerid, Speedometer_PTD[playerid][i]);
		if(Speedometer_Timer[playerid] != -1)
		{
			KillTimer(Speedometer_Timer[playerid]);
			Speedometer_Timer[playerid] = -1;
		}
		return true;
	}
	if(IsPlayerMobile(playerid))
	{
		for(new i = 0; i < 44; i ++) PlayerTextDrawDestroy(playerid, Speedometer2_PTD[playerid][i]);
		if(Speedometer_Timer[playerid] != -1)
		{
			KillTimer(Speedometer_Timer[playerid]);
			Speedometer_Timer[playerid] = -1;
		}
	}
    return true;
}
stock GetNearestVehicle(playerid, Float:range=5.0)
{
	for(new i = 0, j = GetVehiclePoolSize(); i <= j; i ++)
	{
        if(!IsValidVehicle(i)) continue;
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(i,X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, range, X, Y, Z)) return i;
	}
	return -1;
}
stock LockCar(carid)
{
	foreach(new i:Player)
	{
        GetVehicleParamsEx(carid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
		SetVehicleParamsEx(carid, engines, lightss, alarms, 1, bonnets, boots, objectives);
		SetVehicleParamsForPlayer(carid, i, 0, 1);
        gCarLock[carid] = 1;
	}
}
stock UnLockCar(carid)
{
	foreach(new i:Player)
	{
		GetVehicleParamsEx(carid, engines, lightss, alarms, doorss, bonnets, boots, objectives);
		SetVehicleParamsEx(carid, engines, lightss, alarms, 0, bonnets, boots, objectives);
		SetVehicleParamsForPlayer(carid, i, 0, 0);
        gCarLock[carid] = 0;
	}
}
function GetPlayerCountry(index, response_code, data[])
{
    new buffer[358];
    if(response_code == 200)
    {
     	new ffstr[230], city[5], country[20];
		new strip[15];
		GetPlayerIp(index,strip,15);
	  	format(buffer, sizeof(buffer), "%s", data);
	  	strmid(ffstr, buffer, 4, strlen(buffer));
		strmid(city, ffstr, strfind(ffstr, ";", true) + 1, strfind(ffstr, ";", true) + 3);
	 	strmid(country, ffstr, strfind(ffstr, ";", true) + 4, strlen(buffer));
   		SetString(prox_Country[index], country);
     	SetString(prox_City[index], city);
     	if(!GetString(country, "Georgia"))
     	{
      		if(ipchanger == 1)
	        {
	        	ACKick(index, "5125", "IP Changer");
	            return true;
	        }
         	format(gstr, sizeof(gstr), "[AntiCheat]{ffffff} %s - IP Changer Detected | IP: %s [%s/%s]", Name(index), strip, country, city);
	        SendAdminMessage(0xFF0000FF, gstr);
			foreach(new i:Player)
	  		{
	    		if(isAlogged[i])
	      		{
			  		GameTextForPlayer(i, "~r~IP CHANGER ~w~Detected !", 2000, 3);
	        	}
	    	}
		}
    }
    else
    {
        printf("[GetPlayerCountry]: response_code: <%d>",response_code);
    }
    return 1;
}
/*function p_proxy_check(playerid, response_code, data[])
{
    if(response_code == 200)
    {
		new ip[15];
		GetPlayerIp(playerid,ip,15);
        sscanf(data, "p<,>s[32]s[32]s[12]s[12]s[32]s[6]",
            player_geoInfo[playerid][player_country],
            player_geoInfo[playerid][player_city],
            player_geoInfo[playerid][player_lat],
            player_geoInfo[playerid][player_lon],
            player_geoInfo[playerid][player_provider],
            player_geoInfo[playerid][player_proxy]);
        if(!GetString(player_geoInfo[playerid][player_proxy], "false"))
		{
		    if(!AllowedIP(player_geoInfo[playerid][player_ip]))
        	{
	         	format(gstr, sizeof(gstr), "[AntiCheat]{ffffff} %s - Shesadzloa Iyenebdes Georgian IP Changer | IP: %s [%s/%s]", Name(playerid), ip, player_geoInfo[playerid][player_country], player_geoInfo[playerid][player_city]);
		        SendAdminMessage(0xFF0000FF, gstr);
				foreach(new i:Player)
		  		{
		    		if(isAlogged[i])
		      		{
				  		GameTextForPlayer(i, "~r~IP CHANGER ~w~Detected !", 2000, 3);
		        	}
		    	}
			}
		}
	}
    else
    {
        strmid(player_geoInfo[playerid][player_country], "None", 0, GEO_MAX_COUNTRY_NAME_LENGTH);
        strmid(player_geoInfo[playerid][player_city], "None", 0, GEO_MAX_CITY_NAME_LENGTH);
        strmid(player_geoInfo[playerid][player_lat], "None", 0, GEO_MAX_LAT_LON_LENGTH);
        strmid(player_geoInfo[playerid][player_lon], "None", 0, GEO_MAX_LAT_LON_LENGTH);
        strmid(player_geoInfo[playerid][player_provider], "None", 0, GEO_MAX_PROVIDER_NAME_LENGTH);
        strmid(player_geoInfo[playerid][player_proxy], "None", 0, GEO_MAX_PROXY_LENGTH);
    }
    return 1;
}*/
stock AllowedIP(ip[])
{
    new query[128];
    format(query, sizeof(query), "SELECT `ip` FROM `ipallowed` WHERE ip = '%s'",ip);
    mysql_query(connect, query);
    new rows;
    cache_get_row_count(rows);
    return rows;
}
stock AllowedIPAdd(ip[])
{
    new query[128];
    format(query, sizeof(query), "INSERT INTO `ipallowed` (`ip`) VALUES ('%s')",ip);
    mysql_query(connect, query);
}
stock AllowedIPRemove(ip[])
{
    new query[128];
    format(query, sizeof(query), "DELETE FROM `ipallowed` WHERE `ip` = '%s'",ip);
    mysql_query(connect, query);
}
stock AddAdminIP(name[], ip[])
{
	new query[256];
	format(query, sizeof(query), "INSERT INTO `adminip` (`Name`, `IP`) VALUES ('%s', '%s')",name,ip);
	mysql_query(connect, query);
}
stock RemAdminIP(ip[])
{
	if(AdminIP(ip))
	{
		new query[256];
	 	format(query, sizeof(query), "DELETE FROM `adminip` WHERE `IP` = '%s'",ip);
		mysql_query(connect, query);
	}
}
stock AdminIP(ip[])
{
	new query[250];
	format(query, 250, "SELECT `IP` FROM `adminip` WHERE IP = '%s'",ip);
	mysql_query(connect, query);
	new rows;
	cache_get_row_count(rows);
	return rows;
}
stock RemoveCjSkin(name[])
{
	new string[128];
	if(CjSkinAqvs2(name))
	{
        format(string, sizeof(string), "DELETE FROM `cjskin` WHERE `name` = '%s'",name);
		mysql_query(connect, string);
	}
}
stock AddCjSkin(name[])
{
	new string[128];
	format(string, sizeof(string), "INSERT INTO `cjskin` (`name`) VALUE ('%s')", name);
	mysql_query(connect, string);
}
stock CjSkinAqvs(playerid)
{
	new string[128], PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(string, sizeof(string), "SELECT * FROM `cjskin` WHERE `name` = '%s' LIMIT 1",PlayerName);
	mysql_query(connect, string);
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		return true;
	}
	return false;
}
stock CjSkinAqvs2(name[])
{
	new string[128];
	format(string, sizeof(string), "SELECT * FROM `cjskin` WHERE `name` = '%s' LIMIT 1",name);
	mysql_query(connect, string);
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		return true;
	}
	return false;
}
stock GetRankName(frac, rank)
{
    new nam[64];
    nam = "none";
    if(frac > 0)
    {
        if(frac == FRACTION_LSPD)
        {
            switch(rank)
            {
                case 1: nam = "Cadet";
                case 2: nam = "Officer I";
                case 3: nam = "Officer II";
                case 4: nam = "Officer II";
                case 5: nam = "Senior Officer";
                case 6: nam = "Corporal";
                case 7: nam = "Sergeant";
                case 8: nam = "Detective";
                case 9: nam = "Lead Detective";
                case 10: nam = "Lieutenant";
                case 11: nam = "Major";
                case 12: nam = "Captain";
                case 13: nam = "Commander";
                case 14: nam = "Assistant of Chief Police";
                case 15: nam = "Chief of Police";
            }
        }
        if(frac == FRACTION_FBI)
        {
            switch(rank)
            {
                case 1: nam = "Cadet";
                case 2: nam = "Trainee";
                case 3: nam = "Agent";
                case 4: nam = "Operational Agent";
                case 5: nam = "Expert";
                case 6: nam = "Analyst";
                case 7: nam = "Spec Agent";
                case 8: nam = "Spec Agent in Charge";
                case 9: nam = "Secretary of Operational HQ Manager";
                case 10: nam = "Operational HQ Manager";
            }
        }
        if(frac == FRACTION_ARMY)
        {
            switch(rank)
            {
                case 1: nam = "Private";
                case 2: nam = "Coprral";
                case 3: nam = "Lance Copral";
                case 4: nam = "Lieutenant";
                case 5: nam = "Captain";
                case 6: nam = "Vice General";
                case 7: nam = "General";
                case 8: nam = "Vice Admiral";
                case 9: nam = "Admiral";
            }
        }
        if(frac == FRACTION_BALLAS)
        {
        	switch(rank)
            {
                case 1: nam = "Blide";
                case 2: nam = "Nigga";
                case 3: nam = "Kreker";
                case 4: nam = "Gangsta";
                case 5: nam = "Folcs";
                case 6: nam = "Federal Block";
                case 7: nam = "Rich Nigga";
                case 8: nam = "Big Villi";
            }
        }
        if(frac == FRACTION_VAGOS)
        {
        	switch(rank)
            {
                case 1: nam = "Novatto";
                case 2: nam = "Ordinario";
                case 3: nam = "Local";
                case 4: nam = "Vereficado";
                case 5: nam = "Bandito";
                case 6: nam = "Assesino";
                case 7: nam = "Padrinho";
                case 8: nam = "Padre";
            }
        }
        if(frac == FRACTION_AZTEC)
        {
        	switch(rank)
            {
                case 1: nam = "Perro";
                case 2: nam = "Tirador";
                case 3: nam = "Ghettor";
                case 4: nam = "Las Gerras";
                case 5: nam = "Sabio";
                case 6: nam = "Invasor";
                case 7: nam = "Nestro";
                case 8: nam = "Padre";
            }
        }
        if(frac == FRACTION_GROVE)
        {
        	switch(rank)
            {
                case 1: nam = "Playa";
                case 2: nam = "Hastla";
                case 3: nam = "Killa";
                case 4: nam = "Young";
                case 5: nam = "Gangst";
                case 6: nam = "O.G.";
                case 7: nam = "Legend";
                case 8: nam = "Mad Dog";
            }
        }
        if(frac == FRACTION_RIFA)
        {
        	switch(rank)
            {
                case 1: nam = "Novatto";
                case 2: nam = "Amigo";
                case 3: nam = "Macho";
                case 4: nam = "Junior";
                case 5: nam = "Bandido";
                case 6: nam = "Autoridad";
                case 7: nam = "Adjunto";
                case 8: nam = "Padre";
            }
        }
        if(frac == FRACTION_MEDIC)
        {
        	switch(rank)
            {
                case 1: nam = "Trainee";
                case 2: nam = "Advanced";
                case 3: nam = "Paramedic";
                case 4: nam = "Commissioner";
                case 5: nam = "Doctor";
                case 6: nam = "Chief of Doctor";
            }
        }
        if(frac == FRACTION_BIKERS)
        {
        	switch(rank)
            {
                case 1: nam = "Looser";
                case 2: nam = "Enforcer";
                case 3: nam = "Original";
                case 4: nam = "Road Captain";
                case 5: nam = "Under Boss";
                case 6: nam = "Boss";
            }
        }
        if(frac == FRACTION_LSNEWS)
        {
        	switch(rank)
            {
                case 1: nam = "Intern";
                case 2: nam = "Advanced";
                case 3: nam = "Reporter";
                case 4: nam = "Public Service";
                case 5: nam = "Interrogator";
                case 6: nam = "Excellence";
            }
        }
        if(frac == FRACTION_CITYHALL)
        {
        	switch(rank)
            {
                case 1: nam = "Intern";
                case 2: nam = "Driver";
                case 3: nam = "Secretary";
                case 4: nam = "Lawyer";
                case 5: nam = "Guard";
                case 6: nam = "Chief of Security";
                case 7: nam = "Vice Mayor";
                case 8: nam = "Mayor";
            }
        }
        if(frac == FRACTION_LCN)
        {
       		switch(rank)
            {
                case 1: nam = "Novacio";
                case 2: nam = "Assositor";
                case 3: nam = "Sombatente";
                case 4: nam = "Soldato";
                case 5: nam = "Fighter";
                case 6: nam = "Sott-Capo";
                case 7: nam = "Capo";
                case 8: nam = "Consigliere";
                case 9: nam = "Don";
                case 10: nam = "Godfather";
            }
        }
        if(frac == FRACTION_YAKUZA)
        {
       		switch(rank)
            {
                case 1: nam = "Vakasyu";
                case 2: nam = "Syatei";
                case 3: nam = "Cedai";
                case 4: nam = "Kombute";
                case 5: nam = "Vagakasira";
                case 6: nam = "Hombute";
                case 7: nam = "Cambu";
                case 8: nam = "Saico";
                case 9: nam = "Oyadzi";
                case 10: nam = "Cumite";
            }
        }
        if(frac == FRACTION_RM)
        {
       		switch(rank)
            {
                case 1: nam = "Shniri";
                case 2: nam = "Mujiki";
                case 3: nam = "Mujiki";
                case 4: nam = "Momavali";
                case 5: nam = "Blatnoi";
                case 6: nam = "Quchis Bichi";
                case 7: nam = "Kai Bichi";
                case 8: nam = "Qurdi";
                case 9: nam = "Kanonieri Qurdi";
                case 10: nam = "Avtoriteti";
            }
        }
    }
    return nam;
}
stock SendMuteMessage(playerid)
{
    new string[128];
	format(string, sizeof(string), "[Mute]{5DADE2} Tkven Gadevt Chatis Bani ! Moxsnamde Darchenilia:{ffffff} %s",Convert(PlayerInfo[playerid][pMuteTime]));
	SendClientMessage(playerid, COLOR_REDD, string);
    return true;
}
stock RemovePlayerFromVehicleEx(playerid)
{
	SetTimerEx("AntiRemovePlayerFromVehicle", 4000, false, "i", playerid);
	return RemovePlayerFromVehicle(playerid);
}
function AntiRemovePlayerFromVehicle(playerid)
{
	if(GetPlayerState(playerid) == 2)
	{
        ACKick(playerid, "014", "Seat Hack");
	}
}
stock PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
	new Float:fX, Float:fY, Float:fZ;
	GetVehiclePos(vehicleid, fX, fY, fZ);
    P_Sync[playerid][s_pos_x] = fX;
    P_Sync[playerid][s_pos_y] = fY;
    P_Sync[playerid][s_pos_z] = fZ;
	vehicleput[playerid] = vehicleid;
	return PutPlayerInVehicle(playerid, vehicleid, seatid);
}
/*stock ClearReconnect()
{
	foreach(new i:Player) strmid(ExitInfo[i][ExitName],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	return true;
}*/
stock SendMes(playerid, color, fstringg[], {Float, _}:...)
{
	static const
	STATIC_ARGS = 3;
	new
	n = (numargs() - STATIC_ARGS) * BYTES_PER_CELL;
	if (n)
	{
		new
		message[128],
		arg_start,
		arg_end;
		#emit CONST.alt        fstringg
		#emit LCTRL          5
		#emit ADD
		#emit STOR.S.pri        arg_start

		#emit LOAD.S.alt        n
		#emit ADD
		#emit STOR.S.pri        arg_end
		do
		{
			#emit LOAD.I
			#emit PUSH.pri
			arg_end -= BYTES_PER_CELL;
			#emit LOAD.S.pri      arg_end
		}
		while (arg_end > arg_start);

		// Push the static format parameters.
		#emit PUSH.S          fstringg
		#emit PUSH.C          128
		#emit PUSH.ADR         message

		n += BYTES_PER_CELL * 3;
		#emit PUSH.S          n
		#emit SYSREQ.C         format

		n += BYTES_PER_CELL;
		#emit LCTRL          4
		#emit LOAD.S.alt        n
		#emit ADD
		#emit SCTRL          4
		return SendClientMessage(playerid, color, message);
	}
	else return SendClientMessage(playerid, color, fstringg);
}
stock BanPlayer(playername[], adminname[], day, reason[])
{
    if(!strlen(playername) || !strlen(adminname) || !strlen(reason) || day <= 0)
    {
        return false;
    }
    new query[500];
    //format(query, sizeof(query), "Administratorma %s'm(a) Daado Bani %s'(s) Mizezi: %s Dge: %d",Name(adminid),Name(playerid),reason,day);
    if(IsPlayerBanned(playername))
    {
        printf("[BanPlayer]: Player %s Already Banned",playername);
        return true;
    }
    if(GetPlayerID(playername) != INVALID_PLAYER_ID)
    {
        Kick(GetPlayerID(playername));
    }
    new year, month, days;
	getdate(year, month, days);
	new hour,minuite,second;
    gettime(hour,minuite,second);
	new datestr[90];
	format(datestr, sizeof(datestr), "%d/%d/%d, %d:%d",days,month,year,hour,minuite);
    format(query, sizeof(query), "Administratorma %s'm(a) Daado Bani %s'(s) Mizezi: %s Dge: %d",adminname,playername,reason,day);
    SendClientMessageToAll(COLOR_LIGHTRED, query);
    stringclear(query);
    format(query, sizeof(query), "INSERT INTO `bans` (`Name`, `Reason`, `Day`, `AdminName`, `Date`) VALUES ('%s', '%s', '%d', '%s', '%s')",playername,reason,getdate()+day,adminname,datestr);
    mysql_query(connect, query);
    printf("[BanPlayer]: %s Banned | Reason: %s",playername,reason);
    return true;
}
stock UnBanPlayer(playername[])
{
    if(!IsPlayerBanned(playername)) return false;
    new query[200];
    format(query, sizeof(query), "DELETE FROM `bans` WHERE Name = '%s'",playername);
    mysql_query(connect, query);
    return true;
}
stock IsPlayerBanned(playername[])
{
    new query[200], rows;
    format(query, sizeof(query), "SELECT `Name` FROM `bans` WHERE Name = '%s'",playername);
    mysql_query(connect, query);
    cache_get_row_count(rows);
    if(rows) return true;
    return false;
}
function OnBannedPlayerLogin(playerid)
{
    if(cache_num_rows())
    {
        new playername[200], adminname[200], reason[200], day, date[300], string[800];
        cache_get_value_name(0, "Name", playername, 100);
        cache_get_value_name(0, "Reason", reason, 100);
        cache_get_value_name(0, "AdminName", adminname, 100);
        cache_get_value_name_int(0, "Day", day);
        cache_get_value_name(0, "Date", date, 40);
        if(!IsPlayerBanned(playername)) return false;
        new current = getdate();
        new haj = day-current;
        if(haj > 300)
        {
            day = haj-365;
        }
        if(day > current)
        {
            format(string, sizeof(string), "\n\n{ffffff}Server: {4FB64F}"SERVER_SHORT_NAME"\n{ffffff}Name: {4FB64F}%s\n{ffffff}Reason: {4FB64F}%s\n{ffffff}AdminName: {4FB64F}%s\n{ffffff}Day: {4FB64F}%d\n{ffffff}Date: {4FB64F}%s\
                                            \n\n{ffffff}Tkveni Accounti Dablokolia Serverze\nTu Tvlit Rom Arasworad Dadegot Bani\nGaasachivret Chvens Facebook Jgufshi\n",playername,reason,adminname,day-current,date);
            ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{ffffff}Account Blocked", string, "Exit", "");
            Kick(playerid);
            printf("[AntiCheat] - %s Gaikika Serveridan Mizezi - Xuvoznaet [Code : OnBannedPlayerLogin]", Name(playerid));
            return true;
        }
        else if(day <= current)
        {
            UnBanPlayer(playername);
        }
    }
    return true;
}
stock IsVehicleHasDriver(vehid)
{
    foreach(new i:Player)
	{
		if(IsPlayerInVehicle(i, vehid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return true;
    }
    return false;
}
stock GetVehicleDriver(vehid)
{
    foreach(new i:Player)
	{
		if(IsPlayerInVehicle(i, vehid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) return i;
    }
    return -1;
}
stock GetVehicleOwner(vehicleid)
{
    foreach(new i:Player)
    {
        if(caridhouse[i] == vehicleid) return i;
    }
	return INVALID_PLAYER_ID;
}
/*stock GetDistanceBetweenPoints(Float: X, Float: Y, Float: Z, Float: PointX, Float: PointY, Float: PointZ)
{
	new Float: Distance;
	Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return floatround(Distance);
}*/
stock IsCompatible(modelid, componentid)
{
	if(IsValidVehicleModel(modelid))
	{
		switch(componentid)
		{
			case 1000..1191:
			{
				componentid -= 1000;
				if(vMods[(modelid - 400) * 6 + (componentid >>> 5)] & 1 << (componentid & 0b00011111)) return 1;
			}
			case 1192, 1193:
			{
				if(modelid == 576) return 1;
			}
		}
	}
	return 0;
}
stock IsValidVehicleModel(const modelid) return (400 <= modelid <= 611);
stock IsPlayerInGreenZone(playerid)
{
	for(new i = 1; i <= TotalZone; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, ZoneInfo[i][ZoneDistance], ZoneInfo[i][ZonePosX], ZoneInfo[i][ZonePosY], ZoneInfo[i][ZonePosZ]))
		{
			return true;
		}
	}
	return false;
}
stock max_car_speed(veh_model) {
	new speed;
	switch(veh_model) {
		case 400, 409, 516, 517, 526, 535, 551, 575, 576, 579, 599: speed = 88;
		case 401, 466: speed = 82;
		case 402, 477: speed = 104;
		case 403, 433, 471, 532, 601: speed = 61;
		case 404: speed = 74;
		case 405, 445, 518, 542: speed = 91;
		case 410: speed = 72;
		case 411: speed = 123;
		case 412, 439, 560, 534, 602, 603: speed = 94;
		case 415, 451: speed = 108;
		case 416, 421: speed = 86;
		case 419, 436, 474, 527, 529, 540, 546: speed = 83;
		case 420, 550, 568: speed = 81;
		case 422, 467, 489, 492, 500: speed = 78;
		case 424: speed = 75;
		case 426, 522, 596, 597, 598: speed = 110;
		case 427, 507, 565, 587: speed = 92;
		case 429, 541: speed = 113;
		case 434: speed = 93;
		case 438, 505, 515, 547: speed = 79;
		case 440, 582: speed = 76;
		case 461, 521, 524, 566: speed = 90;
		case 462, 463, 468, 586: speed = 80;
		case 558, 470, 482, 490: speed = 87;
		case 475, 536, 567: speed = 96;
		case 478: speed = 65;
		case 480: speed = 103;
		case 491: speed = 83;
		case 494, 502, 503: speed = 120;
		case 523, 580, 581, 585, 600: speed = 85;
		case 506, 559, 562: speed = 100;
		case 571: speed = 52;
		case 514: speed = 67;
		default: speed = 124;
	}
	return speed;
}
stock SpeedLimiter(playerid)
{
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 402 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 403 && SpeedVehicle(playerid)-20 > 75) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 404 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 409 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 410 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 411 && SpeedVehicle(playerid)-20 > 130) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 412 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 413 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 && SpeedVehicle(playerid)-20 > 115) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 418 && SpeedVehicle(playerid)-20 > 85) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 419 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 421 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 422 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 427 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 428 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 429 && SpeedVehicle(playerid)-20 > 120) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 433 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 434 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 439 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 444 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 445 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 451 && SpeedVehicle(playerid)-20 > 115) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 459 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 461 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 466 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 467 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 468 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 470 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 474 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 475 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 477 && SpeedVehicle(playerid)-20 > 115) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 478 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 479 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 480 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 489 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 490 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 491 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 492 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 494 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 495 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 496 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 498 && SpeedVehicle(playerid)-20 > 85) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 500 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 502 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 503 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 505 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 506 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 507 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 516 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 521 && SpeedVehicle(playerid)-20 > 130) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 522 && SpeedVehicle(playerid)-20 > 130) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 523 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 526 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 527 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 528 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 529 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 531 && SpeedVehicle(playerid)-20 > 80) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 533 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 540 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 541 && SpeedVehicle(playerid)-20 > 120) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 542 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 543 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 545 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 549 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 551 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 554 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 555 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 566 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 568 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 571 && SpeedVehicle(playerid)-20 > 75) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 579 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 580 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 581 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 582 && SpeedVehicle(playerid)-20 > 95) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 586 && SpeedVehicle(playerid)-20 > 125) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 587 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 && SpeedVehicle(playerid)-20 > 105) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 596 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 597 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 598 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 599 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 600 && SpeedVehicle(playerid)-20 > 100) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 601 && SpeedVehicle(playerid)-20 > 90) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 602 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 && SpeedVehicle(playerid)-20 > 110) ACKick(playerid, "024", "Speed Hack (invehicle)");
    return true;
}
stock CreatePromocode(name[], cash, level)
{
	new str[300];
	format(str, 300, "INSERT INTO `promocode` (`Text`, `Cash`, `Level`) VALUES ('%s', '%d', '%d')",name,cash,level);
	mysql_query(connect, str);
	return 1;
}
stock DeletePromocode(name[])
{
	new str[300];
	format(str, 256, "DELETE FROM `promocode` WHERE `Text` = '%s'",name);
	mysql_query(connect, str);
	return 1;
}
stock CheckPromocode(name[])
{
	new query[250];
	format(query, 250, "SELECT `Text` FROM `promocode` WHERE Text = '%s'",name);
	mysql_query(connect, query);
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    return 1;
	}
	return 0;
}
stock ShowPromoCodeDialog(playerid)
{
	if(PlayerInfo[playerid][pPromouse] == 1) return sendpromo(playerid, "Tkven Ukve Gamokenebuli Gakvt Promocode !");
	ShowPlayerDialog(playerid, 40, DIALOG_STYLE_INPUT, color_promo"Promocode{ffffff} | Enter", "\n{ffffff}- Chawere Server'ze Arsebuli Nebismieri"color_promo"Promocode\n{ffffff}- Da Miige Promocdestan Shesabamisi Sachuqrebi\n", "Enter", "Exit");
	return 1;
}
function LoadAntiCheatSettings()
{
    new rows, anticounter = 0;
	cache_get_row_count(rows);
	for (new i = 0; i < cache_num_rows(); i ++)
	{
 		cache_get_value_name_int(i, "ac_code_trigger_type", AC_CODE_TRIGGER_TYPE[anticounter]);
   		if(AC_CODE_TRIGGER_TYPE[anticounter] == AC_CODE_TRIGGER_TYPE_DISABLED)
     	EnableAntiCheat(anticounter, 0);
		anticounter++;
	}
	if(cache_num_rows()) print("[Nex-AC debug] Nexius Tailer anti cheat loaded ...");
	return true;
}
stock ShowPlayer_AntiCheatSettings(playerid)
{
    static
        dialog_string[42 + 19 - 8 + (AC_MAX_CODE_LENGTH + AC_MAX_CODE_NAME_LENGTH + AC_MAX_TRIGGER_TYPE_NAME_LENGTH + 10)*AC_MAX_CODES_ON_PAGE] = EOS;

    new
        triggeredCount = 0,
        page = pAntiCheatSettingsPage{playerid},
        next = 0,
        index = 0;

    dialog_string = "{FFFFFF}Name\t{FFFFFF}Status\t{FFFFFF}Use Cheats\n";

    for(new i = 0; i < AC_MAX_CODES; i++)
    {
        if(i >= (page * AC_MAX_CODES_ON_PAGE) && i < (page * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE)
            next++;

        if(i >= (page - 1) * AC_MAX_CODES_ON_PAGE && i < ((page - 1) * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE)
        {
            triggeredCount = AC_CODE_TRIGGERED_COUNT[i];

            format(dialog_string, sizeof(dialog_string), "%s[%s] %s\t%s\t%d\n",
                dialog_string,
                AC_CODE[i],
                AC_CODE_NAME[i],
                AC_TRIGGER_TYPE_NAME[AC_CODE_TRIGGER_TYPE[i]],
                triggeredCount);

            pAntiCheatSettingsMenuListData[playerid][index++] = i;
        }
    }

    if(next)
        strcat(dialog_string, "<<<\n");

    if(page > 1)
        strcat(dialog_string, ">>>");

    return ShowPlayerDialog(playerid, 161, DIALOG_STYLE_TABLIST_HEADERS, !"{FF4545}AntiCheat{FFFFFF} | Menu", dialog_string, !"Select", !"Exit");
}
stock ShowPlayer_AntiCheatEditCode(playerid, code)
{
    new
        dialog_header[22 - 4 + AC_MAX_CODE_LENGTH + AC_MAX_CODE_NAME_LENGTH],
        dialog_string[AC_MAX_TRIGGER_TYPE_NAME_LENGTH*AC_MAX_TRIGGER_TYPES];

    format(dialog_header, sizeof(dialog_header), "Code: #%s | AntiCheat: %s", AC_CODE[code], AC_CODE_NAME[code]);

    for(new i = 0; i < AC_MAX_TRIGGER_TYPES; i++)
    {
        strcat(dialog_string, AC_TRIGGER_TYPE_NAME[i]);

        if(i + 1 != AC_MAX_TRIGGER_TYPES)
            strcat(dialog_string, "\n");
    }

    return ShowPlayerDialog(playerid, 162, DIALOG_STYLE_LIST, dialog_header, dialog_string, !"Select", !"Exit");
}
stock GetVehicleSpeed(vehicleid)
{
	new Float:x, Float:y, Float:z, Float:speed;
	if(IsValidVehicle(vehicleid))
	{
	    GetVehicleVelocity(vehicleid, x, y, z);
	    speed = ((x * x) + (y * y) + (z * z)) * 167.6;
	}
	return floatround(speed);
}
stock FormatMessage(playerid, color, fstringg[], {Float, _}:...)
{
	static const
	STATIC_ARGS = 3;
	new
	n = (numargs() - STATIC_ARGS) * BYTES_PER_CELL;
	if (n)
	{
		new
		message[128],
		arg_start,
		arg_end;
		#emit CONST.alt        fstringg
		#emit LCTRL          5
		#emit ADD
		#emit STOR.S.pri        arg_start

		#emit LOAD.S.alt        n
		#emit ADD
		#emit STOR.S.pri        arg_end
		do
		{
			#emit LOAD.I
			#emit PUSH.pri
			arg_end -= BYTES_PER_CELL;
			#emit LOAD.S.pri      arg_end
		}
		while (arg_end > arg_start);

		// Push the static format parameters.
		#emit PUSH.S          fstringg
		#emit PUSH.C          128
		#emit PUSH.ADR         message

		n += BYTES_PER_CELL * 3;
		#emit PUSH.S          n
		#emit SYSREQ.C         format

		n += BYTES_PER_CELL;
		#emit LCTRL          4
		#emit LOAD.S.alt        n
		#emit ADD
		#emit SCTRL          4
		return SendClientMessage(playerid, color, message);
	}
	else return SendClientMessage(playerid, color, fstringg);
}
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
		case FRACTION_BALLAS: zx = 0xd200ff99; // 0xd200ff99;
		case FRACTION_VAGOS: zx = 0xffcd00AA; //0xcfbe0899;
		case FRACTION_GROVE: zx = 0x009900AA; //0x06b50699;
		case FRACTION_AZTEC: zx = 0x00F5FFAA; //0x03c3b899;
		case FRACTION_RIFA: zx = 0x6666ffAA; //0x007fffAA;
		default: zx = 0xC0C0C0AA;
	}
	return zx;
}
stock GetGZColorF(fnumber)
{
	new zx;
	switch(fnumber)
	{
		case FRACTION_BALLAS: zx = 0xFF0000AA;
		case FRACTION_VAGOS: zx = 0xFF0000AA;
		case FRACTION_GROVE: zx = 0xFF0000AA;
		case FRACTION_AZTEC: zx = 0xFF0000AA;
		case FRACTION_RIFA: zx = 0xFF0000AA;
	}
	return zx;
}
stock GetGangName(fnumbwer)
{
	new string[30];
	switch(fnumbwer)
	{
		case FRACTION_BALLAS: format(string,sizeof(string), "{CC00FF}BALLAS");
		case FRACTION_VAGOS: format(string,sizeof(string), "{FFCD00}VAGOS");
		case FRACTION_GROVE: format(string,sizeof(string), "{009900}GROOVE");
		case FRACTION_AZTEC: format(string,sizeof(string), "{00b4e1}AZTECAS");
		case FRACTION_RIFA: format(string,sizeof(string), "{5555FF}RIFA");
	}
	return string;
}
stock GetGangNamec(fnumbwer)
{
	new string[30];
	switch(fnumbwer)
	{
		case FRACTION_BALLAS: format(string,sizeof(string), "The Ballas");
		case FRACTION_VAGOS: format(string,sizeof(string), "Los Santos Vagos");
		case FRACTION_GROVE: format(string,sizeof(string), "Grove Street");
		case FRACTION_AZTEC: format(string,sizeof(string), "Varios Los Aztecas");
		case FRACTION_RIFA: format(string,sizeof(string), "The Rifa");
	}
	return string;
}
stock GhettoKillNames(playerid)
{
	if(KillNames[playerid] == 1)
	{
	    GameTextForPlayer(playerid, "Kill", 1500, 6);
	}
	else if(KillNames[playerid] == 2)
	{
	    GameTextForPlayer(playerid, "Double Kill", 1500, 6);
	}
	else if(KillNames[playerid] == 3)
	{
	    GameTextForPlayer(playerid, "Tripple Kill", 1500, 6);
	}
	else if(KillNames[playerid] == 4)
	{
	    GameTextForPlayer(playerid, "Quadra Kill", 1500, 6);
	}
	else if(KillNames[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "Penta", 1500, 6);
	}
	else if(KillNames[playerid] == 6)
	{
	    GameTextForPlayer(playerid, "Rampage", 1500, 6);
	}
	else if(KillNames[playerid] == 7)
	{
	    GameTextForPlayer(playerid, "Insane", 1500, 6);
	}
	else if(KillNames[playerid] >= 8)
	{
	    GameTextForPlayer(playerid, "Unstoppable", 1500, 6);
	}
}
stock ClearTotalGz()
{
	TotalGzR = 0;
	TotalGzA = 0;
	TotalGzB = 0;
	TotalGzG = 0;
	TotalGzV = 0;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(PlayerInfo[playerid][pMember] == allowedfactions[i]&&PlayerInfo[playerid][pRank] >= 6) return true;
	}
	return false;
}
stock ShowDonateDialog(playerid)
{
	new listitems[600];
	strcat(listitems,"{FFFFFF}Kargad Dafikrdit Da Ise Gaagzavnet Administraciastan "color_mm"Donate{FFFFFF}'s Motxovna\n");
	strcat(listitems,"{FFFFFF}Arasworad "color_mm"Donate Chat{FFFFFF}'is Gamoyeneba Isjeba "color_mm"BAN{FFFFFF}'it\n\n");
	strcat(listitems,"{FFFFFF}Tu Tkven Ar Icit {9B465E}Donate{FFFFFF}'s Fasebi Gamoiyenet CMD: "color_mm"/donateprice\n");
	strcat(listitems,"{FFFFFF}Pativiscemit: "color_mm SERVER_SHORT_NAME"{FFFFFF}'s Administracia");
	return ShowPlayerDialog(playerid, 65, DIALOG_STYLE_INPUT, color_mm"MainMenu{FFFFFF} | Donate", listitems, "Send", "Close");
}
stock ShowReportDialog(playerid)
{
	new listitems[600];
	strcat(listitems,"{FFFFFF}Kargad Dafikrdit Da Ise Gaagzavnet Administraciastan Tkveni "color_mm"Kitxva/Sachivari\n");
	strcat(listitems,color_mm"Kitxva/Sachivris {FFFFFF}Gagzavnisas Akrdzaluli Aris:\n\n");
	strcat(listitems,color_mm"1 {FFFFFF}Motamashis / Administraciis Sheurawyofa\n");
	strcat(listitems,color_mm"2 {FFFFFF}Offtop / CapsLock / Cinizmi\n");
	strcat(listitems,color_mm"3 {FFFFFF}Administraciis Shecdomashi Sheyvana\n\n");
	strcat(listitems,"{FFFFFF}Tu Tkven Am Wesebis Dacvit Gaaketebt Kitxva/Sachivars "color_mm"ChatBan{FFFFFF} Ar Dagedebat\n");
	strcat(listitems,"{FFFFFF}Pativiscemit: "color_mm SERVER_SHORT_NAME"{FFFFFF}'s Administracia\n\n");
	return ShowPlayerDialog(playerid, 71, DIALOG_STYLE_INPUT, c_blue"{FFFFFF} | Report", listitems, "Report", "Close");
}
stock ShowStats(playerid, targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new year, month,day, hour, minuite, second, time[80], data[100], addmorestr = 0;
		getdate(year, month, day);
		format(data,sizeof(data), "%d/%d/%d", day, month, year);
		gettime(hour,minuite,second);
		//if(minuite < 10) format(time, sizeof(time), "%d:0%d", hour, minuite);
		/*else */
		format(time, sizeof(time), "%d:%02d", hour, minuite);

        format(data,sizeof(data), "%d/%d/%d", day, month, year);
	    new stat_string[755], stat_strcat[124], genderstr[16];
	    switch(PlayerInfo[targetid][pSex])
	    {
	        case 1: genderstr = "Male";
	        case 2: genderstr = "Female";
	        default: genderstr = "Nonbinary";
	    }
		format(stat_strcat, sizeof(stat_strcat), "\n{ffffff}Name: "color_mm"[%s]\n",Name(targetid));
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Gender: "color_mm"[%s]\n",genderstr);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Level: "color_mm"[%d]\n",PlayerInfo[targetid][pLevel]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}EXP: "color_mm"[%d/%d]\n",PlayerInfo[targetid][pExp],PlayerInfo[targetid][pLevel]*3);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Kills: "color_mm"[%d]\n",PlayerInfo[targetid][pKills]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Deaths: "color_mm"[%d]\n",PlayerInfo[targetid][pDeaths]);
		strcat(stat_string, stat_strcat);
		//format(stat_strcat, sizeof(stat_strcat), "{ffffff}Hunger: "color_mm"[%d/100]\n",PlayerInfo[targetid][pHunger]);
		//strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Cash: "color_mm"[%d$]\n",PlayerInfo[targetid][pCash]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Bank: "color_mm"[%d$]\n",PlayerInfo[targetid][pBank]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Job: "color_mm"[%s]\n",GetJobName(PlayerInfo[targetid][pJob]));
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Fraction: "color_mm"[%s]\n",FractionNames[PlayerInfo[targetid][pMember]]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Rank: "color_mm"[%d]\n",PlayerInfo[targetid][pRank]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Army Ticket: "color_mm"[%s]\n",PlayerInfo[targetid][pArmyTicket]?"Gakvt":"Ar Gakvt");
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Number: "color_mm"[%d]\n",PlayerInfo[targetid][pNumber]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Drug: "color_mm"[%d]\n",PlayerInfo[targetid][pDrug]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Material: "color_mm"[%d]\n",PlayerInfo[targetid][pMaterial]);
		strcat(stat_string, stat_strcat);
		//format(stat_strcat, sizeof(stat_strcat), "{ffffff}Addiction: "color_mm"[%d]\n",PlayerInfo[targetid][pAddict]);
		//strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}G-Coin: "color_mm"[%d]\n",PlayerInfo[targetid][pGcoin]);
		strcat(stat_string, stat_strcat);
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}VIP: "color_mm"[%s]\n",GetVIPName(PlayerInfo[targetid][pDonateRank]));
		strcat(stat_string, stat_strcat);

		// Wife/Husband
		if(PlayerInfo[playerid][pSex] == 1) format(stat_strcat, sizeof(stat_strcat), "{ffffff}Wife: "color_mm"[%s]\n",PlayerInfo[targetid][pMarry]);
        if(PlayerInfo[playerid][pSex] == 2) format(stat_strcat, sizeof(stat_strcat), "{ffffff}Husband: "color_mm"[%s]\n",PlayerInfo[targetid][pMarry]);
		strcat(stat_string, stat_strcat);

		strcat(stat_string, "\n");
		for(new i = 0; i < CountPlayerCars(targetid); i ++)
		{
			format(stat_strcat, sizeof(stat_strcat), "{ffffff}Car N%d: "color_mm"[%s (%d)]\n",i+1,GetVehicleName(GetPlayerCar(targetid, i)),GetPlayerCar(targetid, i));
			strcat(stat_string, stat_strcat);
			if(i > 4)
			{
			    addmorestr = 1;
			    break;
			}
		}
		if(addmorestr) strcat(stat_string, "more...\n");
		strcat(stat_string, "\n");
		format(stat_strcat, sizeof(stat_strcat), "{ffffff}Data | Time: "color_mm"[%s | %s]", data, time);
		strcat(stat_string, stat_strcat);
		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, color_mm"MainMenu{ffffff} | Statistic", stat_string, "Exit", "");
	}
	return true;
}
stock ShowSettings(playerid)
{
	new stat_string[400];
	format(stat_string, sizeof(stat_string), color_mm"[1]{ffffff} Change Password\n"color_mm"[2]{ffffff} IP Procetion: %s\n"color_mm"[3]{ffffff} Change IP Key",(PlayerInfo[playerid][pProtection] ?("{009933}Chartulia") : ("{AE433D}Gamortulia")));
	ShowPlayerDialog(playerid, 46, DIALOG_STYLE_LIST, color_mm"MainMenu{ffffff} | Settings", stat_string, "Next", "Close");
	return true;
}
stock ShowCommands(playerid)
{
	return ShowPlayerDialog(playerid, 9900, DIALOG_STYLE_INPUT, "Commands", "{ffffff}Chaweret Brdzaneba:", "Enter", "Close");
}
stock DMTXTUPDATE(playerid)
{
    new dmstr[100];
    format(dmstr, sizeof(dmstr), "~g~Kills:~w~ %d~n~~r~Deaths:~w~ %d", DMKill[playerid], DMDeath[playerid]);
	PlayerTextDrawSetString(playerid, DMTXT[playerid], dmstr);
	return true;
}
stock DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sX] = 0.0;
                Roadblocks[i][sY] = 0.0;
                Roadblocks[i][sZ] = 0.0;
                DestroyDynamicObject(Roadblocks[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}
stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateDynamicObject(Object, x, y, z-0.9, 0, 0, Angle);
	        return 1;
  	    }
  	}
  	return 0;
}
function PhoneMove(playerid, bool:move)
{
	if(phoneOpen[playerid] == move) return true;
	phoneOpen[playerid] = move;
	switch(move)
	{
	    case true:
	    {
	      	format(gstr, sizeof(gstr), "%s Amoigo Telefoni",Name(playerid));
			SendNearText(playerid, gstr, 10.0, COLOR_PURPLE);
	        for(new i = 0; i < 72; i ++) TextDrawShowForPlayer(playerid, telephoneSamsung[i]);
	        SelectTextDraw(playerid, -16776961);
	        if(!IsPlayerAttachedObjectSlotUsed(playerid, 9)) SetPlayerAttachedObject(playerid, 9, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
            TakingPicture[playerid] = 0;
		}
	    case false:
	    {
	        for(new i = 0; i < 72; i ++) TextDrawHideForPlayer(playerid, telephoneSamsung[i]);
	        CancelSelectTextDraw(playerid);
	        if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
	    }
	}
	for(new i = 0; i < 34; i ++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
	PlayerTextDrawDestroy(playerid, Ppnumber[playerid]);
	Callstr[playerid][0] = EOS;
	return true;
}
function MobileCall(playerid, numbeah[])
{
	new number[16];
	SetString(number, Callstr[playerid]);
    //format(gstr, sizeof(gstr), "%s", number);
    //SendClientMessage(playerid, -1, gstr);
	if(!strcmp(number, "9922"))
	{
	    new findtaxi = -1;
	    foreach(new i:Player)
	    {
	        if(PlayerInfo[i][pJob] != 2) continue;
	        if(TransportDuty[i] == 1)
	        {
				format(gstr, sizeof(gstr), "[Dispatcher]:{ffffff} %s(%d) Idzaxebs Taxi's {80B59B}(/accept taxi)",Name(playerid),playerid);
				SendClientMessage(i, 0x8099B5FF, gstr);
	            findtaxi ++;
	        }
	    }
	   	if(findtaxi == -1)
		{
			SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Am Momentshi Taksi Miuwvdomelia");
			isCalling[playerid] = false;
		}
		else
		{
		    SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Tkven Gamoidzaxet Taxi");
		    TaxiCall = playerid;
		}
		return true;
	}
	new find = -1;
	foreach(new i:Player)
	{
	    if(playerid == i) continue;
	    if(!strcmp(myNumber[i], number))
	    {
	        PlayerPlaySound(i, 20600, 0.0, 0.0, 0.0);
			find++;
			return true;
	    }
	}
	if(find == -1)
	{
		SendClientMessage(playerid, 0x5DADE2FF, "[Phone]{ECECEC} Abonenti Ver Moidzebna");
		isCalling[playerid] = false;
	}
	return true;
}
stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;

    if(lr < 0)
	{
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT; 	// Up & Left key pressed
		else if(ud > 0) direction = MOVE_BACK_LEFT; 	// Back & Left key pressed
		else            direction = MOVE_LEFT;          // Left key pressed
	}
	else if(lr > 0) 	// Right pressed
	{
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;  // Up & Right key pressed
		else if(ud > 0) direction = MOVE_BACK_RIGHT;     // Back & Right key pressed
		else			direction = MOVE_RIGHT;          // Right key pressed
	}
	else if(ud < 0) 	direction = MOVE_FORWARD; 	// Up key pressed
	else if(ud > 0) 	direction = MOVE_BACK;		// Down key pressed

	return direction;
}
stock MoveCamera(playerid)
{
	new Float:FV[3], Float:CP[3];
	GetPlayerCameraPos(playerid, CP[0], CP[1], CP[2]);
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);

	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;

	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];

	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][modes], CP, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);

	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}
stock GetNextCameraPosition(move_mode, Float:CP[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CP[0]+OFFSET_X;
			Y = CP[1]+OFFSET_Y;
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CP[0]-OFFSET_X;
			Y = CP[1]-OFFSET_Y;
			Z = CP[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CP[0]-OFFSET_Y;
			Y = CP[1]+OFFSET_X;
			Z = CP[2];
		}
		case MOVE_RIGHT:
		{
			X = CP[0]+OFFSET_Y;
			Y = CP[1]-OFFSET_X;
			Z = CP[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CP[0]+(-OFFSET_X - OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y + OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CP[0]+(-OFFSET_X + OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y - OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CP[0]+(OFFSET_X  - OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  + OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CP[0]+(OFFSET_X  + OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  - OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
	}
}
stock CancelFlyMode(playerid)
{
 	new Float:cX, Float:xY, Float:cZ;
	GetPlayerPos(playerid, cX, xY, cZ);

	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;

    SetPlayerPos(playerid, cX, xY, cZ + 0.6);
    SetCameraBehindPlayer(playerid);
	//SpawnPlayer(playerid);
	return 1;
}
stock FlyMode(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);

	TogglePlayerSpectating(playerid, true);

	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	return 1;
}
stock ShowAnimationDialog(playerid)
{
 	new string[50*sizeof(AnimNames)];
	for(new i; i < sizeof(AnimNames); i++)
	{
		format(string,sizeof(string),"%s\n%s",string,AnimNames[i]);
	}
	ShowPlayerDialog(playerid, 39, 2, "Animations", string, "Select", "Close");
	return true;
}
stock GetCarType(status)
{
    new n_str[45];
	switch(status)
	{
	    case 1: format(n_str,sizeof(n_str), "Standart");
	    case 2: format(n_str,sizeof(n_str), "Sport");
	}
	return n_str;
}
stock IsNearJetMachine(playerid)
{
	for(new i;i<sizeof(JetMachineCoord);i++) if(GetPlayerDistanceFromPoint(playerid,JetMachineCoord[i][0],JetMachineCoord[i][1],JetMachineCoord[i][2]) < 2.0) return i;
  	return -1;
}
stock IsBadText(text[])
{
	new badgate[][] = {"'", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", ":", ",", ".", "/", "\\", "\n", "\t", "|", "<", ">", "?"};
	for(new i = 0; i < sizeof(badgate); i ++)
	{
		if(strfind(text, badgate[i], true) != -1)
		{
		    return true;
		}
	}
	return false;
}
stock IsPiarText(text[])
{
	if(IsIP(text)) return true;
	new badgate[][] = {"http", "https", ".net", ".com", ".ru", ".org", ".ge", "www."};
	for(new i = 0; i < sizeof(badgate); i ++)
	{
		if(strfind(text, badgate[i], true) != -1)
		{
		    return true;
		}
	}
	return false;
}
stock UpdateReportTD()
{
	new str[10];
	format(str, sizeof(str), "%d", CountReports());
	TextDrawSetString(ReportTXT[2], str);
	return true;
}
stock SetPlayerGPS(playerid, name[], bool:nav, Float:x, Float:y, Float:z)
{
	if(!strlen(name)) return true;
	GPS[playerid] = true;
	gCheckpoint[playerid] = CHECKPOINT_GPS;
	gpsPos[playerid][0] = x;
	gpsPos[playerid][1] = y;
	gpsPos[playerid][2] = z;
	SetPlayerCheckpoint(playerid, x, y, z, 4);
	if(nav)
	{
	    UpdateGPS(playerid);
        gpsTimer[playerid] = SetTimerEx("UpdateGPS", 200, true, "i", playerid);
		PlayerTextDrawShow(playerid, gps_PTD[playerid][0]);
	}
	format(gstr, sizeof(gstr), "[GPS]{ffffff} Mititebuli Adgili {5DADE2}%s{ffffff} Moinishna Rukaze Witlad !",name);
	SendClientMessage(playerid, 0x5DADE2FF, gstr);
	return true;
}
function UpdateGPS(playerid)
{
	if(gCheckpoint[playerid] != CHECKPOINT_GPS && gCheckpoint[playerid] != CHECKPOINT_HOME)
	{
	    KillTimer(gpsTimer[playerid]);
   		PlayerTextDrawHide(playerid, gps_PTD[playerid][0]);
		GPS[playerid] = false;
		return true;
	}
	new gps_meter[32], Float:distance = GetPlayerDistanceFromPoint(playerid, gpsPos[playerid][0], gpsPos[playerid][1], gpsPos[playerid][2]);
 	format(gps_meter, sizeof(gps_meter), "~w~DISTANCE:~y~ %.1f",distance);
	PlayerTextDrawSetString(playerid, gps_PTD[playerid][0], gps_meter);
	return true;
}
stock ResetBank()
{
	if(BankInfo[isRobbed] || !BankInfo[isRobbed])
	{
	 	BankInfo[isRobbed] = false;
	  	BankInfo[doorDestroyed] = false;
	    //MoveObject(BankInfo[doorObject], 1990.21594, 1855.96594, 994.28479, 50, 0.00000, 0.00000, 180.00000);
        //MoveObject(BankInfo[doorObject], 1990.21594, 1855.96594, 994.28479, 50, 0.00000, 0.00000, 180.00000);
		if(IsValidObject(BankInfo[doorObject])) DestroyObject(BankInfo[doorObject]);
		BankInfo[doorObject] = CreateObject(2634, 1990.21594, 1855.96594, 994.28479,   0.00000, 0.00000, 180.00000);
	    BankInfo[bankText] = Create3DTextLabel("{ffffff}Bombis Dasadebad Gaxsenit\nInventory (Y)", COLOR_WHITE, 1989.97754, 1855.77234, 993.18683, 20.0, 43);
		BankInfo[bombTime] = 0;
		if(IsValidObject(BankInfo[bombObject])) DestroyObject(BankInfo[bombObject]);
    }
}
stock ShowQuestDialog(playerid)
{
	new dstr[128*MAX_QUEST-1], lstr[132];
	dstr = "{ffffff}Quest\t{ffffff}Status\t{ffffff}Exp\t{ffffff}Cash\n";
	for(new i = 0; i < MAX_QUEST; i ++)
	{
	    format(lstr, sizeof(lstr), "{F0A45D}[%d]{ffffff} %s\t%s{ffffff}\t%d\t%d$\n"
		,i+1,GetQuestName(i),(PlayerInfo[playerid][pQuest][i] ? "{3cb371}Shesrulebulia" : "{F0A45D}Mimdinareobs"),gQuest[i][q_Exp],gQuest[i][q_Cash]);
	    strcat(dstr, lstr);
	}
	ShowPlayerDialog(playerid, 61, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Quests", dstr, "Archeva", "Daxurva");
	return true;
}
stock GetQuestName(questid)
{
	new i_love_khashuri[32];
	SetString(i_love_khashuri, gQuest[questid][q_Name]);
	return i_love_khashuri;
}
stock GetPlayerQuestStatus(playerid, questid)
{
	new i_love_tbilisi[32];
	if(!PlayerInfo[playerid][pQuest][questid]) SetString(i_love_tbilisi, "{D49D26}Mimdinareobs");
	else SetString(i_love_tbilisi, "{3cb371}Shesrulebulia");
	return i_love_tbilisi;
}
stock SetPlayerQuest(playerid, questid)
{
    if(PlayerInfo[playerid][pQuest][questid] == 1) return true;
    new qstr[256];
    format(qstr, sizeof(qstr), "[Quest]{ffffff} Tkven Sheasrulet Quest {F0A45D}%d | %s{ffffff} Da Gadmogecat: {F0A45D}Cash: %d$ | Exp: %d",questid+1,GetQuestName(questid),gQuest[questid][q_Cash],gQuest[questid][q_Exp]);
	SendClientMessage(playerid, 0xF0A45DFF, qstr);
	PlayerInfo[playerid][pQuest][questid] = 1;
	format(qstr, sizeof(qstr), "pQuest%d", PlayerInfo[playerid][pQuest][questid]);
	PlayerUpdateData(playerid, qstr, PlayerInfo[playerid][pQuest][questid]);
	PlayerInfo[playerid][pCash] += gQuest[questid][q_Cash];
	format(log_str, sizeof(log_str), "%s'm(a) sheasrula quest da gadaeca : %d", Name(playerid),gQuest[questid][q_Cash]);
	CreateLog("Money", log_str);
	PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
	GivePlayerExp(playerid, gQuest[questid][q_Exp]);
	GameTextForPlayer(playerid, "~w~quest completed", 3000, 1);
    return true;
}
stock QuestChecker(playerid)
{
    if(PlayerInfo[playerid][pQuest][QUEST_PASS] == 0 && PlayerInfo[playerid][pLicense][LICENSE_PASS] == 1)
    {
		SetPlayerQuest(playerid, QUEST_PASS);
    }
    if(PlayerInfo[playerid][pQuest][QUEST_PASS] == 0 && PlayerInfo[playerid][pLicense][QUEST_CARLIC] == 1)
    {
		SetPlayerQuest(playerid, QUEST_CARLIC);
    }
    if(PlayerInfo[playerid][pQuest][QUEST_PHONE] == 0 && IsPlayerHavePhone(playerid))
    {
        SetPlayerQuest(playerid, QUEST_PHONE);
    }
    if(PlayerInfo[playerid][pQuest][QUEST_FARM] == 0 && qFarm[playerid] == 20)
    {
        SetPlayerQuest(playerid, QUEST_FARM);
    }
   	if(PlayerInfo[playerid][pQuest][QUEST_SHAFT] == 0 && qShaft[playerid] == 10)
    {
        SetPlayerQuest(playerid, QUEST_SHAFT);
    }
    if(PlayerInfo[playerid][pQuest][QUEST_WF] == 0 && qFactory[playerid] == 10)
    {
        SetPlayerQuest(playerid, QUEST_WF);
    }
    if(PlayerInfo[playerid][pQuest][QUEST_PLANT] == 0 && qPlantation[playerid] == 10)
    {
        SetPlayerQuest(playerid, QUEST_PLANT);
    }
    
 #define QUEST_PASS              (0)
#define QUEST_CARLIC            (1)
#define QUEST_FARM              (2)
#define QUEST_SHAFT				(3)
#define QUEST_PHONE             (4)
#define QUEST_WF              	(5)
#define QUEST_PLANT             (6)
#define QUEST_TRAILER           (7)
#define QUEST_CAR            	(8)
#define QUEST_SKIN              (9)
#define QUEST_ACS              	(10)
#define QUEST_FRAC              (11)
#define QUEST_FAM              	(12)
#define QUEST_PROPOSE           (13)
}
stock CreateLog(logid[], logs[])
{
	new year, month,day;
	getdate(year, month, day);
	new hour,minuite,second;
	gettime(hour,minuite,second);
	new filestr[300], filest[200];
	format(filest, sizeof(filest), "Logs/%s.txt",logid);
    new File:ftw=fopen(filest, io_append);
	if(ftw)
 	{
  		format(filestr, sizeof(filestr), "\n[%d.%d.%d | %d.%d.%d] %s\r\n",day,month,year,hour,minuite,second,logs);
		fwrite(ftw, filestr);
     	fclose(ftw);
    }
    return 1;
}
stock GetModelMaxSpeed(const modelid)
{
	if(IsValidVehicleModel(modelid)) return uf_VehicleSpeeds[modelid - 400];
	return 0;
}
stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
    new Float:oldposx, Float:oldposy, Float:oldposz;
    new Float:tempposx, Float:tempposy, Float:tempposz;
    GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
    tempposx = (oldposx - x);
    tempposy = (oldposy - y);
    tempposz = (oldposz - z);
    if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return 1;
    return 0;
}
stock IsSmileText(text[])
{
	new smile = 0;
	for(new i = 0; i < sizeof(SmileText); i ++)
	{
		if(!strcmp(text, SmileText[i]))
		{
            smile++;
            break;
		}
	}
	return smile;
}
stock IsCensorText(text[])
{
	new censor = 0;
	for(new i = 0; i < sizeof(CensorText); i ++)
	{
		if(!strcmp(text, CensorText[i]))
		{
            censor++;
            break;
		}
	}
	return censor;
}
stock ShowSkinDialog(playerid)
{
	new skinstr[500];
	strcat(skinstr,"{FFFFFF}Ballas Skin ID's: {9B465E}19 / 22 / 102 / 103 / 104\n");
	strcat(skinstr,"{FFFFFF}Vagos Skin ID's: {9B465E}47 / 108 / 109 / 110\n");
	strcat(skinstr,"{FFFFFF}Grove Skin ID's: {9B465E}21 / 105 / 106 / 107 / 269 / 270 / 271 / 293\n");
	strcat(skinstr,"{FFFFFF}Azteca Skin ID's: {9B465E}114 / 115 / 116 / 119 / 292\n");
	strcat(skinstr,"{FFFFFF}Rifa Skin ID's: {9B465E}30 / 173 / 174 / 175 / 273\n");
	strcat(skinstr,"{FFFFFF}Mexican Maffia Skin ID's: {9B465E}96 / 113 / 124 / 127 / 223\n");
	strcat(skinstr,"{FFFFFF}Yakuza Skin ID's: {9B465E}118 / 120 / 121 / 122 / 123\n");
	strcat(skinstr,"{FFFFFF}Russian Maffia Skin ID's: {9B465E}46 / 111 / 112 / 125 / 126 / 272\n");
	strcat(skinstr,"{FFFFFF}LSPD Skin ID's: {9B465E}280 / 282 / 283 / 284 / 300 / 302\n");
	strcat(skinstr,"{FFFFFF}ARMY Skin ID's: {9B465E}61 / 73 / 179 / 191 / 287\n");
	strcat(skinstr,"{FFFFFF}CityHall Skin ID's: {9B465E}98 / 147 / 150 / 187 / 228\n");
	strcat(skinstr,"{FFFFFF}LSNews Skin ID's: {9B465E}59 / 211 / 217 / 250\n");
	strcat(skinstr,"{FFFFFF}Sons Of Anarchy Skin ID's: {9B465E}176 / 177 / 195 / 247 / 268\n");
	strcat(skinstr,"{FFFFFF}GGF Skin ID's: {9B465E}23 / 29 / 47 / 67 / 181 / 249 / 296\n");
	strcat(skinstr,"{FFFFFF}Spec Operation Skin ID: {9B465E}285\n");
    ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT, "{9B465E}ChangeSkin{FFFFFF} | Choose ID", skinstr, "Shemdeg", "Daxurva");
	return true;
}
stock GetCarPrice(model)
{
	for(new i = 0; i < sizeof(AS_cars); i ++)
	{
	    if(model == AS_cars[i][0]) return AS_cars[i][1];
	}
	for(new i = 0; i < sizeof(AS_cars_launcher); i ++)
	{
	    if(model == AS_cars_launcher[i][0]) return AS_cars_launcher[i][1];
	}
    new cost;
    switch(model)
    {
        case 400: cost = 500000;//Landstalker B
        case 401: cost = 180000;//Bravura D
        case 402: cost = 1500000;//Buffalo A
        case 403: cost = 42000000;//Linerunner
        case 404: cost = 160000;//Perenniel C
        case 405: cost = 340000;//Sentinel C
        case 406: cost = 12000000;//Dumper
        case 407: cost = 14000000;//Firetruck
        case 408: cost = 13000000;//Trashmaster
        case 409: cost = 32000000;//Stretch
        case 410: cost = 130000;//Manana D
        case 411: cost = 9000000;//»»»»»»»» S
        case 412: cost = 260000;//Voodoo D
        case 413: cost = 360000;//Pony D
        case 414: cost = 740000;//Mule
        case 415: cost = 3200000;//Cheetah A
        case 416: cost = 18000000;//Ambulance
        case 417: cost = 300000000;//Leviathan
        case 418: cost = 360000;//Moonbeam C
        case 419: cost = 260000;//Esperanto D
        case 420: cost = 7000000;//Taxi
        case 421: cost = 400000;//Washington D
        case 422: cost = 180000;//Bobcat C
        case 423: cost = 560000;//Mr Whoopee
        case 424: cost = 8000000;//BF Injection
        case 425: cost = 300000000;//Hunter
        case 426: cost = 220000;//Premier D
        case 427: cost = 20000000;//Enforcer
        case 428: cost = 16000000;//Securicar
        case 429: cost = 3000000;//Banshee A
        case 430: cost = 3000000;//Predator
        case 431: cost = 12000000;//Bus
        case 432: cost = 300000000;//Rhino
        case 433: cost = 300000000;//Barracks
        case 434: cost = 700000;//Hotknife B
        case 435: cost = 900000;//Article Trailer
        case 490: cost = 1100000;//FBI Rancher
        case 487: cost = 14500000;//Maverick »»»»»»»»
        case 469: cost = 5200000;//Sparrow »»»»»»»»
        case 541: cost = 6800000;//»»»»» S
        case 451: cost = 6000000;//»»»»»»» S
        case 506: cost = 2800000;//Super GT A
        case 560: cost = 2700000;//»»»»»» A
        case 559: cost = 2400000;//Jester A
        case 562: cost = 1800000;//Elegy A
        case 495: cost = 1400000;//Sandking A
        case 477: cost = 1380000;//ZR-350 A
        case 565: cost = 1300000;//Flash A
        case 480: cost = 2200000;//Comet B
        case 603: cost = 1740000;//Phoenix B
        case 558: cost = 1580000;//Uranus B
        case 579: cost = 1200000;//Huntley B
        case 554: cost = 1200000;//Yosemite B
        case 602: cost = 860000;//Alpha B
        case 533: cost = 800000;//Feltzer B
        case 587: cost = 680000;//Euros B
        case 535: cost = 460000;//Slamvan B
        case 555: cost = 350000;//Windsor B
        case 561: cost = 1020000;//Stratum C
        case 589: cost = 630000;//Club C
        case 600: cost = 600000;//Picador C
        case 458: cost = 560000;//Solair C
        case 439: cost = 530000;//Stallion C
        case 491: cost = 460000;//Virgo C
        case 475: cost = 440000;//Sabre C
        case 545: cost = 420000;//Hustler C
        case 482: cost = 400000;//Burrito C
        case 549: cost = 360000;//Tampa C
        case 580: cost = 320000;//Stafford C
        case 567: cost = 320000;//Savanna C
        case 575: cost = 260000;//Broadway C
        case 474: cost = 240000;//Hermes C
        case 518: cost = 240000;//Buccaneer C
        case 507: cost = 230000;//Elegant C
        case 479: cost = 210000;//Regina C
        case 496: cost = 200000;//Blista Compact C
        case 516: cost = 196000;//Nebula C
        case 529: cost = 194000;//Willard C
        case 576: cost = 190000;//Tornado C
        case 466: cost = 190000;//Glendale C
        case 478: cost = 170000;//Walton C
        case 547: cost = 162000;//Primo C
        case 526: cost = 160000;//Fortune C
        case 517: cost = 158000;//Majestic C
        case 436: cost = 156000;//Previon C
        case 546: cost = 152000;//Intruder C
        case 542: cost = 140000;//Clover C
        case 536: cost = 640000;//Blade D
        case 489: cost = 580000;//Rancher D
        case 534: cost = 500000;//Remington D
        case 566: cost = 400000;//Tahoma D
        case 459: cost = 360000;//Berkley's RC Van D
        case 550: cost = 360000;//Sunrise D
        case 483: cost = 280000;//Camper D
        case 551: cost = 260000;//Merit D
        case 492: cost = 220000;//Greenwood D
        case 445: cost = 220000;//Admiral D
        case 500: cost = 200000;//Mesa D
        case 540: cost = 180000;//Vincent D
        case 543: cost = 116000;//Sadler D
        case 527: cost = 98000;//Cadrona D
        case 522: cost = 2000000;//NRG-500 »»»»
        case 521: cost = 360000;//FCR-900 »»»»
        case 461: cost = 180000;//PCJ-600 »»»»
        case 468: cost = 140000;//Sanchez »»»»
        case 581: cost = 130000;//BF-400 »»»»
        case 463: cost = 100000;//Freeway »»»»
        case 586: cost = 90000;//Wayfarer »»»»
        case 471: cost = 70000;//Quad »»»»
        case 462: cost = 30000;//Faggio »»»»
        case 510: cost = 20000;//Mountain Bike »»»»
        case 481: cost = 15000;//BMX »»»»
        case 509: cost = 10000;//Bike »»»»
        default: cost = 180000;
    }
    return cost;
}
stock sendclear(playerid, length = 32)
{
	if(length < 92)
	{
		for(new i = 0; i < length; i++) SendClientMessage(playerid, COLOR_WHITE, "");
	}
}
stock AraqvsNitro(vehicleid)
{
    if(IsAPlane(vehicleid)) return 0;
    switch(GetVehicleModel(vehicleid))
    {
		case 581,523,462,521,463,522,461,448,468,586,
		509,481,510,472,473,493,595,484,430,453,
		452,446,454,590,569,537,538,570,449: return 0;
    }
    return 1;
}
stock IsBreakableObject(objectid)
{
	static const BreakableIDs[] =
	{
		625, 626, 627, 628, 629, 630, 631, 632, 633, 642, 643, 644, 646, 650, 716, 717, 737, 738, 792, 858, 881, 882, 883,
		884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 904, 905, 941, 955, 956, 959, 961, 990, 993, 996, 1209,
		1211, 1213, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1235, 1238, 1244, 1251,
		1255, 1257, 1262, 1264, 1265, 1270, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293,
		1294, 1297, 1300, 1302, 1315, 1328, 1329, 1330, 1338, 1350, 1351, 1352, 1370, 1373, 1374, 1375, 1407, 1408, 1409,
		1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1431,
		1432, 1433, 1436, 1437, 1438, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1456, 1457,
		1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
		1477, 1478, 1479, 1480, 1481, 1482, 1483, 1514, 1517, 1520, 1534, 1543, 1544, 1545, 1551, 1553, 1554, 1558, 1564,
		1568, 1582, 1583, 1584, 1588, 1589, 1590, 1591, 1592, 1645, 1646, 1647, 1654, 1664, 1666, 1667, 1668, 1669, 1670,
		1672, 1676, 1684, 1686, 1775, 1776, 1949, 1950, 1951, 1960, 1961, 1962, 1975, 1976, 1977, 2647, 2663, 2682, 2683,
		2885, 2886, 2887, 2900, 2918, 2920, 2925, 2932, 2933, 2942, 2943, 2945, 2947, 2958, 2959, 2966, 2968, 2971, 2977,
		2987, 2988, 2989, 2991, 2994, 3006, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3029, 3032, 3036, 3058, 3059, 3067,
		3083, 3091, 3221, 3260, 3261, 3262, 3263, 3264, 3265, 3267, 3275, 3276, 3278, 3280, 3281, 3282, 3302, 3374, 3409,
		3460, 3516, 3794, 3795, 3797, 3853, 3855, 3864, 3884, 11103, 12840, 16627, 16628, 16629, 16630, 16631, 16632,
		16633, 16634, 16635, 16636, 16732, 17968
	};
 	for(new i = 0; i < sizeof(BreakableIDs); i ++)
 	{
 	    if(GetObjectModel(objectid) == BreakableIDs[i]) return true;
	}
	return false;
}
stock AddDonate(playerid, text[])
{
	new hour, minuite, second, time[200];
	gettime(hour,minuite,second);
	format(time, sizeof(time), "%d:%02d", hour, minuite);
	for(new i = 0; i < MAX_DONATES; i ++)
	{
	    if(!DonateInfo[i][d_Status])
	    {
	        DonateInfo[i][d_Status] = true;
			SetString(DonateInfo[i][d_Name], Name(playerid));
			SetString(DonateInfo[i][d_Text], text);
            SetString(DonateInfo[i][d_Date], time);
            format(time, sizeof(time), "[Donate Request]:{ffffff} %s(%d): %s",Name(playerid),playerid,text);
            SendAdminMessage(COLOR_REDD, time, 10);
            foreach(new j:Player)
            {
				if(PlayerInfo[j][pAdmin] >= 10)
				{
				    PlayerPlaySound(j, 21001, 0.0, 0.0, 0.0);
				}
            }
			break;
		}
	}
	return true;
}
stock RemoveDonate(id)
{
	DonateInfo[id][d_Status] = false;
	SetString(DonateInfo[id][d_Name], "-");
	SetString(DonateInfo[id][d_Text], "0");
 	SetString(DonateInfo[id][d_Date], "00:00");
	return true;
}
stock CountAllDonate()
{
	new donate;
    for(new i = 0; i < MAX_DONATES; i ++)
    {
        if(DonateInfo[i][d_Status]) donate++;
    }
	return donate;
}
stock ShowDonates(playerid)
{
	new dstr[600], pstr[100];
	dstr = "{ffffff}Player:\t{ffffff}Time:\t{ffffff}Text:\n";
	for(new i = 0; i < MAX_DONATES; i ++)
	{
	    if(!DonateInfo[i][d_Status]) continue;
	    format(pstr, sizeof(pstr), "%s\t%s\t%s\n",DonateInfo[i][d_Name],DonateInfo[i][d_Date],DonateInfo[i][d_Text]);
	    strcat(dstr, pstr);
	}
	ShowPlayerDialog(playerid, 66, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}All Donate", dstr, "Clear", "Close");
	return true;
}
stock LoadZoneTD(playerid)
{
	zones_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 27.9998, 313.4485, "Fishing_Zone");
	PlayerTextDrawLetterSize(playerid, zones_PTD[playerid][0], 0.1464, 1.0126);
	PlayerTextDrawTextSize(playerid, zones_PTD[playerid][0], -5.0000, 0.0000);
	PlayerTextDrawAlignment(playerid, zones_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, zones_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, zones_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, zones_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, zones_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, zones_PTD[playerid][0], 0);
}
stock ShowReports(playerid)
{
	for(new i = 0; i < MAX_REPORT; i ++)
	{
	    TextDrawShowForPlayer(playerid, reports_TD[i]);
		if(i < (MAX_REPORT/2))
		{
		    TextDrawShowForPlayer(playerid, report_TD[i]);
		}
	}
	SelectTextDraw(playerid, C_blue);
	ReportOpen[playerid] = true;
	return true;
}
stock HideReports(playerid)
{
	for(new i = 0; i < MAX_REPORT; i ++)
	{
	    TextDrawHideForPlayer(playerid, reports_TD[i]);
		if(i < (MAX_REPORT/2))
		{
		    TextDrawHideForPlayer(playerid, report_TD[i]);
		}
	}
	CancelSelectTextDraw(playerid);
	ReportOpen[playerid] = false;
	return true;
}
stock AddReport(playerid, text[])
{
	new free=0;
	for(new i = 0; i < MAX_REPORT; i ++)
	{
		if(ReportInfo[i][rID] == -1)
		{
			ReportInfo[i][rID] = playerid;
			SetString(ReportInfo[i][rText], text);
			RenewReport(i);
		    free ++;
		    break;
		}
	}
	new string[192];
	format(string, sizeof(string), "[Report]:{ffffff} %s[%d]: %s",Name(playerid),playerid,text);
	SendAdminMessage(C_blue, string);
	UpdateReportTD();
	return free;
}
stock DeleteReport(id, bool:disconnected=false)
{
	if(disconnected == true)
	{
		foreach(new i:Player)
		{
			if(ReportID[i] == ReportInfo[id][rID])
			{
				ReportID[i] = -1;
				break;
			}
		}
	}
	ReportInfo[id][rID] = -1;
	SetString(ReportInfo[id][rText], REPORT_NONE_TEXT);
	TextDrawSetString(reports_TD[id], REPORT_NONE_TEXT);
	RenewReport(id);
	UpdateReportTD();
	return true;
}
stock RenewReport(id)
{
	new rep_str[100];
	if(ReportInfo[id][rID] == -1)
	{
		format(rep_str, sizeof(rep_str), "%s",REPORT_NONE_TEXT);
		TextDrawSetString(reports_TD[id], rep_str);
	}
	else
	{
		format(rep_str, sizeof(rep_str), "%s - %d",Name(ReportInfo[id][rID]),ReportInfo[id][rID]);
		TextDrawSetString(reports_TD[id], rep_str);
	}
}
stock CountReports()
{
	new total=0;
	for(new i = 0; i < MAX_REPORT; i ++)
	{
		if(ReportInfo[i][rID] != -1)
		{
            total ++;
		}
	}
	return total;
}
/*IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs)
{
    new unoccupiedData[PR_UnoccupiedSync];

    BS_IgnoreBits(bs, 8);
    BS_ReadUnoccupiedSync(bs, unoccupiedData);

    if(floatcmp(floatabs(unoccupiedData[PR_roll][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_roll][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_roll][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][0]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][1]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][2]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_angularVelocity][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_angularVelocity][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_angularVelocity][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_velocity][0]), 100.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_velocity][1]), 100.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_velocity][2]), 100.00000) == 1
	) {
        return false;
    }
    return true;
}*/
function ResetJetX()
{
    JetData[x_Start] = false;
	JetData[x_LastHighScore] = JetData[x_Mutli];
    JetData[x_Mutli] = 1.0;
    JetData[x_Time] = 15;
    JetData[x_Exploded] = false;
    TextDrawColor(Jetx_TD[13], 10178303);
    foreach(new i:Player)
    {
        if(JetXStatus[i] == true)
        {
            UpdatePlayerJetX(i);
            TextDrawHideForPlayer(i, Jetx_TD[13]);
            TextDrawShowForPlayer(i, Jetx_TD[13]);
        }
    }
    new Float:last_score = 1.7;
    if(JetData[x_LastHighScore] <= 1.8) JetData[x_FastExplode] ++;
    if(JetData[x_FastExplode] > Random(8, 12))
    {
        switch(random(100))
        {
            case 0..40: last_score = RandomFloat(1.4, 2.2, 2);
            case 41..50: last_score = RandomFloat(1.0, 3.4, 2);
            default: last_score = RandomFloat(1.1, 2.1, 2);
        }
        JetData[x_FastExplode] = 0;
	}
	else
	{
	    switch(random(1000))
	    {
	        case 0..200: last_score = RandomFloat(0.1, 0.3, 2);
	        case 201..300: last_score = RandomFloat(0.2, 0.4, 2);
	        case 301..400: last_score = RandomFloat(1.5, 3.0, 2);
	        case 401..500: last_score = RandomFloat(Random(0, 1), Random(2, 3));
	        case 501..600: last_score = RandomFloat(0.2, 4.6, 2);
	        case 601..700: last_score = RandomFloat(1.2, 1.9, 2);
	        case 701..800: last_score = RandomFloat(0.5, 2.0, 2);
	        case 801..900: last_score = RandomFloat(0.2, 0.5, 2);
	        case 901..999: last_score = RandomFloat(0.5, 2.4, 2);
	    }
	}
	JetData[x_DestroyScore] = last_score;
    JetData[x_ParticleID] = 0;
    UpdateJetX();
    JetData[x_StartTimer] = SetTimer("StartNewJetX", 1000, true);
}
stock UpdateJetX()
{
    new jetx_str[64];
    format(jetx_str, sizeof(jetx_str), "%.3fx",JetData[x_Mutli]);
    TextDrawSetString(Jetx_TD[13], jetx_str);
    TextDrawSetString(Jetx_TD[12], JetData[x_Start]? JETX_ICON_JET_FLY : JETX_ICON_JET);
    TextDrawSetString(Jetx_TD[14], JetData[x_Start]? "" : "waiting_for_bets_15_sec");
}
stock UpdatePlayerJetX(playerid)
{
    new jetx_str[64];
    format(jetx_str, sizeof(jetx_str), "Balance: %i$",GetPlayerMoney(playerid));
    PlayerTextDrawSetString(playerid, Jetx_PTD[playerid][0], jetx_str);
    format(jetx_str, sizeof(jetx_str), "MY_BET: %i$",JetXBet[playerid]);
    PlayerTextDrawSetString(playerid, Jetx_PTD[playerid][2], jetx_str);
    if(!JetXPlaying[playerid])
    {
        if(!JetData[x_Start])
        {
            format(jetx_str, sizeof(jetx_str), "BET: %i$",JetXBet[playerid]);
            PlayerTextDrawSetString(playerid, Jetx_PTD[playerid][1], JetXBet[playerid]? jetx_str : "Place your bet");
        }
        else
        {
            PlayerTextDrawSetString(playerid, Jetx_PTD[playerid][1], "Wait_till_next_game");
        }
    }
    else
    {
        new Float: multiple_money = float(JetXBet[playerid])*JetData[x_Mutli];
        format(jetx_str, sizeof(jetx_str), "TAKE: %i$",floatround(multiple_money, floatround_round));
        PlayerTextDrawSetString(playerid, Jetx_PTD[playerid][1], jetx_str);
    }
    PlayerTextDrawSetString(playerid, Jetx_PTD[playerid][3], "");
}
function StartNewJetX()
{
    TextDrawColor(Jetx_TD[13], 10178303);
    if(JetData[x_Time] <= 0)
    {
        KillTimer(JetData[x_StartTimer]);
        JetData[x_PlayTimer] = SetTimer("JetXPlayUpdate", 256, true);
        JetData[x_Start] = true;
        foreach(new i:Player)
        {
            if(JetXStatus[i] == true)
            {
                UpdatePlayerJetX(i);
                TextDrawHideForPlayer(i, Jetx_TD[13]);
                TextDrawShowForPlayer(i, Jetx_TD[13]);
            }
        }
    }
    else JetData[x_Time] --;
    new str[32];
    format(str, sizeof(str), "waiting_for_bets_%d_sec",JetData[x_Time]);
    TextDrawSetString(Jetx_TD[14], str);
    return true;
}
function JetXPlayUpdate()
{
    if(JetData[x_Mutli] >= JetData[x_DestroyScore]+0.9)
    {
        KillTimer(JetData[x_PlayTimer]);
        JetData[x_Exploded] = true;
        JetData[x_ParticleTimer] = SetTimer("JetXParticles", 100, true);
        TextDrawColor(Jetx_TD[13], 0xFF2020FF);
        foreach(new i:Player)
        {
            if(JetXStatus[i] == true)
            {
                JetXPlaying[i] = false;
                TextDrawHideForPlayer(i, Jetx_TD[13]);
                TextDrawShowForPlayer(i, Jetx_TD[13]);
                PlayerPlaySound(i, 14402, 0.0, 0.0, 0.0);
                PlayerTextDrawSetString(i, Jetx_PTD[i][1], "Wait...");
            }
        }
    }
    else
    {
        JetData[x_Mutli] += RandomFloat(0.015, 0.045, 2);
        foreach(new i:Player)
        {
            if(JetXPlaying[i] == true)
            {
                UpdatePlayerJetX(i);
            }
        }
    }
    UpdateJetX();
    return true;
}
function JetXParticles()
{
    JetData[x_ParticleID] ++;
    if(JetData[x_ParticleID] >= 12)
    {
        KillTimer(JetData[x_ParticleTimer]);
        TextDrawSetString(Jetx_TD[12], "");
        SetTimer("ResetJetX", 2000, false);
        SetTimer("ExplodedTextHide", 1500, false);
        TextDrawSetString(Jetx_TD[14], "Jet_Exploded!");
        return true;
    }
    new str[32];
    format(str, sizeof(str), "LD_NONE:explm%02d",JetData[x_ParticleID]);
    TextDrawSetString(Jetx_TD[12], str);
    return true;
}
function ExplodedTextHide() TextDrawSetString(Jetx_TD[14], "");
stock JetXMoveToPlayer(playerid, bool:move)
{
    if(JetXStatus[playerid] == move) return true;
    JetXStatus[playerid] = move;
    JetXBet[playerid] = 0;
    JetXPlaying[playerid] = false;
    switch(move)
    {
        case false:
        {
            CancelSelectTextDraw(playerid);
            for(new i = 0; i < 18; i ++)
            {
                TextDrawHideForPlayer(playerid, Jetx_TD[i]);
                if(i < 4) PlayerTextDrawHide(playerid, Jetx_PTD[playerid][i]);
            }
        }
        case true:
        {
            UpdatePlayerJetX(playerid);
            SelectTextDraw(playerid, 0x008040FF);
            for(new i = 0; i < 18; i ++)
            {
                TextDrawShowForPlayer(playerid, Jetx_TD[i]);
                if(i < 4) PlayerTextDrawShow(playerid, Jetx_PTD[playerid][i]);
            }
        }
    }
    return true;
}
stock DestroyBoomBox(bbid)
{
	foreach(new j:Player)
	{
		if(BoomBoxListener[j] == bbid) StopAudioStreamForPlayer(j), BoomBoxListener[j] = -1;
	}
	BoomBoxData[bbid][bb_ID] = -1;
	BoomBoxData[bbid][bb_Busy] = false;
	BoomBoxData[bbid][bb_Position][0] = 0;
	BoomBoxData[bbid][bb_Position][1] = 0;
	BoomBoxData[bbid][bb_Position][2] = 0;
	if(BoomBoxData[bbid][bb_Player] != -1) BoomBoxID[BoomBoxData[bbid][bb_Player]] = -1, BoomBoxData[bbid][bb_Player] = -1;
	if(IsValidDynamicObject(BoomBoxData[bbid][bb_Object])) DestroyDynamicObject(BoomBoxData[bbid][bb_Object]);
	if(IsValidDynamic3DTextLabel(BoomBoxData[bbid][bb_Text])) DestroyDynamic3DTextLabel(BoomBoxData[bbid][bb_Text]);
	if(IsValidDynamicArea(BoomBoxData[bbid][bb_Area])) DestroyDynamicArea(BoomBoxData[bbid][bb_Area]);
}
stock CreateBoomBox(Float:fx, Float:fy, Float:fz, Float:fa, fvirtualworld, finterior, player)
{
	new bbid = -1;
	for(new i = 0; i < MAX_BOOMBOX; i ++)
	{
		if(BoomBoxData[i][bb_Busy]) continue;
		bbid = i;
		break;
	}
	if(bbid == -1) return true;
	new string[128];
	BoomBoxData[bbid][bb_ID] = bbid;
	BoomBoxData[bbid][bb_Busy] = true;
	BoomBoxData[bbid][bb_Position][0] = fx;
	BoomBoxData[bbid][bb_Position][1] = fy;
	BoomBoxData[bbid][bb_Position][2] = fz;
	BoomBoxData[bbid][bb_Player] = player;
	BoomBoxData[bbid][bb_Object] = CreateDynamicObject(2226, fx, fy, fz, 0, 0, fa, fvirtualworld, finterior);
	format(string, sizeof(string), "BoomBox Owner: %s\nPress: Y to pick",Name(player));
	BoomBoxData[bbid][bb_Text] = CreateDynamic3DTextLabel(string, COLOR_WHITE, fx, fy, fz+0.7, 5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fvirtualworld, finterior);
	BoomBoxData[bbid][bb_Area] = CreateDynamicSphere(fx, fy, fz, BOOMBOX_DISTANCE, fvirtualworld, finterior);
	BoomBoxID[player] = bbid;
	return true;
}
//Autoschool theory system
stock MakeQuestionsRandomized(playerid)
{
    new indices[MAX_QUESTIONS];
    for (new i = 0; i < MAX_QUESTIONS; i++)
    {
        indices[i] = i;
    }

    for (new i = 0; i < MAX_QUESTIONS; i++)
    {
        new randIndex = random(MAX_QUESTIONS - i) + i;

        new temp = indices[i];
        indices[i] = indices[randIndex];
        indices[randIndex] = temp;

        SetString(RandomizedQuestions[playerid][i][Q_TEXT], Question[indices[i]][Q_TEXT], 128);
        SetString(RandomizedQuestions[playerid][i][A1_TEXT], Question[indices[i]][A1_TEXT], 128);
        SetString(RandomizedQuestions[playerid][i][A2_TEXT], Question[indices[i]][A2_TEXT], 128);
        SetString(RandomizedQuestions[playerid][i][A3_TEXT], Question[indices[i]][A3_TEXT], 128);
        RandomizedQuestions[playerid][i][CORRECT_ANSWER] = Question[indices[i]][CORRECT_ANSWER];
    }
}
function ShowQuestion(playerid, questionid)
{
    if (questionid >= MAX_QUESTIONS)
    {
        if (PlayerIncorrectAnswers[playerid] > 2)
        {
       		Player_Passed_Exam[playerid] = 0;
			SendClientMessage(playerid, COLOR_FIRST, "Samwuxarod, Tkven Ver Chaabaret Teoriuli Gamocda");
        }
        else
        {
        	Player_Passed_Exam[playerid] = 1;
            sendinfo(playerid, "Gilocavt, Tkven Warmatebit Chaabaret Teoriis Gamocda");
            sendinfo(playerid, "Tkven Axla Win Gelodebat Praqtikuli Gamocda, Warmatebebi");
        }
        return 1;
    }

    new msg[256];
    new options[384];
    format(msg, sizeof(msg), "Question %d: %s", questionid + 1, RandomizedQuestions[playerid][questionid][Q_TEXT]);
    format(options, sizeof(options), "%s\n%s\n%s", RandomizedQuestions[playerid][questionid][A1_TEXT], RandomizedQuestions[playerid][questionid][A2_TEXT], RandomizedQuestions[playerid][questionid][A3_TEXT]);
    ShowPlayerDialog(playerid, questionid + 1000, DIALOG_STYLE_LIST, msg, options, "Select", "");
    return true;
}
stock ResetFightData()
{
	foreach(new i:Player)
	{
	    FightOpponent[i] = -1;
	    FightOffer[i] = -1;
	    PlayerTextDrawHide(i, Timer_PTD[i]);
	}
    FightData[fight_Busy] = false;
    FightData[fight_Started] = false;
    FightData[fight_Player1] = -1;
    FightData[fight_Player2] = -1;
    FightData[fight_StartTime] = 5;
    FightData[fight_Time] = 0;
    if(FightData[fight_Timer] != -1) KillTimer(FightData[fight_Timer]);
	FightData[fight_Timer] = -1;
}
stock StartFight(player1, player2)
{
	if(FightData[fight_Busy]) return true;
    FightData[fight_Busy] = true;
    FightData[fight_Started] = false;
    FightData[fight_Player1] = player1;
    FightData[fight_Player2] = player2;
    FightData[fight_StartTime] = 5;
    FightData[fight_Time] = 180;
    FightData[fight_Timer] = SetTimer("FightTimer", 1000, true);

    FightOpponent[player1] = player2;
    FightOpponent[player2] = player1;

    SetPlayerPos(player1, 758.8932,9.1624,1001.1639);
    SetPlayerPos(player2, 762.7049,12.9179,1001.1639);
    SetPlayerFacingAngle(player1, 314);
    SetPlayerFacingAngle(player2, 133);
    SetPlayerSkin(player1, 80);
    SetPlayerSkin(player2, 81);
    SetCameraBehindPlayer(player1);
	SetCameraBehindPlayer(player2);

    TogglePlayerControllable(player1, false);
    TogglePlayerControllable(player2, false);
    return true;
}
function FightTimer()
{
	new str[16];
	if(!FightData[fight_Started])
	{
		if(FightData[fight_StartTime] > 0)
		{
		    format(str, sizeof(str), "%d",FightData[fight_StartTime]);
		    GameTextForPlayer(FightData[fight_Player1], str, 1000, 4);
		    GameTextForPlayer(FightData[fight_Player2], str, 1000, 4);
		    PlayerPlaySound(FightData[fight_Player1], 1056, 0, 0, 0);
		    PlayerPlaySound(FightData[fight_Player2], 1056, 0, 0, 0);
		    FightData[fight_StartTime] --;
		}
		else if(FightData[fight_StartTime] == 0)
		{
		    GameTextForPlayer(FightData[fight_Player1], "FIGHT", 1000, 4);
		    GameTextForPlayer(FightData[fight_Player2], "FIGHT", 1000, 4);
		    PlayerPlaySound(FightData[fight_Player1], 1057, 0, 0, 0);
		    PlayerPlaySound(FightData[fight_Player2], 1057, 0, 0, 0);
		    FightData[fight_StartTime] = -1;
		    FightData[fight_Started] = true;
          	TogglePlayerControllable(FightData[fight_Player1], true);
    		TogglePlayerControllable(FightData[fight_Player2], true);
			PlayerTextDrawColor(FightData[fight_Player1], Timer_PTD[FightData[fight_Player1]], -1523963137);
	  		PlayerTextDrawShow(FightData[fight_Player1], Timer_PTD[FightData[fight_Player1]]);
			PlayerTextDrawColor(FightData[fight_Player2], Timer_PTD[FightData[fight_Player2]], -1523963137);
	  		PlayerTextDrawShow(FightData[fight_Player2], Timer_PTD[FightData[fight_Player2]]);
		}
	}
	else
	{
	    if(--FightData[fight_Time] > 0)
	    {
	    	format(str, sizeof(str), "%s", Convert(FightData[fight_Time]));
	    	PlayerTextDrawSetString(FightData[fight_Player1], Timer_PTD[FightData[fight_Player1]], str);
	    	PlayerTextDrawSetString(FightData[fight_Player2], Timer_PTD[FightData[fight_Player2]], str);
		}
	    else
	    {
			new Float:_hp1, Float:_hp2;
			GetPlayerHealth(FightData[fight_Player1], _hp1);
			GetPlayerHealth(FightData[fight_Player2], _hp2);

			if(_hp1 > _hp2)
			{
				format(gstr, sizeof(gstr), "[Fight]:{ffffff} Brdzola Moigo {EC7063}%s'm(a)",Name(FightData[fight_Player1]));
				SendNearText(FightData[fight_Player1], gstr, 15.0, 0xEC7063FF);
			}
			else if(_hp2 > _hp1)
			{
				format(gstr, sizeof(gstr), "[Fight]:{ffffff} Brdzola Moigo {EC7063}%s'm(a)",Name(FightData[fight_Player2]));
				SendNearText(FightData[fight_Player2], gstr, 15.0, 0xEC7063FF);
			}
			else if(_hp1 == _hp2)
			{
				format(gstr, sizeof(gstr), "[Fight]:{ffffff} Brdzola Dasrulda Nichiit");
				SendNearText(FightData[fight_Player1], gstr, 15.0, 0xEC7063FF);
			}
			SetPlayerSkinEx(FightData[fight_Player1]);
			SetPlayerSkinEx(FightData[fight_Player2]);
			SetPlayerPos(FightData[fight_Player1], 767.1197,11.2571,1000.7075);
			SetPlayerPos(FightData[fight_Player2], 763.1197,11.2571,1000.7075);
			ResetFightData();
		}
	}
}
stock CuffPlayer(playerid)
{
	if(PlayerInfo[playerid][pPrison] > 0 || KnockStatus[playerid]) return true;
    IsPlayerCuffed[playerid] = true;
	SetPlayerAttachedObject(playerid, 9, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
	TogglePlayerControllable(playerid, false);
	GameTextForPlayer(playerid, "~r~Cuffed", 2000, 4);
	return true;
}
stock UncuffPlayer(playerid, bool:text=false)
{
    IsPlayerCuffed[playerid] = false;
	RemovePlayerAttachedObject(playerid, 9);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	TogglePlayerControllable(playerid, true);
	if(text)GameTextForPlayer(playerid, "~g~Uncuffed", 2000, 4);
	return true;
}
stock CheckPlayerBankPinCode(playerid)
{
	if(!PlayerInfo[playerid][pPIN])
	{
 		ShowPlayerDialog(playerid, DIALOG_SET_PIN, DIALOG_STYLE_INPUT,	"{ffffff}Bank", "\n{ffffff}Tkven Axla Unda Daayenot PIN Code\nSheiyvanet 6 Cifrisgan Shemdgari Code", "Set", "Cancel");
		return false;
	}
	else if(PlayerInfo[playerid][pPIN])
	{
	    if(!Has_Player_Entered_Pin[playerid])
	    {
  		 	ShowPlayerDialog(playerid, DIALOG_ENTER_PIN, DIALOG_STYLE_INPUT, "{ffffff}Bank", "\n{ffffff}Sabanko Momsaxureobis Misaghebad Gaiaret Avtorizacia", "Enter", "Cancel");
			return false;
		}
	}
	return true;
}
stock IsNumeric(const string[])
{
    for (new i = 0; i < strlen(string); i++)
    {
        if (string[i] < '0' || string[i] > '9')
        {
            return false;
        }
    }
    return true;
}
stock ClearMarriage(playerid)
{
	new id = GetPlayerID(PlayerInfo[playerid][pMarry]);
    if(GetPlayerID(PlayerInfo[playerid][pMarry]) != INVALID_PLAYER_ID)
	{
        SetString(PlayerInfo[id][pMarry], "-");
        PlayerUpdateDataString(id, "pMarry", PlayerInfo[id][pMarry]);
    }
    else
    {
    	new string[100];
		format(string, sizeof(string), "UPDATE accounts SET pMarry = '-' WHERE pMarry = '%s'",Name(playerid));
		mysql_query(connect, string);
    }
    SetString(PlayerInfo[playerid][pMarry], "-");
    PlayerUpdateDataString(playerid, "pMarry", PlayerInfo[playerid][pMarry]);
	return true;
}
function8(Float:arg0, Float:arg1)
{
	return floatcmp(arg0, arg1) != 0;
}
stock GetModelCount(modelid)
{
	new query[128], rows, count;
	format(query, sizeof(query), "SELECT * FROM `limits` WHERE Model = '%d'",modelid);
	mysql_query(connect, query);
	cache_get_row_count(rows);
	for(new i = 0; i < rows; i ++)
	{
        cache_get_value_name_int(i, "Count", count);
	}
	return count;
}
stock SetModelCount(modelid, id)
{
    new query[128];
	switch(id)
	{
		case 0:
		{
			format(query, sizeof(query), "UPDATE `limits` SET `Count` = '%d' WHERE Model = '%d'",GetModelCount(modelid)-1,modelid);
		}
		case 1:
		{
			format(query, sizeof(query), "UPDATE `limits` SET `Count` = '%d' WHERE Model = '%d'",GetModelCount(modelid)+1,modelid);
		}
		default:
		{
			format(query, sizeof(query), "UPDATE `limits` SET `Count` = '%d' WHERE Model = '%d'",id,modelid);
		}
	}
	mysql_query(connect, query);
	return true;
}
stock GetVideoCardName(graphicscardid)
{
	new name[16];
	switch(graphicscardid)
	{
		case VIDEO_CARD_TYPE_NONE: name = "Arcerti";
		case VIDEO_CARD_TYPE_WEAK: name = "Susti";
		case VIDEO_CARD_TYPE_STRONG: name = "Dzlieri";
		case VIDEO_CARD_TYPE_BADASS: name = "Dzalian Dzlieri";
	}
	return name;
}
stock GetVideoCardStatus(conditionid)
{
	new name[16];
	switch(conditionid)
	{
		case VIDEO_CARD_STATUS_NONE: name = "Arcerti";
		case VIDEO_CARD_STATUS_AMAZING: name = "Shesanishnavi";
		case VIDEO_CARD_STATUS_GREAT: name = "Kargi";
		case VIDEO_CARD_STATUS_NORMAL: name = "Normaluri";
		case VIDEO_CARD_STATUS_BAD: name = "Cudi";
		case VIDEO_CARD_STATUS_BROKEN: name = "Gafuchebuli";
	}
	return name;
}
stock GetVideoCardStatusColors(conditionid)
{
	new name[16];
	switch(conditionid)
	{
		case VIDEO_CARD_STATUS_NONE: name = "{FFFFFF}";
		case VIDEO_CARD_STATUS_AMAZING: name = "{48C9B0}";
		case VIDEO_CARD_STATUS_GREAT: name = "{7DCEA0}";
		case VIDEO_CARD_STATUS_NORMAL: name = "{85C1E9}";
		case VIDEO_CARD_STATUS_BAD: name = "{BB8FCE}";
		case VIDEO_CARD_STATUS_BROKEN: name = "{CD6155}";
	}
	return name;
}
stock SavePlayerVideoCards(playerid)
{
	new str[32];
	for(new i = 0; i < MAX_VIDEO_CARDS; i ++)
	{
		format(str, 32, "pVideoCardType%d", i);
		PlayerUpdateData(playerid, str, PlayerInfo[playerid][pVideoCardType][i]);
		format(str, 32, "pVideoCardStatus%d", i);
		PlayerUpdateData(playerid, str, PlayerInfo[playerid][pVideoCardStatus][i]);
		format(str, 32, "pVideoCardWorked%d", i);
		PlayerUpdateData(playerid, str, PlayerInfo[playerid][pVideoCardWorked][i]);
	}
}
stock ResetInventoryData(playerid)
{
	InvData[playerid][i_Opened] = false;
	for(new i = 0; i < INV_MAX_SLOTS; i ++)
	{
	    InvData[playerid][i_Items][i] = 19382;
	    InvData[playerid][i_Items][i+INV_MAX_SLOTS] = 19382;
	    if(i < INV_MAX_ACCS) InvData[playerid][i_UsedItems][i] = 19382;
	}
	InvData[playerid][i_Skin] = 0;
	InvData[playerid][i_Index] = -1;
	InvData[playerid][i_Page] = 0;
	InvData[playerid][i_Near] = -1;
	InvData[playerid][i_Usement] = false;
	InvData[playerid][i_UsementLoaded] = false;
	return 1;
}
stock ShowPlayerInventory(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    senderror2(playerid, "Transportshi Ver Gaxsnit Inventorys");
	    return true;
	}
	if(!!(InvData[playerid][i_Opened])) {
		return true;
	}
	new Float: f_data, data_str[16], Float:preview[4];
	preview[0] = 0.0; preview[1] = 0.0;
	preview[2] = 0.0; preview[3] = 1.0;
	GetPlayerHealth(playerid, f_data);
	format(data_str, 16, "%.0f", f_data);
	PlayerTextDrawSetString(playerid, Inv_PTD[playerid][1], data_str);
	GetPlayerArmour(playerid, f_data);
	format(data_str, 16, "%.0f", f_data);
	PlayerTextDrawSetString(playerid, Inv_PTD[playerid][2], data_str);
	PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][0], GetPlayerSkin(playerid));
	if(InvData[playerid][i_Skin] > 0) PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][3], 1275);
	else PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][3], 19382);

	#if INV_OPTIMIZE_MODE == true
	for(new i = 0; i < INV_MAX_TDS/2; i ++)
	{
		TextDrawShowForPlayer(playerid, Inv_TD[i+(INV_MAX_TDS/2)]);
	#else
 	for(new i = 0; i < INV_MAX_TDS; i ++)
 	{
	#endif
    	TextDrawShowForPlayer(playerid, Inv_TD[i]);

	    if(i < 12) {
			PlayerTextDrawShow(playerid, Inv_PTD[playerid][i]);
	    }
	    if(i < INV_MAX_ACCS) {
	        PlayerTextDrawSetPreviewRot(playerid, UsedItems_PTD[playerid][i], GetItemRot(InvData[playerid][i_UsedItems][i], 0), GetItemRot(InvData[playerid][i_UsedItems][i], 1), GetItemRot(InvData[playerid][i_UsedItems][i], 2), GetItemRot(InvData[playerid][i_UsedItems][i], 3));
     		PlayerTextDrawSetPreviewModel(playerid, UsedItems_PTD[playerid][i], InvData[playerid][i_UsedItems][i]);
	        PlayerTextDrawShow(playerid, UsedItems_PTD[playerid][i]);
	    }
	    if(i < INV_MAX_SLOTS) {
	        //GetItemRot
	        PlayerTextDrawSetPreviewRot(playerid, Index_PTD[playerid][i], GetItemRot(InvData[playerid][i_Items][i], 0), GetItemRot(InvData[playerid][i_Items][i], 1), GetItemRot(InvData[playerid][i_Items][i], 2), GetItemRot(InvData[playerid][i_Items][i], 3));
	        PlayerTextDrawSetPreviewModel(playerid, Index_PTD[playerid][i], InvData[playerid][i_Items][i]);
	        PlayerTextDrawShow(playerid, Index_PTD[playerid][i]);
	    }
	}
	InvData[playerid][i_Opened] = true;
	SelectTextDraw(playerid, 0xEC7063FF);
	return true;
}
stock HidePlayerInventory(playerid)
{
	if(!!!(InvData[playerid][i_Opened])) {
		return true;
	}
	#if INV_OPTIMIZE_MODE == true
	for(new i = 0; i < INV_MAX_TDS/2; i ++)
 	{
		TextDrawHideForPlayer(playerid, Inv_TD[i+(INV_MAX_TDS/2)]);
	#else
 	for(new i = 0; i < INV_MAX_TDS; i ++)
 	{
	#endif
    	TextDrawHideForPlayer(playerid, Inv_TD[i]);

	    if(i < 12) {
			PlayerTextDrawHide(playerid, Inv_PTD[playerid][i]);
	    }
	    if(i < INV_MAX_ACCS) {
	        PlayerTextDrawHide(playerid, UsedItems_PTD[playerid][i]);
	    }
	    if(i < INV_MAX_SLOTS) {
	        PlayerTextDrawHide(playerid, Index_PTD[playerid][i]);
	    }
	}
	InvData[playerid][i_Opened] = false;
	InvData[playerid][i_Index] = -1;
	CancelSelectTextDraw(playerid);
	return true;
}
stock ShowInventoryUsement(playerid, slotid)
{
    new page = InvData[playerid][i_Page];
	new UseText[16], model = InvData[playerid][i_Items][slotid+page];
	UseText = "USE";
	SetInventoryUsementPos(playerid, slotid);
	SetString(UseText, GetItemUseText(model));
	for(new i = 0; i < strlen(UseText); i ++)
	{
		UseText[i] = toupper(UseText[i]);
	}
	PlayerTextDrawSetString(playerid, Inv_PTD[playerid][9], UseText);
 	for(new i = 5; i < 12; i ++)
	{
		PlayerTextDrawHide(playerid, Inv_PTD[playerid][i]);
		PlayerTextDrawShow(playerid, Inv_PTD[playerid][i]);
	}
	InvData[playerid][i_Usement] = true;
	InvData[playerid][i_Index] = slotid;
}
stock HideInventoryUsement(playerid)
{
	if(InvData[playerid][i_UsementLoaded]) {
		for(new i = 5; i < 12; i ++) {
			PlayerTextDrawDestroy(playerid, Inv_PTD[playerid][i]);
		}
	}
	InvData[playerid][i_Usement] = false;
	InvData[playerid][i_UsementLoaded] = false;
}
stock RenewPlayerInventory(playerid)
{
	new /*str[128], */page = InvData[playerid][i_Page];
	if(page == 0) PlayerTextDrawSetString(playerid, Inv_PTD[playerid][4], "1/2");
	else PlayerTextDrawSetString(playerid, Inv_PTD[playerid][4], "2/2");

 	for(new i = 0; i < INV_MAX_SLOTS; i ++)
 	{
        PlayerTextDrawSetPreviewRot(playerid, Index_PTD[playerid][i], GetItemRot(InvData[playerid][i_Items][i+page], 0), GetItemRot(InvData[playerid][i_Items][i+page], 1), GetItemRot(InvData[playerid][i_Items][i+page], 2), GetItemRot(InvData[playerid][i_Items][i+page], 3));
        PlayerTextDrawSetPreviewModel(playerid, Index_PTD[playerid][i], InvData[playerid][i_Items][i+page]);
        PlayerTextDrawHide(playerid, Index_PTD[playerid][i]);
        PlayerTextDrawShow(playerid, Index_PTD[playerid][i]);
	}
	return true;
}
stock GetInventorySlotPos(slotid, &Float:x, &Float:y)
{
	x = InvUsementPositions[slotid][0];
	y = InvUsementPositions[slotid][1];
}
stock SetInventoryUsementPos(playerid, slotid)
{
	if(InvData[playerid][i_UsementLoaded]) {
		for(new i = 5; i < 12; i ++) {
			PlayerTextDrawDestroy(playerid, Inv_PTD[playerid][i]);
		}
	}

    InvData[playerid][i_UsementLoaded] = true;
	Inv_PTD[playerid][5] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[0][0], InvUsementPositions[slotid][1]+InvUsementAdditional[0][1], "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, Inv_PTD[playerid][5], 28.8999, 31.4799);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][5], 674711551);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][5], 4);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][5], 0);

	Inv_PTD[playerid][6] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[1][0], InvUsementPositions[slotid][1]+InvUsementAdditional[1][1], "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, Inv_PTD[playerid][6], 27.0000, 9.4699);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][6], 455487999);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][6], 4);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, Inv_PTD[playerid][6], true);

	Inv_PTD[playerid][7] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[2][0], InvUsementPositions[slotid][1]+InvUsementAdditional[2][1], "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, Inv_PTD[playerid][7], 27.0000, 9.0000);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][7], 1);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][7], 455487999);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][7], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][7], 4);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][7], 0);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, Inv_PTD[playerid][7], true);

	Inv_PTD[playerid][8] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[3][0], InvUsementPositions[slotid][1]+InvUsementAdditional[3][1], "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, Inv_PTD[playerid][8], 27.0000, 9.4699);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][8], 1);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][8], 441612031);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][8], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][8], 4);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][8], 0);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, Inv_PTD[playerid][8], true);

	Inv_PTD[playerid][9] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[4][0], InvUsementPositions[slotid][1]+InvUsementAdditional[4][1], "USE"); // ?????
	PlayerTextDrawLetterSize(playerid, Inv_PTD[playerid][9], 0.1532, 0.7487);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][9], 2);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][9], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][9], 0);

	Inv_PTD[playerid][10] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[5][0], InvUsementPositions[slotid][1]+InvUsementAdditional[5][1], "DROP"); // ?????
	PlayerTextDrawLetterSize(playerid, Inv_PTD[playerid][10], 0.1532, 0.7487);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][10], 2);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][10], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][10], 1);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][10], 0);

	Inv_PTD[playerid][11] = CreatePlayerTextDraw(playerid, InvUsementPositions[slotid][0]+InvUsementAdditional[6][0], InvUsementPositions[slotid][1]+InvUsementAdditional[6][1], "CLOSE"); // ?????
	PlayerTextDrawLetterSize(playerid, Inv_PTD[playerid][11], 0.1532, 0.7487);
	PlayerTextDrawAlignment(playerid, Inv_PTD[playerid][11], 2);
	PlayerTextDrawColor(playerid, Inv_PTD[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, Inv_PTD[playerid][11], 255);
	PlayerTextDrawFont(playerid, Inv_PTD[playerid][11], 1);
	PlayerTextDrawSetProportional(playerid, Inv_PTD[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, Inv_PTD[playerid][11], 0);
}
stock GetItemUseText(model)
{
	new name[32];
	switch(model)
	{
	    case 1..300,12000..14939:
	    {
	        name = "PUT";
	        return name;
	    }
	}
	name = "-";
	for(new i = 0; i < MAX_ITEMS; i ++)
	{
	    if(model == ItemInfo[i][item_model])
	    {
	        SetString(name, ItemInfo[i][item_usetext]);
	        break;
	    }
	}
	return name;
}
stock GetItemName(model, lang=ITEM_NAME_ENG)
{
    new name[64];
	switch(model)
	{
	    case 1..300,12000..14939:
	    {
	        name = "Skin";
	        return name;
	    }
	}
	name = "-";
	for(new i = 0; i < MAX_ITEMS; i ++)
	{
	    if(model == ItemInfo[i][item_model])
	    {
	        if(lang == ITEM_NAME_GEO) SetString(name, ItemInfo[i][item_name_geo]);
	        else SetString(name, ItemInfo[i][item_name_eng]);
	        break;
	    }
	}
	return name;
}
stock GetItemRot(model, rot)
{
	//if(!(0 <= rot < 4)) return 1;
	for(new i = 0; i < MAX_ITEMS; i ++)
	{
	    if(model == ItemInfo[i][item_model])
	    {
			return floatround(ItemInfo[i][item_preview][rot]);
     	}
	}
	return 1;
}
stock GetItemIdByModel(model)
{
	for(new i = 0; i < MAX_ITEMS; i ++)
	{
		if(model == ItemInfo[i][item_model])
		{
		    return i;
		}
	}
	return 1;
}
stock UseInventoryItem(playerid, objectid)
{
	if(objectid == 0) return true;
	new skinid = GetPlayerSkin(playerid), index = InvData[playerid][i_Index]+InvData[playerid][i_Page];
	///if(skinid > 12000) skinid = GetLauncherSkinModel(GetPlayerSkin(playerid));
    //new index = InvData[playerid][i_Index];
	switch(objectid)
	{
        case 19382: SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Mititebul Slot'shi Ar Aris Aksesuari");
        case 2469: SetAccessoriesToSkin(playerid, 1, skinid, objectid);
        case 3026: SetAccessoriesToSkin(playerid, 2, skinid, objectid);
        case 18968,18969: SetAccessoriesToSkin(playerid, 3, skinid, objectid);
        case 19624: SetAccessoriesToSkin(playerid, 4, skinid, objectid);
        case 18906..18910: SetAccessoriesToSkin(playerid, 6, skinid, objectid);
        case 19878: SetAccessoriesToSkin(playerid, 15, skinid, objectid);
        case 19079: SetAccessoriesToSkin(playerid, 16, skinid, objectid);
        //case 2226: SetAccessoriesToSkin(playerid, 17, skinid, objectid);
        case 11704: SetAccessoriesToSkin(playerid, 18,skinid, objectid);
        case 19528: SetAccessoriesToSkin(playerid, 19, skinid, objectid);
        case 6865: SetAccessoriesToSkin(playerid, 20, skinid, objectid);
        case 19921: SetAccessoriesToSkin(playerid, 21, skinid, objectid);
        case 19904: SetAccessoriesToSkin(playerid, 22, skinid, objectid);
        case 1276: SetAccessoriesToSkin(playerid, 23, skinid, objectid);
        case 11745: SetAccessoriesToSkin(playerid, 24, skinid, objectid);
        case 2045: SetAccessoriesToSkin(playerid, 25, skinid, objectid);
        case 2590: SetAccessoriesToSkin(playerid, 26, skinid, objectid);
        case 19319,19318,19317: SetAccessoriesToSkin(playerid, 27, skinid, objectid);
        case 19314: SetAccessoriesToSkin(playerid, 28, skinid, objectid);
        case 19559: SetAccessoriesToSkin(playerid, 29, skinid, objectid);
        case 19332..19338: SetAccessoriesToSkin(playerid, 30, skinid, objectid);
        case 19197: SetAccessoriesToSkin(playerid, 31, skinid, objectid);
		case 19064: SetAccessoriesToSkin(playerid, 3, skinid, objectid);
		case 18948..18951: SetAccessoriesToSkin(playerid, 32, skinid, objectid);
		case 19137: SetAccessoriesToSkin(playerid, 32, skinid, objectid);
		case 19515: SetAccessoriesToSkin(playerid, 12, skinid, objectid);
		case 18866,18874,18871:
		{
  			HidePlayerInventory(playerid);
	    	SetTimerEx("PhoneMove", 240, false, "ib", playerid, true);
	    	return true;
		}
		case 1581:
		{
			format(gstr, sizeof(gstr), "\n\n{8099B5}Tkveni SIM Baratis Nomeri:{ffffff} %d\n\n",PlayerInfo[playerid][pNumber]);
	   		ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{ffffff}Inventory", gstr, "Close", "");
	     	format(gstr, sizeof(gstr), "[Inventory]:{ffffff} Tkveni SIM Baratis Nomeri: %d",PlayerInfo[playerid][pNumber]);
	      	SendClientMessage(playerid, -1, gstr);
		    return true;
		}
		case 11738:
		{
			if(antidouble[playerid] == true) return senderror(playerid, "Double Healme Akrdzalulia");
		    if(Animation[playerid] == true) return senderror(playerid, "Am Momentshi Medikamentebis Gamoyeneba Sheudzlebelia");
			if(DMArea[playerid] != 0) return senderror(playerid, "Death Match Arenaze Ver Gamoiyenebt Am Brdzanebas");
			if(IsPlayerInAnyVehicle(playerid)) return senderror(playerid, "Transportshi Ver Gamoiyenebt Medikamentebs");
			new Float:healmee;
			GetPlayerHealth(playerid, healmee);
			if(healmee > 100) return sendinfo(playerid, "Tkven Ar Gchirdebat Medikamenti");
			RemovePlayerItem(playerid, index);
		 	SetPlayerHealth(playerid, healmee+60);
		 	Animation[playerid] = true;
		 	antidouble[playerid] = true;
		    SetPlayerAttachedObject(playerid, 9, 11738, 6, 0.235999, -0.008999, 0.048999, 1.399997, -104.899986, -10.999977, 1.000000, 1.000000, 1.000000);
		  	ApplyAnimation(playerid, "SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
		    format(gstr, sizeof(gstr), "~b~~h~Health +60");
		    GameTextForPlayer(playerid, gstr, 3000, 1);
			format(gstr, sizeof(gstr), "%s'm(a) Gamoikena Medikamenti", Name(playerid));
		    SendNearText(playerid, gstr, 10.0, COLOR_PURPLE);
			SetPlayerChatBubble(playerid, "Gamoikena Medikamenti", COLOR_PURPLE, 30.0, 10000);
			SetTimerEx("HealOFF", 4000, false, "d", playerid);
			HidePlayerInventory(playerid);
		    return true;
		}
		case 1654:
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 1990.2118, 1855.4152, 993.6882))
			{
			    if(BankInfo[isRobbed]) return true;
				if(BankInfo[doorDestroyed]) return true;
	            RemovePlayerItem(playerid, index);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0, 1);
				BankInfo[bombObject] = CreateObject(363, 1989.97754, 1855.77234, 993.18683,   0.00000, 0.00000, 0.00000);
				GameTextForPlayer(playerid, "~w~bomb placed", 3000, 1);
				Update3DTextLabelText(BankInfo[bankText], COLOR_WHITE, "Bombi Afetqdeba\n1 Wutshi");
				BankInfo[bombTime] = 60;
				BankInfo[bombTimer] = SetTimer("BankBombTime", 1000, 1);
				BankInfo[doorDestroyed] = true;
				HidePlayerInventory(playerid);
				WantedTime[playerid] = 3*120;
				PlayerInfo[playerid][pWanted] += 3;
				SetPlayerWantedLevelEx(playerid);
				WantedTime[playerid] = 5*60;
				SetPlayerCriminal(playerid, "Los Santos", "Bankis Dzarcva");
			}
			else
			{
			    SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Gamokeneba Shegidzliat Mxolod Bankshi");
			}
		    return true;
		}
		case 1650:
		{
		    new vehicleid = GetNearestVehicle(playerid);
		    if(vehicleid == -1) return SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Tkventan Axlos Ar Aris Transporti");
			if(IsABmx(vehicleid)) return SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Am Transportshi Ver Chaasxavt Benzins");
			if(gFuel[vehicleid]+20 > 85) return SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Am Transports Ar Chirdeba Benzini");
			gFuel[vehicleid] += 25;
			RemovePlayerItem(playerid, index);
			GameTextForPlayer(playerid, "~w~Fuel Loaded", 3000, 1);
	  		HidePlayerInventory(playerid);
	  		return true;
		}
		case 2663:
		{
  			/*if(PlayerInfo[playerid][pHunger]+10 > 99) return SendClientMessage(playerid, inv_color, "[Shecdoma]:{ffffff} Tkven Ar Gshivat");
			PlayerInfo[playerid][pHunger] += 25;
			UpdateHunger(playerid);
			PlayerUpdateData(playerid, "pHunger", PlayerInfo[playerid][pHunger]);
			format(gstr, sizeof(gstr), "Tkven Miirtvit Sakvebi | » Shimshilis Done : %d%% »s",PlayerInfo[playerid][pHunger]);
			SendClientMessage(playerid, 0xA44963FF, gstr);
			SetPlayerChatBubble(playerid, "Miirtva Sakvebi", COLOR_PURPLE, 30.0, 10000);
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
			RemovePlayerItem(playerid, index);
			HidePlayerInventory(playerid);*/
		    return true;
		}
		case 19625:
		{
			if(IsSmoking[playerid] != 0) return SendClientMessage(playerid, -1, "[Shecdoma]:{ffffff} Tkven Ukve Ewevit");
	   		format(gstr, sizeof(gstr), "%s'm(a) Aukida Sigarets",Name(playerid));
	   		SendNearText(playerid, gstr, 15.0, COLOR_PURPLE);
	   		IsSmoking[playerid] = 60;
	   		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	   		RemovePlayerItem(playerid, index);
	   		HidePlayerInventory(playerid);
		    return true;
		}
		case 2226:
		{
		    if(BoomBoxID[playerid] != -1)
		        return senderror2(playerid, "Tkven Ukve Dadgmuli Gakvt BoomBox !");
			new get_near_boombox = -1;
			for(new i = 0; i < MAX_BOOMBOX; i ++)
			{
			    if(!BoomBoxData[i][bb_Busy]) continue;
			    if(IsPlayerInRangeOfPoint(playerid, 30.0, BoomBoxData[i][bb_Position][0], BoomBoxData[i][bb_Position][1], BoomBoxData[i][bb_Position][2]))
			    {
			        get_near_boombox ++;
			        break;
			    }
			}
			if(get_near_boombox != -1) return senderror2(playerid, "Axlos Ukve Dgas BoomBox");
			//MoveInventory(playerid, false, InvData[playerid][i_Page], 0);
			HidePlayerInventory(playerid);
			InvData[playerid][i_Items][index] = 19382;
			new Float:x, Float:y, Float:z, Float:a;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, a);
			GetXYInFrontOfPlayer(playerid, x, y, 1.2);
			CreateBoomBox(x, y, z-0.9, a-180, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
			sendinfo(playerid, "Tkven Dadgit BoomBox! Musikis Chasartavad Midit Axlos Da Gamoikenet: /setboombox");
			return true;
		}
		case 1..300,12000..14939:
		{
			InvData[playerid][i_Skin] = objectid;
			SetPlayerSkinEx(playerid);
			HideInventoryUsement(playerid);
			PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][3], 1275);
			PlayerTextDrawHide(playerid, Inv_PTD[playerid][3]);
			PlayerTextDrawShow(playerid, Inv_PTD[playerid][3]);
			PlayerTextDrawSetPreviewModel(playerid, Inv_PTD[playerid][0], GetPlayerSkin(playerid));
			PlayerTextDrawHide(playerid, Inv_PTD[playerid][0]);
			PlayerTextDrawShow(playerid, Inv_PTD[playerid][0]);
			return true;
		}
	}
	for(new i = 0; i < sizeof newitems; i ++)
	{
		if(objectid == newitems[i])
		{
		    UseLauncherItem(playerid, newitems[i]);
		    return true;
		}
	}
	if((objectid) && objectid != 19382) ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
	return true;
}
stock GivePlayerItem(playerid, item=19382)
{
	for(new i = 0; i < INV_MAX_SLOTS*INV_MAX_PAGES; i ++)
	{
	    if(InvData[playerid][i_Items][i] == 19382)
	    {
	        InvData[playerid][i_Items][i] = item;
	        SaveInventory(Name(playerid));
	        return true;
	    }
	}
	return true;
}
stock CountPlayerItem(playerid, itemid)
{
	new count = 0;
	for(new i = 0; i < INV_MAX_SLOTS*INV_MAX_PAGES; i ++)
	{
	    if(InvData[playerid][i_Items][i] == itemid)
	    {
            count++;
	    }
	}
	return count;
}
stock DropItem(modelid, Float:x, Float:y, Float:z)
{
	new model = modelid, Float:isskin = 0.0;
	switch(model)
	{
	    case 1..311,12000..14939: model = 2694, isskin = 90.0;
	}
    for(new i = 0; i < MAX_DROP_ITEM; i ++)
    {
        if(DropInfo[i][d_Status] == 0)
        {
            //MapAndreas_FindZ_For2DCoord(x, y, z);
            DropInfo[i][d_Status] = 1;
            //DropInfo[i][d_Object] = CreateDynamicObject(model, x, y, z-0.9, 90-isskin, 0, 0);
            DropInfo[i][d_Object] = CreateDynamicObject(model, x, y, z-0.9, 90-isskin, 0, 0);

            //MapAndreas_FindZ_For2DCoord(x, y, z);
            //MoveDynamicObject(DropInfo[i][d_Object], x, y, z + 0.05, 5);

            DropInfo[i][d_Model] = modelid;
            DropInfo[i][d_Sphere] = CreateDynamicSphere(x, y, z, 1.5);
			DropInfo[i][d_Health] = 100;
            return true;
        }
    }
    return true;
}
stock DestroyDrop(i)
{
    DropInfo[i][d_Status] = 0;
    if(IsValidDynamicObject(DropInfo[i][d_Object])) DestroyDynamicObject(DropInfo[i][d_Object]);
    DropInfo[i][d_Model] = 0;
    if(IsValidDynamicArea(DropInfo[i][d_Sphere])) DestroyDynamicArea(DropInfo[i][d_Sphere]);
    DropInfo[i][d_Added] = 0;
    DropInfo[i][d_Health] = 0;
    return true;
}
stock GetPlayerItem(playerid, item)
{
    if(IsBadItem(item)) return false;
    for(new i = 0; i < INV_MAX_SLOTS*INV_MAX_PAGES; i ++)
    {
        if(InvData[playerid][i_Items][i] == item)
        {
            return true;
        }
    }
    return false;
}
stock IsPlayerHavePhone(playerid)
{
    if(GetPlayerItem(playerid, GetItemModelById(ITEM_PHONE_1)) || GetPlayerItem(playerid, GetItemModelById(ITEM_PHONE_1)) || GetPlayerItem(playerid, GetItemModelById(ITEM_PHONE_2))) return true;
	return false;
}
stock RemovePlayerItem(playerid, slot)
{
    InvData[playerid][i_Items][slot] = 19382;
    SaveInventory(Name(playerid));
    return true;
}
stock SearchInventoryAccount(name[])
{
    new rows, query[200];
    format(query, sizeof(query), "SELECT `Name` FROM `inventory` WHERE Name = '%s'",name);
    mysql_query(connect, query);
    cache_get_row_count(rows);
    return rows;
}
stock SaveInventory(name[])
{
    new playerid = GetPlayerID(name);
    if(playerid != INVALID_PLAYER_ID)
    {
        new query[1600], string[100];
        if(!SearchInventoryAccount(name))
        {
            format(query, sizeof(query), "INSERT INTO `inventory` (`Name`) VALUES ('%s')",name);
            mysql_query(connect, query);
            SaveInventory(name);
            return true;
        }
        if(!IsPlayerConnected(playerid)) return false;
        if(!isLogged[playerid]) return true;
        query = "UPDATE `inventory` SET ";
        for(new i = 0; i < INV_MAX_SLOTS*INV_MAX_PAGES; i ++)
        {
        	if(IsBadItem(InvData[playerid][i_Items][i]))
            {
                InvData[playerid][i_Items][i] = 19382;
            }
            format(string, sizeof(string), "pItem%d", i);
            acc_int_strcat(query, sizeof(query), string, InvData[playerid][i_Items][i]);
        }
        for(new i = 0; i < INV_MAX_ACCS; i ++)
        {
        	if(IsBadItem(InvData[playerid][i_UsedItems][i]))
            {
                InvData[playerid][i_UsedItems][i] = 19382;
            }
            format(string, sizeof(string), "pUsedItem%d", i);
            acc_int_strcat(query, sizeof(query), string, InvData[playerid][i_UsedItems][i]);
        }
        strdel(query, strlen(query)-1, strlen(query));
        stringclear(string);

        // Get Correct Name
        new my_name[MAX_PLAYER_NAME];
        GetPlayerName(playerid,my_name,sizeof(my_name));

        // SQL Active
        format(string,sizeof(string)," WHERE `Name` = '%s'",my_name);
        strcat(query, string);
        mysql_query(connect, query);
    }
    return true;
}
function LoadInventory(playerid)
{
    new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
    if(cache_num_rows())
    {
        new query[650];
        for(new i = 0; i < INV_MAX_SLOTS*INV_MAX_PAGES; i ++) // calcalke loop ze loading kleobaa mara sachiroa :)
        {
            format(query, sizeof(query), "pItem%d",i);
            cache_get_value_name_int(0, query, InvData[playerid][i_Items][i]);
            //if(InventoryInfo[playerid][pItem][i] == 0)
            if(IsBadItem(InvData[playerid][i_Items][i]))
            {
                InvData[playerid][i_Items][i] = 19382;
            }
        }
        for(new i = 0; i < INV_MAX_ACCS; i ++)
        {
            format(query, sizeof(query), "pUsedItem%d",i);
            cache_get_value_name_int(0, query, InvData[playerid][i_UsedItems][i]);
            if(IsBadItem(InvData[playerid][i_UsedItems][i]))
            {
                InvData[playerid][i_UsedItems][i] = 19382;
            }
        }
    }
    else
    {
        SaveInventory(pname);
    }
    return true;
}
stock IsBadItem(itemid)
{
    for(new i = 0; i < sizeof(BadItem); i ++)
    {
        if(itemid == BadItem[i])
        {
            return true;
        }
    }
    return false;
}
stock LoadContainers()
{
	//Container
	ContainerText[0] = CreateDynamic3DTextLabel("{FFFFFF}Container - {FF4545}From Russia\n{FFFFFF}Fasi - {FF4545}5.000.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y", COLOR_WHITE, 827.8518,-2064.9316,12.8672, 5.0);
	ContainerText[1] = CreateDynamic3DTextLabel("{FFFFFF}Container - {FF4545}From USA\n{FFFFFF}Fasi - {FF4545}10.000.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y", COLOR_WHITE, 827.8818,-2059.8860,12.8672, 5.0);
	ContainerText[2] = CreateDynamic3DTextLabel("{FFFFFF}Container - {FF4545}From China\n{FFFFFF}Fasi - {FF4545}15.000.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y", COLOR_WHITE, 827.8885,-2054.7917,12.8672, 5.0);
	ContainerText[3] = CreateDynamic3DTextLabel("{FFFFFF}Container - {FF4545}From Dubai\n{FFFFFF}Fasi - {FF4545}20.000.000$\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y", COLOR_WHITE, 827.9608,-2049.8716,12.8672, 5.0);
	ContainerText[4] = CreateDynamic3DTextLabel("{FFFFFF}Container - {FF4545}From Ukraine\n{FFFFFF}Fasi - {FF4545}10GEL\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y", COLOR_WHITE, 827.9242,-2044.7798,12.8672, 5.0);
	ContainerText[5] = CreateDynamic3DTextLabel("{FFFFFF}Container - {FF4545}From Germany\n{FFFFFF}Fasi - {FF4545}20GEL\n{FFFFFF}Status - {FF4545}Gauxsnelia\n{FFFFFF}Press - {FF4545}Y", COLOR_WHITE, 827.8598,-2039.8550,12.8672, 5.0);
	ContainerGate[0] = CreateDynamicObject(3062, 827.19031, -2063.31226, 13.2889, 0.00000, 0.00000, -90.00000);
	ContainerGate[1] = CreateDynamicObject(3062, 827.15430, -2066.42041, 13.2889, 0.00000, 0.00000, 90.00000);
	ContainerGate[2] = CreateDynamicObject(3062, 827.13788, -2061.38843, 13.28890, 0.00000, 0.00000, 90.00000);
	ContainerGate[3] = CreateDynamicObject(3062, 827.17853, -2058.26001, 13.28890, 0.00000, 0.00000, -90.00000);
	ContainerGate[4] = CreateDynamicObject(3062, 827.13788, -2056.38843, 13.28890,   0.00000, 0.00000, 90.00000);
	ContainerGate[5] = CreateDynamicObject(3062, 827.17853, -2053.26001, 13.28890,   0.00000, 0.00000, -90.00000);
	ContainerGate[6] = CreateDynamicObject(3062, 827.13788, -2051.38843, 13.28890,   0.00000, 0.00000, 90.00000);
	ContainerGate[7] = CreateDynamicObject(3062, 827.17853, -2048.26001, 13.28890,   0.00000, 0.00000, -90.00000);
	ContainerGate[8] = CreateDynamicObject(3062, 827.13788, -2046.38843, 13.28890,   0.00000, 0.00000, 90.00000);
	ContainerGate[9] = CreateDynamicObject(3062, 827.17853, -2043.26001, 13.28890,   0.00000, 0.00000, -90.00000);
	ContainerGate[10] = CreateDynamicObject(3062, 827.13788, -2041.38843, 13.28890,   0.00000, 0.00000, 90.00000);
	ContainerGate[11] = CreateDynamicObject(3062, 827.17853, -2038.26001, 13.28890,   0.00000, 0.00000, -90.00000);
	
	ContainerTables[0] = CreateDynamicObject(2637, 821.03998, -2064.91968, 12.28990,   0.00000, 0.00000, 90.00000);
	ContainerTables[1] = CreateDynamicObject(2637, 821.03998, -2059.85962, 12.28990,   0.00000, 0.00000, 90.00000);
	ContainerTables[2] = CreateDynamicObject(2637, 821.03998, -2054.86523, 12.28990,   0.00000, 0.00000, 90.00000);
	ContainerTables[3] = CreateDynamicObject(2637, 821.03998, -2049.81812, 12.28990,   0.00000, 0.00000, 90.00000);
	ContainerTables[4] = CreateDynamicObject(2637, 821.03998, -2044.87207, 12.28990,   0.00000, 0.00000, 90.00000);
	ContainerTables[5] = CreateDynamicObject(2637, 821.03998, -2039.83765, 12.28990,   0.00000, 0.00000, 90.00000);

}
function ContainerGateTimer(playerid)
{
	MoveDynamicObject(ContainerGate[0], 827.19031, -2063.31226, 13.2889, 0.1, 0.00000, 0.00000, -90.00000);
	MoveDynamicObject(ContainerGate[1], 827.15430, -2066.42041, 13.2889, 0.1, 0.00000, 0.00000, 90.00000);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	ContainerStatusPlayer[playerid] = false;
}
function ContainerGateTimer2(playerid)
{
	MoveDynamicObject(ContainerGate[2], 827.13788, -2061.38843, 13.28890, 0.1, 0.00000, 0.00000, 90.00000);
	MoveDynamicObject(ContainerGate[3], 827.17853, -2058.26001, 13.28890, 0.1, 0.00000, 0.00000, -90.00000);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	ContainerStatusPlayer[playerid] = false;
}
function ContainerGateTimer3(playerid)
{
	MoveDynamicObject(ContainerGate[4], 827.13788, -2056.38843, 13.28890, 0.1, 0.00000, 0.00000, 90.00000);
	MoveDynamicObject(ContainerGate[5], 827.17853, -2053.26001, 13.28890, 0.1, 0.00000, 0.00000, -90.00000);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	ContainerStatusPlayer[playerid] = false;
}
function ContainerGateTimer4(playerid)
{
	MoveDynamicObject(ContainerGate[6], 827.13788, -2051.38843, 13.28890, 0.1, 0.00000, 0.00000, 90.00000);
	MoveDynamicObject(ContainerGate[7], 827.17853, -2048.26001, 13.28890, 0.1, 0.00000, 0.00000, -90.00000);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	ContainerStatusPlayer[playerid] = false;
}
function ContainerGateTimer5(playerid)
{
	MoveDynamicObject(ContainerGate[8], 827.13788, -2046.38843, 13.28890, 0.1, 0.00000, 0.00000, 90.00000);
	MoveDynamicObject(ContainerGate[9], 827.17853, -2043.26001, 13.28890, 0.1, 0.00000, 0.00000, -90.00000);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	ContainerStatusPlayer[playerid] = false;
}
function ContainerGateTimer6(playerid)
{
	MoveDynamicObject(ContainerGate[10], 827.13788, -2041.38843, 13.28890, 0.1, 0.00000, 0.00000, 90.00000);
	MoveDynamicObject(ContainerGate[11], 827.17853, -2038.26001, 13.28890, 0.1, 0.00000, 0.00000, -90.00000);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	ContainerStatusPlayer[playerid] = false;
}
function ContainerGates(i)
{
    switch(i)
    {
        case 0:
        {
  	    	MoveDynamicObject(ContainerGate[0], 827.19031, -2063.31226, 13.26990, 0.001, 0.00000, 0.00000, 0.00000);
			MoveDynamicObject(ContainerGate[1], 827.15430, -2066.42041, 13.26990, 0.001, 0.00000, 0.00000, 0.00000);
        }
        case 1:
        {
			MoveDynamicObject(ContainerGate[2], 827.13788, -2061.38843, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
			MoveDynamicObject(ContainerGate[3], 827.17853, -2058.26001, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
        }
        case 2:
        {
			MoveDynamicObject(ContainerGate[4], 827.13788, -2056.38843, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
			MoveDynamicObject(ContainerGate[5], 827.17853, -2053.26001, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
        }
        case 3:
        {
        	MoveDynamicObject(ContainerGate[6], 827.13788, -2051.38843, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
			MoveDynamicObject(ContainerGate[7], 827.17853, -2048.26001, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
        }
        case 4:
        {
        	MoveDynamicObject(ContainerGate[8], 827.13788, -2046.38843, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
			MoveDynamicObject(ContainerGate[9], 827.17853, -2043.26001, 13.28990, 0.001, 0.00000, 0.00000, 0.00000);
        }
        case 5:
        {
        	MoveDynamicObject(ContainerGate[10], 827.13788, -2041.38843, 13.28991, 0.001, 0.00000, 0.00000, 0.00000);
			MoveDynamicObject(ContainerGate[11], 827.17853, -2038.26001, 13.28991, 0.001, 0.00000, 0.00000, 0.00000);
        }
	}
}
function SetPlayerContainerPrize(playerid, containerid, prizeid)
{
    printf("Test22");
    SetTimerEx("ContainerOpenFinish", 5000, false, "ii", playerid, containerid);
	if(ContainerCar[playerid] != -1) DestroyVehicle(ContainerCar[playerid]);
	ContainerCar[playerid] = -1;
	if(ContainerObject[playerid] != -1) DestroyDynamicObject(ContainerObject[playerid]);
	ContainerObject[playerid] = -1;
	SetPVarInt(playerid, "ContainerPrize", prizeid);
	switch(prizeid)
	{
	    case 0:
	    {
			switch(containerid)
			{
				case 0: ContainerObject[playerid] = CreateDynamicObject(1550, 820.97241, -2064.89575, 12.94720,   -69.00000, 0.00000, 229.00000);
				case 1: ContainerObject[playerid] = CreateDynamicObject(1550, 820.97241, -2059.91870, 12.94720,   -69.00000, 0.00000, 229.00000);
				case 2: ContainerObject[playerid] = CreateDynamicObject(1550, 820.97241, -2054.91211, 12.94720,   -69.00000, 0.00000, 229.00000);
				case 3: ContainerObject[playerid] = CreateDynamicObject(1550, 820.96692, -2044.89880, 12.94720,   -69.00000, 0.00000, 229.00000);
				case 4: ContainerObject[playerid] = CreateDynamicObject(1550, 820.97131, -2049.82153, 12.94720,   -69.00000, 0.00000, 229.00000);
				case 5: ContainerObject[playerid] = CreateDynamicObject(1550, 820.97937, -2039.86792, 12.94720,   -69.00000, 0.00000, 229.00000);
			}
		}
		case 1:
		{
		    switch(containerid)
		    {
		   	 	case 0: ContainerObject[playerid] = CreateDynamicObject(19134, 821.21667, -2064.96143, 13.04470,   0.00000, 0.00000, 0.00000);
				case 1: ContainerObject[playerid] = CreateDynamicObject(19134, 821.21667, -2059.88062, 13.04470,   0.00000, 0.00000, 0.00000);
				case 2: ContainerObject[playerid] = CreateDynamicObject(19134, 821.21667, -2054.90088, 13.04470,   0.00000, 0.00000, 0.00000);
				case 3: ContainerObject[playerid] = CreateDynamicObject(19134, 821.21667, -2049.82739, 13.04470,   0.00000, 0.00000, 0.00000);
				case 4: ContainerObject[playerid] = CreateDynamicObject(19134, 821.21667, -2044.86816, 13.04470,   0.00000, 0.00000, 0.00000);
				case 5: ContainerObject[playerid] = CreateDynamicObject(19134, 821.21667, -2039.86707, 13.04470,   0.00000, 0.00000, 0.00000);
			}
		}
		case 2:
		{
			switch(containerid)
			{
				case 0: ContainerObject[playerid] = CreateDynamicObject(1277, 821.27411, -2064.94824, 12.97900,   0.00000, 0.00000, 90.00000);
				case 1: ContainerObject[playerid] = CreateDynamicObject(1277, 821.27411, -2059.92969, 12.97900,   0.00000, 0.00000, 90.00000);
				case 2: ContainerObject[playerid] = CreateDynamicObject(1277, 821.27356, -2054.87109, 12.97900,   0.00000, 0.00000, 90.00000);
				case 3: ContainerObject[playerid] = CreateDynamicObject(1277, 821.27411, -2049.86890, 12.97900,   0.00000, 0.00000, 90.00000);
				case 4: ContainerObject[playerid] = CreateDynamicObject(1277, 821.27411, -2044.90210, 12.97900,   0.00000, 0.00000, 90.00000);
				case 5: ContainerObject[playerid] = CreateDynamicObject(1277, 821.27411, -2039.88098, 12.97900,   0.00000, 0.00000, 90.00000);
			}
		}
		case 3:
		{
			new RandomCars[] = {411, 562, 560};
			new randcar = random(sizeof(RandomCars));
			SetPVarInt(playerid, "ContainerCar", RandomCars[randcar]);
		    DestroyDynamicObject(ContainerTables[containerid]);
			switch(containerid)
			{
				case 0: ContainerCar[playerid] = CreateVehicle(RandomCars[randcar], 822.8113, -2064.9158, 12.5487, -90.0000, -1, -1, 100);
				case 1: ContainerCar[playerid] = CreateVehicle(RandomCars[randcar], 822.8113, -2059.8860, 12.5487, -90.0000, -1, -1, 100);
				case 2: ContainerCar[playerid] = CreateVehicle(RandomCars[randcar], 822.8113, -2054.8022, 12.5487, -90.0000, -1, -1, 100);
				case 3: ContainerCar[playerid] = CreateVehicle(RandomCars[randcar], 822.8113, -2049.9473, 12.5487, -90.0000, -1, -1, 100);
				case 4: ContainerCar[playerid] = CreateVehicle(RandomCars[randcar], 822.8113, -2044.8459, 12.5487, -90.0000, -1, -1, 100);
				case 5: ContainerCar[playerid] = CreateVehicle(RandomCars[randcar], 822.8113, -2039.8392, 12.5487, -90.0000, -1, -1, 100);
			}
		}
	}
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPlayerPos(playerid, x+5, y, z);
	return true;
}
function ContainerOpenFinish(playerid, containerid)
{
	new string[128];
	switch(GetPVarInt(playerid, "ContainerPrize"))
	{
	    case 0:
		{
		    SetPVarInt(playerid, "ContainerAmount", Random(25000, 100000));
			format(string, sizeof(string), "{FF4545}Container %d\n\n{ffffff}Konteinershi Amogividat{FF4545} %d$ Tanxa",containerid,GetPVarInt(playerid, "ContainerAmount"));
		}
  		case 1:
		{
		    SetPVarInt(playerid, "ContainerAmount", Random(1, 9));
			format(string, sizeof(string), "{FF4545}Container %d\n\n{ffffff}Konteinershi Amogividat{FF4545} %d Level",containerid,GetPVarInt(playerid, "ContainerAmount"));
		}
		case 2:
		{
		    SetPVarInt(playerid, "ContainerAmount", Random(1, 4));
		    SetPVarInt(playerid, "ContainerDays", Random(1, 12));
			format(string, sizeof(string), "{FF4545}Container %d\n\n{ffffff}Konteinershi Amogividat{FF4545}%s VIP %d Dgit",containerid,GetVIPName(GetPVarInt(playerid, "ContainerAmount")),GetPVarInt(playerid, "ContainerDays"));
		}
		case 3:
		{
			format(string, sizeof(string), "{FF4545}Container %d\n\n{ffffff}Konteinershi Amogividat{FF4545} %s(%d) Mankana",containerid,GetVehicleName(GetPVarInt(playerid, "ContainerCar")), GetPVarInt(playerid, "ContainerCar"));
		}
	}
	ShowPlayerDialog(playerid, 85, DIALOG_STYLE_MSGBOX, "Container", string, "Exit", "");
	SetPVarInt(playerid, "ContainerID", containerid);
	return true;
}
stock RemovePlayerFamilyStatus(playerid)
{
	if(PlayerFamilyText[playerid] != NONE_3D_TEXT)
	{
	    DestroyDynamic3DTextLabel(PlayerFamilyText[playerid]);
	}
    PlayerFamilyText[playerid] = NONE_3D_TEXT;
	return true;
}
stock SetPlayerFamilyStatus(playerid)
{
    new text_string[256];
	if(p_family_id)
	{
		if(PlayerFamilyText[playerid] == NONE_3D_TEXT)
		{
		    RemovePlayerFamilyStatus(playerid);
		    format(text_string, 256, "%s%s {ffffff}%s",p_family_color2,p_family_type2,FamilyInfo[p_family_id][fName]);
		    PlayerFamilyText[playerid] = CreateDynamic3DTextLabel(text_string, -1, 0.0, 0.0, 0.4, 3.0, playerid, INVALID_VEHICLE_ID, 1);
		}
		else if(PlayerFamilyText[playerid] != NONE_3D_TEXT)
		{
		    format(text_string, 256, "%s%s {ffffff}%s",p_family_color2,p_family_type2,FamilyInfo[p_family_id][fName]);
		    UpdateDynamic3DTextLabelText(PlayerFamilyText[playerid], -1, text_string);
	    }
	}
	return true;
}
function ShowPlayerFamilyMenu(playerid)
{
	new player_counter;
	foreach(new i:Player)
 	{
    	if(PlayerInfo[i][pFamilyMember] == p_family_id) player_counter ++;
    }
    for(new i = 0; i < 25; i ++) fOnlineMembers[playerid][i] = -1;

	new dialog_string[500], strcat_string[100];
	dialog_string = "{ffffff}Family Menu\t{ffffff}Present\n";
	for(new i = 0; i < sizeof(FamilyMenu); i ++)
	{
	    switch(i)
	    {
	        case 1: format(strcat_string, 100, "%s[%d]{ffffff} %s\t%s%d\n",p_family_color2,(i+1),FamilyMenu[i],p_family_color2,player_counter);
	        case 3: format(strcat_string, 100, "%s[%d]{ffffff} %s\t%s%s\n",p_family_color2,(i+1),FamilyMenu[i],p_family_color2,FamilyTypes[p_family_type]);
	        case 4: format(strcat_string, 100, "%s[%d]{ffffff} %s\t%s%s\n",p_family_color2,(i+1),FamilyMenu[i],p_family_color2,FamilyInfo[p_family_id][fName]);
	        default: format(strcat_string, 100, "%s[%d]{ffffff} %s\n",p_family_color2,(i+1),FamilyMenu[i]);
	    }
	    strcat(dialog_string, strcat_string);
	}
	ShowPlayerDialog(playerid, 8000, DIALOG_STYLE_TABLIST_HEADERS, "Family", dialog_string, "Select", "Close");
}
stock ShowPlayerFamilyStats(playerid, famid)
{
	new string[320];
	format(string, sizeof(string), "\n{ffffff}FamilyID: %s%d\n{ffffff}FamilyName: %s%s\n{ffffff}Leader: %s%s\n{ffffff}Type: %s%s\n{ffffff}Level: %s%d\n{ffffff}Exp: %s%d\n{ffffff}Mansion: %s%s\n\n",
	FamilyColors[FamilyInfo[famid][fColor]],FamilyInfo[famid][fID],FamilyColors[FamilyInfo[famid][fColor]],FamilyInfo[famid][fName],FamilyColors[FamilyInfo[famid][fColor]],
	FamilyInfo[famid][fLeader],FamilyColors[FamilyInfo[famid][fColor]],FamilyTypes[FamilyInfo[famid][fType]],FamilyColors[FamilyInfo[famid][fColor]],FamilyInfo[famid][fExp],
	FamilyTypes[FamilyInfo[famid][fType]], (FamilyInfo[famid][fMansion]?"Akvs":"Ar Akvs"));
	ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "Family Statistics", string, "Close", "");
	return true;
}
stock ShowPlayerFamilyColors(playerid)
{
	new p_family_name[100];
    SetString(p_family_name, FamilyInfo[p_family_id][fName]);
    //

	new dialog_string[700], strcat_string[100];
	dialog_string = "{ffffff}Family Menu\t{ffffff}Colors\n";
	for(new i = 0; i < sizeof(FamilyColors); i ++)
	{
	    format(strcat_string, 100, "%s[%d]{ffffff} %s%s %s\n",FamilyColors[p_family_color],(i+1),FamilyColors[i],FamilyTypes[p_family_type],p_family_name);
	    strcat(dialog_string, strcat_string);
	}
	ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_TABLIST_HEADERS, "Family Change Color", dialog_string, "Select", "Close");
	return true;
}
stock ShowPlayerFamilyTypes(playerid)
{
	new dialog_string[700], strcat_string[100];
	dialog_string = "{ffffff}Family Menu\t{ffffff}Colors\n";
	for(new i = 0; i < sizeof(FamilyTypes); i ++)
	{
	    format(strcat_string, 100, "%s[%d]{ffffff} %s\n",p_family_color2,(i+1),FamilyTypes[i]);
	    strcat(dialog_string, strcat_string);
	}
	ShowPlayerDialog(playerid, 8004, DIALOG_STYLE_TABLIST_HEADERS, "Family Change Type", dialog_string, "Select", "Close");
	return true;
}
stock ShowPlayerFamilyInputName(playerid)
{
	new dialog_string[500];
	format(dialog_string, 500, "\n%s- Family [Change Name]:\n{ffffff}Axlandeli Saxeli: %s%s\nAxali Saxeli:\n",p_family_color2,p_family_color2,FamilyInfo[p_family_id][fName]);
	ShowPlayerDialog(playerid, 8005, DIALOG_STYLE_INPUT, "Family Change Name", dialog_string, "Set", "Close");
	return true;
}
function CreateFamily(name[], leader[])
{
	new playerid = GetPlayerID(leader);
	if(playerid == INVALID_PLAYER_ID) {
	    printf("CreateFamily Invalid Player ID");
		return false;
	}

	if(!!cache_num_rows()) {
		senderror2(playerid, "Family Aseti Saxelit Ukve Arsebobs");
	    return false;
	}
	
	if(PlayerInfo[playerid][pCash] < 10000000) {
        senderror2(playerid, "Ar Gakvt Sakmarisi Tanxa");
	    return false;
	}
	
	for(new i = 1; i < MAX_FAMILY; i ++)
	{
	    if(FamilyInfo[i][fID] == 0)
		{
			PlayerInfo[playerid][pCash] -= 500000;
			PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
			PlayerInfo[playerid][pFamilyMember] = i;
			PlayerUpdateData(playerid, "pFamilyMember", PlayerInfo[playerid][pFamilyMember]);
			PlayerInfo[playerid][pFamilyRank] = 6;
			PlayerUpdateData(playerid, "pFamilyRank", PlayerInfo[playerid][pFamilyRank]);
			format(log_str, sizeof(log_str), "%s'm(a) sheidzina family da gadaixada 500000", Name(playerid));
			CreateLog("Money", log_str);

			new query[128];
			format(query, sizeof(query), "INSERT INTO `family` (`fID`, `fName`, `fLeader`) VALUES ('%d', '%s', '%s')",i,name,leader);
			mysql_query(connect, query);

			FamilyInfo[i][fID] = i;
			SetString(FamilyInfo[i][fName], name);
			SetString(FamilyInfo[i][fLeader], leader);
			FamilyInfo[i][fType] = 0;
			FamilyUpdateData(i, "fType", FamilyInfo[i][fType]);
			FamilyInfo[i][fColor] = 0;
			FamilyUpdateData(i, "fColor", FamilyInfo[i][fColor]);
			FamilyInfo[i][fLevel] = 1;
			FamilyUpdateData(i, "fLevel", FamilyInfo[i][fLevel]);
			FamilyInfo[i][fExp] = 0;
			FamilyUpdateData(i, "fExp", FamilyInfo[i][fExp]);
			printf("%s - %d | Family Created", name,i);
			return true;
		}
	}
	return true;
}
function LoadFamilyData()
{
    new rows, pingtime = GetTickCount(), j = -1;
	cache_get_row_count(rows);
	if(rows)
	{
		for (new i = 1; i <= rows; i ++)
		{
            j = i-1;
		    cache_get_value_name_int(j, "fID", FamilyInfo[i][fID]);
            //
            cache_get_value_name(j, "fName", FamilyInfo[i][fName], 24);
            cache_get_value_name(j, "fLeader", FamilyInfo[i][fLeader], MAX_PLAYER_NAME);
            //
            cache_get_value_name_int(j, "fType", FamilyInfo[i][fType]);
            cache_get_value_name_int(j, "fColor", FamilyInfo[i][fColor]);
            cache_get_value_name_int(j, "fLevel", FamilyInfo[i][fLevel]);
            cache_get_value_name_int(j, "fExp", FamilyInfo[i][fExp]);
            cache_get_value_name_int(j, "fMansion", FamilyInfo[i][fMansion]);
		}
        printf("<LoadingMode> Family Loaded <%d>. ping: <%d ms>.", j, GetTickCount() - pingtime);
	}
}
function LoadMansionData()
{
    new rows, pingtime = GetTickCount(), j = -1, query[16], other[100];
	cache_get_row_count(rows);
	if(rows)
	{
		for (new i = 1; i <= rows; i ++)
		{
            j = i-1;
		    cache_get_value_name_int(j, "mID", MansionInfo[i][mID]);
            //
            cache_get_value_name_float(j, "mEnterPos0", MansionInfo[i][mEnterPos][0]);
            cache_get_value_name_float(j, "mEnterPos1", MansionInfo[i][mEnterPos][1]);
            cache_get_value_name_float(j, "mEnterPos2", MansionInfo[i][mEnterPos][2]);
            cache_get_value_name_float(j, "mExitPos0", MansionInfo[i][mExitPos][0]);
            cache_get_value_name_float(j, "mExitPos1", MansionInfo[i][mExitPos][1]);
            cache_get_value_name_float(j, "mExitPos2", MansionInfo[i][mExitPos][2]);
            cache_get_value_name_float(j, "mExitPos3", MansionInfo[i][mExitPos][3]);
            //
            cache_get_value_name_int(j, "mFamily", MansionInfo[i][mFamily]);
            cache_get_value_name_int(j, "mOwned", MansionInfo[i][mOwned]);
            cache_get_value_name_int(j, "mPrice", MansionInfo[i][mPrice]);
            cache_get_value_name_int(j, "mLock", MansionInfo[i][mLock]);
			//
			for(new l = 0; l < MAX_MANSION_CAR; l ++)
			{
   				format(query, 16, "mCarID%d", l);
			    cache_get_value_name_int(j, query, MansionInfo[i][mCarID][l]);
			    format(query, 16, "mCarPosX%d", l);
			    cache_get_value_name_float(j, query, MansionInfo[i][mCarPosX][l]);
			    format(query, 16, "mCarPosY%d", l);
			    cache_get_value_name_float(j, query, MansionInfo[i][mCarPosY][l]);
			    format(query, 16, "mCarPosZ%d", l);
			    cache_get_value_name_float(j, query, MansionInfo[i][mCarPosZ][l]);
 			   	format(query, 16, "mCarPosA%d", l);
			    cache_get_value_name_float(j, query, MansionInfo[i][mCarPosA][l]);
			    MansionInfo[i][mVehicle][l] = CreateVehicle(MansionInfo[i][mCarID][l], MansionInfo[i][mCarPosX][l], MansionInfo[i][mCarPosY][l], MansionInfo[i][mCarPosZ][l], MansionInfo[i][mCarPosA][l], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[i][mFamily]][fColor]], MansionColorsByFamilyColors[FamilyInfo[MansionInfo[i][mFamily]][fColor]], 0);
				if(MansionInfo[i][mVehicle][l] > 0 && MansionInfo[i][mFamily] > 0)
				{
					format(other, sizeof(other), "{48c9b0}Car: {FFFFFF}%s\n{48c9b0}Family: {FFFFFF}%s\n\n[%d]", GetVehicleName(MansionInfo[i][mCarID][l]), FamilyInfo[MansionInfo[i][mFamily]][fName], l);
            		MansionInfo[i][mCarText][l] = CreateDynamic3DTextLabel(other, 0x48C9B0FF, 0.0000, 0.0000, 0.3000, 10.0000, INVALID_PLAYER_ID, MansionInfo[i][mVehicle][l], 0, -1, -1);
				}
			}
			                            
			MansionInfo[i][mEnterPickup] = CreateDynamicPickup(19130,23, MansionInfo[i][mEnterPos][0], MansionInfo[i][mEnterPos][1], MansionInfo[i][mEnterPos][2], 0);
			MansionInfo[i][mExitPickup] = CreateDynamicPickup(19130,23, -830.4787, 1114.8856, 1497.1621, i+55);
			new string[256];
			if(MansionInfo[i][mOwned]) format(string, 256, "{34495e}Mansion ID:{ffffff} #%d\n{34495e}Price:{ffffff} %d$\n{34495e}Family:{ffffff} %s",MansionInfo[i][mID],MansionInfo[i][mPrice],FamilyInfo[MansionInfo[i][mFamily]][fName]);
			else format(string, 256, "{34495e}Mansion ID:{ffffff} #%d\n{34495e}Price:{ffffff} %d$\n{34495e}Family:{ffffff} %s",MansionInfo[i][mID],MansionInfo[i][mPrice],"Ar Kavs");
			MansionInfo[i][mText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, MansionInfo[i][mEnterPos][0], MansionInfo[i][mEnterPos][1], MansionInfo[i][mEnterPos][2], 10.0);
		}
        printf("<LoadingMode> Mansion Loaded <%d>. ping: <%d ms>.", j, GetTickCount() - pingtime);
	}
}
stock FixLauncherSkin(playerid, timems=1000)
{
	SetTimerEx("FixLauncherSkin2", timems, false, "i", playerid);
}
function SelectCaseMove(playerid, bool:status)
{
	if(SelectingCase[playerid] == status) return true;
    SelectingCase[playerid] = status;
    switch(status)
    {
        case false:
        {
            for(new i = 0; i < 17; i ++) TextDrawHideForPlayer(playerid, caseselect_TD[i]);
            CancelSelectTextDraw(playerid);
        }
        case true:
        {
            for(new i = 0; i < 17; i ++) TextDrawShowForPlayer(playerid, caseselect_TD[i]);
            SelectTextDraw(playerid, COLOR_LIGHTRED);
        }
    }
	return true;
}
stock GetCaseName(caseid)
{
	new casename[16];
	switch(caseid)
	{
	    case CASE_TYPE_SILVER: casename = "Silver";
	    case CASE_TYPE_MAGIC: casename = "Magic";
	    case CASE_TYPE_TITANY: casename = "Titany";
	}
	return casename;
}
function ShowCaseMenu(playerid, caseid)
{
    SelectedCase[playerid] = caseid;
    CaseRoll[playerid] = 0;
    CaseRandomRoll[playerid] = 0;
    CaseRolling[playerid] = false;
	if(caseid == -1)
	{
		for(new i = 0; i < 18; i ++)
		{
			TextDrawHideForPlayer(playerid, cases_TD[i]);
			if(i < 10) PlayerTextDrawHide(playerid, cases_PTD[playerid][i]);
		}
		CancelSelectTextDraw(playerid);
	    return true;
	}
	for(new i = 0; i < 5; i ++)
	{
        CaseItems[playerid][i] = GetRandomItem(caseid);
	}
	RenewCaseMenu(playerid);
	for(new i = 0; i < 18; i ++)
	{
	    if(i < 9) PlayerTextDrawShow(playerid, cases_PTD[playerid][i]);
		TextDrawShowForPlayer(playerid, cases_TD[i]);
	}
	new str[64], model = GetCaseIdByModel(CaseItems[playerid][2]);
	format(str, sizeof(str), "%s_CASE",GetCaseName(caseid));
	PlayerTextDrawSetString(playerid, cases_PTD[playerid][8], str);
	format(str, sizeof(str), "%s",CaseData[model][c_ItemName]);
	PlayerTextDrawSetString(playerid, cases_PTD[playerid][0], str);
	SelectTextDraw(playerid, COLOR_LIGHTRED);
	SetTimerEx("SelectCaseTD", 500, false, "i", playerid);
	return true;
}
function SelectCaseTD(playerid) SelectTextDraw(playerid, COLOR_LIGHTRED);
stock GetRandomItem(caseid)
{
	if(caseid == -1) return true;
	new caseitems[24], casecount, modelid = 0;
 	for(new i = 0; i < sizeof(CaseData); i ++)
  	{
		if(CaseData[i][c_ItemType] == caseid || CaseData[i][c_ItemType] == CASE_TYPE_ALL)
		{
			caseitems[casecount] = CaseData[i][c_ItemModel];
			casecount++;
   		}
   	}
    modelid = caseitems[Random(1, casecount)];
	return modelid;
}
stock RenewCaseMenu(playerid)
{
	new model, Float:preview3 = 1.0;
	for(new i = 0; i < 5; i ++)
	{
	    model = GetCaseIdByModel(CaseItems[playerid][i]);
		PlayerTextDrawSetPreviewModel(playerid, cases_PTD[playerid][i+1], CaseItems[playerid][i]);
        preview3 = CaseData[model][c_ItemPreview][3];
        if(preview3 == 0.0) preview3 = 1.0;
		PlayerTextDrawSetPreviewRot(playerid, cases_PTD[playerid][i+1], CaseData[model][c_ItemPreview][0], CaseData[model][c_ItemPreview][1], CaseData[model][c_ItemPreview][2], preview3);
	}
	return true;
}
stock GetCaseIdByModel(model)
{
	new id = 0;
	for(new i = 0; i < sizeof(CaseData); i ++)
	{
	    if(CaseData[i][c_ItemModel] == model)
	    {
			id = i;
			break;
	    }
	}
	return id;
}
function CaseRollTime(playerid)
{
	new str[64], model;
	if(++ CaseRoll[playerid] > CaseRandomRoll[playerid])
	{
		CaseRolling[playerid] = false;
		model = GetCaseIdByModel(CaseItems[playerid][2]);
		format(str, sizeof(str), "%s",CaseData[model][c_ItemName]);
		PlayerTextDrawSetString(playerid, cases_PTD[playerid][0], str);
		CaseRoll[playerid] = 0;
		CaseRandomRoll[playerid] = 0;
		PlayerTextDrawShow(playerid, cases_PTD[playerid][9]);

		new string[256];
		switch(CaseItems[playerid][2])
		{
		    case 19382:
		    {
				format(string, sizeof(string), "[Case]:{ffffff} Samwuxarod Tkven Ar Amogividat Araferi");
		    }
		    case 1274: // Dollar
		    {
		        new mini, maxi;
		        switch(SelectedCase[playerid])
		        {
		            case CASE_TYPE_SILVER: mini = 10000, maxi = 30000;
		            case CASE_TYPE_MAGIC: mini = 30000, maxi = 60000;
		            case CASE_TYPE_TITANY: mini = 60000, maxi = 100000;
		            default: mini = 15000, maxi = 55000;
		        }
		        new randcash = Random(mini, maxi);
				format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d$","Money",randcash);
				PlayerInfo[playerid][pCash] += randcash;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				//
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d$",Name(playerid),"Money",randcash);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
				format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida - %d$", Name(playerid),randcash);
				CreateLog("Case", log_str);
		    }
		    case 1550: // Money Bag
		    {
		        new mini, maxi;
		        switch(SelectedCase[playerid])
		        {
		            case CASE_TYPE_SILVER: mini = 25000, maxi = 50000;
		            case CASE_TYPE_MAGIC: mini = 50000, maxi = 100000;
		            case CASE_TYPE_TITANY: mini = 100000, maxi = 500000;
		            default: mini = 25000, maxi = 75000;
		        }
		        new randcash = Random(mini, maxi);
				format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d$","Money",randcash);
				PlayerInfo[playerid][pCash] += randcash;
				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
				//
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d$",Name(playerid),"Money",randcash);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
				format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida - %d$", Name(playerid),randcash);
				CreateLog("Case", log_str);
		    }
		    case 18631: // Unknown
		    {
		        if(random(3) == 0)
		        {
			        new randcash = Random(100000, 200000);
					format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d$","Money",randcash);
					PlayerInfo[playerid][pCash] += randcash;
					PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					//
					format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d$",Name(playerid),"Money",randcash);
					SendClientMessageToAll(0x369B5AAA, YCMDstr);
					//
					format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida - %d$", Name(playerid),randcash);
					CreateLog("Case", log_str);
				}
				else
				{
 					new randvip = Random(1, 2);
	      			new randday = Random(2, 4);
	         		PlayerInfo[playerid][pDonateRank] = randvip;
					PlayerInfo[playerid][pVipTime] = getdate()+randday;
					format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s VIP / %d Dgit",GetVIPName(randvip),randday);
					//
					format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s VIP / %d Dgit",Name(playerid),GetVIPName(randvip),randday);
					SendClientMessageToAll(0x369B5AAA, YCMDstr);
					//
					format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida %s VIP %d Dgit", Name(playerid),GetVIPName(randvip),randday);
					CreateLog("Case", log_str);
				}
		    }
		    case 1239: // Level
		    {
      			new randlevel = Random(1, 4);
				format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d","Level",randlevel);
				PlayerInfo[playerid][pLevel] += randlevel;
				//
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d",Name(playerid),"Level",randlevel);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
				format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida - %d Level", Name(playerid),randlevel);
				CreateLog("Case", log_str);
			}
		    case 1277:
		    {
      			new randvip = Random(1, 2);
      			new randday = Random(2, 4);
      			//
      			//
         		PlayerInfo[playerid][pDonateRank] = randvip;
				PlayerInfo[playerid][pVipTime] = getdate()+randday;
				format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d Dgit",GetVIPName(randvip),randday);
			    //
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d Dgit",Name(playerid),GetVIPName(randvip),randday);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
				format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida %s VIP %d Dgit", Name(playerid),GetVIPName(randvip),randday);
				CreateLog("Case", log_str);
		    }
		    case 400..611,12300..13000:
		    {
				new vehid = CaseItems[playerid][2];
				format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d",GetVehicleName(vehid),vehid);
				SetPVarInt(playerid, "CarID", vehid);
		      	GivePlayerCar(playerid, GetPVarInt(playerid, "CarID"));
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d",Name(playerid),GetVehicleName(vehid),vehid);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
		       	format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida Transporti %s ID: %d", Name(playerid),GetVehicleName(vehid),vehid);
				CreateLog("Case", log_str);
		    }
		    case 1..311:
		    {
				format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %d","Skin",CaseItems[playerid][2]);
				SetPVarInt(playerid, "SkinID", CaseItems[playerid][2]);
				/*new f_str[256];
				format(f_str, sizeof(f_str), "1. Skin ID: {3399FF}%d\n{FFFFFF}2. Skin ID: {3399FF}%d\n{FFFFFF}3. Skin ID: {3399FF}%d\n{FFFFFF}4. Skin ID: {3399FF}%d", PlayerInfo[playerid][pSkin][0], PlayerInfo[playerid][pSkin][1], PlayerInfo[playerid][pSkin][2], PlayerInfo[playerid][pSkin][3]);
				ShowPlayerDialog(playerid, 1096, DIALOG_STYLE_LIST, "{3399FF}Closet{FFFFFF} | Choose Slot", f_str, "Archeva", "Daxurva");*/
				//
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %d",Name(playerid),"Skin",CaseItems[playerid][2]);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
   				format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida Skini %d", Name(playerid),CaseItems[playerid][2]);
				CreateLog("Case", log_str);
		    }
		    case 18968,19332,3026,19336,19528:
		    {
		        format(string, sizeof(string), "[Case]:{ffffff} Tkven Amogividat {008040}%s / %s","Accessorie",CaseData[model][c_ItemName]);
				GivePlayerItem(playerid, CaseItems[playerid][2]);
				//
				format(YCMDstr, sizeof(YCMDstr), "[CASE OPENING] {ffffff}Motamashe {EA5151}%s'm(a) Daagdo {ffffff}- %s / %s",Name(playerid),"Accessorie",CaseData[model][c_ItemName]);
				SendClientMessageToAll(0x369B5AAA, YCMDstr);
				//
  				format(log_str, sizeof(log_str), "[CASE] - Motamashe %s's Amouvida Aqsesuari %s ID: %d", Name(playerid),CaseData[model][c_ItemName],CaseItems[playerid][2]);
				CreateLog("Case", log_str);
		    }
		}
		SendClientMessage(playerid, 0x008040FF, string);
		//SavePlayerAll(playerid);
	}
	else
	{
	    CaseItems[playerid][4] = CaseItems[playerid][3];
	    CaseItems[playerid][3] = CaseItems[playerid][2];
	    CaseItems[playerid][2] = CaseItems[playerid][1];
	    CaseItems[playerid][1] = CaseItems[playerid][0];
 		CaseItems[playerid][0] = GetRandomItem(SelectedCase[playerid]);
	    RenewCaseMenu(playerid);
		for(new i = 1; i <= 5; i ++)
		{
			PlayerTextDrawHide(playerid, cases_PTD[playerid][i]);
			PlayerTextDrawShow(playerid, cases_PTD[playerid][i]);
		}
		PlayerPlaySound(playerid, 5201, 0.0, 0.0, 0.0);
	    SetTimerEx("CaseRollTime", CaseRoll[playerid]*30, false, "i", playerid);
	    model = GetCaseIdByModel(CaseItems[playerid][2]);
    	format(str, sizeof(str), "%s",CaseData[model][c_ItemName]);
		PlayerTextDrawSetString(playerid, cases_PTD[playerid][0], str);
	}
}
function FixLauncherSkin2(playerid)
{
	SetPlayerSkin(playerid, 0);
}
stock ShowTuneMenu(playerid)
{
    SelectTextDraw(playerid, 0x0080C0FF);
    for(new i = 0; i < 12; i ++) PlayerTextDrawShow(playerid, select_PTD[playerid][i]);
    TuneSelectPlace[playerid] = 0;
    TuneHasOn[playerid] = true;
    RenewTuneMenu(playerid);
    return true;
}
stock HideTuneMenu(playerid)
{
    CancelSelectTextDraw(playerid);
    for(new i = 0; i < 12; i ++) PlayerTextDrawHide(playerid, select_PTD[playerid][i]);
    TuneSelectPlace[playerid] = 0;
    TuneHasOn[playerid] = false;
    return true;
}
stock RenewTuneMenu(playerid)
{
    PlayerTextDrawSetString(playerid, select_PTD[playerid][2], "Tune_Menu");
    new str[20], carid = GetPVarInt(playerid, "MyCarID");
	switch(TuneSelectID[playerid])
	{
	    case 0: // Color 1
	    {
			ChangeVehicleColor(caridhouse[playerid], CarTune_Colors[TuneSelectPlace[playerid]][0], MyCarTune[playerid][carid][CARTUNE_COLOR2]);
	        format(str, sizeof(str), "%d$",CarTune_Colors[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],sizeof(CarTune_Colors)-1);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	    case 1: // Color 2
	    {
	        ChangeVehicleColor(caridhouse[playerid], MyCarTune[playerid][carid][CARTUNE_COLOR1], CarTune_Colors[TuneSelectPlace[playerid]][0]);
	        format(str, sizeof(str), "%d$",CarTune_Colors[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],sizeof(CarTune_Colors)-1);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	    case 3: // Wheels
	    {
	        AddVehicleComponent(caridhouse[playerid], CarTune_Wheels[TuneSelectPlace[playerid]][0]);
	        format(str, sizeof(str), "%d$",CarTune_Wheels[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],sizeof(CarTune_Wheels)-1);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	    case 4: // Spoiler
	    {
	        new c = caridhouse[playerid], tunes[3];
     		if(GetVehicleModel(c) == 562) tunes[0] = 1146, tunes[1] = 1147, tunes[2] = 1023;
			else if(GetVehicleModel(c) == 560) tunes[0] = 1138, tunes[1] = 1139, tunes[2] = 1023;
			else if(GetVehicleModel(c) == 565) tunes[0] = 1049, tunes[1] = 1050, tunes[2] = 1023;
			else if(GetVehicleModel(c) == 561) tunes[0] = 1058, tunes[1] = 1060, tunes[2] = 1023;
			else if(GetVehicleModel(c) == 559) tunes[0] = 1158, tunes[1] = 1162, tunes[2] = 1023;
			else if(GetVehicleModel(c) == 558) tunes[0] = 1063, tunes[1] = 1064, tunes[2] = 1023;
	        AddVehicleComponent(c, tunes[TuneSelectPlace[playerid]]);
	        format(str, sizeof(str), "%d$",CarTune_Spoilers[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],3);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	    case 5: // PaintJob
	    {
	        ChangeVehiclePaintjob(caridhouse[playerid], CarTune_Paintjobs[TuneSelectPlace[playerid]][0]);
	        format(str, sizeof(str), "%d$",CarTune_Wheels[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],sizeof(CarTune_Paintjobs)-1);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	    case 7: // Rear Bumper
	    {
	        new c = caridhouse[playerid], tunes[2];
    		if(GetVehicleModel(c) == 562) tunes[0] = 1148, tunes[1] = 1149;
			else if(GetVehicleModel(c) == 560) tunes[0] = 1140, tunes[1] = 1141;
			else if(GetVehicleModel(c) == 575) tunes[0] = 1176, tunes[1] = 1177;
			else if(GetVehicleModel(c) == 565) tunes[0] = 1150, tunes[1] = 1151;
			else if(GetVehicleModel(c) == 561) tunes[0] = 1154, tunes[1] = 1156;
			else if(GetVehicleModel(c) == 559) tunes[0] = 1159, tunes[1] = 1161;
			else if(GetVehicleModel(c) == 558) tunes[0] = 1167, tunes[1] = 1168;
			else if(GetVehicleModel(c) == 534) tunes[0] = 1178, tunes[1] = 1180;
			else if(GetVehicleModel(c) == 536) tunes[0] = 1183, tunes[1] = 1184;
			else if(GetVehicleModel(c) == 535) tunes[0] = 1186, tunes[1] = 1187;
			else if(GetVehicleModel(c) == 576) tunes[0] = 1192, tunes[1] = 1193;
	        AddVehicleComponent(c, tunes[TuneSelectPlace[playerid]]);
	        format(str, sizeof(str), "%d$",CarTune_Bumpers[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],3);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	    case 8: // Rear Bumper
	    {
	        new c = caridhouse[playerid], tunes[2];
			if(GetVehicleModel(c) == 562) tunes[0] = 1171, tunes[1] = 1172;
			else if(GetVehicleModel(c) == 560) tunes[0] = 1169, tunes[1] = 1170;
			else if(GetVehicleModel(c) == 575) tunes[0] = 1174, tunes[1] = 1175;
			else if(GetVehicleModel(c) == 565) tunes[0] = 1152, tunes[1] = 1153;
			else if(GetVehicleModel(c) == 561) tunes[0] = 1155, tunes[1] = 1157;
			else if(GetVehicleModel(c) == 559) tunes[0] = 1160, tunes[1] = 1173;
			else if(GetVehicleModel(c) == 558) tunes[0] = 1165, tunes[1] = 1166;
			else if(GetVehicleModel(c) == 534) tunes[0] = 1179, tunes[1] = 1185;
			else if(GetVehicleModel(c) == 536) tunes[0] = 1181, tunes[1] = 1182;
			else if(GetVehicleModel(c) == 535) tunes[0] = 1188, tunes[1] = 1189;
			else if(GetVehicleModel(c) == 576) tunes[0] = 1190, tunes[1] = 1191;
	        AddVehicleComponent(c, tunes[TuneSelectPlace[playerid]]);
	        format(str, sizeof(str), "%d$",CarTune_Bumpers[TuneSelectPlace[playerid]][1]);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][9], str);
		    format(str, sizeof(str), "%d/%d",TuneSelectPlace[playerid],3);
		    PlayerTextDrawSetString(playerid, select_PTD[playerid][11], str);
	    }
	}
}
forward Change_Background(playerid, roll);
public Change_Background(playerid, roll)
{
    PlayerTextDrawBackgroundColor(playerid, Roulette_PTD[playerid][roll], 0x78ED98AA);
    PlayerTextDrawShow(playerid, Roulette_PTD[playerid][roll]);
    return true;
}
forward Update_Roulette(playerid, type);
public Update_Roulette(playerid, type)
{
    if(Roll_Count[playerid] > 9) Roll_Count[playerid] = 0;
    PlayerTextDrawBackgroundColor(playerid, Roulette_PTD[playerid][Roll_Count[playerid]], 0x00FF00FF);
    PlayerTextDrawShow(playerid, Roulette_PTD[playerid][Roll_Count[playerid]]);
    SetTimerEx("Change_Background", 200*type, false, "ii", playerid, Roll_Count[playerid]);
    Roll_Count[playerid]++;

    if(++ Roll_Time[playerid] > Roll_Random[playerid])
    {
        KillTimer(Roll_Timer[playerid]);
        if(type == 1)
        {
            Roll_Random[playerid] = 5 + random(15);
            Roll_Timer[playerid] = SetTimerEx("Update_Roulette", 500, true, "ii", playerid, 2);
            return true;
        }

        switch(Roll_Cell[playerid][Roll_Count[playerid]-1])
        {
            case 1550:
            {
            	if(BronzeRL[playerid] == true)
	            {
	                PlayerInfo[playerid][pCash] += 200000;
	                PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					sendinfo(playerid, "Shen Amogivida Ruletkashi + 200.000$");
					format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 200.000$",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Daagdo - 200.000$", Name(playerid));
					CreateLog("Roulette", log_str);

				}
				if(SilverRL[playerid] == true)
				{
	   				PlayerInfo[playerid][pCash] += 400000;
	   				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					sendinfo(playerid, "Shen Amogivida Ruletkashi + 400.000$");
					format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 400.000$",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Daagdo - 400.000$", Name(playerid));
					CreateLog("Roulette", log_str);
				}
				if(GoldRL[playerid] == true)
				{
	   				PlayerInfo[playerid][pCash] += 600000;
	   				PlayerUpdateData(playerid, "pCash", PlayerInfo[playerid][pCash]);
					sendinfo(playerid, "Shen Amogivida Ruletkashi + 600.000$");
					format(YCMDstr, sizeof(YCMDstr), "[G-COIN BOX] {ffffff}Motamashe {3399FF}%s'm(a){ffffff} Daagdo Ruletkidan 600.000$",Name(playerid));
					SendClientMessageToAll(0x3399FFAA, YCMDstr);
					format(log_str, sizeof(log_str), "[G-COIN SHOP] %s'm(a) Daagdo - 600.000$", Name(playerid));
					CreateLog("Roulette", log_str);
				}
			}
			case 1277:
			{
   				if(BronzeRL[playerid] == true)
	            {
					ShowPlayerDialog(playerid, 7905, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi {ffffff}+3 Leveli\n\n{F35252}Tu Tkven Airchevt Gadacvlas Tkven 3 LVL's Sanacvlod Aigebt Fuls\n\n{FFFFFF}10.000$ Odenobit, Sxva Shemtxvevashi Tu Daachert Ageba's\n\n{F35252}Shen Miigeb Kutvnil Prizs Rac Amogivida\n\n", "Gadacvla", "Ageba");
				}
				if(SilverRL[playerid] == true)
				{
					ShowPlayerDialog(playerid, 7906, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi {ffffff}+5 Leveli\n\n{F35252}Tu Tkven Airchevt Gadacvlas Tkven 5 LVL's Sanacvlod Aigebt Fuls\n\n{FFFFFF}20.000$ Odenobit, Sxva Shemtxvevashi Tu Daachert Ageba's\n\n{F35252}Shen Miigeb Kutvnil Prizs Rac Amogivida\n\n", "Gadacvla", "Ageba");
				}
				if(GoldRL[playerid] == true)
				{
                	ShowPlayerDialog(playerid, 7907, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi {ffffff}+7 Leveli\n\n{F35252}Tu Tkven Airchevt Gadacvlas Tkven 7 LVL's Sanacvlod Aigebt Fuls\n\n{FFFFFF}25.000$ Odenobit, Sxva Shemtxvevashi Tu Daachert Ageba's\n\n{F35252}Shen Miigeb Kutvnil Prizs Rac Amogivida\n\n", "Gadacvla", "Ageba");
				}
			}
			case 19941:
			{
   				if(BronzeRL[playerid] == true)
	            {
	                PlayerInfo[playerid][pGcoin] += GetPVarInt(playerid,"TrualPrice");
					ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "\n\n\n{99FF00}Tkven Miiget Shansi Amave Ruletkis Tavidan Datrialebis !\n\n\n", "OK", "");
				}
				if(SilverRL[playerid] == true)
				{
	                PlayerInfo[playerid][pGcoin] += GetPVarInt(playerid,"TrualPrice");
					ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "\n\n\n{99FF00}Tkven Miiget Shansi Amave Ruletkis Tavidan Datrialebis !\n\n\n", "OK", "");
				}
				if(GoldRL[playerid] == true)
				{
	                PlayerInfo[playerid][pGcoin] += GetPVarInt(playerid,"TrualPrice");
					ShowPlayerDialog(playerid, INVALID_DIALOG_ID, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "\n\n\n{99FF00}Tkven Miiget Shansi Amave Ruletkis Tavidan Datrialebis !\n\n\n", "OK", "");
				}
			}
			case 120:
			{
			    ShowPlayerDialog(playerid, 7908, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Skin ID: 120\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 30.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 110:
			{
			    ShowPlayerDialog(playerid, 7909, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Skin ID: 110\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 35.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 295:
			{
			    ShowPlayerDialog(playerid, 7910, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Skin ID: 295\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 40.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 12300:
			{
			    ShowPlayerDialog(playerid, 7911, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi : Nissan GT-R 35\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 45.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 522:
			{
			    ShowPlayerDialog(playerid, 7912, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Bike : NRG-500{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 50.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 468:
			{
			    ShowPlayerDialog(playerid, 7913, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Car : Sanchez\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 55.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 506:
			{
			    ShowPlayerDialog(playerid, 7914, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Car : Super GT\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 60.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 12304:
			{
			    ShowPlayerDialog(playerid, 7915, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Car : BMW M3 E46\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 65.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
			case 471:
			{
			    ShowPlayerDialog(playerid, 7916, DIALOG_STYLE_MSGBOX, "{E45656}G-COIN Ruletka{FFFFFF} | Prizi", "{F35252}Tkven Amogividat Ruletkashi Bike : Quad\n{FFFFFF}Tu Tkven Daachert Gadacvla's Mashin Miigeb 70.000$'s\n{F35252}Xolo Tu Shen Daacher Ageba's Mashin Miigeb Kutvnil Prizs\n\n", "Gadacvla", "Ageba");
			}
		}
        RollStatus[playerid] = false;
    }
    return true;
}
stock ClearRoulette(playerid)
{
	KillTimer(Roll_Timer[playerid]);
	RollStatus[playerid] = false;
	return true;
}
function DisplayTime(playerid)
{
    if (!isPlayerActive[playerid]) return;
    new hours = PlayerInfo[playerid][pGiftTime] / 60;
    new minutes = PlayerInfo[playerid][pGiftTime] % 60;
    new string[32];
    format(string, sizeof(string), "%dh %02dm", hours, minutes);
    if(GetLauncherStatus(playerid))
    {
    	cef_emit_event(playerid, "data:pool:giftbox", CEFSTR(string));
    }
    else
    {
		PlayerTextDrawSetString(playerid, gift_PTD[playerid][0], string);
	}
}
stock IsPlayerActive(playerid)
{
	return isPlayerActive[playerid];
}
stock ShowTuneDialog(playerid)
{
    TuneSelectID[playerid] = -1;
	new dstr[90], dialogstr[400];
	dialogstr = "{ffffff}Tune your vehicle\n";
	for(new i = 0; i < sizeof(CarTune_Dialog); i ++)
	{
	    format(dstr, 90, "{85929e}[%d]{ffffff} %s\n",i+1,CarTune_Dialog[i]);
	    strcat(dialogstr, dstr);
	}
	ShowPlayerDialog(playerid, 1900, DIALOG_STYLE_TABLIST_HEADERS, "{85929e}Los Santos{ffffff} | Tuning", dialogstr, "Select", "Exit");
	ApplyVehicleTune(playerid, caridhouse[playerid], GetPVarInt(playerid, "MyCarID"));
	return true;
}
stock UpdatePlayerCar(id, data[], save)
{
	new query[128];
	format(query, sizeof(query), "UPDATE `cars` SET `%s` = '%d' WHERE `ID` = '%d'",data,save,id);
	mysql_query(connect, query);
}
stock SendPlayerToTune(playerid)
{
    TuneSelectID[playerid] = -1;
	TogglePlayerControllable(playerid, false);
	new world = playerid+300;
	SetPlayerVirtualWorld(playerid, world);
	SetPlayerInterior(playerid, 2);
	SetVehicleVirtualWorld(caridhouse[playerid], world);
	LinkVehicleToInterior(caridhouse[playerid], 2);
	SetVehiclePos(caridhouse[playerid], 615.3983, -75.0143, 997.7192);
	SetVehicleZAngle(caridhouse[playerid], 90.0);
	SetPlayerCameraPos(playerid, 611.1212, -78.3653, 997.9995+1);
	SetPlayerCameraLookAt(playerid, 615.3983, -75.0143, 997.7192);
	ShowTuneDialog(playerid);
	SelectSystemID[playerid] = 2;
	ShowTuneMenu(playerid);
	return true;
}
stock InvokePlayerFromTune(playerid)
{
    TuneSelectID[playerid] = -1;
    TogglePlayerControllable(playerid, true);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetVehiclePos(caridhouse[playerid], 1024.1194, -1451.6168, 13.2817);
	SetVehicleZAngle(caridhouse[playerid], 94.0);
	SetVehicleVirtualWorld(caridhouse[playerid], 0);
	LinkVehicleToInterior(caridhouse[playerid], 0);
	SetCameraBehindPlayer(playerid);
	SelectSystemID[playerid] = 0;
	HideTuneMenu(playerid);
	ApplyVehicleTune(playerid, caridhouse[playerid], GetPVarInt(playerid, "MyCarID"));
	return true;
}
stock ShowAutoSalon(playerid)
{
	for(new i = 0; i < 5; i ++) PlayerTextDrawShow(playerid, car_PTD[playerid][i]);
	for(new i = 0; i < 11; i ++) TextDrawShowForPlayer(playerid, car_TD[i]);
	SelectTextDraw(playerid, COLOR_RED);
	AS_status[playerid] = 1;
	AS_select[playerid] = 0;
	SetPlayerCameraPos(playerid, -1651.1792, 1211.9398, 13.6719+0.7);
	SetPlayerCameraLookAt(playerid, -1659.5378, 1215.1702, 13.3930);
	SetPlayerVirtualWorld(playerid, random(100));
	AS_car[playerid] = CreateVehicle(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], -1659.5378, 1215.1702, 13.3930, 233.0450, 1, 1, 1);
	SetVehicleVirtualWorld(AS_car[playerid], GetPlayerVirtualWorld(playerid));
	new str[100];
	format(str, sizeof(str), "%d$",GetCarPrice(AS_car[playerid]));
	PlayerTextDrawSetString(playerid, car_PTD[playerid][3], str);
	PlayerTextDrawHide(playerid, car_PTD[playerid][1]);
	PlayerTextDrawTextSize(playerid, car_PTD[playerid][1], GetVehicleStatus(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], 0), 8.0000);
 	PlayerTextDrawShow(playerid, car_PTD[playerid][1]);
	PlayerTextDrawHide(playerid, car_PTD[playerid][2]);
	PlayerTextDrawTextSize(playerid, car_PTD[playerid][2], GetVehicleStatus(AS_client[playerid]?AS_cars_launcher[AS_select[playerid]][0]:AS_cars[AS_select[playerid]][0], 1), 8.0000);
 	PlayerTextDrawShow(playerid, car_PTD[playerid][2]);
 	format(str, sizeof(str), "%s",GetVehicleName(GetVehicleModel(AS_car[playerid])));
	PlayerTextDrawSetString(playerid, car_PTD[playerid][0], str);
	if(GetLauncherStatus(playerid)) cef_hide_browser(playerid, 1, false);
	return 1;
}
stock HideAutoSalon(playerid)
{
	for(new i = 0; i < 5; i ++) PlayerTextDrawHide(playerid, car_PTD[playerid][i]);
	for(new i = 0; i < 11; i ++) TextDrawHideForPlayer(playerid, car_TD[i]);
	CancelSelectTextDraw(playerid);
	AS_status[playerid] = 0;
	AS_select[playerid] = 0;
	SetCameraBehindPlayer(playerid);
	if(AS_car[playerid] != -1) DestroyVehicle(AS_car[playerid]);
	SetPlayerVirtualWorld(playerid, 0);
	if(GetLauncherStatus(playerid)) cef_hide_browser(playerid, 1, true);
	return 1;
}
stock GetVehicleStatus(model, id)
{
	new progres;
	if(id == 0)
	{
		switch(model) // Speed
		{
		    case 405: progres = 40; // Sentinel
		    case 402: progres = 55; // Buffsalo
			case 415: progres = 65; // Cheetach
			case 424: progres = 62; // BF Injection
			case 429: progres = 75; // Banshee
			case 477: progres = 60; // ZR-350
			case 494: progres = 74; // Hotring
			case 533: progres = 50; // Feltzer
			case 422: progres = 60;
			case 506: progres = 75;
			case 426: progres = 40;
            case 461: progres = 65;
            case 463: progres = 61;
            case 581: progres = 63;
            case 586: progres = 65;
            case 458: progres = 59;
            case 561: progres = 70;
            case 492: progres = 40;
            case 496: progres = 45;
            case 500: progres = 45;
            case 527: progres = 60;
            case 559: progres = 65;
            case 565: progres = 40;
			case 587: progres = 60;
			case 475: progres = 50;
			case 445: progres = 40;
			case 436: progres = 55;
			case 401: progres = 30;
			case 410: progres = 35;
			case 418: progres = 25;
		}
	}
	else if(id == 1) // Brake
	{
		switch(model)
		{
		    case 405: progres = 75; // Sentinel
			case 402: progres = 40; // Buffalo
			case 415: progres = 70; // Cheetach
			case 424: progres = 60; // BF Injection
			case 429: progres = 65; // Banshee
			case 477: progres = 67; // ZR-350
			case 494: progres = 64; // Hotring
			case 533: progres = 40; // Feltzer
			case 422: progres = 50;
			case 506: progres = 40;
			case 426: progres = 55;
			case 461: progres = 54;
			case 463: progres = 45;
			case 581: progres = 38;
			case 586: progres = 30;
			case 458: progres = 45;
			case 561: progres = 30;
			case 492: progres = 30;
			case 496: progres = 40;
			case 500: progres = 30;
			case 527: progres = 55;
			case 559: progres = 50;
			case 565: progres = 60;
			case 587: progres = 50;
			case 475: progres = 50;
			case 445: progres = 35;
			case 436: progres = 40;
			case 401: progres = 40;
			case 410: progres = 30;
			case 418: progres = 30;
		}
	}
	return progres;
}
stock CarUpdateText(carid)
{
	if(CarInfo[carid][CarStatus] == 0) format(Salon_String, sizeof(Salon_String), "?{3399FF}%d\n{FFFFFF}Adgili: {3399FF}Tavisufalia\n{FFFFFF}Fasi: {3399FF}5.000$\n{FFFFFF}Daachiret: {3399FF}H{FFFFFF}'s", CarInfo[carid][ID]);
	else if(CarInfo[carid][CarStatus] == 1) format(Salon_String, sizeof(Salon_String), "?{3399FF}%d\n{FFFFFF}Adgili: {3399FF}Dakavebulia\n{FFFFFF}Dro: {3399FF}%d {FFFFFF}Saati\n{FFFFFF}Mflobeli: {3399FF}%s\n{FFFFFF}Model: {3399FF}%s\n{FFFFFF}Fasi: {3399FF}%d$\n{FFFFFF}Daachiret: {3399FF}ALT{FFFFFF}'s", CarInfo[carid][ID], CarInfo[carid][CarTime], CarInfo[carid][CarOwner], GetVehicleName(CarInfo[carid][CarID]), CarInfo[carid][CarPrice]);
	UpdateDynamic3DTextLabelText(CarInfo[carid][CarText], COLOR_WHITE, Salon_String);
	return true;
}
stock AutoSalonCarLocked()
{
    for(new i; i < TotalCar; i++)
    {
		if(CarInfo[i][CarStatus] == 1)
		{
		  	GetVehicleParamsEx(CarInfo[i][CarIDInfo], engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(CarInfo[i][CarIDInfo], VEHICLE_PARAMS_OFF,lights,alarm,1,bonnet,boot,objective);
		}
    }
    return true;
}
CarUpdateData(idx, field[], data)
{
	new sqlsstr[150];
	format(sqlsstr, sizeof(sqlsstr), "UPDATE `AutoSalon` SET %s = %d WHERE ID = %d LIMIT 1", field, data, idx);
	mysql_tquery(connect, sqlsstr, "", "");
	return true;
}
CarUpdateDataString(idx, field[], data[])
{
	new sqlsstr[150];
	format(sqlsstr, sizeof(sqlsstr), "UPDATE `AutoSalon` SET %s = '%s' WHERE ID = %d LIMIT 1", field, data, idx);
	mysql_tquery(connect, sqlsstr, "", "");
	return true;
}
ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21)
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID;
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if (userid >=0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid))
			{
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid;
			}
		}
	}
	new len = strlen(text[pos]);
	new count = 0;
	new name[MAX_PLAYER_NAME];
	foreach(new i:Player)
	{
		GetPlayerName(i, name, sizeof (name));
		if (strcmp(name, text[pos], true, len) == 0)
		{
			if (len == strlen(name))
			{
				return i;
			}
			else
			{
				count++;
				userid = i;
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid;
}
function TrollDetect(playerid)
{
 	if(PlayerInfo[playerid][pAdmin] >= 1) return true;
	if(troll[playerid] == 1)
	{
		if(miwera == 0)
	    {
	        if(GetString(Name(playerid), "Aleksandre_Kinkladze")) return true;
			format(YCMDstr, sizeof(YCMDstr), "{FF0000}[Warning] {ffffff}| %s[%d] - Kicked - Reason : Troll !", Name(playerid), playerid);
			SendAdminMessage(COLOR_LIGHTRED,YCMDstr);
			miwera = 3;
			Kick(playerid);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new Float:Velocity[3];
		GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
		new Float:amount = Velocity[0]-LastVelocity[playerid][0];
		new Float:amount2 = Velocity[1]-LastVelocity[playerid][1];
		if(amount > 3.0 || amount < -4.0 || amount2  > 10.0 || amount2 < -10.0 || Velocity[2] == 0.100000)
		{
		    if(miwera == 0)
		    {
		        if(GetString(Name(playerid), "Aleksandre_Kinkladze")) return true;
				format(YCMDstr, sizeof(YCMDstr), "{FF0000}[Warning] {ffffff}| %s[%d] - Kicked - Reason : Troll !", Name(playerid), playerid);
				SendAdminMessage(COLOR_LIGHTRED,YCMDstr);
				miwera = 2;
				Kick(playerid);
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Float:Velocity[3];
		GetVehicleVelocity(GetPlayerVehicleID(playerid), Velocity[0], Velocity[1], Velocity[2]);
		if(Velocity[1] == -90.000000 && Velocity[2] == 0.100000)
		{
			if(miwera == 0)
		    {
		        if(GetString(Name(playerid), "Aleksandre_Kinkladze")) return true;
				format(YCMDstr, sizeof(YCMDstr), "{FF0000}[Warning] {ffffff}| %s[%d] - Kicked - Reason : Troll !", Name(playerid), playerid);
				SendAdminMessage(COLOR_LIGHTRED,YCMDstr);
				miwera = 2;
				Kick(playerid);
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) GetPlayerVelocity(playerid, LastVelocity[playerid][0],  LastVelocity[playerid][1],  LastVelocity[playerid][2]);
	return true;
}
stock IsPlayerMobile(playerid)
{
	if(0 <= playerid < MAX_PLAYERS)
		return false;
	return false;
}
stock sendinfo(playerid, const message[])
{
    if(GetLauncherStatus(playerid))
    {
        cef_emit_event(playerid, "data:pool:infotxt", CEFSTR(message));
    }
    else
    {
        format(stringformessages, sizeof(stringformessages), "[Information]:{ffffff} %s",message);
        SendClientMessage(playerid, 0x4FB64FAA, stringformessages);
    }
    return true;
}
stock senderror(playerid, const message[])
{
    if(GetLauncherStatus(playerid))
    {
        cef_emit_event(playerid, "data:pool:errortxt", CEFSTR(message));
    }
    else
    {
        format(stringformessages, sizeof(stringformessages), "[Shecdoma]:{ffffff} %s",message);
        SendClientMessage(playerid, 0x903838FF, stringformessages);
    }
    return true;
}

/*stock sendusage(playerid, const message[])
{
    if(GetLauncherStatus(playerid))
    {
        cef_emit_event(playerid, "data:pool:senderror", CEFSTR(message));
    }
    else
    {
        format(stringformessages, sizeof(stringformessages), "[Daxmareba]:{ffffff} %s",message);
        SendClientMessage(playerid, 0x819FF7FF, stringformessages);
    }
    return true;
}*/
stock GhettoTextUPDATE()
{
	new TextUPT[260];
    ClearTotalGz();
	for(new i =0;i<sizeof(GZInfo);i++)
	{
		if(GZInfo[i][gFrakVlad] == FRACTION_BALLAS) TotalGzB++;
		if(GZInfo[i][gFrakVlad] == FRACTION_VAGOS) TotalGzV++;
		if(GZInfo[i][gFrakVlad] == FRACTION_GROVE) TotalGzG++;
		if(GZInfo[i][gFrakVlad] == FRACTION_AZTEC) TotalGzA++;
		if(GZInfo[i][gFrakVlad] == FRACTION_RIFA) TotalGzR++;
	}
	format(TextUPT,sizeof(TextUPT),"The Ballas Gang\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d\n{FFFFFF}Materialebis Raodenoba: {63BD4E}%d\n{FFFFFF}Narkotikebis Raodenoba: {63BD4E}%d\n{FFFFFF}Sabanko Angarishi: {63BD4E}%d\n\n{FFFFFF}Sawyobi: %s\n{FFFFFF}Press: {63BD4E}ALT", TotalGzB, BallasMat, BallasDrugs, BallasBank, (!obshiaki[2])?("{009933}Gaxsnilia") : ("{AE433D}Daketilia"));
	Update3DTextLabelText(GhettoText[0],0xCC00FFAA,TextUPT);
	format(TextUPT,sizeof(TextUPT),"The Vagos Gang\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d\n{FFFFFF}Materialebis Raodenoba: {63BD4E}%d\n{FFFFFF}Narkotikebis Raodenoba: {63BD4E}%d\n{FFFFFF}Sabanko Angarishi: {63BD4E}%d\n\n{FFFFFF}Sawyobi: %s\n{FFFFFF}Press: {63BD4E}ALT", TotalGzV, VagosMat, VagosDrugs, VagosBank, (!obshiaki[3])?("{009933}Gaxsnilia") : ("{AE433D}Daketilia"));
	Update3DTextLabelText(GhettoText[1],0xffcd00AA,TextUPT);
	format(TextUPT,sizeof(TextUPT),"The Grove Gang\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d\n{FFFFFF}Materialebis Raodenoba: {63BD4E}%d\n{FFFFFF}Narkotikebis Raodenoba: {63BD4E}%d\n{FFFFFF}Sabanko Angarishi: {63BD4E}%d\n\n{FFFFFF}Sawyobi: %s\n{FFFFFF}Press: {63BD4E}ALT", TotalGzG, GroveMat, GroveDrugs, GroveBank, (!obshiaki[5])?("{009933}Gaxsnilia") : ("{AE433D}Daketilia"));
	Update3DTextLabelText(GhettoText[2],0x009900AA,TextUPT);
	format(TextUPT,sizeof(TextUPT),"The Azteca Gang\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d\n{FFFFFF}Materialebis Raodenoba: {63BD4E}%d\n{FFFFFF}Narkotikebis Raodenoba: {63BD4E}%d\n{FFFFFF}Sabanko Angarishi: {63BD4E}%d\n\n{FFFFFF}Sawyobi: %s\n{FFFFFF}Press: {63BD4E}ALT", TotalGzA, AztecaMat, AztecaDrugs, AztecaBank, (!obshiaki[6])?("{009933}Gaxsnilia") : ("{AE433D}Daketilia"));
	Update3DTextLabelText(GhettoText[3],0x00b4e1AA,TextUPT);
	format(TextUPT,sizeof(TextUPT),"The Rifa Gang\n\n{FFFFFF}Teritoriebis Raodenoba: {63BD4E}%d\n{FFFFFF}Materialebis Raodenoba: {63BD4E}%d\n{FFFFFF}Narkotikebis Raodenoba: {63BD4E}%d\n{FFFFFF}Sabanko Angarishi: {63BD4E}%d\n\n{FFFFFF}Sawyobi: %s\n{FFFFFF}Press: {63BD4E}ALT", TotalGzR, RifaMat, RifaDrugs, RifaBank, (!obshiaki[7])?("{009933}Gaxsnilia") : ("{AE433D}Daketilia"));
	Update3DTextLabelText(GhettoText[4],0x7777ffAA,TextUPT);
	return 1;
}
stock UseLauncherItem(playerid, ObjectID)
{
	switch (ObjectID) {
	case 6648: SetPlayerAttachedObjectEx(playerid, 0, 6648, 6, 0.045000, 0.000000, 0.000000, -4.400002, -93.800010, 76.800003, 1.000000, 1.000000, 1.000000);
	case 3228: SetPlayerAttachedObjectEx(playerid, 0, 3228, 6, 0.000000, 0.000000, 0.000000, 99.599914, 178.400054, -16.600013, 1.000000, 1.000000, 1.000000);
	case 3229:
		SetPlayerAttachedObjectEx(playerid, 0, 3229, 1, 0.541999, 0.057000, -0.003000, 0.000000, 0.000000, 0.000000, 1.198000, 1.198000, 1.343000);

	case 3231:
		SetPlayerAttachedObjectEx(playerid, 1, 3231, 1, 0.576000, 0.214000, -0.005999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3234:
		SetPlayerAttachedObjectEx(playerid, 0, 3234, 5, 0.000000, 0.000000, 0.000000, -26.700000, -103.200019, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3235:
		SetPlayerAttachedObjectEx(playerid, 0, 3235, 6, 0.000000, 0.000000, 0.000000, 13.499992, -92.199951, -0.800000, 1.000000, 1.000000, 1.000000);

	case 3236:
		SetPlayerAttachedObjectEx(playerid, 0, 3236, 6, 0.046000, 0.016999, 0.000000, 0.000000, -98.300010, 4.600004, 1.000000, 1.000000, 1.000000);

	case 3237:
		SetPlayerAttachedObjectEx(playerid, 0, 3237, 5, 0.059999, 0.000000, 0.000000, 0.000000, -99.799972, 4.900001, 1.000000, 1.000000, 1.000000);

	case 3238:
		SetPlayerAttachedObjectEx(playerid, 0, 3238, 6, 0.081999, 0.025000, 0.000000, 2.400000, -98.000007, -1.999999, 1.000000, 1.000000, 1.000000);

	case 3151:
		SetPlayerAttachedObjectEx(playerid, 0, 3151, 2, -0.043999, -0.021999, 0.000000, 0.000000, 0.000000, 0.000000, 1.283999, 1.000000, 1.000000);

	case 4763:
		SetPlayerAttachedObjectEx(playerid, 0, 4763, 1, 0.000000, -0.113999, 0.016999, 0.000000, 0.000000, 0.000000, 0.671999, 1.000000, 0.680000);

	case 4764:
		SetPlayerAttachedObjectEx(playerid, 0, 4764, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 4765:
		SetPlayerAttachedObjectEx(playerid, 0, 4765, 2, 0.000000, 0.012000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 4766:
		SetPlayerAttachedObjectEx(playerid, 0, 4766, 2, 0.055999, -0.014999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 4767:
		SetPlayerAttachedObjectEx(playerid, 0, 4767, 2, 0.046999, 0.015000, 0.000000, 0.000000, 0.000000, 0.000000, 1.080000, 1.066000, 1.092000);

	case 4769:
		SetPlayerAttachedObjectEx(playerid, 0, 4769, 2, 0.149999, 0.028000, -0.004000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 4770:
		SetPlayerAttachedObjectEx(playerid, 0, 4770, 2, 0.067999, -0.011000, 0.000000, 177.200103, 10.900003, 1.799997, 1.000000, 1.118000, 1.000000);

	case 4771:
		SetPlayerAttachedObjectEx(playerid, 0, 4771, 17, -0.035000, 0.149000, -0.004000, -4.499998, 3.300000, -18.300001, 1.000000, 1.000000, 1.000000);

	case 4773:
		SetPlayerAttachedObjectEx(playerid, 0, 4773, 6, 0.036000, 0.042999, 0.014999, -77.799957, -85.400024, 3.699999, 1.000000, 1.000000, 1.000000);

	case 4775:
		SetPlayerAttachedObjectEx(playerid, 0, 4775, 1, 0.000000, 0.000000, -0.030000, 0.000000, 87.400001, -4.699999, 1.000000, 1.000000, 1.000000);

	case 3152:
		SetPlayerAttachedObjectEx(playerid, 0, 3152, 2, 0.020000, 0.025000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3153:
		SetPlayerAttachedObjectEx(playerid, 0, 3153, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3154:
		SetPlayerAttachedObjectEx(playerid, 0, 3154, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3159:
		SetPlayerAttachedObjectEx(playerid, 0, 3159, 1, 0.044999, -0.148999, -0.012000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3160:
		SetPlayerAttachedObjectEx(playerid, 0, 3160, 1, 0.056000, -0.151000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3161:
		SetPlayerAttachedObjectEx(playerid, 0, 3161, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3197:
		SetPlayerAttachedObjectEx(playerid, 0, 3197, 1, 0.051999, -0.000000, -0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3198:
		SetPlayerAttachedObjectEx(playerid, 0, 3198, 1, 0.038000, 0.006999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3199:
		SetPlayerAttachedObjectEx(playerid, 0, 3199, 1, 0.051999, -0.000000, -0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3200:
		SetPlayerAttachedObjectEx(playerid, 0, 3200, 1, 0.051999, -0.000000, -0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3201:
		SetPlayerAttachedObjectEx(playerid, 0, 3201, 1, 0.050000, -0.011999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3202:
		SetPlayerAttachedObjectEx(playerid, 0, 3202, 1, 0.032000, 0.006000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3203:
		SetPlayerAttachedObjectEx(playerid, 0, 3203, 1, 0.055000, -0.014999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3204:
		SetPlayerAttachedObjectEx(playerid, 0, 3204, 1, 0.040000, -0.028000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3205:
		SetPlayerAttachedObjectEx(playerid, 0, 3205, 1, 0.056000, -0.016000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3206:
		SetPlayerAttachedObjectEx(playerid, 0, 3206, 1, 0.040000, -0.023000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3207:
		SetPlayerAttachedObjectEx(playerid, 0, 3207, 1, 0.055999, -0.017000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3208:
		SetPlayerAttachedObjectEx(playerid, 0, 3208, 1, 0.035999, -0.024000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3209:
		SetPlayerAttachedObjectEx(playerid, 0, 3209, 1, 0.052000, -0.015000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3210:
		SetPlayerAttachedObjectEx(playerid, 0, 3210, 1, 0.045000, -0.020000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3211:
		SetPlayerAttachedObjectEx(playerid, 0, 3211, 1, 0.050000, -0.015000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3164:
		SetPlayerAttachedObjectEx(playerid, 0, 3164, 1, 0.137999, -0.159999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3176:
		SetPlayerAttachedObjectEx(playerid, 0, 3176, 1, 0.149999, -0.162999, -0.009999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3181:
		SetPlayerAttachedObjectEx(playerid, 0, 3181, 1, 0.329000, -0.213000, -0.104999, 79.000000, 2.600003, -21.500005, 0.796999, 0.894000, 1.000000);

	case 3183:
		SetPlayerAttachedObjectEx(playerid, 0, 3183, 6, 0.113999, 0.000000, 0.098999, -0.099998, 98.899986, 0.000000, 1.000000, 1.000000, 1.000000);

	case 3185:
		SetPlayerAttachedObjectEx(playerid, 0, 3185, 1, 0.070999, -0.175000, -0.020000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 11806:
		SetPlayerAttachedObjectEx(playerid, 0, 11806, 1, 0.000000, -0.135999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 5389:
		SetPlayerAttachedObjectEx(playerid, 0, 5389, 1, 0.059999, -0.092999, -0.007999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 5387:
		SetPlayerAttachedObjectEx(playerid, 0, 5387, 2, 0.241999, -0.006000, 0.005999, 11.800010, 82.800064, -81.099975, 1.000000, 1.000000, 1.000000);

	case 5386:
		SetPlayerAttachedObjectEx(playerid, 0, 5386, 2, 0.289000, -0.004000, 0.020999, 0.000000, 80.700004, 0.000000, 1.000000, 1.000000, 1.000000);

	case 5384:
		SetPlayerAttachedObjectEx(playerid, 0, 5384, 1, 0.068000, -0.060999, 0.000000, 2.299998, 87.700019, -0.699999, 1.000000, 1.000000, 1.000000);

	case 6553:
		SetPlayerAttachedObjectEx(playerid, 0, 6553, 1, 0.049999, 0.000000, 0.001000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 6551:
		SetPlayerAttachedObjectEx(playerid, 0, 6551, 2, 0.187999, 0.003999, -0.005000, -5.099998, 83.899925, 9.399999, 1.000000, 1.000000, 1.000000);

	case 6552:
		SetPlayerAttachedObjectEx(playerid, 0, 6552, 2, 0.090999, 0.004000, -0.000000, 34.399997, 78.300041, 6.499998, 1.000000, 1.000000, 1.000000);

	case 5383:
		SetPlayerAttachedObjectEx(playerid, 0, 5383, 1, 0.131999, 0.000000, -0.016999, 0.000000, 88.500076, 0.000000, 0.543000, 1.000000, 0.670000);

	case 6546:
		SetPlayerAttachedObjectEx(playerid, 0, 6546, 1, 0.051999, -0.198000, -0.015999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 6545:
		SetPlayerAttachedObjectEx(playerid, 0, 6545, 1, 0.000000, 0.000000, -0.027000, 0.000000, -95.500007, -19.099998, 1.000000, 1.000000, 1.000000);

	case 6782:
		SetPlayerAttachedObjectEx(playerid, 0, 6782, 1, -0.076999, -0.177000, -0.015000, -87.899955, 2.000000, -2.000000, 1.000000, 1.000000, 1.000000);

	case 6785:
		SetPlayerAttachedObjectEx(playerid, 0, 6785, 2, 0.258999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 6787:
		SetPlayerAttachedObjectEx(playerid, 0, 6787, 1, -0.029000, -0.102999, -0.023000, -2.099999, -2.999999, -1.500000, 1.000000, 1.000000, 1.000000);

	case 4774:
		SetPlayerAttachedObjectEx(playerid, 0, 4774, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.592000, 0.733999, 0.547999);

	case 6799:
		SetPlayerAttachedObjectEx(playerid, 0, 6799, 1, 0.061999, -0.108999, -0.045000, -174.300018, 3.700000, -3.399999, 1.000000, 1.000000, 1.000000);

	case 6772:
		SetPlayerAttachedObjectEx(playerid, 0, 6772, 2, 0.002000, 0.117999, -0.047000, -177.599914, 93.999984, -9.300003, 1.000000, 1.000000, 1.000000);

	case 6771:
		SetPlayerAttachedObjectEx(playerid, 0, 6771, 1, 0.000000, -0.188999, -0.029000, 2.000003, 88.299980, 12.700002, 1.000000, 1.000000, 1.000000);

	case 6026:
		SetPlayerAttachedObjectEx(playerid, 0, 6026, 2, 0.141999, 0.041999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.058000, 1.000000);

	case 6025:
		SetPlayerAttachedObjectEx(playerid, 0, 6025, 1, 0.153999, -0.157000, 0.000000, 0.000000, -1.699999, 0.099999, 1.000000, 1.000000, 1.000000);

	case 6618:
		SetPlayerAttachedObjectEx(playerid, 0, 6618, 1, -0.145000, -0.174000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

	case 6801:
		SetPlayerAttachedObjectEx(playerid, 0, 6801, 2, 0.291999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.751000, 1.000000, 0.637000);
	}
	return true;
}

/*SetPlayerAttachedObject(playerid, 0, 6648, 6, 0.045000, 0.000000, 0.000000, -4.400002, -93.800010, 76.800003, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3228, 6, 0.000000, 0.000000, 0.000000, 99.599914, 178.400054, -16.600013, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3229, 1, 0.541999, 0.057000, -0.003000, 0.000000, 0.000000, 0.000000, 1.198000, 1.198000, 1.343000);
SetPlayerAttachedObject(playerid, 1, 3231, 1, 0.576000, 0.214000, -0.005999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3229, 1, 0.541999, 0.057000, -0.003000, 0.000000, 0.000000, 0.000000, 1.198000, 1.198000, 1.343000);
SetPlayerAttachedObject(playerid, 1, 3231, 1, 0.576000, 0.214000, -0.005999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3234, 5, 0.000000, 0.000000, 0.000000, -26.700000, -103.200019, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3235, 6, 0.000000, 0.000000, 0.000000, 13.499992, -92.199951, -0.800000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3236, 6, 0.046000, 0.016999, 0.000000, 0.000000, -98.300010, 4.600004, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3237, 5, 0.059999, 0.000000, 0.000000, 0.000000, -99.799972, 4.900001, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3237, 5, 0.094999, 0.020000, 0.000000, 0.000000, -99.799972, 4.900001, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3238, 6, 0.081999, 0.025000, 0.000000, 2.400000, -98.000007, -1.999999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3151, 2, -0.043999, -0.021999, 0.000000, 0.000000, 0.000000, 0.000000, 1.283999, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4763, 1, 0.000000, -0.113999, 0.016999, 0.000000, 0.000000, 0.000000, 0.671999, 1.000000, 0.680000);
SetPlayerAttachedObject(playerid, 0, 4764, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4765, 2, 0.000000, 0.012000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4766, 2, 0.055999, -0.014999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4767, 2, 0.046999, 0.015000, 0.000000, 0.000000, 0.000000, 0.000000, 1.080000, 1.066000, 1.092000);
SetPlayerAttachedObject(playerid, 0, 4769, 2, 0.149999, 0.028000, -0.004000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4770, 2, 0.067999, -0.011000, 0.000000, 177.200103, 10.900003, 1.799997, 1.000000, 1.118000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4771, 17, -0.035000, 0.149000, -0.004000, -4.499998, 3.300000, -18.300001, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4773, 6, 0.036000, 0.042999, 0.014999, -77.799957, -85.400024, 3.699999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4775, 1, 0.000000, 0.000000, -0.030000, 0.000000, 87.400001, -4.699999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3152, 2, 0.020000, 0.025000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3153, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3154, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3159, 1, 0.044999, -0.148999, -0.012000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3160, 1, 0.056000, -0.151000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3161, 1, 0.087999, -0.202999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3164, 1, 0.137999, -0.159999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3176, 1, 0.149999, -0.162999, -0.009999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3181, 1, 0.329000, -0.213000, -0.104999, 79.000000, 2.600003, -21.500005, 0.796999, 0.894000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3183, 6, 0.113999, 0.000000, 0.098999, -0.099998, 98.899986, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 3185, 1, 0.070999, -0.175000, -0.020000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 11806, 1, 0.000000, -0.135999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 5389, 1, 0.059999, -0.092999, -0.007999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 5387, 2, 0.241999, -0.006000, 0.005999, 11.800010, 82.800064, -81.099975, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 5386, 2, 0.289000, -0.004000, 0.020999, 0.000000, 80.700004, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 5384, 1, 0.068000, -0.060999, 0.000000, 2.299998, 87.700019, -0.699999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6553, 1, 0.049999, 0.000000, 0.001000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6551, 2, 0.187999, 0.003999, -0.005000, -5.099998, 83.899925, 9.399999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6552, 2, 0.090999, 0.004000, -0.000000, 34.399997, 78.300041, 6.499998, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6551, 2, 0.167000, -0.000000, -0.000000, 32.799995, 82.099960, -48.399993, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 5383, 1, 0.131999, 0.000000, -0.016999, 0.000000, 88.500076, 0.000000, 0.543000, 1.000000, 0.670000);
SetPlayerAttachedObject(playerid, 0, 6546, 1, 0.051999, -0.198000, -0.015999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6545, 1, 0.000000, 0.000000, -0.027000, 0.000000, -95.500007, -19.099998, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6782, 1, -0.076999, -0.177000, -0.015000, -87.899955, 2.000000, -2.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6785, 2, 0.258999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6787, 1, -0.029000, -0.102999, -0.023000, -2.099999, -2.999999, -1.500000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 4774, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.592000, 0.733999, 0.547999);
SetPlayerAttachedObject(playerid, 0, 6799, 1, 0.061999, -0.108999, -0.045000, -174.300018, 3.700000, -3.399999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6772, 2, 0.002000, 0.117999, -0.047000, -177.599914, 93.999984, -9.300003, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6771, 1, 0.000000, -0.188999, -0.029000, 2.000003, 88.299980, 12.700002, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6026, 2, 0.141999, 0.041999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.058000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6025, 1, 0.153999, -0.157000, 0.000000, 0.000000, -1.699999, 0.099999, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6618, 1, -0.145000, -0.174000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
SetPlayerAttachedObject(playerid, 0, 6801, 2, 0.291999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.751000, 1.000000, 0.637000);*/

